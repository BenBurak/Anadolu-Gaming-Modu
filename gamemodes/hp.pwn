/*----------------------------------------------------------------------------\*

		==========================================================
				««• Anadolu Gaming ™ Hirsiz Polis •»»

				Coding & Design & Developer:  Burak (NexoR)

						Kuruluþ:	16.04.2017
			--------------------------------------------------
			Orjinal ve açýksýz halidir. Ýyi kullanýmlar.
			
			Mapper ekibi Ali, Görkem, Deniz ve adýný
			
				yazamadýklarýma teþekkür eder,
				
			bugüne kadar bizi destekleyen ve
			
				yanýmýzda olan tüm oyunculara da
				
						teþekkür ederiz.

		==========================================================

*\----------------------------------------------------------------------------*/
#include 	<a_samp>
#include 	<date>
#include 	<streamer>
#include	<sscanf2>
#include    <timerfix>
#include	<foreach>
#include 	<a_mysql>
#include	<a_http>
#include    <AntiHile/nex-ac>
#include	<AntiHile/rAgc>
#include	<AntiHile/rEac>
#include 	<izcmd>
#include 	<SKY>
#include 	<weapon-config>
#include	<i_TDM/fix_anims>
#include	<i_TDM/fix_tickcount>
#include    <antiadvertising>
#include	<FloodControl>
#include    <mSelection>
#include 	<progress2>
#include    <3DTryg>
#include    <Pawn.RakNet>
#include    <AntiHile/AntiUpSideDown>
#include    <AntiHile/antiRakSamp>
#include    <BustAim>
#include    <Iterator>
#include    <y_va>
#include    <crashdetect>
#pragma     tabsize     0

#if !defined IsValidVehicle
    native IsValidVehicle(vehicleid);
#endif

#define		function%0(%1) forward%0(%1); public%0(%1)

#if !defined isnull
	#define isnull(%1) \
				((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#endif

// MySQL	Ayarlarý
#define     Mod_Type            (1)   //  -->  1 geliþtirici modu   |   2 --> server modu
#define		MYSQL_HOST 			"localhost"
#define		MYSQL_KULLANICI		"root"
#define		MYSQL_SIFRE 		""
#define		MYSQL_DATABASE 		"nexdb"
//-----
#define		T_MYSQL_HOST 		"127.0.0.1"
#define		T_MYSQL_KULLANICI	"root"
#define		T_MYSQL_SIFRE 		""
#define		T_MYSQL_DATABASE 	"nexdb"

#define		CARMODTYPE_FRONT_BULLBAR 	14
#define		CARMODTYPE_REAR_BULLBAR 	15
#define		CARMODTYPE_SIDESKIRT_RIGHT 	3
#define		CARMODTYPE_SIDESKIRT_LEFT 	16

// Genel    Ayarlar
#define     MINIMUM_SIFRE       (3)
#define     MAX_SOYGUN_YERI     (100)
#define     MAX_SOYGUN_ISIM     (50)
#define     SOYGUN_SURESI       (300)	// 5dk --> 300
#define     MAX_EV				(1000)
#define     MAX_EV_ISMI         (48)
#define     EV_LABEL_STREAM     (30)
#define     EV_PICKUP_STREAM    (30)
#define     EV_MAP_ICON_STREAM  (30)
#define     MAX_EKIP    		(25)
#define     MAX_E_ISIM  		(17)
#define     MAX_GRUP    		(25)
#define     MAX_GRUP_LIMIT    	(10)
#define     MAX_EKIP_LIMIT    	(15)
#define     MAX_G_ISIM  		(17)
#define     MAX_BOLGE			(10)	//  Max açýlacak bölge
#define     MAX_bIsim			(25)	//  Max bölge ismi
#define     Genislik			(100)	//  Bölge Geniþliði
#define     BOLGE_SURE			(120)	//  120 saniye
#define     BOLGE_ODUL_SURE     (300)	//  300 Ödül verilecek süre
#define     OZEL_ARAC_KAPASITE  (8)		//  Bu deðere ellemeyin
#define     N_ARAC_KAPASITE		(10)	//  Bu deðere ellemeyin
#define     MAX_TIR_CP      	(40)    //  Týr pozisyonlarýnýn toplamý
#define     MAX_STRING          (128)
#define     MAX_CETE            (50)
#define     MAX_CETE2           "50"
#define     MAX_CETE_ISIM       (24)
#define     MAX_CETE_ARAC       (10)
#define     MAX_ATM				(35)

// Genel    Dialoglar
#define     DIALOG_BOS          (95959)
#define     DIALOG_KAYIT        (100)
#define     DIALOG_GIRIS        (101)
#define     DIALOG_OYLAMA		(102)
#define     DIALOG_POLIS        (103)
#define     DIALOG_BOMBA        (104)
#define     DIALOG_cevikKUVVET	(105)
#define     DIALOG_BANKA		(106)
#define     DIALOG_PYATIR		(107)
#define     DIALOG_PCEK			(108)
#define     DIALOG_SO			(109)
#define     DIALOG_SOYGUNISIM	(110)
#define     DIALOG_SO2			(111)
#define     DIALOG_SO3			(112)
#define     DIALOG_SO4			(113)
#define     DIALOG_EVMENU		(114)
#define     DIALOG_EVISMI		(115)
#define     DIALOG_PARAMENU		(116)
#define     DIALOG_EPARAY		(117)
#define     DIALOG_EPARAC		(118)
#define     DIALOG_ESIFRE		(119)
#define     DIALOG_ESIFREG		(120)
#define     DIALOG_ESYAM		(121)
#define     DIALOG_ESYALAR		(122)
#define     DIALOG_ESATINO		(123)
#define     DIALOG_ESAT			(124)
#define     DIALOG_SCIKARMA		(125)
#define     DIALOG_EVHSAT		(126)
#define     DIALOG_SIVILPOLIS	(127)
#define     DIALOG_MIT	        (137)
#define     RUSVET_D            (138)
#define		KEFALET_D           (139)
#define     ANIM_MENU           (140)
#define     ARAC_GETIR          (142)
#define     ARAC_LISTESI		(145)
#define     ARAC_ONAYISTE		(146)
#define     NARAC_GETIR         (147)
#define     aPANEL_MENU         (148)
#define     N_ARAC_SATIS		(149)
#define     UYUSTURUCU_SATICI 	(150)
#define     DIALOG_OKB			(151)
#define     DIALOG_OHAREKAT		(152)
#define     DIALOG_HAVAKUVVET	(153)
#define     DIALOG_BOLGELER		(154)
#define     DIALOG_Hastane		(155)
#define     DIALOG_DKUR			(156)
#define     DIALOG_DM			(157)
#define     DIALOG_DM_ID		(158)
#define     DIALOG_DM_M			(159)
#define     DIALOG_DM_P			(160)
#define     DIALOG_DM_S1		(161)
#define     DIALOG_DM_S2		(162)
#define     DIALOG_DONAY		(163)
#define     DIALOG_YETENEK		(164)
#define     DIALOG_KIYAFET		(165)
#define     DIALOG_KIYAFETB		(166)
#define     DIALOG_KIYAFETL		(167)
#define     DIALOG_KIYAFETO		(168)
#define     DIALOG_KIYAFETD		(169)
#define     DIALOG_KIYAFETD2	(170)
#define     DIALOG_KIYAFETS		(171)
#define     DIALOG_KIYAFETS2	(172)
#define     DIALOG_TIRCIDurum	(174)
#define     DIALOG_YARDIM		(175)
#define     DIALOG_MARKET		(176)
#define     DIALOG_AYARLAR		(177)
#define     DIALOG_SAATAYAR		(178)
#define     DIALOG_SIFRE		(179)
#define     DIALOG_SIFRE2		(180)
#define     DIALOG_CETELER		(181)
#define     DIALOG_DETAY		(182)
#define     DIALOG_CPANEL		(183)
#define     DIALOG_CSAHIP		(184)
#define     DIALOG_CSSEC		(185)
#define     DIALOG_CONAY		(186)
#define     DIALOG_CONAYBEKLE	(187)
#define     DIALOG_KASA			(188)
#define     DIALOG_KASAYATIR	(189)
#define     DIALOG_KASACEK		(190)
#define     DIALOG_CETERENK		(191)
#define     DIALOG_CETETAG		(192)
#define     DIALOG_CETEGELISTIR	(193)
#define     DIALOG_CETEUYELER	(194)
#define     DIALOG_CETESKIN		(195)
#define     DIALOG_CETEARAC		(196)
#define     DIALOG_CETEARACS	(197)
#define     DIALOG_CASATIYOR	(198)
#define     DIALOG_BAGISLISTE	(199)
#define     DIALOG_ARENK		(200)
#define     DIALOG_ARENK2		(201)
#define     DIALOG_BELES_CETE	(202)
#define     DIALOG_BELES_CETE2	(203)
#define     DIALOG_CETEARAC_G	(204)
#define     DIALOG_BANSAYFASI	(205)
#define     DIALOG_SIPSAYFASI	(206)
#define		DIALOG_VGIT			(220)
#define		DIALOG_ESIlAH		(221)
#define		DIALOG_EARAC		(222)
#define		DIALOG_EARAC2		(223)
#define		DIALOG_VSILAH		(224)
#define		DIALOG_GPS			(225)
#define		DIALOG_GPS_ID		(226)
#define		DIALOG_GPS_LISTE	(227)
#define     DIALOG_ESYALARCMD	(228)
#define     DIALOG_SAVAS_AC		(229)
#define     DIALOG_SAVAS_BASLAT	(230)
#define     DIALOG_B_PGONDER	(231)
#define     DIALOG_B_PGONDER2	(232)

#define     DIALOG_B_OPGONDER	(233)
#define     DIALOG_B_OPGONDER2	(234)

#define     DIALOG_ESYALAR1		(235)
#define     DIALOG_ESYALAR2		(236)
#define     DIALOG_ESYALAR3		(237)

#define     SORULAR				(238)
#define     SORU_YANIT			(239)
#define     SARKILAR			(240)
#define     SARKI_YANIT			(241)

#define     DIALOG_CETEARACP	(243)
#define     DIALOG_CETEARACN	(244)
#define     aPANEL_PLAKA        (245)

#define     YENILIKLER	        (246)
#define     CETE_SIL_ONAY       (247)

#define     DIALOG_BOLGELER2	(251)

#define     KUMAR_MENU1			(252)
#define     KUMAR_MENU2			(253)
#define     KUMAR_MENU3			(254)
#define     KUMAR_MENU4			(255)

#define		DIALOG_GPS_CETELER	(256)

#define		DIALOG_BAKIYE		(257)
#define     DIALOG_BAKIYE_1     (258)
#define     DIALOG_BAKIYE_2     (259)
#define		DIALOG_BAKIYE_S30   (260)

#define		DIALOG_OZEL_ARAC	(290)
#define		DIALOG_OZEL_MENU	(291)
#define		DIALOG_OZEL_GETIR	(292)
#define     O_ARAC_SATIS		(293)

#define     TAKIP_MENU			(294)
#define     TAKIP_MENU_REHBER	(295)
#define     TAKIP_MENU_DJ		(296)

#define     CETE_DOST_MENU		(297)
#define     CETE_DOST_EKLE		(298)
#define     CETE_DOST_SIL		(299)


#define     MAX_CETE_SAVAS		(25)        //  Max bölge 25
#define     CETE_BOLGE_ISIM		(48)        //  Max çete mekan ismi 48
#define     CBI                 "48"

#define		OZEL_ARAC_SURE  (10)
#define		OZEL_ARAC_SLOT  (3)
#define		MAXTEXTURE_OBJ  (24)

#define     ETK_Isim    	(50)
#define     ETK_WORLD   	(91)
#define     bMAX_SIZE       (200)
#define     SCM_RENK    	(0xFFAF24FF)

// Meslekler

#define     POLIS               (2)
#define     CEVIK_KUVVET        (3)
#define     OZEL_HAREKAT_TIMI	(4)
#define     SIVIL_POLIS         (6)
#define     OZEL_KUVVET_B		(7)
#define     TURK_H_KUVVETLERI   (8)
#define     TECAVUZCU           (9)
#define     GASPCI				(10)
#define     SUIKASTCI           (11)
#define     TAMIRCI				(12)
#define     BOMBACI				(13)
#define     ARAC_HIRSIZI        (14)
#define     TIRCI               (15)
#define     SIVIL               (16)

// -- Team
#define     UST_MESLEK          (5)

// Skorlar

#define     Polis_Skor          (0)
#define     SivilPolis_Skor     (5000)
#define     CevikKuvvet_Skor    (1500)
#define     OKB_Skor    		(9000)
#define     OHAREKAT_Skor    	(3000)
#define     HAVAKUVVET_Skor    	(10000)

// Esya Selection ID

#define 	DIALOG_MASALAR		(1)
#define 	DIALOG_SANDALYE		(2)
#define 	DIALOG_YATAK		(3)
#define 	DIALOG_KOLTUK		(4)
#define 	DIALOG_AKSESUAR		(5)
#define 	DIALOG_ELEKTRONIK	(6)
//#define     MIT_SECIM           (7)
#define     AKSESUAR_SELECT		(8)
#define     GOZLUK_SELECT		(9)
#define     SAPKA_PERUK_SELECT	(10)
#define     MASKE_KASK_SELECT	(11)

// Meslek Renk

#define     SIVIL_RENK          0xECF0F1FF
#define     POLIS_RENK			0x3498DBFF

#define     SERVER_SOYGUN       (2)

// Anti hile Ýsmi
#define     SwAdi               "Anadolu"
#define     SwSehir				""
#define     nexSecurity         "{E74C3C}[Anti Hile]"   //  23
#define     dialogIsim			"Anadolu Hp"

// Banka Ayar
#define     BANKA_SOYMA     (3) // Çetede 3 kiþi olmasý lazým
#define     BANKA_SKOR     	(1000) // Oyuncunun 1000 skoru yoksa soyamayacak
#define     LAZER_SURE     	(30) // Lazer hack süresi

#define     FLAT_MAVI       0x00A8FFFF

#define 	COLOR_BLUE      0x0080FFFF
#define		COLOR_WHITE		0xFFFFFFAA
#define		COLOR_FADE1		0xE6E6E6E6
#define		COLOR_FADE2		0xC8C8C8C8
#define		COLOR_FADE3		0xAAAAAAAA
#define		COLOR_FADE4		0x8C8C8C8C
#define		COLOR_FADE5		0x6E6E6E6E

#define     FREKANS_RENK    0xF4F188FF
#define     HATA_RENK       0xE23E57FF
#define		COLOR_PURPLE	0xC2A2DAFF
#define     COLOR_DO        0x8080C0FF
#define		COLOR_ORANGE	0xFF9900FF
#define     DENIZ_YESILI    0x06FF96FF

#define     ADCMD_RENK  					(0x35B0ABFF)

new x001x11[150];


new PMEngel[MAX_PLAYERS char];

new RastgeleMesaj[][] = {
	"» Tüyo: {FFFFFF}Sunucuda 10 dakika zaman geçirerek 75 Exp kazanabilirsin.",
	"» Tüyo: {FFFFFF}Özel Harekat olarak þehrin bazý bölgelerine kolayca ýþýnlanabilirsin.",
	"» Tüyo: {FFFFFF}Her level tamamlamanýzda +1 yetenek puaný kazanýrsýnýz.",
	"» Tüyo: {FFFFFF}Oyuna Client ile girdiðinizde bir çok özelliði kullanabilirsiniz. Daha fazla bilgi için /Client",
	"» Tüyo: {FFFFFF}Devlet memurlarý aranmasý yüksek olan oyuncular öldürdüðünde daha fazla Exp alýr !",
	"» Tüyo: {FFFFFF}Bonzai, Eroin, Ot içerek Skor kazanabilirsin !",
	"» Tüyo: {FFFFFF}Ev satýn alarak kendinize ait araç satýn alabilirsiniz.",
	"» Tüyo: {FFFFFF}Özel araç alman ev satýn almadan arabalarý kullanabilmen demektir !",
	"» Tüyo: {FFFFFF}Vip oyuncu olarak daha fazla skor, para kazanabilir ve ayrýcalýklardan yararlanabilirsin.",
	"» Tüyo: {FFFFFF}Bombacý olarak þehiri bombalayýp ortalýðý kasýp kavura bilirsin !",
	"» Tüyo: {FFFFFF}Suikastcýlar hedef listesindeki oyuncularý öldürdüðü zaman karlý paralar kazanabilirler !",
    "» Tüyo: {FFFFFF}Roket Atar (RPG) silahýný alarak düþman olduðun yerlere etkili saldýrýda bulunabilirsin !",
    "» Tüyo: {FFFFFF}Kýyafet satýn alarak kendine özgü kýyafet tasarlayabilir ve oyuncularýn dikkatini çekebilirsin !",
    "» Tüyo: {FFFFFF}Gruplara ve Ekiplere katýlarak kazancýn yarýsýný elde edebilir ve 1 skor kazanabilirsin !",
    "» Tüyo: {FFFFFF}Bir çeteye katýldýðýnýzda gücünüzü arttýrabilir ve kendini dokunulmaz yapabilirsiniz !",
    "» Tüyo: {FFFFFF}Yetenek puanlarýyla Can, Zýrh, Max Soygun kazancýný geliþtirebilirsiniz.",
    "» Tüyo: {FFFFFF}Bölgeleri ele geçirerek ve savunarak para ve skor kazanabilirsin.",
	"» Tüyo: {FFFFFF}Düello yaparak arkadaþlarýna meydan okuyabilir diðer oyunculara kafa tutabilirsin.",
	"» Tüyo: {FFFFFF}Hava kuvvetleri mesleðine katýlarak suçlularý havadan bombalayabilirsin."
};

enum OzelAracFiyatData
{
	oamodel,
	oarenk1,
	oarenk2,
	oafiyat,
	oaIsim[48]
};

new OzelAracFiyat[][OzelAracFiyatData] =
{
	{411, 0, 1, 500000000, "Ýnfernus"},
	{560, 0, 3, 500000000, "Sultan"},
	{541, 1, 3, 500000000, "Bullet"},
	{578, 1, 0, 750000000, "DFT-30"},
	{487, 1, 3, 750000000, "Maverick"}
};
new OzelGaleriArac;

enum ozelaracdata
{
	bool:oaCheck,
	sql_id,
	oaSahip[MAX_PLAYER_NAME],
	Float:oaPos[4],
};
new oaIslem[MAX_VEHICLES][ozelaracdata];
new oaObjj[MAX_VEHICLES][MAXTEXTURE_OBJ];
new OzelAracim[MAX_PLAYERS][OZEL_ARAC_SLOT];
new Float:OzelDenemePos[4];

new LogGin[MAX_PLAYERS];
new Uyaric[MAX_PLAYERS];
new NoReloading[MAX_PLAYERS];
new CurrentWeapon[MAX_PLAYERS];
new CurrentAmmo[MAX_PLAYERS];
new AimbotWarnings[MAX_PLAYERS];

new gate_CevikKuvvet, gCKdurum = 0;
new gate_Polis, gPdurum = 0;
new gate_OzelHarekatGate, ohgD = 0;
new gate_Ordu[2], gOrdu[2] = 0;

new Text:GirisText[3];
new Text3D: kafaYazi[MAX_PLAYERS];

new polisAraclar[40];
new cevikkuvvetArac[22];
new ozelharekatArac[21];
new havaciArac[11];
new orduArac[40];

new kumarCount[MAX_PLAYERS];

new banSayfasi[MAX_PLAYERS];

enum sorularData
{
	sonuclanmisMi,
	gonderen,
	sorusu[148]
};
new Sorular[MAX_PLAYERS][sorularData];

enum sarkiData
{
	acildiMi,
	sGonderen,
	_url[148]
};
new Sarkilar[MAX_PLAYERS][sarkiData];

#define Ban_Check   (4)
new sagoBanKorumasi[MAX_PLAYERS];

new BotCheck[MAX_PLAYERS];

enum marketData
{
	sid,
	sIsmi[38],
	smermi,
	sfiyat
};

new MarketIslem[14][marketData] =
{
	{4,  "Býçak",      1,   5000},
	{22, "9mm",    100, 10000},
	{23, "Silenced 9mm",  100, 15000},
	{24, "Desert Eagle",  100, 25000},
	{25, "Shotgun",   100, 25000},
	{26, "Sawnoff Shotgun", 100, 50000},
	{27, "Combat Shotgun", 100, 30000},
	{28, "Micro SMG/Uzi", 500, 30000},
	{29, "MP5",    250, 15000},
	{32, "Tec-9",   250, 15000},
	{30, "AK-47",   150, 10000},
	{31, "M4",    150, 25000},
	{34, "Sniper Rifle",  50, 50000},
	{35, "Roket Atar",  3,  2000000}
};

enum atmData
{
	atmObje,
	atmCP,
	Text3D: atmLabel,
	Float: atmPos[6],
}
new AtmIslem[MAX_ATM][atmData];
new Iterator: Atmler<MAX_ATM>;
new bool: ATMMod[MAX_PLAYERS];

enum CeteBolgeleriData
{
	cbZone,
	cbArea,
	Text3D: cbLabel,
	ceteMekanIsmi[CETE_BOLGE_ISIM],
	ceteMekanSahip,
	Float: cMekanZone[4],
	Float: cMekanLabel[3],
	ceteMekanRenk[7],
	ceteBolgeSure,
	ceteTip,
	eleGecirenCete
}
new CeteSavasMekan[MAX_CETE_SAVAS][CeteBolgeleriData];
new Iterator: CeteSavaslar<MAX_CETE_SAVAS>;



#define     TIP_1    	(600)
#define     TIP_2    	(1200)
#define     TIP_3    	(1800)
#define     TIP_4    	(2400)
#define     PUSKURTME	(1350)

enum ceteSavasData
{
    CeteSavasBolgedemi,
    SavasSurem,
    SavasSurem2,
    SavasTip,
    SavasSureArttir,
    savasTimer,
    puskurtTimer,
    Puskurtme
};
new SavasIslem[MAX_PLAYERS][ceteSavasData];
new PlayerBar: SavasBar[MAX_PLAYERS] = {INVALID_PLAYER_BAR_ID, ...};
new PlayerBar: ExpBar[MAX_PLAYERS] = {INVALID_PLAYER_BAR_ID, ...};

enum gpsVeri
{
	bool:gpsAktif = false,
	gps_timer
};
new GPSOyuncu[MAX_PLAYERS][gpsVeri];

enum ZoneData
{
	Float: gz_Pos[4],
	gz_Renk
};
new ZoneYukle[][ZoneData] =
{
	{{-1700.18, 664.47, -1565.18, 744.47}, 0x3498DB99}, // Polis Bölgesi
	{{-1779.98, 933.24, -1716.98, 1098.24}, 0x3498DB99}, // Çevik Kuvvet
	{{-2543.5, -717.5, -2488.5, -596.5}, 0x3498DB99}, // Özel Harekat
	{{-1552.5, 259.5, -1222.5, 528.5}, 0x2ECC7199} // Ordu
};
new gz_Olustur[sizeof(ZoneYukle)];

enum GPSData
{
	gpsIsim[40],
	Float: GPS_Pos[3]
};

new girisCasino;
new cikisCasino;
new bool:kumarda[MAX_PLAYERS];

new GPSYukle[][GPSData] =
{
    {"» Çete Mekanlarý", {0.0, 0.0, 0.0}},    // 0
	{"» Ev Konumu Bul (ID)", {0.0, 0.0, 0.0}},    // 1
	{"» Ev Bilgileriyle ID Bul (Liste)", {0.0, 0.0, 0.0}}, // 2
	{" \t \n\n", {0.0, 0.0, 0.0}}, // 3
	{"» Kumarhane", {-2166.8589, -97.1454, 35.1719}},
	{"» Deniz Bank", {-1529.1801, 919.7673, 7.0468}},
	{"» Türkiye Ýþ Bankasý", {-2756.7371, 393.8467, 4.3359}},
	{"» Emniyet Genel Müdürlüðü", {-1626.2897, 731.2738, 14.4609}},
	{"» Çevik Kuvvet Þube Müdürlüðü", {-1753.7690, 951.5506, 24.7422}},
	{"» Jandarma Genel Komutanlýðý", {-1609.7526, 439.7315, 7.0313}},
	{"» Ýncirlik Askeri Hava Üssü", {-1487.1394, 1012.5402, 7.1875}},
	{"» Özel Harekat Üssü", {-2443.6584, -619.5440, 132.5674}},
	{"» Audi Bayi", {-1635.1772, 1211.5922, 7.0391}},
	{"» Volkswagen Bayi", {-1987.0300, 287.9727, 34.4371}},
	{"» Liman", {-1555.1345, 117.5285, 3.5547}},
	{"» Hastane", {-2651.6379, 628.3152, 14.4531}},
	{"» Bombacý", {-1917.7131, 299.2740, 41.0522}},
	{"» Modifiye 1", {-1935.6133, 230.4770, 34.1563}},
	{"» Modifiye 2", {-2707.5503, 217.9896, 4.1797}},
	{"» Hava Alaný", {-1751.4785, -580.0892, 16.3359}},
	{"» Uyuþturucu Satýcýsý", {-2205.4436, 112.8276, 35.3203}},
	{"» Bim", {-2439.0557, 734.8358, 35.0156}},
	{"» Burger King", {-2371.7620, -149.6408, 35.1719}},
	{"» MM Migros", {-2368.1941, -90.7359, 35.1719}}
};

new yetkilerTimer[MAX_PLAYERS];
new girisObjeler[MAX_PLAYERS][81];
new bool: KarakterEkraninda[MAX_PLAYERS] = false;
new karakterOptimize[MAX_PLAYERS] = 0;
new sitroen[MAX_PLAYERS] = 0;
new TickSure[MAX_PLAYERS];

enum bankaRob
{
	bankaSoyuyor,
	bankaCount
};
new PlayerBanka[MAX_PLAYERS][bankaRob];
new BankaGeriSay[MAX_PLAYERS];
new lazerler[10], LazerBolge;
new bankaParasi;
new LazerDurum = false;
new LazerDurum2 = false;

enum maskeVeKaskData
{
	modelidx,
	fiyatx
};

new MaskeAndKask[][maskeVeKaskData] =
{
	{18977, 12500}, {18978, 12500}, {18979, 12500},
	{18645, 15000}, {19137, 10000}, {19163, 15000}, {18911, 12500},
	{18912, 12500}, {18918, 12500}, {18917, 12500}, {18919, 12500},
	{1254, 20000},	{11704, 15000}
};

enum sapkaVePerukData
{
	modelidx,
	fiyatx
};

new SapkaAndPeruk[][sapkaVePerukData] =
{
	{19067, 10000}, {19068, 10000}, {19069, 10000},	{19068, 10000},
	{18961, 10000}, {19141, 10000}, {18941, 10000}, {18940, 10000},
	{18939, 10000}, {18942, 10000}, {18943, 10000}, {19517, 10000},
	{19077, 10000}, {19801, 10000}, {19518, 10000}, {18975, 10000},
	{19516, 10000}, {19488, 12500}, {18947, 12500}, {18948, 12500},
	{18949, 12500}, {18950, 12500}, {18951, 12500}, {19064, 10000},
	{19528, 12500}
};

enum gozlukData
{
	modelidx,
	fiyatx
};

new Gozlukler[][gozlukData] =
{
	{19016, 8000}, {19022, 8000}, {19023, 8000}, {19024, 8000},
	{19025, 8000}, {19026, 8000}, {19027, 8000}, {19028, 8000},
	{19029, 8000}, {19033, 8000}, {19138, 8000}, {19139, 8000},
	{19140, 8000}
};

enum aksesuarData
{
	modelidx,
	fiyatx
};

new Aksesuarlar2[][aksesuarData] =
{
	{19904, 10000}, {19559, 15000}, {19319, 15000},	{19318, 15000},
	{19317, 15000}, {19079, 10000}, {19422, 8000},	{19423, 8000},
	{19424, 8000},	{19421, 8000},	{3026, 15000},	{18693, 25000}
};

enum fullData
{
	modelidx,
	fiyatx
};

new FullBilgi[][fullData] =
{
	{8976, 15000},	{18977, 12500}, {18978, 12500},
	{18979, 12500}, {18645, 15000}, {19137, 10000}, {19163, 15000},
	{18911, 12500}, {18912, 12500}, {18918, 12500}, {18917, 12500},
	{18919, 12500}, {1254, 20000},	{11704, 15000}, {19067, 10000},
	{19068, 10000}, {19069, 10000},	{19068, 10000}, {18961, 10000},
	{19141, 10000}, {18941, 10000}, {18940, 10000}, {18939, 10000},
	{18942, 10000}, {18943, 10000}, {19517, 10000}, {19077, 10000},
	{19801, 10000}, {19518, 10000}, {18975, 10000}, {19516, 10000},
	{19488, 12500}, {18947, 12500}, {18948, 12500}, {18949, 12500},
	{18950, 12500}, {18951, 12500}, {19064, 10000}, {19528, 12500},
 	{19016, 8000},	{19022, 8000},	{19023, 8000},	{19024, 8000},
	{19025, 8000},	{19026, 8000},	{19027, 8000},	{19028, 8000},
	{19029, 8000},	{19033, 8000},	{19138, 8000},	{19139, 8000},
	{19140, 8000}, 	{19904, 10000}, {19559, 15000}, {19319, 15000},
	{19318, 15000}, {19317, 15000}, {19079, 10000}, {19422, 8000},
	{19423, 8000},	{19424, 8000},	{19421, 8000},	{3026, 15000},
	{18693, 25000}
};

enum attached_object_data
{
    ao_model,
    ao_bone,
    Float:ao_x,
    Float:ao_y,
    Float:ao_z,
    Float:ao_rx,
    Float:ao_ry,
    Float:ao_rz,
    Float:ao_sx,
    Float:ao_sy,
    Float:ao_sz,
    ao_Sqlid
}
new ao[MAX_PLAYERS][MAX_PLAYER_ATTACHED_OBJECTS][attached_object_data];

enum ceteData
{
	cZone,
	cArea,
	Text3D: cLabel,
	ceteIsmi[MAX_CETE_ISIM],
	Float: cetePos[4],
	Float: ceteSpawnPos[3],
	cSahip1[24],
	cSahip2[24],
	cSahip3[24],
	cSahip4[24],
	ceteKasasi,
	ceteRengi[7],
	ceteTagi[6],
	ceteSeviye,
	CeteOldurme,
	ceteOlum,
	ceteGod,
	ceteSkin,
	ceteAracKapasite,
	ceteAracRenk[2],
	cetePlaka[11],
	ceteDeger,
	cetePuan,
	ceteDost[120],
	dostGode,
	ceteDostTemp,
    ceteCountL
};
new CeteIslem[MAX_CETE][ceteData];
new Iterator: Ceteler<MAX_CETE>;
new DostCete[MAX_CETE];
new PlayerCete[MAX_PLAYERS] = -1;
new PlayerCeteRutbe[MAX_PLAYERS][21];
new OnayTimer[MAX_PLAYERS];
new onayCount[MAX_PLAYERS] = 0;
new TeklifAttigim[MAX_PLAYERS] = -1;
new OnayTeklif[MAX_PLAYERS] = -1;

#define     MAX_BELES_UYE		(10)
#define     MAX_BELES_FIYAT		(250000000)
#define     MAX_BELES_SKOR		(3000)

#define     MAX_BELES_FIYAT_	"250,000,000"
#define     MAX_BELES_SKOR_		"3,000"

enum ceteArac
{
	ceteeAid,
	ceteeFiyat
};

new CeteAracIslem[56][ceteArac] =
{
	{402, 25000000},
	{406, 15000000},
	{411, 40000000},
	{415, 35000000},
	{417, 40000000},
	{424, 10000000},
	{437, 22000000},
	{444, 27000000},
	{451, 38000000},
	{452, 5000000},
	{463, 7000000},
	{468, 9000000},
	{469, 45000000},
	{471, 6000000},
	{480, 18000000},
	{481, 5000000},
	{487, 50000000},
	{495, 35000000},
	{502, 32000000},
	{506, 29000000},
	{521, 18000000},
	{522, 20000000},
	{536, 13000000},
	//{539, 75000000},
	{541, 39000000},
	{545, 23000000},
	{548, 45000000},
	{556, 25000000},
	{557, 25000000},
	{559, 30000000},
	{560, 40000000},
	{562, 33000000},
	{563, 40000000},
	{567, 26000000},
	{568, 8000000},
	{578, 24000000},
	{579, 31000000},
	{580, 23000000},
	{581, 16000000},
	{593, 45000000},
	{603, 28000000},
	//
	{519, 35000000},
	{460, 45000000},
	{409, 30000000},
	{444, 50000000},
	{468, 15000000},
	{471, 28000000},
	{493, 40000000},
	{484, 30000000},
	{490, 35000000},
	{502, 35000000},
	{503, 35000000},
	{513, 40000000},
	{539, 125000000},
	{556, 35000000},
	{567, 30000000},
	{595, 50000000}
};

enum ceteAraclari
{
	ceteIDsi,
	Float: ceteAracPos[4],
	ceteAracR[2],
 	c_pJob,
	c_mParca[17],
	ceteAracSQL,
	bool: ceteAracAktif
};
new CeteArac[MAX_VEHICLES][ceteAraclari];

new AntiHackFlood[MAX_PLAYERS];


#define     MAX_BARIKAT     (200)
#define     BARIKAT_SURE    (30) // 30 dakika
enum barikatData
{
	barikatDurum,
	barikatOlusturan[MAX_PLAYER_NAME],
	Float: barikatPoss[6],
	barikatSure,
	b_objeId,
	Text3D: barikatLabel
};
new
    BarikatIslem[MAX_BARIKAT][barikatData],
    Iterator: Barikatlar<MAX_BARIKAT>,
	BarikatKurdum[MAX_PLAYERS] = -1,
	bool: BarikatDuzenle[MAX_PLAYERS] = false,
	barikatSayi[MAX_PLAYERS]
;

new yt;
enum yetkiList
{
	YID,
	YCMDLan[40]
};
new YetkiList[100][yetkiList];

new ProStr1[1000];
new ProStr2[1000];
new ProStr3[1000];
new ProStr4[1000];
new ProStr5[1000];
new ProStr6[4024];

enum ekipData
{
	e_Ismi[MAX_E_ISIM],
 	e_Aktiflik,
	e_Kurucu[MAX_PLAYER_NAME],
	e_kID,
	e_limit
};

enum ekipOyuncuData
{
	e_Id,
	e_Davet,
	e_Katilim
};

new ekipIslem[MAX_EKIP][ekipData];
new e_oIslem[MAX_PLAYERS][ekipOyuncuData];
new Iterator: _Ekipler<MAX_EKIP>;

enum grupData
{
	g_Ismi[MAX_G_ISIM],
 	g_Aktiflik,
	g_Kurucu[MAX_PLAYER_NAME],
	g_kID,
	g_limit
};

enum grupOyuncuData
{
	g_Id,
	g_Davet,
	g_Katilim
};

new grupIslem[MAX_GRUP][grupData];
new g_oIslem[MAX_PLAYERS][grupOyuncuData];
new Iterator: _Gruplar<MAX_GRUP>;

enum BolgeData
{
    bool: bolgedurum,
	bolgeIsim[MAX_bIsim],
 	bolgeSahip[MAX_PLAYER_NAME],
 	bolgeGelir,
	bolgeSkor,
	Float:bolgePos[4],
	Float:labelPos[3],
	Text3D:bolgeLabel,
	zoneID,
	arenaID,
	bolgeSure,
	bolgeAlindi,
	odulSure,
	bolgeGrup
};
new BolgeIslem[MAX_BOLGE][BolgeData];
new Iterator: Bolgeler<MAX_BOLGE>;
new BolgeTimer[MAX_PLAYERS], BolgeTimerDurum[MAX_PLAYERS];

enum vipData
{
	// Motordan Düþmeme
	bool: MotorDusmeDurum,
    enSonMotor,

    // VipAraçRenk
    bool: aArrenk,
	aRenkTimer,

	// vGit
	vGitt
};
new VipIslem[MAX_PLAYERS][vipData];
new Text:OzelDuyuru[3];
new VipDuyuruBekle = 0;

new Float:tpp[MAX_PLAYERS][4],Float:ttp[MAX_PLAYERS][3];
new SehirActorler[12];

new ParaKorumasi[MAX_PLAYERS];

enum evPosData
{
	Float: ev_Pozisyon[4],
	evInterior
};

new EvPozisyonlari[10][evPosData] =
{
	{{418.798645, 2536.576660, 10.000000, 89.167175},		10},    // 1 Level
	{{2463.075927, -1698.234252, 1013.507812, 90.230758},	2},     // 2 Level
	{{2262.551757, -1136.787353, 1050.632812, 180.581497},	10},    // 3 Level
	{{2496.304931, -1696.656372, 1014.742187, 178.705612},	3},     // 4 Level
	{{295.367797, 1476.710937, 1080.257812, 0.466042},		15},    // 5 Level
	{{30.511035, 1341.689086, 1084.375000, 88.701057},		10},    // 6 Level
	{{235.159805, 1190.681518, 1080.257812, 1.926610},		3},     // 7 Level
	{{229.916275, 1114.398193, 1080.992187, 268.575592},	5},     // 8 Level
	{{234.3048, 1069.7632, 1084.1937}, 						6},
	{{140.233154, 1368.819702, 1083.863525, 358.769012},	5}      // 10 Level
};


enum evPosCikisData
{
	Float: ev_Pozisyonx[3],
	evInteriorx
};

new EvCikisPoz[10][evPosCikisData] =
{
	{{421.673461, 2536.499267, 10.000000},		10},
	{{2468.131347, -1698.218627, 1013.507812},	2},
	{{2263.129882, -1133.323364, 1050.632812},	10},
	{{2495.958251, -1692.802734, 1014.742187},	3},
	{{295.047027, 1472.921264, 1080.257812},	15},
	{{23.999345, 1340.510864, 1084.375000},		10},
	{{235.329437, 1187.546508, 1080.257812},	3},
	{{226.954299, 1114.308959, 1080.996337},	5},
	{{234.1325, 1064.0737, 1084.2118},			6},
	{{140.288208, 1366.394653, 1083.859375},	5}
};

new EvCikisCP[10];
new Text:EsyalarText[17];

new Text:SagBosKutu;

enum evObjeData
{
	ev_SQL_ID,
	ev_ID,
	eObjeID,
	Float: e_Obje[6],
};


// Spawnlar

new Float: PolisSpawn[3][4] =
{
	{-1588.034912, 716.228454, -5.242187, 270.805847},
	{-1587.818847, 719.270385, -5.242187, 271.544952},
	{-1587.272094, 713.235412, -5.242187, 270.717376}
};

new Float: CevikKuvvetSpawn[1][4] =
{
	{-1720.562866, 1018.303527, 17.585500, 89.552162}
};

new Float: OzelHarekatSpawn[1][4] =
{
	{-2520.163574, -620.759765, 132.719818, 358.897674}
};

new Float: OzelKuvvetBirligiSpawn[2][4] =
{
	{-1301.992919, 391.230957, 7.177000, 358.317962},
	{-1510.914306, 471.677703, 7.187500, 177.899032}
};

new Float: SivilPolisSpawn[6][4] =
{
	{-2229.060302, 287.429077, 35.320312, 6.186813},
	{-2094.272949, -99.687744, 35.164062, 355.266571},
	{-1926.039794, 556.955078, 35.171875, 359.458221},
	{-2408.397705, 725.247619, 35.171875, 353.416687},
	{-1674.213378, 1336.489379, 7.185316, 142.384124},
	{-2650.162841, 1362.025146, 7.309712, 177.211669}

};

new Float: HavaKuvvetleriSpawn[1][4] =
{
	{-1927.022216, 1753.984252, 17.816062, 359.281799}
};

new Float: SivilSpawn[6][4] =
{
	{-2345.2625,-135.0774,35.3203,359.7453},
	{-2660.6707,-24.9406,6.1328,181.1243},
	{-2400.7217,944.1824,45.4281,271.9338},
	{-2757.6870,374.6605,4.3375,270.7982},
	{-1980.9019,1120.1901,53.1256,273.1997},
	{-2283.7327,141.1924,35.3125,272.4496}
};

enum evBilgileri
{
	EvIsmi[MAX_EV_ISMI],
	EvSahibi[MAX_PLAYER_NAME],
	Float:EvPos[3],
	evFiyat,
	evOrjinalFiyat,
	evDurumu,
	evSeviyesi,
	evSifresi[MAX_PLAYER_NAME],
	evVirtual,
	evPara,
	Text3D: evLabel,
	evPickup,
	evIcon
};
new EvIslem[MAX_EV][evBilgileri];
new Iterator: Evler<MAX_EV>;
new evim[MAX_PLAYERS];

new TextModu[MAX_PLAYERS] = 0;

new Interiorlar[][] =
{
        {"24/7 1"},
        {"24/7 2"},
        {"24/7 3"},
        {"24/7 4"},
        {"24/7 5"},
        {"24/7 6"},
        {"Airport Ticket Desk"},
        {"Airport Baggage Reclaim"},
        {"Shamal"},
        {"Andromada"},
        {"Ammunation 1"},
        {"Ammunation 2"},
        {"Ammunation 3"},
        {"Ammunation 4"},
        {"Ammunation 5"},
        {"Ammunation Booths"},
        {"Ammunation Range"},
        {"Blastin Fools Hallway"},
        {"Budget Inn Motel Room"},
        {"Jefferson Motel"},
        {"Off Track Betting Shop"},
        {"Sex Shop"},
        {"Meat Factory"},
        {"Zero's RC Shop"},
        {"Dillmore Gas Station"},
        {"Caligula's Basement"},
        {"FDC Janitors Room"},
        {"Woozie's Office"},
        {"Binco"},
        {"Didier Sachs"},
        {"Prolaps"},
        {"Suburban"},
        {"Victim"},
        {"ZIP"},
        {"Alhambra"},
        {"Ten Bottles"},
        {"Lil' Probe Inn"},
        {"Jay's Dinner"},
        {"Gant Bridge Dinner"},
        {"Secret Valley Dinner"},
        {"World of Coq"},
        {"Welcome Pump"},
        {"Burger Shot"},
        {"Cluckin' Bell"},
        {"Well Stacked Pizza"},
        {"Jimmy's Sticky Ring"},
        {"Denise Room"},
        {"Katie Room"},
        {"Helena Room"},
        {"Michelle Room"},
        {"Barbara Room"},
        {"Mille Room"},
        {"Sherman Dam"},
        {"Planning Dept."},
        {"Area 51"},
        {"LS Gym"},
        {"SF Gym"},
        {"LV Gym"},
        {"B Dup's House"},
        {"B Dup's Crack Pad"},
        {"CJ's House"},
        {"Madd Dogg's Mansion"},
        {"OG Loc's House"},
        {"Ryder's House"},
        {"Sweet's House"},
        {"Crack Factory"},
        {"Big Spread Ranch"},
        {"Fanny Batters"},
        {"Strip Club"},
        {"Strip Club Private Room"},
        {"Unnamed Brothel"},
        {"Tiger Skin Brothel"},
        {"Pleasure Domes"},
        {"Liberty City Outside"},
        {"Liverty City Inside"},
        {"Gang House"},
        {"Colonel Furhberger's House"},
        {"Crack Den"},
        {"Warehouse 1"},
        {"Warehouse 2"},
        {"Sweet's Garage"},
        {"Lil' Probe Inn Toilet"},
        {"Unused Safe House"},
        {"RC Battlefield"},
        {"Barber 1"},
        {"Barber 2"},
        {"Barber 3"},
        {"Tatoo parlour 1"},
        {"Tatoo parlour 2"},
        {"Tatoo parlour 3"},
        {"LS Police HQ"},
        {"SF Police HQ"},
        {"LV Police HQ"},
        {"Car School"},
        {"8-Track"},
        {"Bloodbowl"},
        {"Dirt Track"},
        {"Kickstart"},
        {"Vice Stadium"},
        {"SF Garage"},
        {"LS Garage"},
        {"SF Bomb Shop"},
        {"Blueberry Warehouse"},
        {"LV Warehouse 1"},
        {"LV Warehouse 2"},
        {"Catigula's Hidden Room"},
        {"Bank"},
        {"Bank - Behind Desk"},
        {"LS Atruim"},
        {"Bike School"},
        {"<< Eski Yere Iþýnlan"}
};

new Oto_Galeri;

new Eroinq[MAX_PLAYERS], Otq[MAX_PLAYERS], Bonzaiq[MAX_PLAYERS];

enum normalAracData
{
	a_Sahip[MAX_PLAYER_NAME],
	Float: a_Pos[4],
	a_Renk[2],
	pJob,
	a_mParca[17],
	n_Plaka[11],
	bool: aAktif,
	aSQL
};
new AraclarIslem[MAX_VEHICLES][normalAracData];
new aracSlotu[MAX_PLAYERS][N_ARAC_KAPASITE];
new Anahtar[MAX_PLAYERS];

enum rusvetData
{
	rusvetPara,
	rusvetID,
	rusvetPlayerID
}
new RusvetIslem[MAX_PLAYERS][rusvetData];
new mitArea;
new bankaOnu;

enum soygunData
{
	soyGirisCP,
	soyCikisCP,
	soygunCP,
	soygunIcon,
	Text3D: girisLabel,
	Text3D: cikisLabel,
	Text3D: soyLabel,
	soygunIsmi[MAX_SOYGUN_ISIM],
	Float: girisCP[3],
 	Float: girisPoss[4],
 	Float: cikisCP[3],
	Float: cikisPoss[4],
	Float: soygunCP_[3],
	soygunInterior,
	soygunVirtualWorld,
	soygunSure,
	iDurum,
	sIcon
};
new SoygunIslem[MAX_SOYGUN_YERI][soygunData];
new Iterator: Soygunlar<MAX_SOYGUN_YERI>;

enum soygunOlusturData
{
	bool:sDurum,
	soygunIsim[MAX_SOYGUN_ISIM],
	Float:soYgirisCP[3],
	Float:soyIceri[4],
	Float:soYulacakCP[3],
	Float:soYCikisCP[3],
	Float:soYDisari[4],
	soyInterior,
	soyVirtualWorld,
	soySure,
	soyIcon
};
new SoygunOIslem[MAX_PLAYERS][soygunOlusturData];

new TumTimer[MAX_PLAYERS];

new Pickup_Zirh;
new Pickup_BankaG;
new Pickup_HavaUssu;
new CP_HavaUssu;
new CP_AHIRSIZ;
new CP_BOMBACI;
new CP_POLIS[4];
new CP_HASTANE;
new Text:PolisLoad[2];
new PlayerText:PolisLoadSelect[MAX_PLAYERS][3];

new Pickup_BankaIS[2];
new AnimasyonDurumu[MAX_PLAYERS];
new AnimasyonResetle[MAX_PLAYERS];

new PolisKarakterleri[6] =
{
    300, 301, 304, 305, 306, 307
};
new SivilPolisKarakterleri[22] =
{
    217, 29, 46, 48, 59,
	60, 73, 98, 101, 124,
 	184, 191, 144, 147, 170,
	112, 125, 137, 141, 150,
	272, 273
};
new TecavuzV[MAX_PLAYERS];
new aDondurma[MAX_PLAYERS];


new PlayerText:TextYazi[MAX_PLAYERS][3];
new textFlood = 0;

//new RGBBanka[4];
new tazerTimer[MAX_PLAYERS];
/*
new b = 200;
new b2 = 200;
new c = 0;
*/


//new renk13;
new aracResDurum = 0;
new chatDurum = 0;
new Text:Duyuru;
new _duyuruDurum = 0;
new duyuruTimer;
new duyuruTimer2;
new Text:AltBar[14];
new Text:SaatText[3];
new Text:Kutucuklar[6];
new PlayerText:ParaLevel[MAX_PLAYERS][3];
new PlayerText:SagBarr[MAX_PLAYERS][4];
new PlayerText:HizBari[MAX_PLAYERS][19];
new HizBarOn[MAX_PLAYERS];
new HizBarTimer[MAX_PLAYERS];
new Text:sOlusturucuIcon[56];
new Text:SagBarText_Y[4];
new PlayerText:SagBarText[MAX_PLAYERS][4];
new PlayerText:SoyulanBar[MAX_PLAYERS][9];
new Text:MeslekBar[15];
new Weapons[MAX_PLAYERS][13];

new SuikastDurum = 0;
new sMaruzOyuncu[MAX_PLAYERS], sOdulOyuncu[MAX_PLAYERS], timerBeklet;
new aranmaSeviyesii[MAX_PLAYERS];
enum bombaData
{
	Float:bombaPos[3]
}
new BombaIslem[MAX_PLAYERS][bombaData];
new Bombam[MAX_PLAYERS];

new Float:DuelloMap1[2][4] =
{
	{-211.6106, 8.7673, 791.9714, 358.7272},
	{-211.7845, 41.9227, 791.9645, 181.0655}
};

new Float:DuelloMap2[2][4] =
{
	{-2877.5249, -803.7261, 779.0613, 128.8179},
	{-2901.1199, -822.0105, 779.0613, 309.3887}
};

enum duelloSilahd
{
	d_silaahh,
	_dsIsim[32]
};
new SilahIsimler[][duelloSilahd] =
{
	{1, "Brassknuckle"},
	{2, "Golfclub"},
	{3, "Nightstick"},
	{4, "Knife"},
	{5, "Bat"},
	{6, "Shovel"},
	{7, "Poolstick"},
	{8, "Katana"},
	{10, "Purple Dildo"},
	{16, "Grenade"},
	{18, "Molotov Cocktail"},
	{22, "9mm"},
	{23, "Silenced 9mm"},
	{24, "Desert Eagle"},
	{25, "Shotgun"},
	{26, "Sawnoff Shotgun"},
	{27, "Combat Shotgun"},
	{28, "Micro SMG/Uzi"},
	{29, "MP5"},
	{30, "AK-47"},
	{31, "M4"},
	{32, "Tec-9"},
	{33, "Country Rifle"},
	{34, "Sniper Rifle"},
	{35, "RPG"},
	{38, "Minigun"}
};

enum etkAyar
{
	etkAktifmi,
	etkKatilim,
};
new EtkIslem[etkAyar], bool:Etkde[MAX_PLAYERS] = false, etkYaptim[MAX_PLAYERS];
new Text:ETK_Text[5], etkTimer, etkTimer2, etkCount = 0, baSla = 5;
new Float:ePos[4], etkMaxArac[60], etkBaslaTimer, etkHasar = 0;
new etkLocal[MAX_PLAYERS];

enum eArac
{
	eAracId,
};

new EtkAracIslem[][eArac] =
{
	{400},
	{401},
	{402},
	{405},
	{409},
	{410},
	{411},
	{412},
	{415},
	{419},
	{421},
	{424},
	{429},
	{434},
	{451},
	{461},
	{462},
	{463},
	{468},
	{471},
	{475},
	{477},
	{480},
	{481},
	{487},
	{489},
	{494},
	{495},
	{500},
	{502},
	{503},
	{506},
	{509},
	{510},
	{517},
	{521},
	{522},
	{526},
	{527},
	{529},
	{533},
	{534},
	{535},
	{536},
	{541},
	{545},
	{546},
	{547},
	{549},
	{550},
	{551},
	{555},
	{556},
	{557},
	{558},
	{559},
	{560},
	{561},
	{562},
	{565},
	{566},
	{567},
	{579},
	{580},
	{581},
	{585},
	{586},
	{587},
	{589},
	{602},
	{603},
	{519}
};

enum duelloData
{
    d_ID,
	dHarita,
	dP,
	dSilah[2]
};
new DuelloIslem[MAX_PLAYERS][duelloData];
new DuelloTimer[MAX_PLAYERS];
new DuelloSayi[MAX_PLAYERS] = 0;
new DuelloOyuncusu[MAX_PLAYERS] = INVALID_PLAYER_ID; // Diðer ID
new bool: Duelloda[MAX_PLAYERS];  // Diðer ID

new soygunParasi[MAX_PLAYERS];
new soygunCount[MAX_PLAYERS] = 0;

new
	bool: IsPlayerPausedx[MAX_PLAYERS],
	PlayerPausedCount[ MAX_PLAYERS ],
	Paused_Timer,
    AFkMi[MAX_PLAYERS],
    AFkTime[MAX_PLAYERS]
;

enum oData
{
	bool: Hapistemi,
	kelepce,
	kelepceSure,
	dondurulmus,
	kacirilma,
	sonArac,
	aracta,
	tohumSure,
	eroinSure,
	bonzaiSure,
	HPV,
	HPV_Koruma
};
new oIslem[MAX_PLAYERS][oData];


enum KeybinderData
{
	keybind_Sure[2],
	keybind_ID
};
new KeybindIslem[MAX_PLAYERS][KeybinderData];


new MySQL: g_SQL;

enum SAZONE_MAIN {
		SAZONE_NAME[28],
		Float:SAZONE_AREA[6]
};

static const gSAZones[][SAZONE_MAIN] = {
	//	NAME                            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section",          {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section",          {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section",          {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section",          {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical",         {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical",         {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo",         {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo",         {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo",         {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels",         {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International",            {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International",            {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International",            {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International",            {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International",            {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International",            {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section",   	    {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section",    	    {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section",     		{1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate",        {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};


new spoiler[20][0] = {
	{1000},
	{1001},
	{1002},
	{1003},
	{1014},
	{1015},
	{1016},
	{1023},
	{1058},
	{1060},
	{1049},
	{1050},
	{1138},
	{1139},
	{1146},
	{1147},
	{1158},
	{1162},
	{1163},
	{1164}
};

new nitro[3][0] = {
    {1008},
    {1009},
    {1010}
};

new fbumper[23][0] = {
    {1117},
    {1152},
    {1153},
    {1155},
    {1157},
    {1160},
    {1165},
    {1166},
    {1169},
    {1170},
    {1171},
    {1172},
    {1173},
    {1174},
    {1175},
    {1179},
    {1181},
    {1182},
    {1185},
    {1188},
    {1189},
    {1192},
    {1193}
};

new rbumper[22][0] = {
    {1140},
    {1141},
    {1148},
    {1149},
    {1150},
    {1151},
    {1154},
    {1156},
    {1159},
    {1161},
    {1167},
    {1168},
    {1176},
    {1177},
    {1178},
    {1180},
    {1183},
    {1184},
    {1186},
    {1187},
    {1190},
    {1191}
};

new exhaust[28][0] = {
    {1018},
    {1019},
    {1020},
    {1021},
    {1022},
    {1028},
    {1029},
    {1037},
    {1043},
    {1044},
    {1045},
    {1046},
    {1059},
    {1064},
    {1065},
    {1066},
    {1089},
    {1092},
    {1104},
    {1105},
    {1113},
    {1114},
    {1126},
    {1127},
    {1129},
    {1132},
    {1135},
    {1136}
};

new bventr[2][0] = {
    {1142},
    {1144}
};

new bventl[2][0] = {
    {1143},
    {1145}
};

new bscoop[4][0] = {
	{1004},
	{1005},
	{1011},
	{1012}
};

new rscoop[17][0] = {
    {1006},
    {1032},
    {1033},
    {1035},
    {1038},
    {1053},
    {1054},
    {1055},
    {1061},
    {1067},
    {1068},
    {1088},
    {1091},
    {1103},
    {1128},
    {1130},
    {1131}
};

new lskirt[21][0] = {
    {1007},
    {1026},
    {1031},
    {1036},
    {1039},
    {1042},
    {1047},
    {1048},
    {1056},
    {1057},
    {1069},
    {1070},
    {1090},
    {1093},
    {1106},
    {1108},
    {1118},
    {1119},
    {1133},
    {1122},
    {1134}
};

new rskirt[21][0] = {
    {1017},
    {1027},
    {1030},
    {1040},
    {1041},
    {1051},
    {1052},
    {1062},
    {1063},
    {1071},
    {1072},
    {1094},
    {1095},
    {1099},
    {1101},
    {1102},
    {1107},
    {1120},
    {1121},
    {1124},
    {1137}
};

new hydraulics[1][0] = {
    {1087}
};

new base[1][0] = {
    {1086}
};

new rbbars[4][0] = {
    {1109},
    {1110},
    {1123},
    {1125}
};

new fbbars[2][0] = {
    {1115},
    {1116}
};

new wheels[17][0] = {
    {1025},
    {1073},
    {1074},
    {1075},
    {1076},
    {1077},
    {1078},
    {1079},
    {1080},
    {1081},
    {1082},
    {1083},
    {1084},
    {1085},
    {1096},
    {1097},
    {1098}
};

new lights[2][0] = {
	{1013},
	{1024}
};


//new o;
new RainbowError;

new ColorList[][121] = {
	"{000000}000 {F5F5F5}001 {2A77A1}002 {840410}003 {263739}004 {86446E}005 {D78E10}006 {4C75B7}007 {BDBEC6}008 {5E7072}009\n",
	"{46597A}010 {656A79}011 {5D7E8D}012 {58595A}013 {D6DAD6}014 {9CA1A3}015 {335F3F}016 {730E1A}017 {7B0A2A}018 {9F9D94}019\n",
	"{3B4E78}020 {732E3E}021 {691E3B}022 {96918C}023 {515459}024 {3F3E45}025 {A5A9A7}026 {635C5A}027 {3D4A68}028 {979592}029\n",
	"{421F21}030 {5F272B}031 {8494AB}032 {767B7C}033 {646464}034 {5A5752}035 {252527}036 {2D3A35}037 {93A396}038 {6D7A88}039\n",
	"{221918}040 {6F675F}041 {7C1C2A}042 {5F0A15}043 {193826}044 {5D1B20}045 {9D9872}046 {7A7560}047 {989586}048 {ADB0B0}049\n",
	"{848988}050 {304F45}051 {4D6268}052 {162248}053 {272F4B}054 {7D6256}055 {9EA4AB}056 {9C8D71}057 {6D1822}058 {4E6881}059\n",
	"{9C9C98}060 {917347}061 {661C26}062 {949D9F}063 {A4A7A5}064 {8E8C46}065 {341A1E}066 {6A7A8C}067 {AAAD8E}068 {AB988F}069\n",
	"{851F2E}070 {6F8297}071 {585853}072 {9AA790}073 {601A23}074 {20202C}075 {A4A096}076 {AA9D84}077 {78222B}078 {0E316D}079\n",
	"{722A3F}080 {7B715E}081 {741D28}082 {1E2E32}083 {4D322F}084 {7C1B44}085 {2E5B20}086 {395A83}087 {6D2837}088 {A7A28F}089\n",
	"{AFB1B1}090 {364155}091 {6D6C6E}092 {0F6A89}093 {204B6B}094 {2B3E57}095 {9B9F9D}096 {6C8495}097 {4D8495}098 {AE9B7F}099\n",
	"{406C8F}100 {1F253B}101 {AB9276}102 {134573}103 {96816C}104 {64686A}105 {105082}106 {A19983}107 {385694}108 {525661}109\n",
	"{7F6956}110 {8C929A}111 {596E87}112 {473532}113 {44624F}114 {730A27}115 {223457}116 {640D1B}117 {A3ADC6}118 {695853}119\n",
	"{9B8B80}120 {620B1C}121 {5B5D5E}122 {624428}123 {731827}124 {1B376D}125 {EC6AAE}126 {000000}127 {177517}128 {210606}129\n",
	"{125478}130 {452A0D}131 {571E1E}132 {010701}133 {25225A}134 {2C89AA}135 {8A4DBD}136 {35963A}137 {B7B7B7}138 {464C8D}139\n",
	"{84888C}140 {817867}141 {817A26}142 {6A506F}143 {583E6F}144 {8CB972}145 {824F78}146 {6D276A}147 {1E1D13}148 {1E1306}149\n",
	"{1F2518}150 {2C4531}151 {1E4C99}152 {2E5F43}153 {1E9948}154 {1E9999}155 {999976}156 {7C8499}157 {992E1E}158 {2C1E08}159\n",
	"{142407}160 {993E4D}161 {1E4C99}162 {198181}163 {1A292A}164 {16616F}165 {1B6687}166 {6C3F99}167 {481A0E}168 {7A7399}169\n",
	"{746D99}170 {53387E}171 {222407}172 {3E190C}173 {46210E}174 {991E1E}175 {8D4C8D}176 {805B80}177 {7B3E7E}178 {3C1737}179\n",
	"{733517}180 {781818}181 {83341A}182 {8E2F1C}183 {7E3E53}184 {7C6D7C}185 {020C02}186 {072407}187 {163012}188 {16301B}189\n",
	"{642B4F}190 {368452}191 {999590}192 {818D96}193 {99991E}194 {7F994C}195 {839292}196 {788222}197 {2B3C99}198 {3A3A0B}199\n",
	"{8A794E}200 {0E1F49}201 {15371C}202 {15273A}203 {375775}204 {060820}205 {071326}206 {20394B}207 {2C5089}208 {15426C}209\n",
	"{103250}210 {241663}211 {692015}212 {8C8D94}213 {516013}214 {090F02}215 {8C573A}216 {52888E}217 {995C52}218 {99581E}219\n",
	"{993A63}220 {998F4E}221 {99311E}222 {0D1842}223 {521E1E}224 {42420D}225 {4C991E}226 {082A1D}227 {96821D}228 {197F19}229\n",
	"{3B141F}230 {745217}231 {893F8D}232 {7E1A6C}233 {0B370B}234 {27450D}235 {071F24}236 {784573}237 {8A653A}238 {732617}239\n",
	"{319490}240 {56941D}241 {59163D}242 {1B8A2F}243 {38160B}244 {041804}245 {355D8E}246 {2E3F5B}247 {561A28}248 {4E0E27}249\n",
	"{706C67}250 {3B3E42}251 {2E2D33}252 {7B7E7D}253 {4A4442}254 {28344E}255\n"
};

enum RgbRenk
{
	rgbColored[7]
};

new Renkler[313][RgbRenk] =
{
	{"FF0000"},	{"FF0500"},	{"FF0A00"},	{"FF0F00"},	{"FF1400"},
	{"FF1900"},	{"FF1E00"},	{"FF2300"},	{"FF2800"},	{"FF2D00"},
	{"FF2D00"},	{"FF3200"},	{"FF3700"},	{"FF3700"},	{"FF3C00"},
	{"FF4100"},	{"FF4600"},	{"FF4B00"},	{"FF5000"},	{"FF5500"},
	{"FF5A00"},	{"FF5F00"},	{"FF6400"},	{"FF6900"},	{"FF6E00"},
	{"FF7300"},	{"FF7800"},	{"FF7D00"},	{"FF8200"},	{"FF8700"},
	{"FF8C00"},	{"FF9100"},	{"FF9600"},	{"FF9B00"},	{"FFA000"},
	{"FFA500"},	{"FFAA00"},	{"FFAF00"},	{"FFB400"},	{"FFB900"},
	{"FFBE00"},	{"FFC300"},	{"FFC800"},	{"FFCD00"},	{"FFD200"},
	{"FFD700"},	{"FFDC00"},	{"FFE100"},	{"FFE600"},	{"FFEB00"},
	{"FFF000"},	{"FFF500"},	{"FFF500"},	{"FFFA00"},	{"FFFF00"},
	{"FFFF00"},	{"FAFF00"},	{"F5FF00"},	{"F0FF00"},	{"E1FF00"},
	{"EBFF00"},	{"D7FF00"},	{"DCFF00"},	{"D7FF00"},	{"D2FF00"},
	{"CDFF00"},	{"C8FF00"},	{"C3FF00"},	{"BEFF00"},	{"B9FF00"},
	{"B4FF00"},	{"AFFF00"},	{"AAFF00"},	{"A5FF00"},	{"A0FF00"},
	{"9BFF00"},	{"96FF00"},	{"91FF00"},	{"8CFF00"},	{"87FF00"},
	{"82FF00"},	{"7DFF00"},	{"78FF00"},	{"73FF00"},	{"6EFF00"},
	{"69FF00"},	{"64FF00"},	{"5FFF00"},	{"5AFF00"},	{"55FF00"},
	{"50FF00"},	{"4BFF00"},	{"46FF00"},	{"41FF00"},	{"3CFF00"},
	{"37FF00"},	{"32FF00"},	{"2DFF00"},	{"28FF00"},	{"23FF00"},
	{"1EFF00"},	{"19FF00"},	{"14FF00"},	{"0FFF00"},	{"0AFF00"},
	{"05FF00"},	{"00FF00"},	{"00FF00"},	{"00FF05"},	{"00FF0A"},
	{"00FF0F"},	{"00FF14"},	{"00FF19"},	{"00FF1E"},	{"00FF23"},
	{"00FF28"},	{"00FF2D"},	{"00FF32"},	{"00FF37"},	{"00FF3C"},
	{"00FF41"},	{"00FF46"},	{"00FF4B"},	{"00FF50"},	{"00FF55"},
	{"00FF5A"},	{"00FF64"},	{"00FF69"},	{"00FF6E"},	{"00FF73"},
	{"00FF78"},	{"00FF7D"},	{"00FF82"},	{"00FF87"},	{"00FF8C"},
	{"00FF91"},	{"00FF96"},	{"00FF9B"},	{"00FFA0"},	{"00FFA5"},
	{"00FFAA"},	{"00FFAF"},	{"00FFB4"},	{"00FFB9"},	{"00FFBE"},
	{"00FFC3"},	{"00FFC8"},	{"00FFCD"},	{"00FFD2"},	{"00FFD7"},
	{"00FFDC"},	{"00FFE1"},	{"00FFE6"},	{"00FFEB"},	{"00FFF0"},
	{"00FFF5"},	{"00FFFA"},	{"00FFFF"},	{"00FFFF"},	{"00FAFF"},
	{"00F5FF"},	{"00F0FF"},	{"00EBFF"},	{"00E6FF"},	{"00E1FF"},
	{"00DCFF"},	{"00D7FF"},	{"00D2FF"},	{"00CDFF"},	{"00C8FF"},
	{"00C3FF"},	{"00BEFF"},	{"00B9FF"},	{"00B4FF"},	{"00AFFF"},
	{"00AAFF"},	{"00A5FF"},	{"00A0FF"},	{"009BFF"},	{"0096FF"},
	{"0091FF"},	{"008CFF"},	{"0087FF"},	{"0082FF"},	{"007DFF"},
	{"0078FF"},	{"0073FF"},	{"006EFF"},	{"0069FF"},	{"0064FF"},
	{"0064FF"},	{"005FFF"},	{"005AFF"},	{"0055FF"},	{"0050FF"},
	{"004BFF"},	{"0046FF"},	{"0041FF"},	{"003CFF"},	{"0037FF"},
	{"0032FF"},	{"002DFF"},	{"0028FF"},	{"0023FF"},	{"001EFF"},
	{"0019FF"},	{"0014FF"},	{"000FFF"},	{"000AFF"},	{"0005FF"},
	{"0000FF"},	{"0000FF"},	{"0500FF"},	{"0A00FF"},	{"0F00FF"},
	{"1400FF"},	{"1900FF"},	{"1E00FF"},	{"2300FF"},	{"2800FF"},
	{"2D00FF"},	{"3200FF"},	{"3700FF"},	{"3C00FF"},	{"4100FF"},
	{"4600FF"},	{"4B00FF"},	{"5000FF"},	{"5500FF"},	{"5A00FF"},
	{"5F00FF"},	{"6400FF"},	{"6E00FF"},	{"7300FF"},	{"7D00FF"},
	{"8200FF"},	{"8700FF"},	{"8C00FF"},	{"9100FF"},	{"9600FF"},
	{"9B00FF"},	{"A000FF"},	{"A500FF"},	{"AA00FF"},	{"AF00FF"},
	{"B400FF"},	{"B900FF"},	{"BE00FF"},	{"C300FF"},	{"C800FF"},
	{"CD00FF"},	{"D200FF"},	{"D700FF"},	{"DC00FF"},	{"E100FF"},
	{"E600FF"},	{"EB00FF"},	{"F000FF"},	{"F500FF"},	{"F000FF"},
	{"FA00FF"},	{"FF00FF"},	{"FF00FA"},	{"FF00F5"},	{"FF00F0"},
	{"FF00EB"},	{"FF00E6"},	{"FF00E1"},	{"FF00DC"},	{"FF00D7"},
	{"FF00D2"},	{"FF00CD"},	{"FF00C8"},	{"FF00C3"},	{"FF00BE"},
	{"FF00B9"},	{"FF00B4"},	{"FF00AF"},	{"FF00AA"},	{"FF00A5"},
	{"FF00A0"},	{"FF009B"},	{"FF0096"},	{"FF0091"},	{"FF008C"},
	{"FF0087"},	{"FF0082"},	{"FF007D"},	{"FF0078"},	{"FF0073"},
	{"FF006E"},	{"FF0069"},	{"FF0064"},	{"FF005F"},	{"FF005A"},
	{"FF0055"},	{"FF0050"},	{"FF004B"},	{"FF0046"},	{"FF0041"},
	{"FF003C"},	{"FF0037"},	{"FF0032"},	{"FF002D"},	{"FF0028"},
	{"FF0023"},	{"FF001E"},	{"FF0019"},	{"FF0014"},	{"FF000F"},
	{"FF000A"},	{"FF0005"},	{"FF0000"}
};

new gTeam[MAX_PLAYERS];
new pDrunkLevelLast[MAX_PLAYERS];
new pFPS[MAX_PLAYERS];

#define     MAX_GSifre  (7) // her zaman +1 ekleyin

enum E_PLAYERS
{
	xID,
	Sifre[65],
	SaltSifre[17],
	Oldurme,
	Olum,
	pPara,
	pSkor,
	bool: GirisKontrol,
	GirisDenemesi,
	pAdmin,
	pAdminSure,
	pRehber,
	pDj,
	pBan,
	pAranma,
	pVip,
	pVipSure,
	pBankaPara,
	hapisSure,
	hSureKayit,
	kayitT,
	soygunS,
	onlineSure,
	_LevelCount,
	ExpPuan,
	YetenekPuan,
	YetenekCan,
	YetenekZirh,
	YetenekSoygun,
	kiyafetDurum,
	pmGorme,
	LocalGorme,
	ArGorme,
	GrupGorme,
	EkipGorme,
	ceteGorme,
	realSaat,
	duzenliOyuncu,
	kral_TAG,
	sureKayit,
	textAyar,
	_bonzai,
	_eroin,
	_ot,
	_bomba,
	_yakalama,
	_yakalanma,
	_kelepceleme,
	_kelepcelenme,
	_Bakiye,
	_bsure[5],
	
	gunlukonline,
	gunlukonlineafk,
	adminkomuts,
	yanits,
	dsarki,
	dmkapat,
	
	etkyetki,
	skinmode,
	kefaletmod
};
new oyuncuData[MAX_PLAYERS][E_PLAYERS];
new g_MysqlRaceCheck[MAX_PLAYERS];

new OnlineExp[MAX_PLAYERS];

enum basaridata
{
	basariSQL,
	BasariSayisi,
	ilkGiris,
	ilkMesaj,
	ilkOldurme,
	ilkSoygun,
	ilkPolis,
	ilkCevikKuvvet,
	ilkOzelHarekat,
	ilksPolis,
	ilkozelK,
	ilkHavaKuvvet,
	ilkSucluYa,
	ilkEv,
	ilkSafir,
	ilkYakut,
	ilkZumrut,
	ilkElmas,
	ilkoYuz,
	ilkoBesyuz,
	ilkoBin,
	ilkoBesBin,
	ilkoOnBin,
	ilkYuzSoygun,
	ilkikiyuzElli,
	ilksBesyuz,
	ilksBesbin,
	ilksOnBin,
	ilkYirmiBinSkor,
	ilkOtuzBinSkor,
	ilkDortBinSkor,
	ilkElliBinSkor
};
new BasariIslem[MAX_PLAYERS][basaridata];

enum izlemeData
{
	bool: izlemeModu,
	izledigimID,
	Float: e_Pos[4],
	e_Interior,
	e_Vir,
	e_vID
};
new IzlemeModu[MAX_PLAYERS][izlemeData];
new Izleniyorum[MAX_PLAYERS];

enum voteData
{
	bool:voteAktiflik,
	oyArti,
	oyEksi
};
new VoteIslem[voteData];

enum aracListed
{
	arac_m,
	arac_f
};
new AracListesi[][aracListed] =
{
	{400, 1000000},
	{401, 1000000},
	{402, 3000000},
	{405, 1250000},
	{409, 3500000},
	{410, 1000000},
	{411, 10000000},
	{412, 2000000},
	{415, 4500000},
	{419, 1000000},
	{421, 1000000},
	{424, 2500000},
	{429, 4500000},
	{434, 3000000},
	{451, 9000000},
	{461, 2500000},
	{462, 1250000},
	{463, 2000000},
	{468, 2500000},
	{471, 2500000},
	{475, 1500000},
	{477, 2250000},
	{480, 2000000},
	{481, 1000000},
	{487, 20000000},
	{489, 2500000},
	{494, 4500000},
	{495, 4500000},
	{500, 2500000},
	{502, 4500000},
	{503, 4500000},
	{506, 4500000},
	{509, 1000000},
	{510, 1000000},
	{517, 1250000},
	{521, 2750000},
	{522, 10000000},
	{526, 1000000},
	{527, 1000000},
	{529, 1000000},
	{533, 1750000},
	{534, 3500000},
	{535, 3500000},
	{536, 3500000},
	{541, 9000000},
	{545, 3000000},
	{546, 1000000},
	{547, 1000000},
	{549, 2000000},
	{550, 1000000},
	{551, 1000000},
	{555, 1500000},
	{556, 4000000},
	{557, 4000000},
	{558, 3500000},
	{559, 3500000},
	{560, 10000000},
	{561, 3500000},
	{562, 6000000},
	{565, 3500000},
	{566, 1250000},
	{567, 3500000},
	{579, 4500000},
	{580, 2500000},
	{581, 2500000},
	{585, 1250000},
	{586, 2750000},
	{587, 2250000},
	{589, 2000000},
	{602, 2500000},
	{603, 4000000}
};

main()
{
	new a[][15] =
	{ "?","?" };
	#pragma unused a
	//  » Battlefield I ™ - World War (0.3.7 - TR/EN) «
	
	printf("");
    print("     <o_o>=============================================<o_o>");
	print("     <o_o>                                             <o_o>");
	print("     <o_o>    San Fierro Hýrsýz Polis (0.3.7 - TR)     <o_o>");
	print("     <o_o>                                             <o_o>");
	print("     <o_o>=============================================<o_o>\n\n");

	//new miktar = 5000000;
	//new Float: faiz = 1.53215;
	//new sonuc = floatround(miktar * faiz);
	//printf("Aldýðý: %s - Faiz: %s", convertNumber(miktar), convertNumber(sonuc));
}

new aSifirlaLan;

public OnGameModeInit()
{
	new a[][15] =
	{ "?","0","?" };
	#pragma unused a
	AntiDeAMX();
	
	new MySQLOpt: option_id = mysql_init_options(), tmpobjid;
	mysql_set_option(option_id, AUTO_RECONNECT, true);
	#if Mod_Type == 1
		g_SQL = mysql_connect(MYSQL_HOST, MYSQL_KULLANICI, MYSQL_SIFRE, MYSQL_DATABASE, option_id);
	#elseif Mod_Type == 2
		g_SQL = mysql_connect(T_MYSQL_HOST, T_MYSQL_KULLANICI, T_MYSQL_SIFRE, T_MYSQL_DATABASE, option_id);
	#endif
	if (g_SQL == MYSQL_INVALID_HANDLE || mysql_errno(g_SQL) != 0)
	{
		print("=> Server: Veritaban baðlantýsý kurulamadý, sunucu kapatýlýyor...");
		SendRconCommand("exit");
		return 1;
	}
	print("=> Server: Veritaban baðlantýsý baþarýyla kuruldu.");
	
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    KeybindIslem[i][keybind_ID] = INVALID_PLAYER_ID;
		PMEngel{i} = Iterator_Olustur();
	}
	
	for(new i = 0; i < MAX_CETE; i++)
	{
	    CeteIslem[i][ceteDostTemp] = -1;
	    DostCete[i] = Iterator_Olustur();
	}
	
	// Tren
	AddStaticVehicleEx(537, -1942.9858, 165.1703, 27.0006, 356.8288, 1, 1, 99999);
	
	Yetkiler(1, "/Patlat\n");
	Yetkiler(1, "/Oldur\n");
	Yetkiler(1, "/Coz\n");
	Yetkiler(1, "/Hapis\n");
	Yetkiler(1, "/Dondur");
	Yetkiler(1, "/IzleOff");
	Yetkiler(1, "/Izle");
	Yetkiler(1, "/SusturAc");
	Yetkiler(1, "/Sustur");
	Yetkiler(1, "/oSustur");
	Yetkiler(1, "/oSusturAc");
	Yetkiler(1, "/Uyar");
	Yetkiler(1, "/Cc");
	Yetkiler(1, "/Kick");
	Yetkiler(1, "/AracRes");
	Yetkiler(1, "/Sarki");
	Yetkiler(1, "/mDurdur");
	Yetkiler(1, "/A");
	
	Yetkiler(2, "/BanListesi");
	Yetkiler(2, "/SureBan");
	Yetkiler(2, "/SureBanKaldir");
	Yetkiler(2, "/Git");
	
 	Yetkiler(3, "/Aka");
	Yetkiler(3, "/oSureBan");
	Yetkiler(3, "/Asay");
	Yetkiler(3, "/DoVer");
	
  	Yetkiler(4, "/BarikatTemizle");
	Yetkiler(4, "/ChatOff");
	Yetkiler(4, "/ChatOn");
	Yetkiler(4, "/DjSil");
	Yetkiler(4, "/RehberSil");
	Yetkiler(4, "/oBan");
	Yetkiler(4, "/Ban");
	Yetkiler(4, "/BanKaldir");
	
   	Yetkiler(5, "/RehberYap");
	Yetkiler(5, "/DjYap");
	Yetkiler(5, "/YetkiVer");
	Yetkiler(5, "/Cek");
	Yetkiler(5, "/Jetpack");
	Yetkiler(5, "/Duyuru");
	Yetkiler(5, "/Oyla");
	Yetkiler(5, "/oYetkiSil");
	Yetkiler(5, "/Takip");
    Yetkiler(5, "/Skin");
    Yetkiler(5, "/SpawnEt");
	
	Yetkiler(6, "/YetkiSil");
	Yetkiler(6, "/BakiyeYukle");
	Yetkiler(6, "/BakiyeSil");
	Yetkiler(6, "/BakiyeSifirla");
	Yetkiler(6, "/SifreGoster");
	Yetkiler(6, "/AtmEkle");
	Yetkiler(6, "/AtmSil");
	Yetkiler(6, "/CsbOlustur");
	Yetkiler(6, "/CsbSil");
	Yetkiler(6, "/CeteOlustur380102");
	Yetkiler(6, "/CeteSil");
	Yetkiler(6, "/EvOlustur");
	Yetkiler(6, "/EvSil");
	Yetkiler(6, "/EvFiyatGuncelle");
	Yetkiler(6, "/EvTemizle");
	Yetkiler(6, "/sInterior");
	Yetkiler(6, "/sMenu");
	Yetkiler(6, "/SoygunOlustur");
	Yetkiler(6, "/SoygunSil");
	Yetkiler(6, "/KralYap");
	Yetkiler(6, "/VipVer");
	Yetkiler(6, "/VipSil");
	Yetkiler(6, "/Siparis");
	Yetkiler(6, "/SiparisEkle");
	Yetkiler(6, "/NickDegistir");
	Yetkiler(6, "/Git5");
	Yetkiler(6, "/Git6");
	Yetkiler(6, "/eYetkiVer");
	Yetkiler(6, "/Adon");
	Yetkiler(6, "/SkorVer");
	Yetkiler(6, "/SkorDagit");
	Yetkiler(6, "/oParaVer");
	Yetkiler(6, "/ExpVer");
	Yetkiler(6, "/ExpDagit");
	Yetkiler(6, "/FullKick");
	Yetkiler(6, "/cPuan");
	
 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    Sorular[i][sonuclanmisMi] = 0;
	    Sorular[i][gonderen] = INVALID_PLAYER_ID;
	    format(Sorular[i][sorusu], 148, "");
	}
	
 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    Sarkilar[i][acildiMi] = 0;
	    Sarkilar[i][sGonderen] = INVALID_PLAYER_ID;
	    format(Sarkilar[i][_url], 148, "");
	}
	
	for(new i = 0; i < sizeof(ZoneYukle); i++)
	{
	    gz_Olustur[i] = GangZoneCreate(ZoneYukle[i][gz_Pos][0], ZoneYukle[i][gz_Pos][1], ZoneYukle[i][gz_Pos][2], ZoneYukle[i][gz_Pos][3]);
	}
	_duyuruDurum = 0;
	bankaParasi = random(5000000 - 1000000) + 1000000;
	
	for(new i = 0; i < MAX_BARIKAT; i++)
	{
	    BarikatIslem[i][barikatDurum] = 0;
	    BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
	}
	SetTimer("BarikatKontrol", 1000, true);

	for(new i = 0; i < sizeof(EvCikisPoz); i++)
	{
		EvCikisCP[i] = CreateDynamicCP(EvCikisPoz[i][ev_Pozisyonx][0], EvCikisPoz[i][ev_Pozisyonx][1], EvCikisPoz[i][ev_Pozisyonx][2], 1.0, -1, EvCikisPoz[i][evInteriorx], -1, 20.0);
	}

	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		AraclarIslem[i][aAktif] = false;
		CeteArac[i][ceteAracAktif] = false;
		
  	    oaIslem[i][oaCheck] = false;
	    oaIslem[i][sql_id] = 0;
	    format(oaIslem[i][oaSahip], MAX_PLAYER_NAME, "-");
	    oaIslem[i][oaPos][0] = 0.0;
		oaIslem[i][oaPos][1] = 0.0;
		oaIslem[i][oaPos][2] = 0.0;
		oaIslem[i][oaPos][3] = 0.0;
	}

 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		e_oIslem[i][e_Id] = -1;
		e_oIslem[i][e_Davet] = -1;
		e_oIslem[i][e_Katilim] = -1;

		g_oIslem[i][g_Id] = -1;
		g_oIslem[i][g_Davet] = -1;
		g_oIslem[i][g_Katilim] = -1;
	}
	
	OzelGaleriArac = CreateDynamicRectangle(-1968.877807, 280.950866, -1948.877807, 300.950866);

    girisCasino = CreateDynamicCP(-2176.6313, -97.5299, 35.3203, 1.5, -1, -1, -1, 20.0);
    cikisCasino = CreateDynamicCP(1133.1997, -15.2963, 1000.6797, 1.5, -1, -1, -1, 20.0);

	// Gateler
	gate_OzelHarekatGate = CreateDynamicObject(980, -2456.477294, -620.521057, 134.191253, 0.000000, 0.000000, -89.499916, 0, 0, -1, 300.000, 300.000);


	gate_Ordu[0] = CreateDynamicObject(980,-1602.207,432.908,8.551,0.000,0.000,44.900,-1,-1,-1,300.000,300.000);
	SetDynamicObjectMaterial(gate_Ordu[0], 0, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[0], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[0], 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[0], 3, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[0], 4, 4552, "ammu_lan2", "sl_lavicdtwall1", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[0], 5, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[0], 6, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);

	gate_Ordu[1] = CreateDynamicObject(980,-1517.797,471.730,8.851,0.000,0.000,89.900,-1,-1,-1,300.000,300.000);
	SetDynamicObjectMaterial(gate_Ordu[1], 0, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[1], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[1], 2, 18996, "mattextures", "sampblack", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[1], 3, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[1], 4, 18787, "matramps", "grating3", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[1], 5, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
	SetDynamicObjectMaterial(gate_Ordu[1], 6, 18996, "mattextures", "sampblack", 0x00000000);

 	gate_CevikKuvvet = CreateDynamicObject(18981, -1770.164428, 985.247863, 16.434858, 0.000, 0.000, 0.000, -1, -1, -1, 300.000, 300.000);
	SetDynamicObjectMaterial(gate_CevikKuvvet, 0, 19278, "skydiveplatforms", "metalpylonred", 0x00000000);

 	gate_Polis = CreateDynamicObject(18981, -1635.812866, 688.591430, 18.627367, 0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
	SetDynamicObjectMaterial(gate_Polis, 0, 4829, "airport_las", "fencekb_64h", 0x00000000);

	//spawnHack = CreateDynamicRectangle(-2372.810058,-1639.762939,-2269.282958,-1556.532836, -1, -1, -1);

	mitArea = CreateDynamicRectangle(-2601.693603, -726.704162, -2441.693603, -566.704162, -1, -1, -1);
    bankaOnu = CreateDynamicRectangle(-1424.844482, 838.202270, -1605.395263, 1002.082946, -1, -1, -1);

    CP_POLIS[0] = CreateDynamicCP(-1605.6643, 711.1837, 13.8672 - 1.0, 1.5, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{19B5FE}[Polis Karakolu]\n{FFFFFF}Burada hapise düþmüþ oyuncularý görebilir ve\nPolis mesleðine katýlabilirsiniz.", 0xFFFF00AA, -1605.6643, 711.1837, 13.8672, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
    CreateDynamicMapIcon(-1605.6643, 711.1837, 13.8672, 30, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);

	CP_POLIS[1] = CreateDynamicCP(246.3678, 108.2549, 1003.2188, 1.0, -1, -1, -1, 3.0);
	CP_POLIS[2] = CreateDynamicCP(244.420700, 118.355537, 1003.218750, 1.0, -1, -1, -1, 3.0);
    CreateDynamic3DTextLabel("{FFFFFF}[POLÝS Baþvurusu]", 0xFFFF00AA, 244.420700, 118.355537, 1003.218750, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1);
	CP_POLIS[3] = CreateDynamicCP(248.502655, 118.271141, 1003.218750, 1.0, .worldid = -1, .interiorid = -1, .streamdistance = 3.0);
	CreateDynamic3DTextLabel("{FFFFFF}[ SÝVÝL POLÝS\n  Baþvurusu]", 0xFFFF00AA, 248.502655, 118.271141, 1003.218750, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1);

	CreateDynamicMapIcon(-1922.189453, 303.164367, 41.046249, 8, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
	CP_BOMBACI = CreateDynamicCP(-1922.189453, 303.164367, 41.046249 - 1.0, 1.5, -1, -1, -1, 20.0);

    CreateDynamicMapIcon(-1545.421142, 127.494125, 3.554687, 9, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CP_AHIRSIZ = CreateDynamicCP(-1545.421142, 127.494125, 3.554687, 3.0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}Araçlarý burada {27AE60}/aracSat {FFFFFF}komutuyla satabilirsin.", 0xFFFF00AA, -1545.421142, 127.494125, 3.554687, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1);

	CreateDynamicMapIcon(-1493.903686, 920.063720, 7.187500, 52, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamic3DTextLabel("{E9D460}[ Banka ]\n", 0xFFFF00AA, -1487.280273, 919.803283, 12.535936, 20.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1);

    CP_HavaUssu = CreateDynamicCP(-1486.433837, 1019.155639, 6.992187, 1.0, -1, -1, -1, 20.0);
    Pickup_HavaUssu = CreateDynamicPickup(1239, 1, -1919.0720, 1747.3521, 17.8161, 0, 0);
    CreateDynamic3DTextLabel("{3498DB}[ Hava Üssü ]\n{FFFFFF}Tekrar þehire dönmek burayý kullanýn", 0xFFFFFFFF, -1919.0720, 1747.3521, 17.8161 + 0.7, 60.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1);

    Pickup_BankaG = CreateDynamicPickup(1274, 1, -1487.280273, 919.803283, 12.535936, 0, 0);
    
    Pickup_BankaIS[0] = CreateDynamicPickup(1274, 1, -2775.6433, 391.6676, 6.3164, 0, 0);
    Pickup_BankaIS[1] = CreateDynamicPickup(1274, 1, -2775.4973, 395.5462, 6.3164, 0, 0);

    Pickup_Zirh = CreateDynamicPickup(1242, 2, -1598.7874, 730.4645, -4.9063, 0, 0);

	/*___________________________________________________________________________________________________________*/

	Oto_Galeri = CreateDynamicPickup(1239, 1, -1663.6189, 1208.0457, 7.2541, 0, 0);
	CreateDynamic3DTextLabel("{3498DB}[ OTO GALERÝ ]\n{FFFFFF}Eðer evin varsa buradan normal araçlar alabilirsin.", 0xFFFFFFFF, -1663.6189, 1208.0457, 7.2541 + 1.0, 30.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1);
	//

	/*___________________________________________________________________________________________________________*/

	SehirActorler[0] = CreateActor(28, -1929.786376, 872.388183, 35.414062 + 1.5, 324.090637); // uyuþturucu satýcýsý
	SehirActorler[1] = CreateActor(29, -2213.677734, 580.504760, 35.164062 + 1.5, 271.725372); // uyuþturucu satýcýsý
	SehirActorler[2] = CreateActor(254, -2202.507080, 116.936042, 35.447158 + 1.5, 74.950149); // uyuþturucu satýcýsý
	SehirActorler[3] = CreateActor(293, -2577.488037, 122.479766, 4.335937 + 1.5, 264.269744); // uyuþturucu satýcýsý
	SehirActorler[4] = CreateActor(242, -2133.768554, 264.327239, 35.621990 + 1.5, 242.579681); // uyuþturucu satýcýsý
	SehirActorler[5] = CreateActor(30, -1978.972900, 433.164154, 25.686964 + 1.5, 359.767608); // uyuþturucu satýcýsý
	SehirActorler[6] = CreateActor(181, -2780.308837, -56.688892, 10.062500 + 1.5, 268.040802); // uyuþturucu satýcýsý
	SehirActorler[7] = CreateActor(241, -2182.300781, -117.330345, 35.320312 + 1.5, 354.932342); // uyuþturucu satýcýsý

    CreateDynamicMapIcon(-1929.786376, 872.388183, 35.414062, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-2213.677734, 580.504760, 35.164062, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-2202.507080, 116.936042, 35.447158, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-2577.488037, 122.479766, 4.335937, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-2133.768554, 264.327239, 35.621990, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-1978.972900, 433.164154, 25.686964, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-2780.308837, -56.688892, 10.062500, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CreateDynamicMapIcon(-2182.300781, -117.330345, 35.320312, 61, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);

    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -1929.786376, 872.388183, 35.414062 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -2213.677734, 580.504760, 35.164062 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -2202.507080, 116.936042, 35.447158 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -2577.488037, 122.479766, 4.335937 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -2133.768554, 264.327239, 35.621990 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -1978.972900, 433.164154, 25.686964 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -2780.308837, -56.688892, 10.062500 + 1.4, 5.0);
    CreateDynamic3DTextLabel("{D33257}[Uyuþturucu Satýcýsý]\n{71BA51}Kafa bulmak istiyorsan doðru yere geldin\n{FEC606}Y tuþu ile anlaþabiliriz", 0xFFFF00AA, -2182.300781, -117.330345, 35.320312 + 1.4, 5.0);

	// Hastane
	CreateDynamicMapIcon(-2647.7659, 605.8870, 14.4531, 22, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
    CP_HASTANE = CreateDynamicCP(-2651.4099, 638.5436, 14.4531, 1.5, -1, -1, -1, 20.0);
	//

    // Polis yerinde ki bayanlar
    CreateDynamicActor(306, 244.391342, 121.018943, 1003.281921 + 1.5, 179.435577, 10);
    CreateDynamicActor(308, 248.495971, 120.689933, 1003.218750 + 1.5, 181.726699, 10);

	// Çevik Kuvvet
	CreateDynamicMapIcon(-1754.158935, 962.623779, 24.882499, 30, -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
	SehirActorler[9] = CreateActor(286, -1748.791992, 962.630432, 24.882499 + 1.5, 176.432052);
    CreateDynamic3DTextLabel("{FF9900}[ Çevik Kuvvet ]\n{FFFFFF}Bu göreve baþlamak istiyorsan {99FF00}Y {FFFFFF}tuþuna bas", 0xFFFF00AA, -1748.791992, 962.630432, 24.882499 + 1.4, 15.0);

    // Özel Kuvvet Birliði
    SehirActorler[10] = CreateActor(287, -1597.3688, 439.1314, 7.1797 + 1.5, 45.0613);
    CreateDynamic3DTextLabel("{FF9900}[ Özel Kuvvet Birliði ]\n{FFFFFF}Bu göreve baþlamak istiyorsan {99FF00}Y {FFFFFF}tuþuna bas", 0xFFFF00AA, -1597.3688, 439.1314, 7.1797 + 1.4, 15.0);
	//

	// Özel Harekat
    SehirActorler[11] = CreateActor(285, -2454.4304, -628.5150, 132.7248 + 1.5, 308.4893);
    CreateDynamic3DTextLabel("{FF9900}[ Özel Harekat Timi ]\n{FFFFFF}Bu göreve baþlamak istiyorsan {99FF00}Y {FFFFFF}tuþuna bas", 0xFFFF00AA, -2454.4304, -628.5150, 132.7248 + 1.4, 15.0);
	//

	/*___________________________________________________________________________________________________________*/

	polisAraclar[0] = AddStaticVehicleEx(497, -1679.994384, 706.049316, 30.771177, 271.059295, 0, 255, 999999);
	polisAraclar[1] = AddStaticVehicleEx(601, -1610.647949, 651.105224, 6.946145, 359.771850, 0, 0, 999999);
	polisAraclar[2] = AddStaticVehicleEx(601, -1622.769409, 650.891479, 6.946141, 0.816852, 0, 0, 999999);
	polisAraclar[3] = AddStaticVehicleEx(597, -1582.293334, 673.892639, 6.924921, 180.070281, -1, -1, 999999);
	polisAraclar[4] = AddStaticVehicleEx(597, -1594.142211, 673.496520, 6.956332, 179.174789, -1, -1, 999999);
	polisAraclar[5] = AddStaticVehicleEx(601, -1634.837036, 650.856750, 6.946094, 0.196831, 1, 1, 999999);
	polisAraclar[6] = AddStaticVehicleEx(597, -1605.885253, 673.987548, 6.955380, 179.698669, -1, -1, 999999);
	polisAraclar[7] = AddStaticVehicleEx(427, -1639.184082, 661.869628, -5.148339, 268.838775, -1, -1, 999999);
	polisAraclar[8] = AddStaticVehicleEx(427, -1639.588867, 653.796203, -5.100850, 269.966278, -1, -1, 999999);
	polisAraclar[9] = AddStaticVehicleEx(427, -1639.223144, 669.927368, -5.110366, 271.531097, -1, -1, 999999);
	polisAraclar[10] = AddStaticVehicleEx(523, -1599.379394, 650.508728, 6.758728, 359.807159, 0, 0, 999999);
	polisAraclar[11] = AddStaticVehicleEx(523, -1593.599853, 650.247863, 6.757696, 0.808238, 0, 0, 999999);
	polisAraclar[12] = AddStaticVehicleEx(523, -1587.671386, 650.251464, 6.757714, 0.808215, 0, 0, 999999);
	polisAraclar[13] = AddStaticVehicleEx(523, -1581.356933, 650.508239, 6.758474, 3.377632, 0, 0, 999999);
	polisAraclar[14] = AddStaticVehicleEx(528, -1574.528198, 742.580444, -5.199388, 89.542098, 0, 0, 999999);
	polisAraclar[15] = AddStaticVehicleEx(528, -1574.176757, 706.069946, -5.200296, 89.260574, 0, 0, 999999);
	polisAraclar[16] = AddStaticVehicleEx(599, -1588.207031, 749.368957, -5.054115, 178.567977, 255, 1, 999999);
	polisAraclar[17] = AddStaticVehicleEx(599, -1596.380371, 749.500671, -5.072915, 179.343109, 255, 1, 999999);
	polisAraclar[18] = AddStaticVehicleEx(599, -1604.514648, 749.151977, -5.052095, 180.798309, 255, 1, 999999);
	polisAraclar[19] = AddStaticVehicleEx(599, -1612.810302, 750.272949, -4.992187, 180.859130, 255, 1, 999999);
	polisAraclar[20] = AddStaticVehicleEx(523, -1616.710205, 732.407836, -5.670284, 358.212036, 11, 1, 999999);
	polisAraclar[21] = AddStaticVehicleEx(523, -1612.344970, 732.511535, -5.671844, 0.954595, 11, 1, 999999);
	polisAraclar[22] = AddStaticVehicleEx(597, -1573.827514, 718.253417, -5.473589, 89.151245, 255, 1, 999999);
	polisAraclar[23] = AddStaticVehicleEx(597, -1573.602539, 722.382812, -5.473615, 88.777221, 255, 1, 999999);
	polisAraclar[24] = AddStaticVehicleEx(597, -1573.688842, 726.626892, -5.472955, 91.887786, 255, 1, 999999);
	polisAraclar[25] = AddStaticVehicleEx(597, -1573.296264, 730.799804, -5.473221, 90.178329, 0, 0, 999999);
	polisAraclar[26] = AddStaticVehicleEx(597, -1573.194946, 734.685913, -5.474369, 88.830703, 0, 0, 999999);
	polisAraclar[27] = AddStaticVehicleEx(597, -1573.139038, 738.835937, -5.473226, 89.784934, 0, 0, 999999);
	polisAraclar[28] = AddStaticVehicleEx(601, -1639.816162, 678.048950, -5.483378, 270.126037, 11, 1, 999999);
	polisAraclar[29] = AddStaticVehicleEx(601, -1640.554443, 686.429077, -5.408978, 271.441955, 11, 1, 999999);
	polisAraclar[30] = AddStaticVehicleEx(523, -1600.205322, 693.101013, -5.667667, 181.401672, 1, 1, 999999);
	polisAraclar[31] = AddStaticVehicleEx(523, -1604.443725, 693.273620, -5.670676, 177.829833, 1, 1, 999999);
	polisAraclar[32] = AddStaticVehicleEx(523, -1633.164550, 693.158508, -5.666963, 182.216110, 1, 1, 999999);
	polisAraclar[33] = AddStaticVehicleEx(523, -1628.824340, 693.099060, -5.767460, 181.589233, 1, 1, 999999);
	polisAraclar[34] = AddStaticVehicleEx(597, -1612.420898, 693.080810, -5.472402, 179.918426, 0, 1, 999999);
	polisAraclar[35] = AddStaticVehicleEx(597, -1616.817504, 693.299926, -5.472821, 179.785552, 0, 1, 999999);
	polisAraclar[36] = AddStaticVehicleEx(599, -1598.164916, 677.737060, -5.049008, 0.616138, 0, 0, 999999);
	polisAraclar[37] = AddStaticVehicleEx(523, -1608.287475, 693.229797, -5.760118, 181.102844, 0, 0, 999999);
	polisAraclar[38] = AddStaticVehicleEx(597, -1631.874389, 738.744995, 14.326264, 89.398658, 0, 0, 999999);
    /*************************************************************************************************************/
	polisAraclar[39] = CreateVehicle(411, -1616.8466, 673.8996, 6.9553, 181.5599, 1, 1, 999999);

	AddVehicleComponent(polisAraclar[39], 1010);
    AddVehicleComponent(polisAraclar[39], 1078);
    AddVehicleComponent(polisAraclar[39], 1087);

    tmpobjid = CreateDynamicObject(1023,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -16777063);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.000, -2.449, 0.290, 0.000, 0.000, 0.000);

    tmpobjid = CreateDynamicObject(1170,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -16777063);
    SetDynamicObjectMaterial(tmpobjid, 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 1.071, 1.990, -0.129, 0.000, 0.000, 0.000);

    tmpobjid = CreateDynamicObject(19834,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", -16776961);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], -1.070, 0.149, -0.459, 0.000, 0.000, 90.000);

    tmpobjid = CreateDynamicObject(19834,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", -16776961);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], -1.070, -0.149, -0.469, 0.000, 0.000, 90.000);

    tmpobjid = CreateDynamicObject(19834,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", -16776961);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 1.070, -0.149, -0.469, 0.000, 0.000, -90.000);

    tmpobjid = CreateDynamicObject(19834,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", -16776961);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 1.070, 0.149, -0.459, 0.000, 0.000, -90.000);

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "POLÝS", 130, "Calibri", 55, 0, -16776961, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.000, 1.826, 0.174, 0.000, -77.299, 90.000);

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 75, 0, -16776961, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.000, 2.361, 0.054, 0.000, -77.500, 90.000);

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "I", 140, "Ariel", 100, 0, -16776961, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], -0.771, -2.589, -0.269, 90.000, -4.000, 270.000);

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "I", 140, "Ariel", 100, 0, -16776961, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.771, -2.589, -0.269, 90.000, 4.000, -270.000);

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "I", 140, "Ariel", 100, 0, -16776961, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], -0.269, -2.605, -0.269, 90.000, -0.100, 270.000);

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "I", 140, "Ariel", 100, 0, -16776961, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.269, -2.605, -0.269, 90.000, 0.100, -270.000);

    tmpobjid = CreateDynamicObject(19620,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.000, 0.000, 0.709, 0.000, 0.000, 0.000);

    tmpobjid = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, polisAraclar[39], 0.000, 2.750, -0.469, 0.000, 0.000, 180.000);
	/*************************************************************************************************************/

	cevikkuvvetArac[0] = AddStaticVehicleEx(415, -1704.936767, 1059.462524, 17.357465, 178.541000, 0, 0, 999999);
	cevikkuvvetArac[1] = AddStaticVehicleEx(411, -1699.426635, 1059.704223, 17.312580, 180.617401, 0, 0, 999999);
	cevikkuvvetArac[2] = AddStaticVehicleEx(402, -1694.014648, 1059.462646, 17.417263, 179.718475, 0, 0, 999999);
	cevikkuvvetArac[3] = AddStaticVehicleEx(560, -1736.493164, 1020.333190, 17.290248, 269.986572, 0, 0, 999999);
	cevikkuvvetArac[4] = AddStaticVehicleEx(560, -1736.344238, 1016.094726, 17.290239, 270.288482, 0, 0, 999999);
	cevikkuvvetArac[5] = AddStaticVehicleEx(405, -1720.189941, 1012.208068, 17.462982, 91.184791, 0, 0, 999999);
	cevikkuvvetArac[6] = AddStaticVehicleEx(405, -1720.462402, 1024.309082, 17.447233, 92.475234, 0, 0, 999999);
	cevikkuvvetArac[7] = AddStaticVehicleEx(428, -1703.249877, 1011.691345, 17.711503, 268.695709, 0, 0, 999999);
	cevikkuvvetArac[8] = AddStaticVehicleEx(428, -1703.834594, 1024.174316, 17.707071, 269.892883, 0, 0, 999999);
	cevikkuvvetArac[9] = AddStaticVehicleEx(427, -1687.939086, 1020.286621, 17.717193, 89.094627, 0, 0, 999999);
	cevikkuvvetArac[10] = AddStaticVehicleEx(427, -1688.050048, 1016.299560, 17.717199, 89.510002, 0, 0, 999999);
	cevikkuvvetArac[11] = AddStaticVehicleEx(445, -1720.072998, 999.737915, 17.460493, 91.137405, 0, 0, 999999);
	cevikkuvvetArac[12] = AddStaticVehicleEx(445, -1720.302978, 1036.736938, 17.473976, 90.630485, 0, 0, 999999);
	cevikkuvvetArac[13] = AddStaticVehicleEx(461, -1720.640625, 1028.327270, 17.188068, 90.229324, 0, 0, 999999);
	cevikkuvvetArac[14] = AddStaticVehicleEx(461, -1720.633544, 1007.996826, 17.187496, 89.728004, 0, 0, 999999);
	cevikkuvvetArac[15] = AddStaticVehicleEx(490, -1735.872436, 1012.145812, 17.713233, 269.122467, 0, 0, 999999);
	cevikkuvvetArac[16] = AddStaticVehicleEx(490, -1736.152832, 1024.197631, 17.713939, 271.189147, 0, 0, 999999);
	cevikkuvvetArac[17] = AddStaticVehicleEx(490, -1736.499267, 1057.416992, 17.835500, 269.933837, 0, 0, 999999);
	cevikkuvvetArac[18] = AddStaticVehicleEx(490, -1736.243774, 1048.816040, 17.835500, 271.500549, 0, 0, 999999);
	cevikkuvvetArac[19] = AddStaticVehicleEx(490, -1736.454833, 1040.908447, 17.712902, 269.801635, 0, 0, 999999);
	cevikkuvvetArac[20] = AddStaticVehicleEx(506, -1735.942871, 1032.708007, 17.289857, 271.795166, 0, 0, 999999);
	cevikkuvvetArac[21] = AddStaticVehicleEx(541, -1711.538208, 1059.318725, 17.211034, 176.856948, 0, 0, 999999);

	ozelharekatArac[0] = AddStaticVehicleEx(417, -2500.411865, -703.611206, 139.546615, 1.274937, 0, 0, 999999);
	ozelharekatArac[1] = AddStaticVehicleEx(487, -2500.431152, -675.543884, 139.762817, 1.655162, 0, 0, 999999);
	ozelharekatArac[2] = AddStaticVehicleEx(411, -2397.225341, -611.260498, 132.375488, 35.320678, 0, 0, 999999);
	ozelharekatArac[3] = AddStaticVehicleEx(411, -2394.660156, -609.561767, 132.375534, 35.865379, 0, 0, 999999);
	ozelharekatArac[4] = AddStaticVehicleEx(411, -2414.540771, -587.039550, 132.375503, 214.795989, 0, 0, 999999);
	ozelharekatArac[5] = AddStaticVehicleEx(411, -2411.843994, -584.787597, 132.375518, 215.494308, 0, 0, 999999);
	ozelharekatArac[6] = AddStaticVehicleEx(495, -2394.269775, -596.541381, 132.996963, 125.616401, 0, 0, 999999);
	ozelharekatArac[7] = AddStaticVehicleEx(495, -2399.434082, -589.355041, 133.002441, 124.887298, 0, 0, 999999);
	ozelharekatArac[8] = AddStaticVehicleEx(494, -2403.270996, -584.763854, 132.543914, 124.743003, 0, 0, 999999);
	ozelharekatArac[9] = AddStaticVehicleEx(494, -2390.879638, -601.490905, 132.543624, 125.983322, 0, 0, 999999);
	ozelharekatArac[10] = AddStaticVehicleEx(506, -2397.490234, -593.476379, 132.352890, 125.727867, 0, 0, 999999);
	ozelharekatArac[11] = AddStaticVehicleEx(522, -2524.496337, -601.948120, 132.124084, 181.320098, 0, 0, 999999);
	ozelharekatArac[12] = AddStaticVehicleEx(522, -2516.778076, -601.927673, 132.126220, 180.254165, 0, 0, 999999);
	ozelharekatArac[13] = AddStaticVehicleEx(522, -2509.531250, -602.151855, 132.043930, 178.688705, 0, 0, 999999);
	ozelharekatArac[14] = AddStaticVehicleEx(541, -2505.833984, -601.896118, 132.185867, 180.875061, 0, 0, 999999);
	ozelharekatArac[15] = AddStaticVehicleEx(522, -2502.138916, -601.876525, 132.115371, 182.984313, 0, 0, 999999);
	ozelharekatArac[16] = AddStaticVehicleEx(560, -2498.430175, -601.695739, 132.266143, 180.401550, 0, 0, 999999);
	ozelharekatArac[17] = AddStaticVehicleEx(541, -2520.586181, -602.330139, 132.224822, 178.498214, 0, 0, 999999);
	ozelharekatArac[18] = AddStaticVehicleEx(541, -2513.224853, -601.719909, 132.225570, 180.979431, 0, 0, 999999);
	ozelharekatArac[19] = AddStaticVehicleEx(560, -2528.050781, -601.592712, 132.275466, 180.592330, 0, 0, 999999);
	ozelharekatArac[20] = AddStaticVehicleEx(560, -2531.909423, -601.875610, 132.274597, 179.379119, 0, 0, 999999);

	havaciArac[0] = AddStaticVehicleEx(519, -1875.365112, 1748.008056, 18.735162, 270.286743, 0, 0, 999999);
	havaciArac[1] = AddStaticVehicleEx(425, -1989.836547, 1763.159667, 18.391162, 268.931915, 0, 0, 999999);
	havaciArac[2] = AddStaticVehicleEx(425, -1991.502319, 1732.711914, 18.287574, 271.715026, 0, 0, 999999);
	havaciArac[3] = AddStaticVehicleEx(425, -2023.474243, 1729.518676, 18.457899, 268.715240, 0, 0, 999999);
	havaciArac[4] = AddStaticVehicleEx(425, -2023.746215, 1766.624389, 18.544343, 269.298217, 0, 0, 999999);
	havaciArac[5] = AddStaticVehicleEx(520, -2054.484619, 1748.463012, 18.584785, 272.725128, 0, 0, 999999);
	havaciArac[6] = AddStaticVehicleEx(520, -2034.128784, 1748.606079, 18.525070, 271.900512, 0, 0, 999999);
	havaciArac[7] = AddStaticVehicleEx(520, -1890.185913, 1741.397338, 18.746791, 267.927001, 0, 0, 999999);
	havaciArac[8] = AddStaticVehicleEx(595, -2019.515136, 1750.688110, 0.087183, 90.004653, 201, 1, 999999);
	havaciArac[9] = AddStaticVehicleEx(595, -2017.984619, 1756.907836, 0.245793, 91.535568, 201, 1, 999999);
	havaciArac[10] = AddStaticVehicleEx(446, -2022.818237, 1740.573120, -0.601337, 90.858947, 201, 1, 999999);

	orduArac[0] = AddStaticVehicleEx(411, -1584.174438, 437.187561, 6.933889, 228.204238, 137, 137, 999999);
	orduArac[1] = AddStaticVehicleEx(411, -1577.746826, 443.949371, 6.933894, 225.415542, 137, 137, 999999);
	orduArac[2] = AddStaticVehicleEx(411, -1571.806396, 450.547302, 6.955190, 227.693099, 137, 137, 999999);
	orduArac[3] = AddStaticVehicleEx(411, -1565.010498, 457.253784, 6.933875, 223.375946, 137, 137, 999999);
	orduArac[4] = AddStaticVehicleEx(432, -1574.506713, 370.675201, 7.214839, 1.895271, 0, 0, 999999);
	orduArac[5] = AddStaticVehicleEx(470, -1451.510986, 476.437896, 7.191211, 147.102386, 1, 1, 999999);
	orduArac[6] = AddStaticVehicleEx(470, -1456.403808, 477.098602, 7.192925, 146.271453, 1, 1, 999999);
	orduArac[7] = AddStaticVehicleEx(470, -1461.203247, 477.466461, 7.192557, 149.491210, 1, 1, 999999);
	orduArac[8] = AddStaticVehicleEx(470, -1466.340942, 477.408050, 7.190574, 153.335571, 1, 1, 999999);
	orduArac[9] = AddStaticVehicleEx(433, -1419.771606, 456.596801, 7.635807, 268.479858, 0, 0, 999999);
	orduArac[10] = AddStaticVehicleEx(433, -1434.349487, 456.769531, 7.630741, 269.030975, 0, 0, 999999);
	orduArac[11] = AddStaticVehicleEx(433, -1453.828369, 456.874633, 7.634751, 271.027832, 0, 0, 999999);
	orduArac[12] = AddStaticVehicleEx(433, -1468.331420, 456.542205, 7.630742, 270.444641, 0, 0, 999999);
	orduArac[13] = AddStaticVehicleEx(433, -1369.674804, 455.100372, 7.635781, 270.765991, 0, 0, 999999);
	orduArac[14] = AddStaticVehicleEx(433, -1355.130249, 455.201568, 7.568124, 270.903869, 0, 0, 999999);
	orduArac[15] = AddStaticVehicleEx(470, -1252.676757, 472.901275, 7.224599, 178.306823, 0, 0, 999999);
	orduArac[16] = AddStaticVehicleEx(470, -1262.623046, 473.061645, 7.228322, 180.969772, 0, 0, 999999);
	orduArac[17] = AddStaticVehicleEx(470, -1271.623779, 472.085174, 7.226287, 181.656616, 0, 0, 999999);
	orduArac[18] = AddStaticVehicleEx(470, -1280.515502, 471.997253, 7.217240, 180.851119, 0, 0, 999999);
	orduArac[19] = AddStaticVehicleEx(470, -1280.160278, 443.293945, 7.221392, 1.282540, 0, 0, 999999);
	orduArac[20] = AddStaticVehicleEx(470, -1271.500610, 443.672607, 7.236825, 1.814789, 0, 0, 999999);
	orduArac[21] = AddStaticVehicleEx(470, -1262.281982, 444.023254, 7.235063, 1.223503, 0, 0, 999999);
	orduArac[22] = AddStaticVehicleEx(470, -1253.262817, 444.049865, 7.238792, 3.652941, 0, 0, 999999);
	orduArac[23] = AddStaticVehicleEx(469, -1284.144897, 385.751220, 7.151600, 89.512008, 0, 0, 999999);
	orduArac[24] = AddStaticVehicleEx(487, -1291.783813, 443.163391, 7.368881, 359.074920, 137, 0, 999999);
	orduArac[25] = AddStaticVehicleEx(487, -1291.269897, 470.972747, 7.374266, 178.016021, 137, 0, 999999);
	orduArac[26] = AddStaticVehicleEx(476, -1465.732055, 357.216430, 7.855758, 269.701232, 137, 137, 999999);
	orduArac[27] = AddStaticVehicleEx(522, -1425.960937, 477.455230, 6.773274, 177.851181, 137, 0, 999999);
	orduArac[28] = AddStaticVehicleEx(522, -1423.621704, 477.488372, 6.769196, 178.898162, 137, 0, 999999);
	orduArac[29] = AddStaticVehicleEx(522, -1421.225585, 477.457763, 6.767971, 177.826034, 137, 0, 999999);
	orduArac[30] = AddStaticVehicleEx(476, -1469.065673, 392.048431, 7.889796, 269.261962, 137, 137, 999999);
	orduArac[31] = AddStaticVehicleEx(522, -1418.600341, 477.846740, 6.770862, 179.426910, 137, 0, 999999);
	orduArac[32] = AddStaticVehicleEx(476, -1465.897216, 427.089782, 7.902230, 268.737945, 137, 137, 999999);
	orduArac[33] = AddStaticVehicleEx(432, -1283.318359, 401.966094, 7.100368, 91.525756, -1, -14, 999999);
	orduArac[34] = AddStaticVehicleEx(432, -1283.415893, 408.139312, 7.128287, 91.473907, -1, -14, 999999);
	orduArac[35] = AddStaticVehicleEx(432, -1283.439208, 414.895111, 7.127966, 91.349487, -1, -14, 999999);
	orduArac[36] = AddStaticVehicleEx(560, -1282.516357, 373.638854, 6.952112, 89.685043, 137, 137, 999999);
	orduArac[37] = AddStaticVehicleEx(560, -1282.583007, 364.854644, 6.947536, 89.208778, 137, 137, 999999);
	orduArac[38] = AddStaticVehicleEx(579, -1282.756225, 355.556304, 7.173397, 89.482795, 137, 137, 999999);
	orduArac[39] = AddStaticVehicleEx(579, -1282.544311, 346.816131, 7.138090, 87.418739, 137, 137, 999999);

	// Þehir Araçlarý
	AddStaticVehicleEx(400, -1991.381469, 243.608093, 35.284175, 84.062812, 897, 4, 999999);
	AddStaticVehicleEx(522, -2235.438476, -102.621711, 34.891460, 90.608810, -1, -1, 999999);
	AddStaticVehicleEx(401, -2207.170166, -17.803556, 35.081317, 0.344349, -1, -1, 999999);
	AddStaticVehicleEx(521, -2174.326904, 101.924041, 34.901294, 270.151977, -1, -1, 999999);
	AddStaticVehicleEx(445, -1990.938720, 247.716918, 35.066799, 82.448341, -1, -1, 999999);
	AddStaticVehicleEx(467, -1990.330688, 252.578262, 34.931797, 79.884757, -1, -1, 999999);
	AddStaticVehicleEx(496, -1989.376708, 257.860656, 34.911865, 80.562721, -1, -1, 999999);
	AddStaticVehicleEx(521, -1990.537841, 274.034118, 34.762599, 93.158546, -1, -1, 999999);
	AddStaticVehicleEx(526, -1988.862915, 263.026458, 34.965927, 84.276199, -1, -1, 999999);
	AddStaticVehicleEx(527, -1923.156494, 281.934661, 40.767711, 180.160720, -1, -1, 999999);
	AddStaticVehicleEx(541, -1948.189331, 259.885833, 40.691638, 133.152328, -1, -1, 999999);
	AddStaticVehicleEx(545, -1948.128295, 269.140960, 40.883991, 48.425109, 1, 1, 999999);
	AddStaticVehicleEx(554, -1947.002563, 260.861083, 35.564373, 89.596817, 1, 6, 999999);
	AddStaticVehicleEx(559, -1946.620361, 272.299926, 35.149826, 85.448051, -1, -1, 999999);
	AddStaticVehicleEx(567, -1946.737304, 266.450286, 35.361202, 87.702537, -1, -1, 999999);
	AddStaticVehicleEx(510, -1994.433471, 217.738998, 27.295192, 88.611671, 1, 1, 999999);
	AddStaticVehicleEx(536, -1965.106079, 82.052482, 27.436798, 89.832244, -1, -1, 999999);
	AddStaticVehicleEx(534, -1965.026245, 91.263496, 27.427074, 90.597129, -1, -1, 999999);
	AddStaticVehicleEx(555, -1964.571166, 102.877998, 27.383249, 90.108100, -1, -1, 999999);
	AddStaticVehicleEx(521, -1964.046264, 98.248100, 27.267223, 92.124855, -1, -1, 999999);
	AddStaticVehicleEx(505, -1987.091918, 111.626419, 27.752489, 0.847000, -1, -1, 999999);
	AddStaticVehicleEx(544, -2019.798706, 75.362129, 28.288967, 269.525421, -1, -1, 999999);
	AddStaticVehicleEx(544, -2019.582519, 84.252830, 28.116550, 270.197082, -1, -1, 999999);
	AddStaticVehicleEx(544, -2019.494750, 92.778762, 28.121450, 269.945251, -1, -1, 999999);
	AddStaticVehicleEx(552, -2040.384521, 135.458831, 28.544200, 270.992004, -1, -1, 999999);
	AddStaticVehicleEx(551, -2092.140136, -24.733034, 35.046974, 0.954120, -1, -1, 999999);
	AddStaticVehicleEx(422, -2170.505126, -211.744201, 35.306282, 267.093109, -1, -1, 999999);
	AddStaticVehicleEx(426, -2093.687988, -84.156898, 34.907737, 357.897674, -1, -1, 999999);
	AddStaticVehicleEx(439, -2085.496582, -84.443496, 35.059642, 0.400074, -1, -1, 999999);
	AddStaticVehicleEx(534, -2076.940185, -84.438461, 34.887577, 0.068529, -1, -1, 999999);
	AddStaticVehicleEx(434, -2068.463867, -83.724555, 35.135112, 0.914736, -1, -1, 999999);
	AddStaticVehicleEx(475, -2064.313232, -84.051635, 34.966175, 0.110144, -1, -1, 999999);
	AddStaticVehicleEx(489, -2162.245605, 1.691739, 35.383438, 0.195045, -1, -1, 999999);
	AddStaticVehicleEx(405, -1956.253417, 585.166076, 34.998935, 359.864349, -1, -1, 999999);
	AddStaticVehicleEx(506, -2213.841064, 110.098106, 35.024673, 88.730949, 6, 6, 999999);
	AddStaticVehicleEx(429, -1659.624877, 1213.360229, 6.929121, 267.437225, -1, -1, 999999);
	AddStaticVehicleEx(448, -2342.531494, -161.359954, 34.927555, 94.046501, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.629150, -163.485961, 34.918643, 90.035675, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.535888, -165.586486, 34.914165, 91.447395, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.479736, -167.426788, 34.915493, 92.032371, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.496337, -169.610153, 34.914588, 91.624412, 6, 6, 999999);
	AddStaticVehicleEx(461, -1662.818359, 1217.163208, 6.840623, 269.833770, -1, -1, 999999);
	AddStaticVehicleEx(448, -2342.431884, -149.554519, 34.936103, 92.055419, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.459472, -147.423522, 34.919082, 90.363395, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.451416, -145.272750, 34.919052, 92.431427, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.504638, -142.976745, 34.919666, 90.896423, 6, 6, 999999);
	AddStaticVehicleEx(448, -2342.537841, -140.367034, 34.917373, 95.063430, 6, 6, 999999);
	AddStaticVehicleEx(445, -1669.105224, 1205.705932, 13.546309, 270.473052, -1, -1, 999999);
	AddStaticVehicleEx(411, -2352.124267, -124.813888, 35.039512, 179.560302, -1, -1, 999999);
	AddStaticVehicleEx(426, -1659.595092, 1217.936645, 13.414701, 264.806610, -1, -1, 999999);
	AddStaticVehicleEx(463, -2344.886474, -124.965362, 34.852428, 181.732238, -1, -1, 999999);
	AddStaticVehicleEx(463, -2348.516113, -125.026130, 34.852642, 183.110809, -1, -1, 999999);
	AddStaticVehicleEx(474, -2341.026123, -125.337654, 35.006988, 179.776519, 0, 0, 999999);
	AddStaticVehicleEx(410, -1656.831298, 1213.361938, 13.327487, 269.249328, -1, -1, 999999);
	AddStaticVehicleEx(480, -2333.711914, -126.137367, 35.086292, 178.024261, -1, -1, 999999);
	AddStaticVehicleEx(500, -2315.152099, -125.736412, 35.442653, 178.520385, -1, -1, 999999);
	AddStaticVehicleEx(439, -1652.095581, 1209.609375, 13.566905, 267.555114, -1, -1, 999999);
	AddStaticVehicleEx(517, -2322.733154, -125.532997, 35.167453, 179.012252, -1, -1, 999999);
	AddStaticVehicleEx(560, -2352.086669, -115.315040, 35.008144, 88.822860, -1, -1, 999999);
	AddStaticVehicleEx(458, -2351.999511, -85.485671, 35.182052, 269.192565, -1, -1, 999999);
	AddStaticVehicleEx(462, -2351.542724, -105.368858, 34.915142, 90.740524, -1, -1, 999999);
	AddStaticVehicleEx(466, -2352.027587, -91.898818, 35.047561, 89.929397, -1, -1, 999999);
	AddStaticVehicleEx(586, -1663.880859, 1205.120117, 20.675848, 267.840026, -1, -1, 999999);
	AddStaticVehicleEx(522, -2343.869384, -42.599147, 34.796855, 93.161163, -1, -1, 999999);
	AddStaticVehicleEx(402, -2265.745117, 216.460418, 34.995784, 269.579711, -1, -1, 999999);
	AddStaticVehicleEx(405, -2265.519042, 204.521087, 35.026741, 270.325897, -1, -1, 999999);
	AddStaticVehicleEx(589, -1650.492065, 1208.619506, 20.807836, 239.614135, -1, -1, 999999);
	AddStaticVehicleEx(421, -2265.525390, 196.764221, 35.046550, 271.551116, -1, -1, 999999);
	AddStaticVehicleEx(602, -1655.250122, 1213.122314, 20.961484, 344.400329, -1, -1, 999999);
	AddStaticVehicleEx(429, -2264.910400, 184.899841, 34.844440, 89.891899, -1, -1, 999999);
	AddStaticVehicleEx(440, -2234.362060, 160.621368, 35.407875, 89.239524, 0, 0, 999999);
	AddStaticVehicleEx(560, -1660.223510, 1218.720825, 20.860427, 271.726745, -1, -1, 999999);
	AddStaticVehicleEx(499, -2265.197509, 149.074844, 35.151489, 268.323822, -1, -1, 999999);
	AddStaticVehicleEx(507, -2265.569335, 140.983612, 34.984256, 270.348419, -1, -1, 999999);
	AddStaticVehicleEx(508, -2266.674316, 129.118392, 35.542736, 90.239196, -1, -1, 999999);
	AddStaticVehicleEx(516, -2265.975097, 117.416503, 35.008762, 90.106880, -1, -1, 999999);
	AddStaticVehicleEx(517, -2266.296386, 109.354911, 35.026058, 268.516357, -1, -1, 999999);
	AddStaticVehicleEx(518, -2266.871582, 85.567665, 34.842666, 87.841201, -1, -1, 999999);
	AddStaticVehicleEx(526, -2268.134765, 69.666465, 34.930961, 88.907752, -1, -1, 999999);
	AddStaticVehicleEx(533, -2214.555175, -255.225067, 35.189090, 181.948623, -1, -1, 999999);
	AddStaticVehicleEx(503, -2132.833251, -422.777038, 35.268669, 342.120330, -1, -1, 999999);
	AddStaticVehicleEx(502, -2186.262695, -418.661407, 35.266635, 13.140573, -1, -1, 999999);
	AddStaticVehicleEx(504, -2195.884277, -395.717712, 35.120021, 258.235534, -1, -1, 999999);
	AddStaticVehicleEx(561, -1655.213378, 1315.162719, 6.852912, 134.563293, -1, -1, 999999);
	AddStaticVehicleEx(504, -2197.035156, -402.228912, 35.127719, 257.131530, -1, -1, 999999);
	AddStaticVehicleEx(557, -2167.182861, -443.842132, 35.718250, 337.655303, -1, -1, 999999);
	AddStaticVehicleEx(556, -2175.633789, -431.891235, 35.710929, 341.736968, 1, 1, 999999);
	AddStaticVehicleEx(566, -1648.421630, 1307.949951, 6.811575, 135.212783, -1, -1, 999999);
	AddStaticVehicleEx(561, -2007.046630, -744.609069, 31.880769, 88.727737, -1, -1, 999999);
	AddStaticVehicleEx(487, -2141.632080, -909.224182, 32.273437, 179.069320, -1, -1, 999999);
	AddStaticVehicleEx(400, -2123.911132, -950.209289, 32.117374, 90.897216, -1, -1, 999999);
	AddStaticVehicleEx(521, -2149.395019, -935.157714, 31.605485, 266.128234, -1, -1, 999999);
	AddStaticVehicleEx(491, -1872.078247, -798.993591, 31.626600, 90.119232, -1, -1, 999999);
	AddStaticVehicleEx(592, -1654.086425, -162.728393, 15.344450, 314.134521, 6, 6, 999999);
	AddStaticVehicleEx(580, -1641.069458, 1300.995605, 6.825778, 133.844268, -1, -1, 999999);
	AddStaticVehicleEx(593, -1617.961181, -319.594909, 14.609932, 43.065624, 6, 3, 999999);
	AddStaticVehicleEx(600, -1634.116943, 1293.827636, 6.750740, 134.996337, -1, -1, 999999);
	AddStaticVehicleEx(577, -1631.840209, -249.341384, 14.050293, 313.894134, 1, 3, 999999);
	AddStaticVehicleEx(511, -1389.731323, -230.336120, 15.514865, 317.305358, -1, -1, 999999);
	AddStaticVehicleEx(547, -2636.120849, 1377.671875, 6.871332, 181.393249, -1, -1, 999999);
	AddStaticVehicleEx(519, -1335.332519, -275.748260, 15.079633, 314.062011, 6, 3, 999999);
	AddStaticVehicleEx(582, -2644.014160, 1352.900878, 7.215363, 271.170257, -1, -1, 999999);
	AddStaticVehicleEx(513, -1320.575927, -361.125305, 14.699744, 273.991241, 6, 3, 999999);
	AddStaticVehicleEx(513, -1321.616821, -351.827545, 14.696318, 275.920623, 6, 79, 999999);
	AddStaticVehicleEx(512, -1331.607910, -464.084960, 14.436232, 294.606262, -1, -1, 999999);
	AddStaticVehicleEx(476, -1320.034301, -480.276519, 14.857975, 310.135528, 6, 8, 999999);
	AddStaticVehicleEx(413, -2644.867431, 1344.849975, 7.245768, 270.456542, -1, -1, 999999);
	AddStaticVehicleEx(475, -2624.601318, 1332.885864, 6.996973, 314.735168, -1, -1, 999999);
	AddStaticVehicleEx(475, -1829.780151, -241.604965, 18.192979, 273.381164, -1, -1, 999999);
	AddStaticVehicleEx(477, -1840.019775, -111.439971, 5.387174, 89.675598, -1, -1, 999999);
	AddStaticVehicleEx(550, -2622.221435, 1377.615722, 6.977769, 182.545959, -1, -1, 999999);
	AddStaticVehicleEx(487, -1576.762573, 50.108837, 17.580711, 317.021789, 1, 3, 999999);
	AddStaticVehicleEx(600, -2235.563232, 293.247467, 34.828872, 359.738281, -1, -1, 999999);
	AddStaticVehicleEx(589, -2235.702392, 306.760742, 34.777328, 180.260208, -1, -1, 999999);
	AddStaticVehicleEx(586, -2162.989990, 306.570068, 34.564407, 180.068542, 0, 0, 999999);
	AddStaticVehicleEx(586, -2167.527099, 306.590393, 34.637866, 180.259460, 0, 0, 999999);
	AddStaticVehicleEx(587, -2175.883056, 293.181945, 34.843296, 0.110144, -1, -1, 999999);
	AddStaticVehicleEx(585, -2188.629638, 293.355285, 34.704013, 359.651702, -1, -1, 999999);
	AddStaticVehicleEx(580, -2205.813232, 293.034637, 34.898540, 358.257415, -1, -1, 999999);
	AddStaticVehicleEx(571, -2134.809326, 374.373565, 34.471157, 1.320865, 1, 3, 999999);
	AddStaticVehicleEx(571, -2163.875976, 453.479736, 34.470771, 269.414978, 1, 3, 999999);
	AddStaticVehicleEx(566, -2140.013916, 421.615997, 34.948467, 358.018096, -1, -1, 999999);
	AddStaticVehicleEx(567, -2875.784912, 1161.706420, 13.145749, 357.522399, -1, -1, 999999);
	AddStaticVehicleEx(567, -2398.334960, 329.543060, 35.021373, 149.314117, -1, -1, 999999);
	AddStaticVehicleEx(521, -2669.831787, -33.976139, 3.916434, 184.887695, -1, -1, 999999);
	AddStaticVehicleEx(565, -2415.882812, 79.605728, 34.728244, 356.266967, -1, -1, 999999);
	AddStaticVehicleEx(542, -2506.271240, -8.705343, 25.492158, 176.696441, -1, -1, 999999);
	AddStaticVehicleEx(566, -2834.820556, 979.598571, 43.407745, 45.020160, -1, -1, 999999);
	AddStaticVehicleEx(462, -2786.528564, 769.770385, 50.103466, 83.931694, -1, -1, 999999);
	AddStaticVehicleEx(463, -2782.191162, 769.526184, 50.133762, 91.798072, -1, -1, 999999);
	AddStaticVehicleEx(467, -2737.905273, 871.892639, 66.493843, 90.045616, -1, -1, 999999);
	AddStaticVehicleEx(474, -2612.420898, 921.532531, 64.876548, 179.533096, -1, -1, 999999);
	AddStaticVehicleEx(475, -2520.919189, 835.299072, 49.688591, 179.789459, -1, -1, 999999);
	AddStaticVehicleEx(477, -2486.478759, 741.764099, 34.766983, 179.972015, -1, -1, 999999);
	AddStaticVehicleEx(480, -2473.319824, 741.625549, 34.789443, 179.899124, -1, -1, 999999);
	AddStaticVehicleEx(461, -2460.193603, 742.133728, 34.614677, 181.332916, -1, -1, 999999);
	AddStaticVehicleEx(491, -2425.075927, 741.464355, 34.771850, 179.539443, -1, -1, 999999);
	AddStaticVehicleEx(562, -2689.812255, -55.236652, 3.995346, 358.852416, -1, -1, 999999);
	AddStaticVehicleEx(483, -2416.420898, 741.765258, 35.008155, 180.315292, -1, -1, 999999);
	AddStaticVehicleEx(529, -2666.711914, -54.725742, 3.984465, 0.000000, -1, -1, 999999);
	AddStaticVehicleEx(535, -2627.557617, -35.559055, 4.098663, 180.124313, -1, -1, 999999);
	AddStaticVehicleEx(531, -2754.419677, -281.275543, 7.000617, 180.840377, -1, -1, 999999);
	AddStaticVehicleEx(531, -2749.462158, -281.104370, 7.001708, 179.902069, -1, -1, 999999);
	AddStaticVehicleEx(531, -2744.305664, -281.132049, 7.002896, 177.910110, -1, -1, 999999);
	AddStaticVehicleEx(479, -2247.770019, 901.298278, 66.361473, 180.247253, -1, -1, 999999);
	AddStaticVehicleEx(532, -2772.518798, -280.387329, 8.007045, 181.519363, -1, -1, 999999);
	AddStaticVehicleEx(560, -2768.391357, -312.834472, 6.743994, 0.278362, -1, -1, 999999);
	AddStaticVehicleEx(496, -2202.876708, 1099.038330, 79.642974, 89.435134, -1, -1, 999999);
	AddStaticVehicleEx(471, -2908.426025, -180.321716, 2.562469, 2.243487, -1, -1, 999999);
	AddStaticVehicleEx(500, -2089.333984, 802.868835, 69.582504, 89.601654, -1, -1, 999999);
	AddStaticVehicleEx(471, -2904.775390, -180.185302, 2.767859, 2.787984, -1, -1, 999999);
	AddStaticVehicleEx(471, -2881.031982, -135.863830, 4.174867, 91.695411, 0, 0, 999999);
	AddStaticVehicleEx(473, -2937.429931, 339.487457, -0.727393, 104.023338, -1, -1, 999999);
	AddStaticVehicleEx(507, -2012.484619, 849.213928, 45.193092, 180.067504, -1, -1, 999999);
	AddStaticVehicleEx(404, -2848.609375, 374.915466, 4.206226, 359.643585, -1, -1, 999999);
	AddStaticVehicleEx(516, -1890.667236, 891.316833, 35.006130, 180.444122, -1, -1, 999999);
	AddStaticVehicleEx(410, -2747.879394, 472.588043, 4.603709, 91.594345, -1, -1, 999999);
	AddStaticVehicleEx(518, -1890.747802, 820.147338, 34.842502, 0.151936, -1, -1, 999999);
	AddStaticVehicleEx(409, -2754.437255, 375.291107, 4.032291, 179.349563, -1, -1, 999999);
	AddStaticVehicleEx(527, -1947.420288, 910.294067, 40.991619, 269.435302, -1, -1, 999999);
	AddStaticVehicleEx(412, -2704.542236, 590.556640, 14.371000, 272.703369, -1, -1, 999999);
	AddStaticVehicleEx(529, -1753.390625, 910.403930, 24.447410, 270.247741, -1, -1, 999999);
	AddStaticVehicleEx(413, -2546.012939, 638.558837, 27.904848, 270.936859, -1, -1, 999999);
	AddStaticVehicleEx(415, -2545.759033, 659.153808, 27.580440, 268.984802, -1, -1, 999999);
	AddStaticVehicleEx(426, -2592.172851, 660.613708, 27.555683, 270.498382, -1, -1, 999999);
	AddStaticVehicleEx(421, -2578.470458, 625.850219, 27.635650, 3.922711, -1, -1, 999999);
	AddStaticVehicleEx(422, -2728.299560, 1104.810180, 46.511596, 40.978610, -1, -1, 999999);
	AddStaticVehicleEx(492, -2430.451416, 993.089477, 45.109767, 268.329071, -1, -1, 999999);
	AddStaticVehicleEx(521, -2552.970947, 1145.153564, 55.306941, 167.058715, -1, -1, 999999);
	AddStaticVehicleEx(468, -2496.375732, 1139.207031, 55.315196, 176.144897, -1, -1, 999999);
	AddStaticVehicleEx(481, -2461.836669, 1138.423339, 55.153301, 179.278976, -1, -1, 999999);
	AddStaticVehicleEx(587, -2246.836914, 523.576721, 34.900989, 359.693115, -1, -1, 999999);
	AddStaticVehicleEx(506, -2691.471679, 267.846588, 4.040335, 359.282073, -1, -1, 999999);
	AddStaticVehicleEx(565, -2240.241699, 523.778259, 34.796836, 359.634674, -1, -1, 999999);
	AddStaticVehicleEx(581, -2243.654785, 524.136108, 34.763031, 1.332002, -1, -1, 999999);
	AddStaticVehicleEx(543, -2661.480224, 268.317596, 4.200094, 0.789356, -1, -1, 999999);
	AddStaticVehicleEx(549, -2681.638183, 268.079895, 4.033068, 0.399331, -1, -1, 999999);
	AddStaticVehicleEx(575, -2613.795654, 190.442535, 3.948280, 1.332485, -1, -1, 999999);
	AddStaticVehicleEx(401, -1800.417114, 723.086303, 34.865036, 270.029571, -1, -1, 999999);
	AddStaticVehicleEx(475, -1814.663208, 597.835510, 34.981765, 268.964355, -1, -1, 999999);
	AddStaticVehicleEx(400, -1926.306152, 584.089233, 35.266811, 2.005769, -1, -1, 999999);
	AddStaticVehicleEx(402, -1935.368286, 584.736999, 34.961582, 0.027979, -1, -1, 999999);
	AddStaticVehicleEx(401, -1947.411621, 585.548461, 34.925582, 0.837598, -1, -1, 999999);
	AddStaticVehicleEx(408, -2103.190673, 558.205627, 35.644035, 271.635437, -1, -1, 999999);
	AddStaticVehicleEx(422, -2093.939453, 643.404968, 52.265941, 179.475448, 1, 1, 999999);
	AddStaticVehicleEx(560, -2247.702392, 766.157836, 49.073104, 0.203693, -1, -1, 999999);
	AddStaticVehicleEx(546, -1833.106811, 1110.344726, 45.121021, 269.866333, -1, -1, 999999);
	AddStaticVehicleEx(558, -1802.186889, 981.209228, 24.467023, 178.486923, -1, -1, 999999);
	AddStaticVehicleEx(507, -1589.950439, 860.126525, 7.454844, 90.697616, -1, -1, 999999);
	AddStaticVehicleEx(516, -1522.390014, 892.640563, 6.944242, 356.328948, -1, -1, 999999);
	AddStaticVehicleEx(517, -1520.682983, 933.233825, 6.993132, 2.140140, -1, -1, 999999);
	AddStaticVehicleEx(536, -1607.291870, 910.576049, 7.419130, 273.238037, -1, -1, 999999);
	AddStaticVehicleEx(585, -2430.280761, -193.083786, 34.832721, 146.042465, -1, -1, 999999);
	AddStaticVehicleEx(424, -2881.843261, 179.306381, 4.886551, 40.230319, -1, -1, 999999);
	AddStaticVehicleEx(453, -1473.308837, 707.628417, -0.502757, 184.102355, -1, -1, 999999);
	AddStaticVehicleEx(458, -1970.679199, 1279.040039, 7.040867, 267.457153, -1, -1, 999999);
	AddStaticVehicleEx(401, -1982.615356, 1128.740966, 52.948554, 2.583724, -1, -1, 999999);
	AddStaticVehicleEx(478, -2642.532470, 713.156738, 27.851257, 86.816833, -1, -1, 999999);
	AddStaticVehicleEx(405, -2053.082519, 1116.186157, 53.161716, 181.718978, -1, -1, 999999);
	AddStaticVehicleEx(480, -2521.632324, 1001.620849, 78.016807, 359.128875, -1, -1, 999999);
	AddStaticVehicleEx(482, -2472.225585, 903.434204, 63.231487, 271.518096, -1, -1, 999999);
	AddStaticVehicleEx(400, -2490.057128, 424.280792, 27.868579, 137.690048, -1, -1, 999999);
	AddStaticVehicleEx(479, -2481.217773, 414.944915, 27.613697, 136.584533, -1, -1, 999999);
	AddStaticVehicleEx(521, -2505.183105, 413.542449, 27.361871, 317.910186, -1, -1, 999999);
	AddStaticVehicleEx(422, -2248.222412, 960.326782, 66.900665, 182.950714, -1, -1, 999999);
	AddStaticVehicleEx(421, -1851.399291, 166.804397, 14.960972, 261.691711, -1, -1, 999999);
	AddStaticVehicleEx(440, -1732.043823, 208.234405, 3.668088, 357.881225, -1, -1, 999999);
	AddStaticVehicleEx(401, -2012.358154, 463.637878, 34.831413, 180.204956, -1, -1, 999999);
	AddStaticVehicleEx(521, -1964.056762, 464.503662, 34.753547, 84.926330, -1, -1, 999999);
	AddStaticVehicleEx(547, -2090.433837, 325.639984, 34.844249, 88.709732, -1, -1, 999999);
	AddStaticVehicleEx(521, -1988.357055, 269.081604, 34.780868, 91.179756, -1, -1, 999999);
	AddStaticVehicleEx(400, -1846.239013, 1380.943237, 7.216759, 294.222686, -1, -1, 999999);
	AddStaticVehicleEx(414, -2139.979248, 1340.251220, 7.207526, 91.830818, -1, -1, 999999);
	AddStaticVehicleEx(401, -2334.972900, 1379.463867, 6.846437, 61.410945, -1, -1, 999999);
	AddStaticVehicleEx(457, -2372.021972, 1284.470214, 21.869657, 184.047149, -1, -1, 999999);
	AddStaticVehicleEx(491, -2178.950927, 1185.728149, 55.446956, 91.326606, -1, -1, 999999);
	AddStaticVehicleEx(498, -2507.498291, 1385.164306, 7.198595, 87.727081, -1, -1, 999999);
	AddStaticVehicleEx(500, -2460.694335, 1288.903198, 22.224254, 179.807327, -1, -1, 999999);
	AddStaticVehicleEx(492, -2152.104492, 542.777160, 34.864238, 178.484375, -1, -1, 999999);
	AddStaticVehicleEx(507, -2331.292480, 450.988983, 33.653270, 36.671802, -1, -1, 999999);
	AddStaticVehicleEx(521, -2539.172851, 1229.673950, 37.005203, 213.336914, -1, -1, 999999);
	AddStaticVehicleEx(507, -2530.637695, 1229.898071, 37.308338, 207.884521, -1, -1, 999999);
	AddStaticVehicleEx(518, -2521.653564, 1229.427612, 37.072978, 213.440795, -1, -1, 999999);
	AddStaticVehicleEx(517, -2501.723144, 1222.828979, 37.311378, 145.219100, -1, -1, 999999);
	AddStaticVehicleEx(526, -2492.773437, 1214.994506, 37.188522, 348.925994, -1, -1, 999999);
	AddStaticVehicleEx(527, -2513.011718, 1205.171752, 37.117004, 272.146911, -1, -1, 999999);
	AddStaticVehicleEx(533, -2828.913574, 586.612854, 5.234317, 182.987487, -1, -1, 999999);
	AddStaticVehicleEx(540, -2745.260498, 44.285472, 7.036699, 86.896163, -1, -1, 999999);
	AddStaticVehicleEx(542, -2780.428222, 162.741882, 6.850532, 92.691314, -1, -1, 999999);
	AddStaticVehicleEx(543, -2600.808349, -215.740646, 4.121921, 269.322326, -1, -1, 999999);
	AddStaticVehicleEx(533, -2601.315185, 485.916137, 14.301184, 355.754577, -1, -1, 999999);
	AddStaticVehicleEx(468, -2401.332275, -2205.042968, 32.968257, 301.234130, 3, 3, 999999);
	AddStaticVehicleEx(468, -2399.806396, -2208.321044, 32.879501, 303.427612, 1, 1, 999999);
	AddStaticVehicleEx(468, -2398.247558, -2211.623779, 32.876964, 302.174133, 6, 6, 999999);
	AddStaticVehicleEx(463, -1560.763183, -2740.781982, 48.082305, 146.202484, 242, 1, 999999);
	AddStaticVehicleEx(463, -1557.391113, -2740.599121, 48.084880, 146.320587, 242, 242, 999999);
	AddStaticVehicleEx(463, -1554.944458, -2742.196533, 47.993175, 147.134750, 242, 242, 999999);
	AddStaticVehicleEx(463, -1561.939331, -2737.466796, 48.084690, 145.737670, 242, 242, 999999);
	AddStaticVehicleEx(463, -1564.228393, -2736.081542, 48.084358, 151.621688, 242, 242, 999999);
	AddStaticVehicleEx(586, -83.673332, -1196.312744, 1.678888, 342.649200, 0, 0, 999999);
	AddStaticVehicleEx(586, -86.748886, -1195.406127, 1.671195, 345.995300, 0, 0, 999999);
	AddStaticVehicleEx(463, -90.062011, -1196.049926, 1.836007, 343.025939, 0, 255, 999999);
	AddStaticVehicleEx(463, -93.737052, -1196.960937, 2.019055, 344.303924, 0, 255, 999999);
	AddStaticVehicleEx(463, -81.223670, -1198.750610, 1.882634, 346.155548, 0, 6, 999999);
	AddStaticVehicleEx(463, -78.329528, -1200.687866, 2.007012, 347.623107, 0, 6, 999999);
	//

	GirisText[0] = TextDrawCreate(222.532943, 76.249984, "box");
	TextDrawLetterSize(GirisText[0], 0.000000, 3.768669);
	TextDrawTextSize(GirisText[0], 427.000000, 0.000000);
	TextDrawAlignment(GirisText[0], 1);
	TextDrawColor(GirisText[0], -1);
	TextDrawUseBox(GirisText[0], 1);
	TextDrawBoxColor(GirisText[0], 68);
	TextDrawSetShadow(GirisText[0], 0);
	TextDrawSetOutline(GirisText[0], 0);
	TextDrawBackgroundColor(GirisText[0], 102);
	TextDrawFont(GirisText[0], 1);
	TextDrawSetProportional(GirisText[0], 1);
	TextDrawSetShadow(GirisText[0], 0);

	GirisText[1] = TextDrawCreate(325.807922, 76.833335, "~r~~h~~h~Anadolu_~b~~h~~h~Gaming_~w~~h~Hirsiz_~w~~h~Polis");
	TextDrawLetterSize(GirisText[1], 0.288023, 1.378333);
	TextDrawAlignment(GirisText[1], 2);
	TextDrawColor(GirisText[1], -1);
	TextDrawSetShadow(GirisText[1], 1);
	TextDrawSetOutline(GirisText[1], 1);
	TextDrawBackgroundColor(GirisText[1], 268435473);
	TextDrawFont(GirisText[1], 1);
	TextDrawSetProportional(GirisText[1], 1);
	TextDrawSetShadow(GirisText[1], 1);

	GirisText[2] = TextDrawCreate(325.807922, 94.333068, "~w~~h~Sunucusuna_~w~~h~Hos_~w~~h~Geldiniz");
	TextDrawLetterSize(GirisText[2], 0.288023, 1.378333);
	TextDrawAlignment(GirisText[2], 2);
	TextDrawColor(GirisText[2], -1);
	TextDrawSetShadow(GirisText[2], 1);
	TextDrawSetOutline(GirisText[2], 1);
	TextDrawBackgroundColor(GirisText[2], 268435473);
	TextDrawFont(GirisText[2], 1);
	TextDrawSetProportional(GirisText[2], 1);
	TextDrawSetShadow(GirisText[2], 1);

 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(i < 60)
		{
		    etkMaxArac[i] = INVALID_VEHICLE_ID;
		}
	    Etkde[i] = false;
	}
	ETK_Text[0] = TextDrawCreate(215.000000, 130.011032, "box");
	TextDrawLetterSize(ETK_Text[0], 0.000000, 1.549999);
	TextDrawTextSize(ETK_Text[0], 439.000000, 0.000000);
	TextDrawAlignment(ETK_Text[0], 1);
	TextDrawColor(ETK_Text[0], -1);
	TextDrawUseBox(ETK_Text[0], 1);
	TextDrawBoxColor(ETK_Text[0], 85);
	TextDrawSetShadow(ETK_Text[0], 0);
	TextDrawSetOutline(ETK_Text[0], 0);
	TextDrawBackgroundColor(ETK_Text[0], 255);
	TextDrawFont(ETK_Text[0], 1);
	TextDrawSetProportional(ETK_Text[0], 1);
	TextDrawSetShadow(ETK_Text[0], 0);

	ETK_Text[1] = TextDrawCreate(250.099945, 129.566680, "ld_chat:badchat"); // 250 -> 255
	TextDrawLetterSize(ETK_Text[1], 0.000000, 0.000000);
	TextDrawTextSize(ETK_Text[1], 15.000000, 15.000000);
	TextDrawAlignment(ETK_Text[1], 1);
	TextDrawColor(ETK_Text[1], -1);
	TextDrawSetShadow(ETK_Text[1], 0);
	TextDrawSetOutline(ETK_Text[1], 0);
	TextDrawBackgroundColor(ETK_Text[1], 255);
	TextDrawFont(ETK_Text[1], 4);
	TextDrawSetProportional(ETK_Text[1], 0);
	TextDrawSetShadow(ETK_Text[1], 0);

	ETK_Text[2] = TextDrawCreate(330.000000, 129.022247, "Etkinlik_!");
	TextDrawLetterSize(ETK_Text[2], 0.327999, 1.475555);
	TextDrawAlignment(ETK_Text[2], 2);
	TextDrawColor(ETK_Text[2], -5963521);
	TextDrawSetShadow(ETK_Text[2], 1);
	TextDrawSetOutline(ETK_Text[2], 1);
	TextDrawBackgroundColor(ETK_Text[2], 0);
	TextDrawFont(ETK_Text[2], 2);
	TextDrawSetProportional(ETK_Text[2], 1);
	TextDrawSetShadow(ETK_Text[2], 1);

	ETK_Text[3] = TextDrawCreate(391.800659, 129.566680, "ld_chat:badchat");
	TextDrawLetterSize(ETK_Text[3], 0.000000, 0.000000);
	TextDrawTextSize(ETK_Text[3], 15.000000, 15.000000);
	TextDrawAlignment(ETK_Text[3], 1);
	TextDrawColor(ETK_Text[3], -1);
	TextDrawSetShadow(ETK_Text[3], 0);
	TextDrawSetOutline(ETK_Text[3], 0);
	TextDrawBackgroundColor(ETK_Text[3], 255);
	TextDrawFont(ETK_Text[3], 4);
	TextDrawSetProportional(ETK_Text[3], 0);
	TextDrawSetShadow(ETK_Text[3], 0);

	ETK_Text[4] = TextDrawCreate(327.000000, 149.000000, "null");
	TextDrawAlignment(ETK_Text[4], 2);
	TextDrawBackgroundColor(ETK_Text[4], 0);
	TextDrawFont(ETK_Text[4], 1);
	TextDrawLetterSize(ETK_Text[4], 0.190000, 1.100000);
	TextDrawColor(ETK_Text[4], -1);
	TextDrawSetOutline(ETK_Text[4], 1);
	TextDrawSetProportional(ETK_Text[4], 1);
	TextDrawUseBox(ETK_Text[4], 1);
	TextDrawBoxColor(ETK_Text[4], 85);
	TextDrawTextSize(ETK_Text[4], 0.000000, 224.000000);

    SetVehiclePassengerDamage(true);
    SetDisableSyncBugs(true);

	UsePlayerPedAnims();
	EnableVehicleFriendlyFire();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
    SetWorldTime(0);
    SetWeather(10);

	SetGameModeText("TurkHýrsýzPolis•TürkHP•Türkiye");
	#if Mod_Type == 2
	SendRconCommand("hostname     ««• Anadolu Gaming ™ Hirsiz Polis v1.5.2 •»»"); // ALT + 0160
	#elseif Mod_Type == 1
	SendRconCommand("hostname   ««• Anadolu Gaming ™ Hirsiz Polis Bug Test •»»");
	#endif
	//SendRconCommand("hostname    [BAKIM] ««• Anadolu Gaming ™ Hirsiz Polis •»»");
	SendRconCommand("language TurkceTRTurkishTürkçe");
	SendRconCommand("mapname TurkceTRTurkishTürkçe");
	SendRconCommand("rcon 0");

    #if Mod_Type == 2
	new ip[16];
	GetServerVarAsString("bind", ip, sizeof (ip));
	if (!ip[0] || strcmp(ip, "5.135.47.103"))
	{
	    SendRconCommand("password 9asdas84d6a5");
	    SendRconCommand("hostname [NexSecurity] - Anadolu Gaming ™ Hirsiz Polis | Calinti Mod !");
	    SendRconCommand("rcon_password NexoRunKralligi");
	    SetTimer("ModuFelcEt", 2500, false);
	}
    #endif

	SetTimer("ZamanAracRespawn", 1200000, true);
	SetTimer("PolisGateFix", 1000, false);
    SetTimer("GateUpdate", 1000, true);
	SetTimer("RgbPolis", 75, true);
	SetTimer("SuikastciGorev", 1200000, true); // 20 dakika
	SetTimer("SoygunTimer", 1000, true);
    Paused_Timer = SetTimer("OnPlayersPaused", 1000, true);
    SetTimer("BolgeOdulu", 1000, true);
    SetTimer("SendMSG", 240000, true); // 4dk
    SetTimer("CeteSureKontrol", 1000, true);

    duelloBugFix();
    EvleriYukle();
	SoygunlariYukle();
    BolgeHazirla();
   	CeteYukle();
	CeteAracYukle();
	CeteSavaslariYukle();
	AtmYukle();
	
    textFlood = 0;


	Duyuru = TextDrawCreate(320.000000, 160.000000, "Selam beyler");
	TextDrawAlignment(Duyuru, 2);
	TextDrawBackgroundColor(Duyuru, 0);
	TextDrawFont(Duyuru, 1);
	TextDrawLetterSize(Duyuru, 0.190000, 1.199999);
	TextDrawColor(Duyuru, 0xFFFFFFFF);
	TextDrawSetOutline(Duyuru, 1);
	TextDrawSetProportional(Duyuru, 1);
	TextDrawUseBox(Duyuru, 1);
	TextDrawBoxColor(Duyuru, 68);
	TextDrawTextSize(Duyuru, 0.000000, 200.000000);

	AltBar[0] = TextDrawCreate(0.000000, 439.000000, "_");
	TextDrawBackgroundColor(AltBar[0], 255);
	TextDrawFont(AltBar[0], 1);
	TextDrawLetterSize(AltBar[0], 0.500000, 0.799999);
	TextDrawColor(AltBar[0], 80);
	TextDrawSetOutline(AltBar[0], 0);
	TextDrawSetProportional(AltBar[0], 1);
	TextDrawSetShadow(AltBar[0], 1);
	TextDrawUseBox(AltBar[0], 1);
	TextDrawBoxColor(AltBar[0], 80);
	TextDrawTextSize(AltBar[0], 400.000000, 0.000000);

	AltBar[1] = TextDrawCreate(0.000000, 425.000000, "_");
	TextDrawBackgroundColor(AltBar[1], 255);
	TextDrawFont(AltBar[1], 1);
	TextDrawLetterSize(AltBar[1], 0.500000, 0.799999);
	TextDrawColor(AltBar[1], 80);
	TextDrawSetOutline(AltBar[1], 0);
	TextDrawSetProportional(AltBar[1], 1);
	TextDrawSetShadow(AltBar[1], 1);
	//TextDrawUseBox(AltBar[1], 1);
	//TextDrawBoxColor(AltBar[1], 80);
	TextDrawTextSize(AltBar[1], 250.000000, 0.000000);

	AltBar[2] = TextDrawCreate(650.000000, 439.000000, "_");
	TextDrawBackgroundColor(AltBar[2], 255);
	TextDrawFont(AltBar[2], 1);
	TextDrawLetterSize(AltBar[2], 0.500000, 0.799999);
	TextDrawColor(AltBar[2], 80);
	TextDrawSetOutline(AltBar[2], 0);
	TextDrawSetProportional(AltBar[2], 1);
	TextDrawSetShadow(AltBar[2], 1);
	TextDrawUseBox(AltBar[2], 1);
	TextDrawBoxColor(AltBar[2], 80);
	TextDrawTextSize(AltBar[2], 400.000000, 0.000000);

	AltBar[3] = TextDrawCreate(2.000000, 425.000000, "_");
	TextDrawBackgroundColor(AltBar[3], 34);
	TextDrawFont(AltBar[3], 1);
	TextDrawLetterSize(AltBar[3], 0.300000, 0.799999);
	TextDrawColor(AltBar[3], -1);
	TextDrawSetOutline(AltBar[3], 1);
	TextDrawSetProportional(AltBar[3], 1);
	TextDrawUseBox(AltBar[3], 1);
	TextDrawBoxColor(AltBar[3], 102);
	TextDrawTextSize(AltBar[3], 9.000000, 0.000000);

	AltBar[4] = TextDrawCreate(1.000000, 422.000000, "?");
	TextDrawBackgroundColor(AltBar[4], 34);
	TextDrawFont(AltBar[4], 1);
	TextDrawLetterSize(AltBar[4], 0.430000, 1.400000);
	TextDrawColor(AltBar[4], -414434049);
	TextDrawSetOutline(AltBar[4], 1);
	TextDrawSetProportional(AltBar[4], 1);

	AltBar[5] = TextDrawCreate(15.000000, 423.000000, "Yenilik: ~w~~h~Bakiye sistemi degistirilmistir. ~g~~h~~h~/Bakiye");
	TextDrawBackgroundColor(AltBar[5], 34);
	TextDrawFont(AltBar[5], 1);
	TextDrawLetterSize(AltBar[5], 0.200000, 1.100000);
	TextDrawColor(AltBar[5], -1);
	TextDrawSetOutline(AltBar[5], 0);
	TextDrawSetProportional(AltBar[5], 1);
	TextDrawSetShadow(AltBar[5], 1);

	AltBar[6] = TextDrawCreate(35.000000, 436.000000, "/Yardim ~w~~h~-");
	TextDrawBackgroundColor(AltBar[6], 17);
	TextDrawFont(AltBar[6], 2);
	TextDrawLetterSize(AltBar[6], 0.210000, 1.299999);
	TextDrawColor(AltBar[6], -427941121);
	TextDrawSetOutline(AltBar[6], 1);
	TextDrawSetProportional(AltBar[6], 1);

	AltBar[7] = TextDrawCreate(80.000000, 436.000000, "/Komutlar ~w~~h~-");
	TextDrawBackgroundColor(AltBar[7], 17);
	TextDrawFont(AltBar[7], 2);
	TextDrawLetterSize(AltBar[7], 0.210000, 1.299999);
	TextDrawColor(AltBar[7], 785150463);
	TextDrawSetOutline(AltBar[7], 1);
	TextDrawSetProportional(AltBar[7], 1);

	AltBar[8] = TextDrawCreate(140.000000, 436.000000, "/TumKomutlar");
	TextDrawBackgroundColor(AltBar[8], 17);
	TextDrawFont(AltBar[8], 2);
	TextDrawLetterSize(AltBar[8], 0.210000, 1.299999);
	TextDrawColor(AltBar[8], 882433023);
	TextDrawSetOutline(AltBar[8], 1);
	TextDrawSetProportional(AltBar[8], 1);

	AltBar[9] = TextDrawCreate(430.000000, 436.000000, "/Market ~w~~h~-");
	TextDrawBackgroundColor(AltBar[9], 17);
	TextDrawFont(AltBar[9], 2);
	TextDrawLetterSize(AltBar[9], 0.210000, 1.299999);
	TextDrawColor(AltBar[9], -1784305921);
	TextDrawSetOutline(AltBar[9], 1);
	TextDrawSetProportional(AltBar[9], 1);

	AltBar[10] = TextDrawCreate(480.000000, 436.000000, "/Yetenekler ~w~~h~-");
	TextDrawBackgroundColor(AltBar[10], 17);
	TextDrawFont(AltBar[10], 2);
	TextDrawLetterSize(AltBar[10], 0.210000, 1.299999);
	TextDrawColor(AltBar[10], -238809089);
	TextDrawSetOutline(AltBar[10], 1);
	TextDrawSetProportional(AltBar[10], 1);

	AltBar[11] = TextDrawCreate(550.000000, 436.000000, "/Basarilar");
	TextDrawBackgroundColor(AltBar[11], 17);
	TextDrawFont(AltBar[11], 2);
	TextDrawLetterSize(AltBar[11], 0.210000, 1.299999);
	TextDrawColor(AltBar[11], 665739519);
	TextDrawSetOutline(AltBar[11], 1);
	TextDrawSetProportional(AltBar[11], 1);

	AltBar[12] = TextDrawCreate(270.000000, 436.000000, "www.AnadoluHP.com");
	TextDrawBackgroundColor(AltBar[12], 17);
	TextDrawFont(AltBar[12], 2);
	TextDrawLetterSize(AltBar[12], 0.210000, 1.299999);
	TextDrawColor(AltBar[12], -319753729);
	TextDrawSetOutline(AltBar[12], 1);
	TextDrawSetProportional(AltBar[12], 1);

	AltBar[13] = TextDrawCreate(0.000000, 422.000000, "_");
	TextDrawBackgroundColor(AltBar[13], 255);
	TextDrawFont(AltBar[13], 1);
	TextDrawLetterSize(AltBar[13], 0.500000, 1.299998);
	TextDrawColor(AltBar[13], 102);
	TextDrawSetOutline(AltBar[13], 0);
	TextDrawSetProportional(AltBar[13], 1);
	TextDrawSetShadow(AltBar[13], 1);
	TextDrawUseBox(AltBar[13], 1);
	TextDrawBoxColor(AltBar[13], 68);
	TextDrawTextSize(AltBar[13], 638.000000, 0.000000);
	
	Kutucuklar[0] = TextDrawCreate(253.899932, 422.972351, "box");
	TextDrawLetterSize(Kutucuklar[0], 0.000000, 1.249999);
	TextDrawTextSize(Kutucuklar[0], 266.369873, 0.000000);
	TextDrawAlignment(Kutucuklar[0], 1);
	TextDrawColor(Kutucuklar[0], -1);
	TextDrawUseBox(Kutucuklar[0], 1);
	TextDrawBoxColor(Kutucuklar[0], 51);
	TextDrawSetShadow(Kutucuklar[0], 0);
	TextDrawSetOutline(Kutucuklar[0], 0);
	TextDrawBackgroundColor(Kutucuklar[0], 136);
	TextDrawFont(Kutucuklar[0], 1);
	TextDrawSetProportional(Kutucuklar[0], 1);
	TextDrawSetShadow(Kutucuklar[0], 0);

	Kutucuklar[1] = TextDrawCreate(255.050231, 421.398712, "ld_none:warp");
	TextDrawLetterSize(Kutucuklar[1], 0.000000, 0.000000);
	TextDrawTextSize(Kutucuklar[1], 10.149996, 13.050000);
	TextDrawAlignment(Kutucuklar[1], 1);
	TextDrawColor(Kutucuklar[1], -1);
	TextDrawSetShadow(Kutucuklar[1], 0);
	TextDrawSetOutline(Kutucuklar[1], 0);
	TextDrawBackgroundColor(Kutucuklar[1], 255);
	TextDrawFont(Kutucuklar[1], 4);
	TextDrawSetProportional(Kutucuklar[1], 0);
	TextDrawSetShadow(Kutucuklar[1], 0);

	Kutucuklar[2] = TextDrawCreate(308.500091, 422.972351, "box");
	TextDrawLetterSize(Kutucuklar[2], 0.000000, 1.249999);
	TextDrawTextSize(Kutucuklar[2], 320.970031, 0.000000);
	TextDrawAlignment(Kutucuklar[2], 1);
	TextDrawColor(Kutucuklar[2], -1);
	TextDrawUseBox(Kutucuklar[2], 1);
	TextDrawBoxColor(Kutucuklar[2], 51);
	TextDrawSetShadow(Kutucuklar[2], 0);
	TextDrawSetOutline(Kutucuklar[2], 0);
	TextDrawBackgroundColor(Kutucuklar[2], 136);
	TextDrawFont(Kutucuklar[2], 1);
	TextDrawSetProportional(Kutucuklar[2], 1);
	TextDrawSetShadow(Kutucuklar[2], 0);

	Kutucuklar[3] = TextDrawCreate(309.650390, 421.398712, "hud:radar_flag");
	TextDrawLetterSize(Kutucuklar[3], 0.000000, 0.000000);
	TextDrawTextSize(Kutucuklar[3], 10.149996, 13.050000);
	TextDrawAlignment(Kutucuklar[3], 1);
	TextDrawColor(Kutucuklar[3], -1);
	TextDrawSetShadow(Kutucuklar[3], 0);
	TextDrawSetOutline(Kutucuklar[3], 0);
	TextDrawBackgroundColor(Kutucuklar[3], 255);
	TextDrawFont(Kutucuklar[3], 4);
	TextDrawSetProportional(Kutucuklar[3], 0);
	TextDrawSetShadow(Kutucuklar[3], 0);

	Kutucuklar[4] = TextDrawCreate(375.700286, 422.972351, "box");
	TextDrawLetterSize(Kutucuklar[4], 0.000000, 1.249999);
	TextDrawTextSize(Kutucuklar[4], 388.170227, 0.000000);
	TextDrawAlignment(Kutucuklar[4], 1);
	TextDrawColor(Kutucuklar[4], -1);
	TextDrawUseBox(Kutucuklar[4], 1);
	TextDrawBoxColor(Kutucuklar[4], 51);
	TextDrawSetShadow(Kutucuklar[4], 0);
	TextDrawSetOutline(Kutucuklar[4], 0);
	TextDrawBackgroundColor(Kutucuklar[4], 136);
	TextDrawFont(Kutucuklar[4], 1);
	TextDrawSetProportional(Kutucuklar[4], 1);
	TextDrawSetShadow(Kutucuklar[4], 0);

	Kutucuklar[5] = TextDrawCreate(376.850585, 421.398712, "hud:radar_race");
	TextDrawLetterSize(Kutucuklar[5], 0.000000, 0.000000);
	TextDrawTextSize(Kutucuklar[5], 10.149996, 13.050000);
	TextDrawAlignment(Kutucuklar[5], 1);
	TextDrawColor(Kutucuklar[5], -1);
	TextDrawSetShadow(Kutucuklar[5], 0);
	TextDrawSetOutline(Kutucuklar[5], 0);
	TextDrawBackgroundColor(Kutucuklar[5], 255);
	TextDrawFont(Kutucuklar[5], 4);
	TextDrawSetProportional(Kutucuklar[5], 0);
	TextDrawSetShadow(Kutucuklar[5], 0);
	
	SaatText[0] = TextDrawCreate(497.099487, 5.766659, "box");
	TextDrawLetterSize(SaatText[0], 0.000000, 1.200001);
	TextDrawTextSize(SaatText[0], 633.000000, 0.000000);
	TextDrawAlignment(SaatText[0], 1);
	TextDrawColor(SaatText[0], -1);
	TextDrawUseBox(SaatText[0], 1);
	TextDrawBoxColor(SaatText[0], 53);
	TextDrawSetShadow(SaatText[0], 0);
	TextDrawSetOutline(SaatText[0], 0);
	TextDrawBackgroundColor(SaatText[0], 255);
	TextDrawFont(SaatText[0], 1);
	TextDrawSetProportional(SaatText[0], 1);
	TextDrawSetShadow(SaatText[0], 0);

	SaatText[1] = TextDrawCreate(566.350769, 4.800004, "20.12.2017_-_18:05");
	TextDrawLetterSize(SaatText[1], 0.220499, 1.294444);
	TextDrawAlignment(SaatText[1], 2);
	TextDrawColor(SaatText[1], -1);
	TextDrawSetShadow(SaatText[1], 1);
	TextDrawSetOutline(SaatText[1], 1);
	TextDrawBackgroundColor(SaatText[1], 696302079);
	TextDrawFont(SaatText[1], 2);
	TextDrawSetProportional(SaatText[1], 1);
	TextDrawSetShadow(SaatText[1], 1);

	SaatText[2] = TextDrawCreate(497.199890, 4.527762, "ld_grav:timer");
	TextDrawLetterSize(SaatText[2], 0.000000, 0.000000);
	TextDrawTextSize(SaatText[2], 12.459987, 13.859973);
	TextDrawAlignment(SaatText[2], 1);
	TextDrawColor(SaatText[2], -1);
	TextDrawSetShadow(SaatText[2], 0);
	TextDrawSetOutline(SaatText[2], 0);
	TextDrawBackgroundColor(SaatText[2], 255);
	TextDrawFont(SaatText[2], 4);
	TextDrawSetProportional(SaatText[2], 0);
	TextDrawSetShadow(SaatText[2], 0);

	PolisLoad[0] = TextDrawCreate(236.119827, 111.250091, "box");
	TextDrawLetterSize(PolisLoad[0], 0.000000, 18.620788);
	TextDrawTextSize(PolisLoad[0], 404.000000, 0.000000);
	TextDrawAlignment(PolisLoad[0], 1);
	TextDrawColor(PolisLoad[0], -1);
	TextDrawUseBox(PolisLoad[0], 1);
	TextDrawBoxColor(PolisLoad[0], 102);
	TextDrawSetShadow(PolisLoad[0], 0);
	TextDrawSetOutline(PolisLoad[0], 0);
	TextDrawBackgroundColor(PolisLoad[0], 255);
	TextDrawFont(PolisLoad[0], 1);
	TextDrawSetProportional(PolisLoad[0], 1);
	TextDrawSetShadow(PolisLoad[0], 0);

	PolisLoad[1] = TextDrawCreate(275.475799, 110.666603, "Karakter_Secin");
	TextDrawLetterSize(PolisLoad[1], 0.400000, 1.600000);
	TextDrawAlignment(PolisLoad[1], 1);
	TextDrawColor(PolisLoad[1], -1);
	TextDrawSetShadow(PolisLoad[1], 0);
	TextDrawSetOutline(PolisLoad[1], 0);
	TextDrawBackgroundColor(PolisLoad[1], 255);
	TextDrawFont(PolisLoad[1], 1);
	TextDrawSetProportional(PolisLoad[1], 1);
	TextDrawSetShadow(PolisLoad[1], 0);

	OzelDuyuru[0] = TextDrawCreate(210.000000, 129.000000, "_");
	TextDrawBackgroundColor(OzelDuyuru[0], 255);
	TextDrawFont(OzelDuyuru[0], 1);
	TextDrawLetterSize(OzelDuyuru[0], 0.500000, 1.300000);
	TextDrawColor(OzelDuyuru[0], -1);
	TextDrawSetOutline(OzelDuyuru[0], 0);
	TextDrawSetProportional(OzelDuyuru[0], 1);
	TextDrawSetShadow(OzelDuyuru[0], 1);
	TextDrawUseBox(OzelDuyuru[0], 1);
	TextDrawBoxColor(OzelDuyuru[0], 102);
	TextDrawTextSize(OzelDuyuru[0], 430.000000, 0.000000);
	TextDrawSetSelectable(OzelDuyuru[0], 0);

	OzelDuyuru[1] = TextDrawCreate(290.000000, 128.000000, "~g~~h~~h~Vip Duyuru");
	TextDrawBackgroundColor(OzelDuyuru[1], 17);
	TextDrawFont(OzelDuyuru[1], 1);
	TextDrawLetterSize(OzelDuyuru[1], 0.310000, 1.300000);
	TextDrawColor(OzelDuyuru[1], -1);
	TextDrawSetOutline(OzelDuyuru[1], 1);
	TextDrawSetProportional(OzelDuyuru[1], 1);
	TextDrawSetSelectable(OzelDuyuru[1], 0);

	OzelDuyuru[2] = TextDrawCreate(210.000000, 145.000000, "~r~~h~~h~?(?):_~w~~h~?");
	TextDrawBackgroundColor(OzelDuyuru[2], 17);
	TextDrawFont(OzelDuyuru[2], 1);
	TextDrawLetterSize(OzelDuyuru[2], 0.210000, 1.100000);
	TextDrawColor(OzelDuyuru[2], -1);
	TextDrawSetOutline(OzelDuyuru[2], 1);
	TextDrawSetProportional(OzelDuyuru[2], 1);
	TextDrawUseBox(OzelDuyuru[2], 1);
	TextDrawBoxColor(OzelDuyuru[2], 102);
	TextDrawTextSize(OzelDuyuru[2], 430.000000, 0.000000);
	TextDrawSetSelectable(OzelDuyuru[2], 0);

	MeslekBar[0] = TextDrawCreate(190.204956, 143.333328, "box");
	TextDrawLetterSize(MeslekBar[0], 0.000000, 1.472915);
	TextDrawTextSize(MeslekBar[0], 439.000000, 0.000000);
	TextDrawAlignment(MeslekBar[0], 1);
	TextDrawColor(MeslekBar[0], -1);
	TextDrawUseBox(MeslekBar[0], 1);
	TextDrawBoxColor(MeslekBar[0], 743266303);
	TextDrawSetShadow(MeslekBar[0], 1);
	TextDrawSetOutline(MeslekBar[0], 1);
	TextDrawBackgroundColor(MeslekBar[0], 255);
	TextDrawFont(MeslekBar[0], 1);
	TextDrawSetProportional(MeslekBar[0], 1);
	TextDrawSetShadow(MeslekBar[0], 1);

	MeslekBar[1] = TextDrawCreate(315.300231, 142.749954, "ANADOLU_GAMING_HP_-_"SwSehir"");
	TextDrawLetterSize(MeslekBar[1], 0.251478, 1.378333);
	TextDrawAlignment(MeslekBar[1], 2);
	TextDrawColor(MeslekBar[1], -1);
	TextDrawSetShadow(MeslekBar[1], 1);
	TextDrawSetOutline(MeslekBar[1], 1);
	TextDrawBackgroundColor(MeslekBar[1], 17);
	TextDrawFont(MeslekBar[1], 2);
	TextDrawSetProportional(MeslekBar[1], 1);
	TextDrawSetShadow(MeslekBar[1], 1);

	MeslekBar[2] = TextDrawCreate(190.204956, 161.434432, "box");
	TextDrawLetterSize(MeslekBar[2], 0.000000, 1.472915);
	TextDrawTextSize(MeslekBar[2], 439.000000, 0.000000);
	TextDrawAlignment(MeslekBar[2], 1);
	TextDrawColor(MeslekBar[2], -1);
	TextDrawUseBox(MeslekBar[2], 1);
	TextDrawBoxColor(MeslekBar[2], 119);
	TextDrawSetShadow(MeslekBar[2], 0);
	TextDrawSetOutline(MeslekBar[2], 0);
	TextDrawBackgroundColor(MeslekBar[2], 255);
	TextDrawFont(MeslekBar[2], 1);
	TextDrawSetProportional(MeslekBar[2], 1);
	TextDrawSetShadow(MeslekBar[2], 0);

	MeslekBar[3] = TextDrawCreate(220.349548, 162.000000, "Yardim");
	TextDrawLetterSize(MeslekBar[3], 0.249136, 1.255833);
	TextDrawTextSize(MeslekBar[3], 260.000000, 10.000000);
	TextDrawAlignment(MeslekBar[3], 1);
	TextDrawColor(MeslekBar[3], -1);
	TextDrawBoxColor(MeslekBar[3], 255);
	TextDrawSetShadow(MeslekBar[3], 0);
	TextDrawSetOutline(MeslekBar[3], 1);
	TextDrawBackgroundColor(MeslekBar[3], 17);
	TextDrawFont(MeslekBar[3], 2);
	TextDrawSetProportional(MeslekBar[3], 1);
	TextDrawSetShadow(MeslekBar[3], 0);
	TextDrawSetSelectable(MeslekBar[3], true);

	MeslekBar[4] = TextDrawCreate(283.812561, 162.000000, "Kurallar");
	TextDrawLetterSize(MeslekBar[4], 0.249136, 1.255833);
	TextDrawTextSize(MeslekBar[4], 338.000000, 10.000000);
	TextDrawAlignment(MeslekBar[4], 1);
	TextDrawColor(MeslekBar[4], -1);
	TextDrawBoxColor(MeslekBar[4], 255);
	TextDrawSetShadow(MeslekBar[4], 0);
	TextDrawSetOutline(MeslekBar[4], 1);
	TextDrawBackgroundColor(MeslekBar[4], 17);
	TextDrawFont(MeslekBar[4], 2);
	TextDrawSetProportional(MeslekBar[4], 1);
	TextDrawSetShadow(MeslekBar[4], 0);
	TextDrawSetSelectable(MeslekBar[4], true);

	MeslekBar[5] = TextDrawCreate(364.749908, 162.000000, "Bilgilerim");
	TextDrawLetterSize(MeslekBar[5], 0.249136, 1.255833);
	TextDrawTextSize(MeslekBar[5], 422.000000, 10.000000);
	TextDrawAlignment(MeslekBar[5], 1);
	TextDrawColor(MeslekBar[5], -1);
	TextDrawBoxColor(MeslekBar[5], 255);
	TextDrawSetShadow(MeslekBar[5], 0);
	TextDrawSetOutline(MeslekBar[5], 1);
	TextDrawBackgroundColor(MeslekBar[5], 17);
	TextDrawFont(MeslekBar[5], 2);
	TextDrawSetProportional(MeslekBar[5], 1);
	TextDrawSetShadow(MeslekBar[5], 0);
	TextDrawSetSelectable(MeslekBar[5], true);

	MeslekBar[6] = TextDrawCreate(262.149475, 185.084686, "box");
	TextDrawLetterSize(MeslekBar[6], 0.000000, 16.270919);
	TextDrawTextSize(MeslekBar[6], 358.838684, 0.000000);
	TextDrawAlignment(MeslekBar[6], 1);
	TextDrawColor(MeslekBar[6], -1);
	TextDrawUseBox(MeslekBar[6], 1);
	TextDrawBoxColor(MeslekBar[6], 119);
	TextDrawSetShadow(MeslekBar[6], 0);
	TextDrawSetOutline(MeslekBar[6], 0);
	TextDrawBackgroundColor(MeslekBar[6], 255);
	TextDrawFont(MeslekBar[6], 1);
	TextDrawSetProportional(MeslekBar[6], 1);
	TextDrawSetShadow(MeslekBar[6], 0);

	MeslekBar[7] = TextDrawCreate(275.603240, 194.083297, "Tecavuzcu");
	TextDrawLetterSize(MeslekBar[7], 0.264128, 1.442500);
	TextDrawTextSize(MeslekBar[7], 343.000000, 10.000000);
	TextDrawAlignment(MeslekBar[7], 1);
	TextDrawColor(MeslekBar[7], -1);
	TextDrawBoxColor(MeslekBar[7], 255);
	TextDrawSetShadow(MeslekBar[7], 0);
	TextDrawSetOutline(MeslekBar[7], 1);
	TextDrawBackgroundColor(MeslekBar[7], 0);
	TextDrawFont(MeslekBar[7], 2);
	TextDrawSetProportional(MeslekBar[7], 1);
	TextDrawSetShadow(MeslekBar[7], 0);
	TextDrawSetSelectable(MeslekBar[7], true);

	MeslekBar[8] = TextDrawCreate(308.603240, 215.150268, "Gaspci");
	TextDrawLetterSize(MeslekBar[8], 0.264128, 1.442500);
	TextDrawTextSize(MeslekBar[8], 10.000000, 41.000000);
	TextDrawAlignment(MeslekBar[8], 2);
	TextDrawColor(MeslekBar[8], -1);
	TextDrawBoxColor(MeslekBar[8], 255);
	TextDrawSetShadow(MeslekBar[8], 0);
	TextDrawSetOutline(MeslekBar[8], 1);
	TextDrawBackgroundColor(MeslekBar[8], 0);
	TextDrawFont(MeslekBar[8], 2);
	TextDrawSetProportional(MeslekBar[8], 1);
	TextDrawSetShadow(MeslekBar[8], 0);
	TextDrawSetSelectable(MeslekBar[8], true);

	MeslekBar[9] = TextDrawCreate(309.603240, 237.733596, "Suikastci");
	TextDrawLetterSize(MeslekBar[9], 0.264128, 1.442500);
	TextDrawTextSize(MeslekBar[9], 10.000000, 59.000000);
	TextDrawAlignment(MeslekBar[9], 2);
	TextDrawColor(MeslekBar[9], -1);
	TextDrawBoxColor(MeslekBar[9], 255);
	TextDrawSetShadow(MeslekBar[9], 0);
	TextDrawSetOutline(MeslekBar[9], 1);
	TextDrawBackgroundColor(MeslekBar[9], 0);
	TextDrawFont(MeslekBar[9], 2);
	TextDrawSetProportional(MeslekBar[9], 1);
	TextDrawSetShadow(MeslekBar[9], 0);
	TextDrawSetSelectable(MeslekBar[9], true);

	MeslekBar[10] = TextDrawCreate(308.603240, 260.733612, "Tamirci");
	TextDrawLetterSize(MeslekBar[10], 0.264128, 1.442500);
	TextDrawTextSize(MeslekBar[10], 10.000000, 45.000000);
	TextDrawAlignment(MeslekBar[10], 2);
	TextDrawColor(MeslekBar[10], -1);
	TextDrawBoxColor(MeslekBar[10], 255);
	TextDrawSetShadow(MeslekBar[10], 0);
	TextDrawSetOutline(MeslekBar[10], 1);
	TextDrawBackgroundColor(MeslekBar[10], 0);
	TextDrawFont(MeslekBar[10], 2);
	TextDrawSetProportional(MeslekBar[10], 1);
	TextDrawSetShadow(MeslekBar[10], 0);
	TextDrawSetSelectable(MeslekBar[10], true);

	MeslekBar[11] = TextDrawCreate(308.603240, 282.733612, "Bombaci");
	TextDrawLetterSize(MeslekBar[11], 0.264128, 1.442500);
	TextDrawTextSize(MeslekBar[11], 10.000000, 50.000000);
	TextDrawAlignment(MeslekBar[11], 2);
	TextDrawColor(MeslekBar[11], -1);
	TextDrawBoxColor(MeslekBar[11], 255);
	TextDrawSetShadow(MeslekBar[11], 0);
	TextDrawSetOutline(MeslekBar[11], 1);
	TextDrawBackgroundColor(MeslekBar[11], 0);
	TextDrawFont(MeslekBar[11], 2);
	TextDrawSetProportional(MeslekBar[11], 1);
	TextDrawSetShadow(MeslekBar[11], 0);
	TextDrawSetSelectable(MeslekBar[11], true);

	MeslekBar[12] = TextDrawCreate(311.603240, 304.733612, "Araba_Hirsizi");
	TextDrawLetterSize(MeslekBar[12], 0.264128, 1.442500);
	TextDrawTextSize(MeslekBar[12], 10.000000, 80.000000);
	TextDrawAlignment(MeslekBar[12], 2);
	TextDrawColor(MeslekBar[12], -1);
	TextDrawBoxColor(MeslekBar[12], 255);
	TextDrawSetShadow(MeslekBar[12], 0);
	TextDrawSetOutline(MeslekBar[12], 1);
	TextDrawBackgroundColor(MeslekBar[12], 0);
	TextDrawFont(MeslekBar[12], 2);
	TextDrawSetProportional(MeslekBar[12], 1);
	TextDrawSetShadow(MeslekBar[12], 0);
	TextDrawSetSelectable(MeslekBar[12], true);

	MeslekBar[13] = TextDrawCreate(262.121490, 179.199874, "box");
	TextDrawLetterSize(MeslekBar[13], 0.000000, 0.165020);
	TextDrawTextSize(MeslekBar[13], 264.599975, 0.000000);
	TextDrawAlignment(MeslekBar[13], 1);
	TextDrawColor(MeslekBar[13], -1);
	TextDrawUseBox(MeslekBar[13], 1);
	TextDrawBoxColor(MeslekBar[13], 119);
	TextDrawSetShadow(MeslekBar[13], 0);
	TextDrawSetOutline(MeslekBar[13], 0);
	TextDrawBackgroundColor(MeslekBar[13], 102);
	TextDrawFont(MeslekBar[13], 1);
	TextDrawSetProportional(MeslekBar[13], 1);
	TextDrawSetShadow(MeslekBar[13], 0);

	MeslekBar[14] = TextDrawCreate(356.121246, 179.199874, "box");
	TextDrawLetterSize(MeslekBar[14], 0.000000, 0.165020);
	TextDrawTextSize(MeslekBar[14], 358.599731, 0.000000);
	TextDrawAlignment(MeslekBar[14], 1);
	TextDrawColor(MeslekBar[14], -1);
	TextDrawUseBox(MeslekBar[14], 1);
	TextDrawBoxColor(MeslekBar[14], 119);
	TextDrawSetShadow(MeslekBar[14], 0);
	TextDrawSetOutline(MeslekBar[14], 0);
	TextDrawBackgroundColor(MeslekBar[14], 102);
	TextDrawFont(MeslekBar[14], 1);
	TextDrawSetProportional(MeslekBar[14], 1);
	TextDrawSetShadow(MeslekBar[14], 0);

	sOlusturucuIcon[0] = TextDrawCreate(184.582717, 126.416679, "box");
	TextDrawLetterSize(sOlusturucuIcon[0], 0.000000, 17.871154);
	TextDrawTextSize(sOlusturucuIcon[0], 454.000000, 0.000000);
	TextDrawAlignment(sOlusturucuIcon[0], 1);
	TextDrawColor(sOlusturucuIcon[0], -1);
	TextDrawUseBox(sOlusturucuIcon[0], 1);
	TextDrawBoxColor(sOlusturucuIcon[0], -1448498689);
	TextDrawSetShadow(sOlusturucuIcon[0], 0);
	TextDrawSetOutline(sOlusturucuIcon[0], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[0], 255);
	TextDrawFont(sOlusturucuIcon[0], 1);
	TextDrawSetProportional(sOlusturucuIcon[0], 1);
	TextDrawSetShadow(sOlusturucuIcon[0], 0);

	sOlusturucuIcon[1] = TextDrawCreate(190.505142, 133.416656, "hud:radar_airyard");
	TextDrawLetterSize(sOlusturucuIcon[1], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[1], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[1], 1);
	TextDrawColor(sOlusturucuIcon[1], -1);
	TextDrawSetShadow(sOlusturucuIcon[1], 0);
	TextDrawSetOutline(sOlusturucuIcon[1], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[1], 255);
	TextDrawFont(sOlusturucuIcon[1], 4);
	TextDrawSetProportional(sOlusturucuIcon[1], 0);
	TextDrawSetShadow(sOlusturucuIcon[1], 0);
	TextDrawSetSelectable(sOlusturucuIcon[1], true);

	sOlusturucuIcon[2] = TextDrawCreate(214.005325, 133.416656, "hud:radar_ammugun");
	TextDrawLetterSize(sOlusturucuIcon[2], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[2], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[2], 1);
	TextDrawColor(sOlusturucuIcon[2], -1);
	TextDrawSetShadow(sOlusturucuIcon[2], 0);
	TextDrawSetOutline(sOlusturucuIcon[2], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[2], 255);
	TextDrawFont(sOlusturucuIcon[2], 4);
	TextDrawSetProportional(sOlusturucuIcon[2], 0);
	TextDrawSetShadow(sOlusturucuIcon[2], 0);
	TextDrawSetSelectable(sOlusturucuIcon[2], true);

	sOlusturucuIcon[3] = TextDrawCreate(238.005325, 133.416656, "hud:radar_barbers");
	TextDrawLetterSize(sOlusturucuIcon[3], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[3], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[3], 1);
	TextDrawColor(sOlusturucuIcon[3], -1);
	TextDrawSetShadow(sOlusturucuIcon[3], 0);
	TextDrawSetOutline(sOlusturucuIcon[3], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[3], 255);
	TextDrawFont(sOlusturucuIcon[3], 4);
	TextDrawSetProportional(sOlusturucuIcon[3], 0);
	TextDrawSetShadow(sOlusturucuIcon[3], 0);
	TextDrawSetSelectable(sOlusturucuIcon[3], true);

	sOlusturucuIcon[4] = TextDrawCreate(259.005340, 133.416656, "hud:radar_bigsmoke");
	TextDrawLetterSize(sOlusturucuIcon[4], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[4], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[4], 1);
	TextDrawColor(sOlusturucuIcon[4], -1);
	TextDrawSetShadow(sOlusturucuIcon[4], 0);
	TextDrawSetOutline(sOlusturucuIcon[4], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[4], 255);
	TextDrawFont(sOlusturucuIcon[4], 4);
	TextDrawSetProportional(sOlusturucuIcon[4], 0);
	TextDrawSetShadow(sOlusturucuIcon[4], 0);
	TextDrawSetSelectable(sOlusturucuIcon[4], true);

	sOlusturucuIcon[5] = TextDrawCreate(280.005340, 133.416656, "hud:radar_boatyard");
	TextDrawLetterSize(sOlusturucuIcon[5], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[5], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[5], 1);
	TextDrawColor(sOlusturucuIcon[5], -1);
	TextDrawSetShadow(sOlusturucuIcon[5], 0);
	TextDrawSetOutline(sOlusturucuIcon[5], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[5], 255);
	TextDrawFont(sOlusturucuIcon[5], 4);
	TextDrawSetProportional(sOlusturucuIcon[5], 0);
	TextDrawSetShadow(sOlusturucuIcon[5], 0);
	TextDrawSetSelectable(sOlusturucuIcon[5], true);

	sOlusturucuIcon[6] = TextDrawCreate(302.005340, 133.416656, "hud:radar_bulldozer");
	TextDrawLetterSize(sOlusturucuIcon[6], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[6], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[6], 1);
	TextDrawColor(sOlusturucuIcon[6], -1);
	TextDrawSetShadow(sOlusturucuIcon[6], 0);
	TextDrawSetOutline(sOlusturucuIcon[6], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[6], 255);
	TextDrawFont(sOlusturucuIcon[6], 4);
	TextDrawSetProportional(sOlusturucuIcon[6], 0);
	TextDrawSetShadow(sOlusturucuIcon[6], 0);
	TextDrawSetSelectable(sOlusturucuIcon[6], true);

	sOlusturucuIcon[7] = TextDrawCreate(302.005340, 133.416656, "hud:radar_bulldozer");
	TextDrawLetterSize(sOlusturucuIcon[7], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[7], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[7], 1);
	TextDrawColor(sOlusturucuIcon[7], -1);
	TextDrawSetShadow(sOlusturucuIcon[7], 0);
	TextDrawSetOutline(sOlusturucuIcon[7], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[7], 255);
	TextDrawFont(sOlusturucuIcon[7], 4);
	TextDrawSetProportional(sOlusturucuIcon[7], 0);
	TextDrawSetShadow(sOlusturucuIcon[7], 0);
	TextDrawSetSelectable(sOlusturucuIcon[7], true);

	sOlusturucuIcon[8] = TextDrawCreate(324.005340, 133.416656, "hud:radar_burgershot");
	TextDrawLetterSize(sOlusturucuIcon[8], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[8], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[8], 1);
	TextDrawColor(sOlusturucuIcon[8], -1);
	TextDrawSetShadow(sOlusturucuIcon[8], 0);
	TextDrawSetOutline(sOlusturucuIcon[8], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[8], 255);
	TextDrawFont(sOlusturucuIcon[8], 4);
	TextDrawSetProportional(sOlusturucuIcon[8], 0);
	TextDrawSetShadow(sOlusturucuIcon[8], 0);
	TextDrawSetSelectable(sOlusturucuIcon[8], true);

	sOlusturucuIcon[9] = TextDrawCreate(345.005340, 133.416656, "hud:radar_cash");
	TextDrawLetterSize(sOlusturucuIcon[9], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[9], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[9], 1);
	TextDrawColor(sOlusturucuIcon[9], -1);
	TextDrawSetShadow(sOlusturucuIcon[9], 0);
	TextDrawSetOutline(sOlusturucuIcon[9], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[9], 255);
	TextDrawFont(sOlusturucuIcon[9], 4);
	TextDrawSetProportional(sOlusturucuIcon[9], 0);
	TextDrawSetShadow(sOlusturucuIcon[9], 0);
	TextDrawSetSelectable(sOlusturucuIcon[9], true);

	sOlusturucuIcon[10] = TextDrawCreate(365.005340, 133.416656, "hud:radar_catalinapink");
	TextDrawLetterSize(sOlusturucuIcon[10], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[10], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[10], 1);
	TextDrawColor(sOlusturucuIcon[10], -1);
	TextDrawSetShadow(sOlusturucuIcon[10], 0);
	TextDrawSetOutline(sOlusturucuIcon[10], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[10], 255);
	TextDrawFont(sOlusturucuIcon[10], 4);
	TextDrawSetProportional(sOlusturucuIcon[10], 0);
	TextDrawSetShadow(sOlusturucuIcon[10], 0);
	TextDrawSetSelectable(sOlusturucuIcon[10], true);

	sOlusturucuIcon[11] = TextDrawCreate(385.005340, 133.416656, "hud:radar_cesarviapando");
	TextDrawLetterSize(sOlusturucuIcon[11], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[11], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[11], 1);
	TextDrawColor(sOlusturucuIcon[11], -1);
	TextDrawSetShadow(sOlusturucuIcon[11], 0);
	TextDrawSetOutline(sOlusturucuIcon[11], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[11], 255);
	TextDrawFont(sOlusturucuIcon[11], 4);
	TextDrawSetProportional(sOlusturucuIcon[11], 0);
	TextDrawSetShadow(sOlusturucuIcon[11], 0);
	TextDrawSetSelectable(sOlusturucuIcon[11], true);

	sOlusturucuIcon[12] = TextDrawCreate(406.005340, 133.416656, "hud:radar_chicken");
	TextDrawLetterSize(sOlusturucuIcon[12], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[12], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[12], 1);
	TextDrawColor(sOlusturucuIcon[12], -1);
	TextDrawSetShadow(sOlusturucuIcon[12], 0);
	TextDrawSetOutline(sOlusturucuIcon[12], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[12], 255);
	TextDrawFont(sOlusturucuIcon[12], 4);
	TextDrawSetProportional(sOlusturucuIcon[12], 0);
	TextDrawSetShadow(sOlusturucuIcon[12], 0);
	TextDrawSetSelectable(sOlusturucuIcon[12], true);

	sOlusturucuIcon[13] = TextDrawCreate(425.005340, 133.416656, "hud:radar_cj");
	TextDrawLetterSize(sOlusturucuIcon[13], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[13], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[13], 1);
	TextDrawColor(sOlusturucuIcon[13], -1);
	TextDrawSetShadow(sOlusturucuIcon[13], 0);
	TextDrawSetOutline(sOlusturucuIcon[13], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[13], 255);
	TextDrawFont(sOlusturucuIcon[13], 4);
	TextDrawSetProportional(sOlusturucuIcon[13], 0);
	TextDrawSetShadow(sOlusturucuIcon[13], 0);
	TextDrawSetSelectable(sOlusturucuIcon[13], true);

	sOlusturucuIcon[14] = TextDrawCreate(189.807617, 164.916656, "hud:radar_crash1");
	TextDrawLetterSize(sOlusturucuIcon[14], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[14], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[14], 1);
	TextDrawColor(sOlusturucuIcon[14], -1);
	TextDrawSetShadow(sOlusturucuIcon[14], 0);
	TextDrawSetOutline(sOlusturucuIcon[14], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[14], 255);
	TextDrawFont(sOlusturucuIcon[14], 4);
	TextDrawSetProportional(sOlusturucuIcon[14], 0);
	TextDrawSetShadow(sOlusturucuIcon[14], 0);
	TextDrawSetSelectable(sOlusturucuIcon[14], true);

	sOlusturucuIcon[15] = TextDrawCreate(212.807617, 164.916656, "hud:radar_datedisco");
	TextDrawLetterSize(sOlusturucuIcon[15], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[15], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[15], 1);
	TextDrawColor(sOlusturucuIcon[15], -1);
	TextDrawSetShadow(sOlusturucuIcon[15], 0);
	TextDrawSetOutline(sOlusturucuIcon[15], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[15], 255);
	TextDrawFont(sOlusturucuIcon[15], 4);
	TextDrawSetProportional(sOlusturucuIcon[15], 0);
	TextDrawSetShadow(sOlusturucuIcon[15], 0);
	TextDrawSetSelectable(sOlusturucuIcon[15], true);

	sOlusturucuIcon[16] = TextDrawCreate(237.807617, 164.916656, "hud:radar_datedrink");
	TextDrawLetterSize(sOlusturucuIcon[16], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[16], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[16], 1);
	TextDrawColor(sOlusturucuIcon[16], -1);
	TextDrawSetShadow(sOlusturucuIcon[16], 0);
	TextDrawSetOutline(sOlusturucuIcon[16], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[16], 255);
	TextDrawFont(sOlusturucuIcon[16], 4);
	TextDrawSetProportional(sOlusturucuIcon[16], 0);
	TextDrawSetShadow(sOlusturucuIcon[16], 0);
	TextDrawSetSelectable(sOlusturucuIcon[16], true);

	sOlusturucuIcon[17] = TextDrawCreate(260.807617, 164.916656, "hud:radar_datefood");
	TextDrawLetterSize(sOlusturucuIcon[17], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[17], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[17], 1);
	TextDrawColor(sOlusturucuIcon[17], -1);
	TextDrawSetShadow(sOlusturucuIcon[17], 0);
	TextDrawSetOutline(sOlusturucuIcon[17], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[17], 255);
	TextDrawFont(sOlusturucuIcon[17], 4);
	TextDrawSetProportional(sOlusturucuIcon[17], 0);
	TextDrawSetShadow(sOlusturucuIcon[17], 0);
	TextDrawSetSelectable(sOlusturucuIcon[17], true);

	sOlusturucuIcon[18] = TextDrawCreate(280.807617, 164.916656, "hud:radar_diner");
	TextDrawLetterSize(sOlusturucuIcon[18], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[18], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[18], 1);
	TextDrawColor(sOlusturucuIcon[18], -1);
	TextDrawSetShadow(sOlusturucuIcon[18], 0);
	TextDrawSetOutline(sOlusturucuIcon[18], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[18], 255);
	TextDrawFont(sOlusturucuIcon[18], 4);
	TextDrawSetProportional(sOlusturucuIcon[18], 0);
	TextDrawSetShadow(sOlusturucuIcon[18], 0);
	TextDrawSetSelectable(sOlusturucuIcon[18], true);

	sOlusturucuIcon[19] = TextDrawCreate(302.807617, 164.916656, "hud:radar_emmetgun");
	TextDrawLetterSize(sOlusturucuIcon[19], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[19], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[19], 1);
	TextDrawColor(sOlusturucuIcon[19], -1);
	TextDrawSetShadow(sOlusturucuIcon[19], 0);
	TextDrawSetOutline(sOlusturucuIcon[19], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[19], 255);
	TextDrawFont(sOlusturucuIcon[19], 4);
	TextDrawSetProportional(sOlusturucuIcon[19], 0);
	TextDrawSetShadow(sOlusturucuIcon[19], 0);
	TextDrawSetSelectable(sOlusturucuIcon[19], true);

	sOlusturucuIcon[20] = TextDrawCreate(324.807617, 164.916656, "hud:radar_enemyattack");
	TextDrawLetterSize(sOlusturucuIcon[20], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[20], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[20], 1);
	TextDrawColor(sOlusturucuIcon[20], -1);
	TextDrawSetShadow(sOlusturucuIcon[20], 0);
	TextDrawSetOutline(sOlusturucuIcon[20], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[20], 255);
	TextDrawFont(sOlusturucuIcon[20], 4);
	TextDrawSetProportional(sOlusturucuIcon[20], 0);
	TextDrawSetShadow(sOlusturucuIcon[20], 0);
	TextDrawSetSelectable(sOlusturucuIcon[20], true);

	sOlusturucuIcon[21] = TextDrawCreate(346.807617, 164.916656, "hud:radar_fire");
	TextDrawLetterSize(sOlusturucuIcon[21], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[21], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[21], 1);
	TextDrawColor(sOlusturucuIcon[21], -1);
	TextDrawSetShadow(sOlusturucuIcon[21], 0);
	TextDrawSetOutline(sOlusturucuIcon[21], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[21], 255);
	TextDrawFont(sOlusturucuIcon[21], 4);
	TextDrawSetProportional(sOlusturucuIcon[21], 0);
	TextDrawSetShadow(sOlusturucuIcon[21], 0);
	TextDrawSetSelectable(sOlusturucuIcon[21], true);

	sOlusturucuIcon[22] = TextDrawCreate(367.807617, 164.916656, "hud:radar_flag");
	TextDrawLetterSize(sOlusturucuIcon[22], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[22], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[22], 1);
	TextDrawColor(sOlusturucuIcon[22], -1);
	TextDrawSetShadow(sOlusturucuIcon[22], 0);
	TextDrawSetOutline(sOlusturucuIcon[22], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[22], 255);
	TextDrawFont(sOlusturucuIcon[22], 4);
	TextDrawSetProportional(sOlusturucuIcon[22], 0);
	TextDrawSetShadow(sOlusturucuIcon[22], 0);
	TextDrawSetSelectable(sOlusturucuIcon[22], true);

	sOlusturucuIcon[23] = TextDrawCreate(389.807617, 164.916656, "hud:radar_gangb");
	TextDrawLetterSize(sOlusturucuIcon[23], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[23], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[23], 1);
	TextDrawColor(sOlusturucuIcon[23], -1);
	TextDrawSetShadow(sOlusturucuIcon[23], 0);
	TextDrawSetOutline(sOlusturucuIcon[23], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[23], 255);
	TextDrawFont(sOlusturucuIcon[23], 4);
	TextDrawSetProportional(sOlusturucuIcon[23], 0);
	TextDrawSetShadow(sOlusturucuIcon[23], 0);
	TextDrawSetSelectable(sOlusturucuIcon[23], true);

	sOlusturucuIcon[24] = TextDrawCreate(407.807617, 164.916656, "hud:radar_gangg");
	TextDrawLetterSize(sOlusturucuIcon[24], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[24], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[24], 1);
	TextDrawColor(sOlusturucuIcon[24], -1);
	TextDrawSetShadow(sOlusturucuIcon[24], 0);
	TextDrawSetOutline(sOlusturucuIcon[24], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[24], 255);
	TextDrawFont(sOlusturucuIcon[24], 4);
	TextDrawSetProportional(sOlusturucuIcon[24], 0);
	TextDrawSetShadow(sOlusturucuIcon[24], 0);
	TextDrawSetSelectable(sOlusturucuIcon[24], true);

	sOlusturucuIcon[25] = TextDrawCreate(425.807617, 164.916656, "hud:radar_gangn");
	TextDrawLetterSize(sOlusturucuIcon[25], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[25], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[25], 1);
	TextDrawColor(sOlusturucuIcon[25], -1);
	TextDrawSetShadow(sOlusturucuIcon[25], 0);
	TextDrawSetOutline(sOlusturucuIcon[25], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[25], 255);
	TextDrawFont(sOlusturucuIcon[25], 4);
	TextDrawSetProportional(sOlusturucuIcon[25], 0);
	TextDrawSetShadow(sOlusturucuIcon[25], 0);
	TextDrawSetSelectable(sOlusturucuIcon[25], true);

	sOlusturucuIcon[26] = TextDrawCreate(188.267272, 195.833358, "hud:radar_gangp");
	TextDrawLetterSize(sOlusturucuIcon[26], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[26], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[26], 1);
	TextDrawColor(sOlusturucuIcon[26], -1);
	TextDrawSetShadow(sOlusturucuIcon[26], 0);
	TextDrawSetOutline(sOlusturucuIcon[26], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[26], 255);
	TextDrawFont(sOlusturucuIcon[26], 4);
	TextDrawSetProportional(sOlusturucuIcon[26], 0);
	TextDrawSetShadow(sOlusturucuIcon[26], 0);
	TextDrawSetSelectable(sOlusturucuIcon[26], true);

	sOlusturucuIcon[27] = TextDrawCreate(212.267272, 195.833358, "hud:radar_gangy");
	TextDrawLetterSize(sOlusturucuIcon[27], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[27], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[27], 1);
	TextDrawColor(sOlusturucuIcon[27], -1);
	TextDrawSetShadow(sOlusturucuIcon[27], 0);
	TextDrawSetOutline(sOlusturucuIcon[27], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[27], 255);
	TextDrawFont(sOlusturucuIcon[27], 4);
	TextDrawSetProportional(sOlusturucuIcon[27], 0);
	TextDrawSetShadow(sOlusturucuIcon[27], 0);
	TextDrawSetSelectable(sOlusturucuIcon[27], true);

	sOlusturucuIcon[28] = TextDrawCreate(235.267272, 195.833358, "hud:radar_girlfriend");
	TextDrawLetterSize(sOlusturucuIcon[28], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[28], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[28], 1);
	TextDrawColor(sOlusturucuIcon[28], -1);
	TextDrawSetShadow(sOlusturucuIcon[28], 0);
	TextDrawSetOutline(sOlusturucuIcon[28], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[28], 255);
	TextDrawFont(sOlusturucuIcon[28], 4);
	TextDrawSetProportional(sOlusturucuIcon[28], 0);
	TextDrawSetShadow(sOlusturucuIcon[28], 0);
	TextDrawSetSelectable(sOlusturucuIcon[28], true);

	sOlusturucuIcon[29] = TextDrawCreate(260.267272, 195.833358, "hud:radar_gym");
	TextDrawLetterSize(sOlusturucuIcon[29], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[29], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[29], 1);
	TextDrawColor(sOlusturucuIcon[29], -1);
	TextDrawSetShadow(sOlusturucuIcon[29], 0);
	TextDrawSetOutline(sOlusturucuIcon[29], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[29], 255);
	TextDrawFont(sOlusturucuIcon[29], 4);
	TextDrawSetProportional(sOlusturucuIcon[29], 0);
	TextDrawSetShadow(sOlusturucuIcon[29], 0);
	TextDrawSetSelectable(sOlusturucuIcon[29], true);

	sOlusturucuIcon[30] = TextDrawCreate(283.267272, 195.833358, "hud:radar_hostpital");
	TextDrawLetterSize(sOlusturucuIcon[30], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[30], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[30], 1);
	TextDrawColor(sOlusturucuIcon[30], -1);
	TextDrawSetShadow(sOlusturucuIcon[30], 0);
	TextDrawSetOutline(sOlusturucuIcon[30], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[30], 255);
	TextDrawFont(sOlusturucuIcon[30], 4);
	TextDrawSetProportional(sOlusturucuIcon[30], 0);
	TextDrawSetShadow(sOlusturucuIcon[30], 0);
	TextDrawSetSelectable(sOlusturucuIcon[30], true);

	sOlusturucuIcon[31] = TextDrawCreate(307.267272, 195.833358, "hud:radar_impound");
	TextDrawLetterSize(sOlusturucuIcon[31], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[31], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[31], 1);
	TextDrawColor(sOlusturucuIcon[31], -1);
	TextDrawSetShadow(sOlusturucuIcon[31], 0);
	TextDrawSetOutline(sOlusturucuIcon[31], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[31], 255);
	TextDrawFont(sOlusturucuIcon[31], 4);
	TextDrawSetProportional(sOlusturucuIcon[31], 0);
	TextDrawSetShadow(sOlusturucuIcon[31], 0);
	TextDrawSetSelectable(sOlusturucuIcon[31], true);

	sOlusturucuIcon[32] = TextDrawCreate(331.267272, 195.833358, "hud:radar_locosyndicate");
	TextDrawLetterSize(sOlusturucuIcon[32], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[32], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[32], 1);
	TextDrawColor(sOlusturucuIcon[32], -1);
	TextDrawSetShadow(sOlusturucuIcon[32], 0);
	TextDrawSetOutline(sOlusturucuIcon[32], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[32], 255);
	TextDrawFont(sOlusturucuIcon[32], 4);
	TextDrawSetProportional(sOlusturucuIcon[32], 0);
	TextDrawSetShadow(sOlusturucuIcon[32], 0);
	TextDrawSetSelectable(sOlusturucuIcon[32], true);

	sOlusturucuIcon[33] = TextDrawCreate(356.267272, 195.833358, "hud:radar_maddog");
	TextDrawLetterSize(sOlusturucuIcon[33], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[33], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[33], 1);
	TextDrawColor(sOlusturucuIcon[33], -1);
	TextDrawSetShadow(sOlusturucuIcon[33], 0);
	TextDrawSetOutline(sOlusturucuIcon[33], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[33], 255);
	TextDrawFont(sOlusturucuIcon[33], 4);
	TextDrawSetProportional(sOlusturucuIcon[33], 0);
	TextDrawSetShadow(sOlusturucuIcon[33], 0);
	TextDrawSetSelectable(sOlusturucuIcon[33], true);

	sOlusturucuIcon[34] = TextDrawCreate(378.267272, 195.833358, "hud:radar_mafiacasino");
	TextDrawLetterSize(sOlusturucuIcon[34], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[34], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[34], 1);
	TextDrawColor(sOlusturucuIcon[34], -1);
	TextDrawSetShadow(sOlusturucuIcon[34], 0);
	TextDrawSetOutline(sOlusturucuIcon[34], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[34], 255);
	TextDrawFont(sOlusturucuIcon[34], 4);
	TextDrawSetProportional(sOlusturucuIcon[34], 0);
	TextDrawSetShadow(sOlusturucuIcon[34], 0);
	TextDrawSetSelectable(sOlusturucuIcon[34], true);

	sOlusturucuIcon[35] = TextDrawCreate(400.267272, 195.833358, "hud:radar_mcstrap");
	TextDrawLetterSize(sOlusturucuIcon[35], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[35], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[35], 1);
	TextDrawColor(sOlusturucuIcon[35], -1);
	TextDrawSetShadow(sOlusturucuIcon[35], 0);
	TextDrawSetOutline(sOlusturucuIcon[35], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[35], 255);
	TextDrawFont(sOlusturucuIcon[35], 4);
	TextDrawSetProportional(sOlusturucuIcon[35], 0);
	TextDrawSetShadow(sOlusturucuIcon[35], 0);
	TextDrawSetSelectable(sOlusturucuIcon[35], true);

	sOlusturucuIcon[36] = TextDrawCreate(424.267272, 195.833358, "hud:radar_modgarage");
	TextDrawLetterSize(sOlusturucuIcon[36], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[36], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[36], 1);
	TextDrawColor(sOlusturucuIcon[36], -1);
	TextDrawSetShadow(sOlusturucuIcon[36], 0);
	TextDrawSetOutline(sOlusturucuIcon[36], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[36], 255);
	TextDrawFont(sOlusturucuIcon[36], 4);
	TextDrawSetProportional(sOlusturucuIcon[36], 0);
	TextDrawSetShadow(sOlusturucuIcon[36], 0);
	TextDrawSetSelectable(sOlusturucuIcon[36], true);

	sOlusturucuIcon[37] = TextDrawCreate(188.601089, 228.500045, "hud:radar_ogloc");
	TextDrawLetterSize(sOlusturucuIcon[37], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[37], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[37], 1);
	TextDrawColor(sOlusturucuIcon[37], -1);
	TextDrawSetShadow(sOlusturucuIcon[37], 0);
	TextDrawSetOutline(sOlusturucuIcon[37], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[37], 255);
	TextDrawFont(sOlusturucuIcon[37], 4);
	TextDrawSetProportional(sOlusturucuIcon[37], 0);
	TextDrawSetShadow(sOlusturucuIcon[37], 0);
	TextDrawSetSelectable(sOlusturucuIcon[37], true);

	sOlusturucuIcon[38] = TextDrawCreate(212.495666, 228.500030, "hud:radar_pizza");
	TextDrawLetterSize(sOlusturucuIcon[38], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[38], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[38], 1);
	TextDrawColor(sOlusturucuIcon[38], -1);
	TextDrawSetShadow(sOlusturucuIcon[38], 0);
	TextDrawSetOutline(sOlusturucuIcon[38], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[38], 255);
	TextDrawFont(sOlusturucuIcon[38], 4);
	TextDrawSetProportional(sOlusturucuIcon[38], 0);
	TextDrawSetShadow(sOlusturucuIcon[38], 0);
	TextDrawSetSelectable(sOlusturucuIcon[38], true);

	sOlusturucuIcon[39] = TextDrawCreate(237.495666, 228.500030, "hud:radar_police");
	TextDrawLetterSize(sOlusturucuIcon[39], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[39], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[39], 1);
	TextDrawColor(sOlusturucuIcon[39], -1);
	TextDrawSetShadow(sOlusturucuIcon[39], 0);
	TextDrawSetOutline(sOlusturucuIcon[39], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[39], 255);
	TextDrawFont(sOlusturucuIcon[39], 4);
	TextDrawSetProportional(sOlusturucuIcon[39], 0);
	TextDrawSetShadow(sOlusturucuIcon[39], 0);
	TextDrawSetSelectable(sOlusturucuIcon[39], true);

	sOlusturucuIcon[40] = TextDrawCreate(260.495666, 228.500030, "hud:radar_qmark");
	TextDrawLetterSize(sOlusturucuIcon[40], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[40], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[40], 1);
	TextDrawColor(sOlusturucuIcon[40], -1);
	TextDrawSetShadow(sOlusturucuIcon[40], 0);
	TextDrawSetOutline(sOlusturucuIcon[40], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[40], 255);
	TextDrawFont(sOlusturucuIcon[40], 4);
	TextDrawSetProportional(sOlusturucuIcon[40], 0);
	TextDrawSetShadow(sOlusturucuIcon[40], 0);
	TextDrawSetSelectable(sOlusturucuIcon[40], true);

	sOlusturucuIcon[41] = TextDrawCreate(283.495666, 228.500030, "hud:radar_race");
	TextDrawLetterSize(sOlusturucuIcon[41], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[41], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[41], 1);
	TextDrawColor(sOlusturucuIcon[41], -1);
	TextDrawSetShadow(sOlusturucuIcon[41], 0);
	TextDrawSetOutline(sOlusturucuIcon[41], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[41], 255);
	TextDrawFont(sOlusturucuIcon[41], 4);
	TextDrawSetProportional(sOlusturucuIcon[41], 0);
	TextDrawSetShadow(sOlusturucuIcon[41], 0);
	TextDrawSetSelectable(sOlusturucuIcon[41], true);

	sOlusturucuIcon[42] = TextDrawCreate(306.495666, 228.500030, "hud:radar_ryder");
	TextDrawLetterSize(sOlusturucuIcon[42], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[42], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[42], 1);
	TextDrawColor(sOlusturucuIcon[42], -1);
	TextDrawSetShadow(sOlusturucuIcon[42], 0);
	TextDrawSetOutline(sOlusturucuIcon[42], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[42], 255);
	TextDrawFont(sOlusturucuIcon[42], 4);
	TextDrawSetProportional(sOlusturucuIcon[42], 0);
	TextDrawSetShadow(sOlusturucuIcon[42], 0);
	TextDrawSetSelectable(sOlusturucuIcon[42], true);

	sOlusturucuIcon[43] = TextDrawCreate(330.495666, 228.500030, "hud:radar_school");
	TextDrawLetterSize(sOlusturucuIcon[43], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[43], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[43], 1);
	TextDrawColor(sOlusturucuIcon[43], -1);
	TextDrawSetShadow(sOlusturucuIcon[43], 0);
	TextDrawSetOutline(sOlusturucuIcon[43], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[43], 255);
	TextDrawFont(sOlusturucuIcon[43], 4);
	TextDrawSetProportional(sOlusturucuIcon[43], 0);
	TextDrawSetShadow(sOlusturucuIcon[43], 0);
	TextDrawSetSelectable(sOlusturucuIcon[43], true);

	sOlusturucuIcon[44] = TextDrawCreate(352.495666, 228.500030, "hud:radar_spray");
	TextDrawLetterSize(sOlusturucuIcon[44], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[44], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[44], 1);
	TextDrawColor(sOlusturucuIcon[44], -1);
	TextDrawSetShadow(sOlusturucuIcon[44], 0);
	TextDrawSetOutline(sOlusturucuIcon[44], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[44], 255);
	TextDrawFont(sOlusturucuIcon[44], 4);
	TextDrawSetProportional(sOlusturucuIcon[44], 0);
	TextDrawSetShadow(sOlusturucuIcon[44], 0);
	TextDrawSetSelectable(sOlusturucuIcon[44], true);

	sOlusturucuIcon[45] = TextDrawCreate(373.495666, 228.500030, "hud:radar_sweet");
	TextDrawLetterSize(sOlusturucuIcon[45], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[45], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[45], 1);
	TextDrawColor(sOlusturucuIcon[45], -1);
	TextDrawSetShadow(sOlusturucuIcon[45], 0);
	TextDrawSetOutline(sOlusturucuIcon[45], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[45], 255);
	TextDrawFont(sOlusturucuIcon[45], 4);
	TextDrawSetProportional(sOlusturucuIcon[45], 0);
	TextDrawSetShadow(sOlusturucuIcon[45], 0);
	TextDrawSetSelectable(sOlusturucuIcon[45], true);

	sOlusturucuIcon[46] = TextDrawCreate(395.495666, 227.500030, "hud:radar_tattoo");
	TextDrawLetterSize(sOlusturucuIcon[46], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[46], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[46], 1);
	TextDrawColor(sOlusturucuIcon[46], -1);
	TextDrawSetShadow(sOlusturucuIcon[46], 0);
	TextDrawSetOutline(sOlusturucuIcon[46], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[46], 255);
	TextDrawFont(sOlusturucuIcon[46], 4);
	TextDrawSetProportional(sOlusturucuIcon[46], 0);
	TextDrawSetShadow(sOlusturucuIcon[46], 0);
	TextDrawSetSelectable(sOlusturucuIcon[46], true);

	sOlusturucuIcon[47] = TextDrawCreate(417.495666, 227.500030, "hud:radar_thetruth");
	TextDrawLetterSize(sOlusturucuIcon[47], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[47], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[47], 1);
	TextDrawColor(sOlusturucuIcon[47], -1);
	TextDrawSetShadow(sOlusturucuIcon[47], 0);
	TextDrawSetOutline(sOlusturucuIcon[47], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[47], 255);
	TextDrawFont(sOlusturucuIcon[47], 4);
	TextDrawSetProportional(sOlusturucuIcon[47], 0);
	TextDrawSetShadow(sOlusturucuIcon[47], 0);
	TextDrawSetSelectable(sOlusturucuIcon[47], true);

	sOlusturucuIcon[48] = TextDrawCreate(188.857315, 261.916687, "hud:radar_toreno");
	TextDrawLetterSize(sOlusturucuIcon[48], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[48], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[48], 1);
	TextDrawColor(sOlusturucuIcon[48], -1);
	TextDrawSetShadow(sOlusturucuIcon[48], 0);
	TextDrawSetOutline(sOlusturucuIcon[48], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[48], 255);
	TextDrawFont(sOlusturucuIcon[48], 4);
	TextDrawSetProportional(sOlusturucuIcon[48], 0);
	TextDrawSetShadow(sOlusturucuIcon[48], 0);
	TextDrawSetSelectable(sOlusturucuIcon[48], true);

	sOlusturucuIcon[49] = TextDrawCreate(211.857315, 261.916687, "hud:radar_torenoranch");
	TextDrawLetterSize(sOlusturucuIcon[49], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[49], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[49], 1);
	TextDrawColor(sOlusturucuIcon[49], -1);
	TextDrawSetShadow(sOlusturucuIcon[49], 0);
	TextDrawSetOutline(sOlusturucuIcon[49], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[49], 255);
	TextDrawFont(sOlusturucuIcon[49], 4);
	TextDrawSetProportional(sOlusturucuIcon[49], 0);
	TextDrawSetShadow(sOlusturucuIcon[49], 0);
	TextDrawSetSelectable(sOlusturucuIcon[49], true);

	sOlusturucuIcon[50] = TextDrawCreate(236.857330, 261.916687, "hud:radar_triads");
	TextDrawLetterSize(sOlusturucuIcon[50], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[50], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[50], 1);
	TextDrawColor(sOlusturucuIcon[50], -1);
	TextDrawSetShadow(sOlusturucuIcon[50], 0);
	TextDrawSetOutline(sOlusturucuIcon[50], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[50], 255);
	TextDrawFont(sOlusturucuIcon[50], 4);
	TextDrawSetProportional(sOlusturucuIcon[50], 0);
	TextDrawSetShadow(sOlusturucuIcon[50], 0);
	TextDrawSetSelectable(sOlusturucuIcon[50], true);

	sOlusturucuIcon[51] = TextDrawCreate(260.857330, 261.916687, "hud:radar_triadscasino");
	TextDrawLetterSize(sOlusturucuIcon[51], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[51], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[51], 1);
	TextDrawColor(sOlusturucuIcon[51], -1);
	TextDrawSetShadow(sOlusturucuIcon[51], 0);
	TextDrawSetOutline(sOlusturucuIcon[51], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[51], 255);
	TextDrawFont(sOlusturucuIcon[51], 4);
	TextDrawSetProportional(sOlusturucuIcon[51], 0);
	TextDrawSetShadow(sOlusturucuIcon[51], 0);
	TextDrawSetSelectable(sOlusturucuIcon[51], true);

	sOlusturucuIcon[52] = TextDrawCreate(283.857330, 261.916687, "hud:radar_truck");
	TextDrawLetterSize(sOlusturucuIcon[52], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[52], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[52], 1);
	TextDrawColor(sOlusturucuIcon[52], -1);
	TextDrawSetShadow(sOlusturucuIcon[52], 0);
	TextDrawSetOutline(sOlusturucuIcon[52], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[52], 255);
	TextDrawFont(sOlusturucuIcon[52], 4);
	TextDrawSetProportional(sOlusturucuIcon[52], 0);
	TextDrawSetShadow(sOlusturucuIcon[52], 0);
	TextDrawSetSelectable(sOlusturucuIcon[52], true);

	sOlusturucuIcon[53] = TextDrawCreate(307.857330, 261.916687, "hud:radar_tshirt");
	TextDrawLetterSize(sOlusturucuIcon[53], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[53], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[53], 1);
	TextDrawColor(sOlusturucuIcon[53], -1);
	TextDrawSetShadow(sOlusturucuIcon[53], 0);
	TextDrawSetOutline(sOlusturucuIcon[53], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[53], 255);
	TextDrawFont(sOlusturucuIcon[53], 4);
	TextDrawSetProportional(sOlusturucuIcon[53], 0);
	TextDrawSetShadow(sOlusturucuIcon[53], 0);
	TextDrawSetSelectable(sOlusturucuIcon[53], true);

	sOlusturucuIcon[54] = TextDrawCreate(330.857330, 261.916687, "hud:radar_woozie");
	TextDrawLetterSize(sOlusturucuIcon[54], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[54], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[54], 1);
	TextDrawColor(sOlusturucuIcon[54], -1);
	TextDrawSetShadow(sOlusturucuIcon[54], 0);
	TextDrawSetOutline(sOlusturucuIcon[54], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[54], 255);
	TextDrawFont(sOlusturucuIcon[54], 4);
	TextDrawSetProportional(sOlusturucuIcon[54], 0);
	TextDrawSetShadow(sOlusturucuIcon[54], 0);
	TextDrawSetSelectable(sOlusturucuIcon[54], true);

	sOlusturucuIcon[55] = TextDrawCreate(354.857330, 261.916687, "hud:radar_zero");
	TextDrawLetterSize(sOlusturucuIcon[55], 0.000000, 0.000000);
	TextDrawTextSize(sOlusturucuIcon[55], 11.000000, 12.000000);
	TextDrawAlignment(sOlusturucuIcon[55], 1);
	TextDrawColor(sOlusturucuIcon[55], -1);
	TextDrawSetShadow(sOlusturucuIcon[55], 0);
	TextDrawSetOutline(sOlusturucuIcon[55], 0);
	TextDrawBackgroundColor(sOlusturucuIcon[55], 255);
	TextDrawFont(sOlusturucuIcon[55], 4);
	TextDrawSetProportional(sOlusturucuIcon[55], 0);
	TextDrawSetShadow(sOlusturucuIcon[55], 0);
	TextDrawSetSelectable(sOlusturucuIcon[55], true);

	SagBosKutu = TextDrawCreate(495.000000, 101.000000, "_");
	TextDrawBackgroundColor(SagBosKutu, 255);
	TextDrawFont(SagBosKutu, 1);
	TextDrawLetterSize(SagBosKutu, 0.500000, 2.799998);
	TextDrawColor(SagBosKutu, -1);
	TextDrawSetOutline(SagBosKutu, 0);
	TextDrawSetProportional(SagBosKutu, 1);
	TextDrawSetShadow(SagBosKutu, 1);
	TextDrawUseBox(SagBosKutu, 1);
	TextDrawBoxColor(SagBosKutu, 0x00000033);
	TextDrawTextSize(SagBosKutu, 610.000000, 0.000000);

	SagBarText_Y[0] = TextDrawCreate(506.449798, 103.416656, "box");
	TextDrawLetterSize(SagBarText_Y[0], 0.000000, 1.196467);
	TextDrawTextSize(SagBarText_Y[0], 519.000000, 0.000000);
	TextDrawAlignment(SagBarText_Y[0], 1);
	TextDrawColor(SagBarText_Y[0], -1);
	TextDrawUseBox(SagBarText_Y[0], 1);
	TextDrawBoxColor(SagBarText_Y[0], 51);
	TextDrawSetShadow(SagBarText_Y[0], 0);
	TextDrawSetOutline(SagBarText_Y[0], 0);
	TextDrawBackgroundColor(SagBarText_Y[0], 255);
	TextDrawFont(SagBarText_Y[0], 1);
	TextDrawSetProportional(SagBarText_Y[0], 1);
	TextDrawSetShadow(SagBarText_Y[0], 0);

	SagBarText_Y[1] = TextDrawCreate(506.323822, 102.583343, "hud:radar_girlfriend");
	TextDrawLetterSize(SagBarText_Y[1], 0.000000, 0.000000);
	TextDrawTextSize(SagBarText_Y[1], 12.000000, 12.000000);
	TextDrawAlignment(SagBarText_Y[1], 1);
	TextDrawColor(SagBarText_Y[1], -16776961);
	TextDrawSetShadow(SagBarText_Y[1], 0);
	TextDrawSetOutline(SagBarText_Y[1], 0);
	TextDrawBackgroundColor(SagBarText_Y[1], 255);
	TextDrawFont(SagBarText_Y[1], 4);
	TextDrawSetProportional(SagBarText_Y[1], 0);
	TextDrawSetShadow(SagBarText_Y[1], 0);

	SagBarText_Y[2] = TextDrawCreate(556.399963, 103.416656, "box");
	TextDrawLetterSize(SagBarText_Y[2], 0.000000, 1.196467);
	TextDrawTextSize(SagBarText_Y[2], 568.950134, 0.000000);
	TextDrawAlignment(SagBarText_Y[2], 1);
	TextDrawColor(SagBarText_Y[2], -1);
	TextDrawUseBox(SagBarText_Y[2], 1);
	TextDrawBoxColor(SagBarText_Y[2], 51);
	TextDrawSetShadow(SagBarText_Y[2], 0);
	TextDrawSetOutline(SagBarText_Y[2], 0);
	TextDrawBackgroundColor(SagBarText_Y[2], 255);
	TextDrawFont(SagBarText_Y[2], 1);
	TextDrawSetProportional(SagBarText_Y[2], 1);
	TextDrawSetShadow(SagBarText_Y[2], 0);

	SagBarText_Y[3] = TextDrawCreate(552.983337, 98.000068, "");
	TextDrawLetterSize(SagBarText_Y[3], 0.000000, 0.000000);
	TextDrawTextSize(SagBarText_Y[3], 19.000000, 21.000000);
	TextDrawAlignment(SagBarText_Y[3], 1);
	TextDrawColor(SagBarText_Y[3], -1);
	TextDrawSetShadow(SagBarText_Y[3], 0);
	TextDrawSetOutline(SagBarText_Y[3], 0);
	TextDrawBackgroundColor(SagBarText_Y[3], 0);
	TextDrawFont(SagBarText_Y[3], 5);
	TextDrawSetProportional(SagBarText_Y[3], 0);
	TextDrawSetShadow(SagBarText_Y[3], 0);
	TextDrawSetPreviewModel(SagBarText_Y[3], 1242);
	TextDrawSetPreviewRot(SagBarText_Y[3], 0.000000, 0.000000, 0.000000, 1.000000);

	EsyalarText[0] = TextDrawCreate(167.715972, 113.000000, "box");
	TextDrawLetterSize(EsyalarText[0], 0.000000, 27.944358);
	TextDrawTextSize(EsyalarText[0], 483.000000, 0.000000);
	TextDrawAlignment(EsyalarText[0], 1);
	TextDrawColor(EsyalarText[0], -1);
	TextDrawUseBox(EsyalarText[0], 1);
	TextDrawBoxColor(EsyalarText[0], 102);
	TextDrawSetShadow(EsyalarText[0], 0);
	TextDrawSetOutline(EsyalarText[0], 0);
	TextDrawBackgroundColor(EsyalarText[0], 255);
	TextDrawFont(EsyalarText[0], 1);
	TextDrawSetProportional(EsyalarText[0], 1);
	TextDrawSetShadow(EsyalarText[0], 0);

	EsyalarText[1] = TextDrawCreate(181.134719, 98.416671, "");
	TextDrawLetterSize(EsyalarText[1], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[1], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[1], 1);
	TextDrawColor(EsyalarText[1], -1);
	TextDrawSetShadow(EsyalarText[1], 0);
	TextDrawSetOutline(EsyalarText[1], 0);
	TextDrawBackgroundColor(EsyalarText[1], 0);
	TextDrawFont(EsyalarText[1], 5);
	TextDrawSetProportional(EsyalarText[1], 0);
	TextDrawSetShadow(EsyalarText[1], 0);
	TextDrawSetSelectable(EsyalarText[1], true);
	TextDrawSetPreviewModel(EsyalarText[1], 1702);
	TextDrawSetPreviewRot(EsyalarText[1], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[2] = TextDrawCreate(245.634719, 98.416671, "");
	TextDrawLetterSize(EsyalarText[2], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[2], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[2], 1);
	TextDrawColor(EsyalarText[2], -1);
	TextDrawSetShadow(EsyalarText[2], 0);
	TextDrawSetOutline(EsyalarText[2], 0);
	TextDrawBackgroundColor(EsyalarText[2], 0);
	TextDrawFont(EsyalarText[2], 5);
	TextDrawSetProportional(EsyalarText[2], 0);
	TextDrawSetShadow(EsyalarText[2], 0);
	TextDrawSetSelectable(EsyalarText[2], true);
	TextDrawSetPreviewModel(EsyalarText[2], 1702);
	TextDrawSetPreviewRot(EsyalarText[2], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[3] = TextDrawCreate(305.634735, 98.416671, "");
	TextDrawLetterSize(EsyalarText[3], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[3], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[3], 1);
	TextDrawColor(EsyalarText[3], -1);
	TextDrawSetShadow(EsyalarText[3], 0);
	TextDrawSetOutline(EsyalarText[3], 0);
	TextDrawBackgroundColor(EsyalarText[3], 0);
	TextDrawFont(EsyalarText[3], 5);
	TextDrawSetProportional(EsyalarText[3], 0);
	TextDrawSetShadow(EsyalarText[3], 0);
	TextDrawSetSelectable(EsyalarText[3], true);
	TextDrawSetPreviewModel(EsyalarText[3], 1702);
	TextDrawSetPreviewRot(EsyalarText[3], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[4] = TextDrawCreate(366.666198, 98.416671, "");
	TextDrawLetterSize(EsyalarText[4], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[4], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[4], 1);
	TextDrawColor(EsyalarText[4], -1);
	TextDrawSetShadow(EsyalarText[4], 0);
	TextDrawSetOutline(EsyalarText[4], 0);
	TextDrawBackgroundColor(EsyalarText[4], 0);
	TextDrawFont(EsyalarText[4], 5);
	TextDrawSetProportional(EsyalarText[4], 0);
	TextDrawSetShadow(EsyalarText[4], 0);
	TextDrawSetSelectable(EsyalarText[4], true);
	TextDrawSetPreviewModel(EsyalarText[4], 1702);
	TextDrawSetPreviewRot(EsyalarText[4], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[5] = TextDrawCreate(426.666198, 98.416671, "");
	TextDrawLetterSize(EsyalarText[5], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[5], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[5], 1);
	TextDrawColor(EsyalarText[5], -1);
	TextDrawSetShadow(EsyalarText[5], 0);
	TextDrawSetOutline(EsyalarText[5], 0);
	TextDrawBackgroundColor(EsyalarText[5], 0);
	TextDrawFont(EsyalarText[5], 5);
	TextDrawSetProportional(EsyalarText[5], 0);
	TextDrawSetShadow(EsyalarText[5], 0);
	TextDrawSetSelectable(EsyalarText[5], true);
	TextDrawSetPreviewModel(EsyalarText[5], 1702);
	TextDrawSetPreviewRot(EsyalarText[5], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[6] = TextDrawCreate(180.666198, 168.916671, "");
	TextDrawLetterSize(EsyalarText[6], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[6], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[6], 1);
	TextDrawColor(EsyalarText[6], -1);
	TextDrawSetShadow(EsyalarText[6], 0);
	TextDrawSetOutline(EsyalarText[6], 0);
	TextDrawBackgroundColor(EsyalarText[6], 0);
	TextDrawFont(EsyalarText[6], 5);
	TextDrawSetProportional(EsyalarText[6], 0);
	TextDrawSetShadow(EsyalarText[6], 0);
	TextDrawSetSelectable(EsyalarText[6], true);
	TextDrawSetPreviewModel(EsyalarText[6], 1702);
	TextDrawSetPreviewRot(EsyalarText[6], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[7] = TextDrawCreate(245.166198, 168.916671, "");
	TextDrawLetterSize(EsyalarText[7], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[7], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[7], 1);
	TextDrawColor(EsyalarText[7], -1);
	TextDrawSetShadow(EsyalarText[7], 0);
	TextDrawSetOutline(EsyalarText[7], 0);
	TextDrawBackgroundColor(EsyalarText[7], 0);
	TextDrawFont(EsyalarText[7], 5);
	TextDrawSetProportional(EsyalarText[7], 0);
	TextDrawSetShadow(EsyalarText[7], 0);
	TextDrawSetSelectable(EsyalarText[7], true);
	TextDrawSetPreviewModel(EsyalarText[7], 1702);
	TextDrawSetPreviewRot(EsyalarText[7], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[8] = TextDrawCreate(304.134735, 168.916671, "");
	TextDrawLetterSize(EsyalarText[8], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[8], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[8], 1);
	TextDrawColor(EsyalarText[8], -1);
	TextDrawSetShadow(EsyalarText[8], 0);
	TextDrawSetOutline(EsyalarText[8], 0);
	TextDrawBackgroundColor(EsyalarText[8], 0);
	TextDrawFont(EsyalarText[8], 5);
	TextDrawSetProportional(EsyalarText[8], 0);
	TextDrawSetShadow(EsyalarText[8], 0);
	TextDrawSetSelectable(EsyalarText[8], true);
	TextDrawSetPreviewModel(EsyalarText[8], 1702);
	TextDrawSetPreviewRot(EsyalarText[8], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[9] = TextDrawCreate(365.634735, 168.916671, "");
	TextDrawLetterSize(EsyalarText[9], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[9], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[9], 1);
	TextDrawColor(EsyalarText[9], -1);
	TextDrawSetShadow(EsyalarText[9], 0);
	TextDrawSetOutline(EsyalarText[9], 0);
	TextDrawBackgroundColor(EsyalarText[9], 0);
	TextDrawFont(EsyalarText[9], 5);
	TextDrawSetProportional(EsyalarText[9], 0);
	TextDrawSetShadow(EsyalarText[9], 0);
	TextDrawSetSelectable(EsyalarText[9], true);
	TextDrawSetPreviewModel(EsyalarText[9], 1702);
	TextDrawSetPreviewRot(EsyalarText[9], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[10] = TextDrawCreate(425.634735, 168.916671, "");
	TextDrawLetterSize(EsyalarText[10], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[10], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[10], 1);
	TextDrawColor(EsyalarText[10], -1);
	TextDrawSetShadow(EsyalarText[10], 0);
	TextDrawSetOutline(EsyalarText[10], 0);
	TextDrawBackgroundColor(EsyalarText[10], 0);
	TextDrawFont(EsyalarText[10], 5);
	TextDrawSetProportional(EsyalarText[10], 0);
	TextDrawSetShadow(EsyalarText[10], 0);
	TextDrawSetSelectable(EsyalarText[10], true);
	TextDrawSetPreviewModel(EsyalarText[10], 1702);
	TextDrawSetPreviewRot(EsyalarText[10], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[11] = TextDrawCreate(179.634735, 242.416671, "");
	TextDrawLetterSize(EsyalarText[11], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[11], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[11], 1);
	TextDrawColor(EsyalarText[11], -1);
	TextDrawSetShadow(EsyalarText[11], 0);
	TextDrawSetOutline(EsyalarText[11], 0);
	TextDrawBackgroundColor(EsyalarText[11], 0);
	TextDrawFont(EsyalarText[11], 5);
	TextDrawSetProportional(EsyalarText[11], 0);
	TextDrawSetShadow(EsyalarText[11], 0);
	TextDrawSetSelectable(EsyalarText[11], true);
	TextDrawSetPreviewModel(EsyalarText[11], 1702);
	TextDrawSetPreviewRot(EsyalarText[11], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[12] = TextDrawCreate(244.134735, 242.416671, "");
	TextDrawLetterSize(EsyalarText[12], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[12], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[12], 1);
	TextDrawColor(EsyalarText[12], -1);
	TextDrawSetShadow(EsyalarText[12], 0);
	TextDrawSetOutline(EsyalarText[12], 0);
	TextDrawBackgroundColor(EsyalarText[12], 0);
	TextDrawFont(EsyalarText[12], 5);
	TextDrawSetProportional(EsyalarText[12], 0);
	TextDrawSetShadow(EsyalarText[12], 0);
	TextDrawSetSelectable(EsyalarText[12], true);
	TextDrawSetPreviewModel(EsyalarText[12], 1702);
	TextDrawSetPreviewRot(EsyalarText[12], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[13] = TextDrawCreate(304.134735, 242.416671, "");
	TextDrawLetterSize(EsyalarText[13], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[13], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[13], 1);
	TextDrawColor(EsyalarText[13], -1);
	TextDrawSetShadow(EsyalarText[13], 0);
	TextDrawSetOutline(EsyalarText[13], 0);
	TextDrawBackgroundColor(EsyalarText[13], 0);
	TextDrawFont(EsyalarText[13], 5);
	TextDrawSetProportional(EsyalarText[13], 0);
	TextDrawSetShadow(EsyalarText[13], 0);
	TextDrawSetSelectable(EsyalarText[13], true);
	TextDrawSetPreviewModel(EsyalarText[13], 1702);
	TextDrawSetPreviewRot(EsyalarText[13], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[14] = TextDrawCreate(365.634735, 242.416671, "");
	TextDrawLetterSize(EsyalarText[14], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[14], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[14], 1);
	TextDrawColor(EsyalarText[14], -1);
	TextDrawSetShadow(EsyalarText[14], 0);
	TextDrawSetOutline(EsyalarText[14], 0);
	TextDrawBackgroundColor(EsyalarText[14], 0);
	TextDrawFont(EsyalarText[14], 5);
	TextDrawSetProportional(EsyalarText[14], 0);
	TextDrawSetShadow(EsyalarText[14], 0);
	TextDrawSetSelectable(EsyalarText[14], true);
	TextDrawSetPreviewModel(EsyalarText[14], 1702);
	TextDrawSetPreviewRot(EsyalarText[14], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[15] = TextDrawCreate(425.634735, 242.416671, "");
	TextDrawLetterSize(EsyalarText[15], 0.000000, 0.000000);
	TextDrawTextSize(EsyalarText[15], 51.000000, 113.000000);
	TextDrawAlignment(EsyalarText[15], 1);
	TextDrawColor(EsyalarText[15], -1);
	TextDrawSetShadow(EsyalarText[15], 0);
	TextDrawSetOutline(EsyalarText[15], 0);
	TextDrawBackgroundColor(EsyalarText[15], 0);
	TextDrawFont(EsyalarText[15], 5);
	TextDrawSetProportional(EsyalarText[15], 0);
	TextDrawSetShadow(EsyalarText[15], 0);
	TextDrawSetSelectable(EsyalarText[15], true);
	TextDrawSetPreviewModel(EsyalarText[15], 1702);
	TextDrawSetPreviewRot(EsyalarText[15], 0.000000, 0.000000, 0.000000, 1.399999);

	EsyalarText[16] = TextDrawCreate(297.964874, 341.083496, "Geri_<<");
	TextDrawLetterSize(EsyalarText[16], 0.463719, 2.095833);
	TextDrawTextSize(EsyalarText[16], 357.000000, 10.000000);
	TextDrawAlignment(EsyalarText[16], 1);
	TextDrawColor(EsyalarText[16], -1);
	TextDrawBoxColor(EsyalarText[16], 255);
	TextDrawSetShadow(EsyalarText[16], 0);
	TextDrawSetOutline(EsyalarText[16], 0);
	TextDrawBackgroundColor(EsyalarText[16], 255);
	TextDrawFont(EsyalarText[16], 1);
	TextDrawSetProportional(EsyalarText[16], 1);
	TextDrawSetShadow(EsyalarText[16], 0);
	TextDrawSetSelectable(EsyalarText[16], true);
	
	
	// Polis 0 - 5
    AddPlayerClass(300, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    AddPlayerClass(301, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    AddPlayerClass(304, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    AddPlayerClass(305, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    AddPlayerClass(306, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    AddPlayerClass(307, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    //

	AddPlayerClass(2, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(5, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(7, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(9, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(15, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(21, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(23, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(24, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(25, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(28, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(30, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(32, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(38, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(37, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(46, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(48, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(51, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(52, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(55, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(59, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(78, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(79, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(86, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(91, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(93, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(98, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(101, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(127, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(134, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(136, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(137, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(140, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(141, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(143, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(152, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(155, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(162, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(182, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(185, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(193, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(212, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(214, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(217, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(240, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(241, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(249, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(250, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(264, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(270, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(273, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(293, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(291, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(290, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(298, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(299, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(296, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(1, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(3, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(6, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(11, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(12, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(19, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(33, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(40, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(63, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(64, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(72, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);


	lazerler[0] = CreateDynamicObject(18643,-1.462,169.746,1245.199,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[1] = CreateDynamicObject(18643,-1.462,169.746,1243.471,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
	lazerler[2] = CreateDynamicObject(18643,-1.462,169.746,1243.981,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[3] = CreateDynamicObject(18643,-0.786,169.746,1244.387,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[4] = CreateDynamicObject(18643,-0.595,169.752,1244.790,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[5] = CreateDynamicObject(18643,1.430,169.750,1245.199,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[6] = CreateDynamicObject(18643,0.270,169.757,1244.793,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[7] = CreateDynamicObject(18643,0.867,169.751,1243.981,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[8] = CreateDynamicObject(18643,-0.475,169.746,1243.981,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[9] = CreateDynamicObject(18643,1.366,169.750,1243.471,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
	//kapiKolu =
	CreateDynamicObject(2886,2.433,169.375,1244.529,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
	LazerBolge = CreateDynamicRectangle(1.583049, 175.681182, -2.108211, 170.189453);
	CreateDynamic3DTextLabel("{3BFF79}[LAZER]\n{FFFFFF}Lazerleri devre dýþý býrakmak için\n{FF2197}/LazerHack\n{FFFFFF}yazýn.", 0xFFFF00AA, 2.8802, 169.3826, 1243.9690 + 1.0, 3.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
	CreateDynamic3DTextLabel("{00FF00}/BankaSoy", 0xFFFF00AA, -0.4912, 173.0103, 1243.9690 + 0.5, 3.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);

	aSifirlaLan = SetTimer("aSifirla", 1000, true);
	return 1;
}

public OnGameModeExit()
{
	new a[][10] =
	{ "?","?","?"};
	#pragma unused a
	
	for (new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if (IsPlayerConnected(i))
		{
			OnPlayerDisconnect(i, 1);
		}
	}
	
	TextDrawDestroy(Duyuru);
	KillTimer(Paused_Timer);
	
	foreach(new id: CeteSavaslar)
    {
        if(CeteSavasMekan[id][ceteTip] >= 2 && CeteSavasMekan[id][ceteMekanSahip] != -1 && CeteSavasMekan[id][ceteBolgeSure] >= 1)
		{
		    new query[80 + 6 + 5];
      		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '%d' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][ceteBolgeSure], id);
			mysql_query(g_SQL, query);
		}
    }
    
    mysql_close(g_SQL);
	
	for(new i = 0; i < 18; i++)
	{
        if(i < 14) TextDrawDestroy(AltBar[i]);
        if(i < 6) TextDrawDestroy(Kutucuklar[i]);
		if(i < 15) TextDrawDestroy(MeslekBar[i]);
		if(i < 17) TextDrawDestroy(EsyalarText[i]);
	}
	for(new i = 0; i < 56; i++)
	{
		TextDrawDestroy(sOlusturucuIcon[i]);
	}
	for(new i = 0; i < 5; i++)
    {
        TextDrawDestroy(ETK_Text[i]);
    }
 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		e_oIslem[i][e_Id] = -1;
		e_oIslem[i][e_Davet] = -1;
		e_oIslem[i][e_Katilim] = -1;

  		g_oIslem[i][g_Id] = -1;
		g_oIslem[i][g_Davet] = -1;
		g_oIslem[i][g_Katilim] = -1;
	}
 	for(new i = 0; i < MAX_BARIKAT; i++)
	{
	    if(BarikatIslem[i][barikatDurum] == 0) continue;
	    BarikatIslem[i][barikatDurum] = 0;
	    format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
		BarikatIslem[i][barikatPoss][0] = 0.0;
	    BarikatIslem[i][barikatPoss][1] = 0.0;
	    BarikatIslem[i][barikatPoss][2] = 0.0;
	    BarikatIslem[i][barikatPoss][3] = 0.0;
	    BarikatIslem[i][barikatPoss][4] = 0.0;
	    BarikatIslem[i][barikatPoss][5] = 0.0;
	    BarikatIslem[i][barikatSure] = 0;
	    DestroyDynamicObject(BarikatIslem[i][b_objeId]);
	    BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
	    DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
	    BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
	    Iter_Remove(Barikatlar, i);
	}
	return 1;
}


public OnPlayerRequestClass(playerid, classid)
{
    KarakterEkraninda[playerid] = true;
	if(KarakterEkraninda[playerid] == true)
	{
	    karakterOptimize[playerid]++;
		GirisMapYukle(playerid);
	}
	if(karakterOptimize[playerid] == 1) { Streamer_UpdateEx(playerid, 3754.7292, -604.6215, 8.0730); }
	SetPlayerTime(playerid, 12, 0);
 	SetPlayerPos(playerid, 3754.7292, -604.6215, 8.0730);
	SetPlayerFacingAngle(playerid, 170.6832);
	SetPlayerCameraPos(playerid, 3753.6848, -609.5642, 9.4532);
	SetPlayerCameraLookAt(playerid, 3753.9146, -608.5921, 9.2832);
	if(sitroen[playerid] == 1){
	}
    TakimMeslegi(playerid, classid);
	return 1;
}

TakimMeslegi(playerid, sira)
{
	switch(sira)
	{
	    case 0..5:
	    {
	        GameTextForPlayer(playerid, "~b~~h~~h~~h~Polis - Serbest", 2100, 4);
			SetPVarInt(playerid, "PolisKarakterrrr", GetPlayerSkin(playerid));
			if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
			gTeam[playerid] = POLIS;
			SetPVarInt(playerid, "Secim_", 1);
			SetPlayerColor(playerid, POLIS_RENK);
			SetPlayerTeam(playerid, UST_MESLEK);
	    }
	    case 6..73:
	    {
	        GameTextForPlayer(playerid, "~w~~h~Sivil", 2100, 4);
	        gTeam[playerid] = SIVIL;
	        SetPlayerTeam(playerid, NO_TEAM);
		}
	}
	return 1;
}

public OnPlayerFloodControl(playerid, iCount, iTimeSpan)
{
	if(iCount > 2 && iTimeSpan < 8000)
	{
		BanEx(playerid, "Bot");
	}
}

stock GetMaxIP(p_ip[])
{
	new ip[32+1];
	new x = 0;
	new ip_adet = 0;
	for(x=0; x<MAX_PLAYERS; x++) {
		if(IsPlayerConnected(x)) {
		    GetPlayerIp(x,ip,32);
		    if(!strcmp(ip,p_ip)) ip_adet++;
		}
	}
	return ip_adet;
}

public OnPlayerConnect(playerid)
{
    KeybindIslem[playerid][keybind_ID] = INVALID_PLAYER_ID;
	Iterator_Temizle(PMEngel{playerid});
	BotCheck[playerid] = false;
	SetPVarInt(playerid, "OzelMekanda", 0);
    sagoBanKorumasi[playerid] = 0;
    SetPVarInt(playerid, "GirilenCeteMekan", -1);
    etkLocal[playerid] = 0;
	new tara[MAX_PLAYER_NAME], bool: yasakNicck = false;
	format(tara, MAX_PLAYER_NAME, getName(playerid));
	for(new i = 0; i < strlen(tara); i++)
	{
	    switch(tara[i])
	    {
	        case '0'..'9': yasakNicck = true;
			case 'A'..'Z': yasakNicck = true;
			case 'a'..'z': yasakNicck = true;
			case '_': yasakNicck = true;
			case '.': yasakNicck = true;
			case '[': yasakNicck = true;
			case ']': yasakNicck = true;
			case '(': yasakNicck = true;
			case ')': yasakNicck = true;
			case '$': yasakNicck = true;
			case '@': yasakNicck = true;
			default: yasakNicck = false;
	    }
	}
	if(!yasakNicck)
	{
	    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Geçersiz Nick", "{FF2937}Nickinizde geçerli olmayan bir kelime bulundu. Lütfen farklý bir nick ile girin.", "Kapat", "");
        SetTimerEx("GuleGule", 1100, false, "d", playerid);
	    return 1;
	}
	kumarda[playerid] = false;
    AFkTime[playerid] = 0;
	ATMMod[playerid] = false;
	SetPVarInt(playerid, "Cetedeee", -1);
	HizBarOn[playerid] = 0;
	KillTimer(HizBarTimer[playerid]);
    BarikatKurdum[playerid] = -1;
    BarikatDuzenle[playerid] = false;
    barikatSayi[playerid] = 0;
	Etkde[playerid] = false;
	format(tara, MAX_PLAYER_NAME, "-");
	Bombam[playerid] = 0;
	etkYaptim[playerid] = 0;
	kumarCount[playerid] = 0;
	if(strcmp("con", getName(playerid), false) == 0) return BanEx(playerid, "Yasakli Isim");
	if(strcmp("con_", getName(playerid), false) == 0) return BanEx(playerid, "Yasakli Isim");
	if(strcmp("_con", getName(playerid), false) == 0) return BanEx(playerid, "Yasakli Isim");
	new connect_ip[32+1], asss[75];
	GetPlayerIp(playerid,connect_ip,32);
	new adet_ip = GetMaxIP(connect_ip);
	if(adet_ip > 7)
	{
	    format(asss, sizeof(asss), "[Anti Bot] %s - %s bot tespit edildi ve ip ban atildi.", getName(playerid), connect_ip);
	    BanEx(playerid, asss);
	    return 1;
	}
    PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/0yms4lrfsf/nexEditYSN.mp3");
	for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid, GirisText[i]);
    KarakterEkraninda[playerid] = false;
    karakterOptimize[playerid] = 0;
    sitroen[playerid] = 0;
    Uyaric[playerid] = 0;
    LogGin[playerid] = 0;
    SetPVarInt(playerid, "EleGeciriyomLan", -1);
    ParaKorumasi[playerid] = 0;
    for(new E_PLAYERS:e; e < E_PLAYERS; ++e) oyuncuData[playerid][e] = 0;
    for(new basaridata:e; e < basaridata; ++e) BasariIslem[playerid][e] = 0;
    for(new x = 0; x < 81; x++) girisObjeler[playerid][x] = INVALID_OBJECT_ID;
	GPSOyuncu[playerid][gpsAktif] = false;
    KillTimer(GPSOyuncu[playerid][gps_timer]);
	SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
	SetPVarInt(playerid, "gps_cpID", -1);
    PlayerCete[playerid] = -1;
    g_MysqlRaceCheck[playerid]++;
    SetPVarInt(playerid, "BanYemis", 0);
    TickSure[playerid] = 0;
    new query[58 + 24 + 16], Cache:VeriCek, gIp[16];
    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", getName(playerid));
	VeriCek = mysql_query(g_SQL, query);
   	new rows = cache_num_rows();
	if(rows)
	{
	    new dia1[300 + 24 + 145 + 66 + 66], _xx[65];
	    SetPVarInt(playerid, "BanYemis", 1);
	    new bAdmin[24], se[75], btarih, timestamp, xO[17];
	    cache_get_value_name(0, "Banlayan", bAdmin);
	    cache_get_value_name(0, "Sebep", se);
	    cache_get_value_name(0, "IpAdres", xO);
	    cache_get_value_int(0, "YGA", btarih);
	    cache_get_value_int(0, "BanSure", timestamp);
	    if(timestamp == 1)
	    {
			format(dia1, sizeof(dia1), "{FF2937}Bu hesap sunucuda kalýcý olarak yasaklanmýþ:\n\n");
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, bAdmin);
            TimeStampTamTarih(btarih, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}Hiç bir zaman\n", dia1);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, se);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kalýcý Ban", dia1, "Kapat", "");
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
			return 1;
		}
  	    if(timestamp == 2)
	    {
			format(dia1, sizeof(dia1), "{FF2937}Bu hesap sunucuda offline olarak kalýcý yasaklanmýþ:\n\n");
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, bAdmin);
			TimeStampTamTarih(btarih, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}Hiç bir zaman\n", dia1);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, se);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kalýcý Ban - Offline", dia1, "Kapat", "");
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
			return 1;
		}
	    if(timestamp <= gettime())
	    {
  	 		mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", getName(playerid));
			mysql_query(g_SQL, query);
			
			mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `banlistesi` WHERE `IpAdres` = '%s' LIMIT 1", xO);
			mysql_query(g_SQL, query);
	    }
	    else
	    {
			format(dia1, sizeof(dia1), "{FF2937}Bu hesap sunucuda süreli olarak yasaklanmýþ;\n\n");
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, bAdmin);
			TimeStampTamTarih(btarih, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
			TimeStampTamTarih(timestamp, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}%s\n", dia1, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, se);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlmasýna:\t{FFFFFF}%s\n\n", dia1, ConvertTime(timestamp - gettime()));
			format(dia1, sizeof(dia1), "%s{42D6FF}Hata sonucu bu mesajý aldýðýnýzý düþünüyorsanýz forum adresimizde konu açýn.\n", dia1);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Süre Ban", dia1, "Kapat", "");
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
		}
	}
	cache_delete(VeriCek);
	GetPlayerIp(playerid, gIp, sizeof(gIp));
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` WHERE `IpAdres` = '%s' LIMIT 1", gIp);
	VeriCek = mysql_query(g_SQL, query);
   	new rowsx = cache_num_rows();
	if(rowsx)
	{
	    new dia1[300 + 24 + 145 + 66 + 66], _xx[65];
	    SetPVarInt(playerid, "BanYemis", 1);
	    new bAdmin[24], se[75], btarih, timestamp, xO[17];
	    cache_get_value_name(0, "Banlayan", bAdmin);
	    cache_get_value_name(0, "Sebep", se);
	    cache_get_value_name(0, "IpAdres", xO);
	    cache_get_value_int(0, "YGA", btarih);
	    cache_get_value_int(0, "BanSure", timestamp);
	    if(timestamp == 1)
	    {
			format(dia1, sizeof(dia1), "{FF2937}Bu hesap sunucuda kalýcý olarak yasaklanmýþ:\n\n");
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, bAdmin);
			TimeStampTamTarih(btarih, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}Hiç bir zaman\n", dia1);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, se);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kalýcý Ban", dia1, "Kapat", "");
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
			return 1;
		}
  	    if(timestamp == 2)
	    {
			format(dia1, sizeof(dia1), "{FF2937}Bu hesap sunucuda offline olarak kalýcý yasaklanmýþ:\n\n");
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, bAdmin);
			TimeStampTamTarih(btarih, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}Hiç bir zaman\n", dia1);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, se);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kalýcý Ban - Offline", dia1, "Kapat", "");
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
			return 1;
		}
	    if(timestamp <= gettime())
	    {
  	 		mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", getName(playerid));
			mysql_query(g_SQL, query);

			mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `banlistesi` WHERE `IpAdres` = '%s' LIMIT 1", xO);
			mysql_query(g_SQL, query);
	    }
	    else
	    {
			format(dia1, sizeof(dia1), "{FF2937}Bu hesap sunucuda süreli olarak yasaklanmýþ;\n\n");
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, bAdmin);
			TimeStampTamTarih(btarih, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
			TimeStampTamTarih(timestamp, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}%s\n", dia1, _xx);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, se);
			format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlmasýna:\t{FFFFFF}%s\n\n", dia1, ConvertTime(timestamp - gettime()));
			format(dia1, sizeof(dia1), "%s{42D6FF}Hata sonucu bu mesajý aldýðýnýzý düþünüyorsanýz forum adresimizde konu açýn.\n", dia1);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Süre Ban", dia1, "Kapat", "");
	        TogglePlayerSpectating(playerid, 1);
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
		}
	}
	cache_delete(VeriCek);

	new xip[16], formato[48 + 16];
	GetPlayerIp(playerid, xip, sizeof xip); // 
	if(strcmp(xip, "127.0.0.1", false) != 0 && strcmp(xip, "212.253.217.64", false) != 0 && strcmp(xip, "212.253.200.232", false) != 0)
	{   // www.shroomery.org/ythan/proxycheck.php
		format(formato, sizeof formato, "proxy.mind-media.com/block/proxycheck.php?ip=%s", xip);
		HTTP(playerid, HTTP_GET, formato, "", "MyHttpResponse");
	}

	mysql_format(g_SQL, query, sizeof query, "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", getName(playerid));
	mysql_tquery(g_SQL, query, "OnPlayerDataLoaded", "dd", playerid, g_MysqlRaceCheck[playerid]);
	
	SetPlayerTeam(playerid, NO_TEAM);

	SetPVarInt(playerid, "SpawnOldum", 0);
	
 	for(new i = 0; i < sizeof(ZoneYukle); i++)
	{
	    GangZoneShowForPlayer(playerid, gz_Olustur[i], ZoneYukle[i][gz_Renk]);
	}

	AimbotWarnings[playerid] = 0;
	soygunParasi[playerid] = 0;
	soygunCount[playerid] = 0;

	e_oIslem[playerid][e_Id] = -1;
    e_oIslem[playerid][e_Davet] = -1;
    e_oIslem[playerid][e_Katilim] = -1;

 	g_oIslem[playerid][g_Id] = -1;
    g_oIslem[playerid][g_Davet] = -1;
    g_oIslem[playerid][g_Katilim] = -1;

    IzlemeModu[playerid][izledigimID] = INVALID_PLAYER_ID;
    IzlemeModu[playerid][izlemeModu] = false;
    Izleniyorum[playerid] = 0;

    AntiHackFlood[playerid] = 0;

    kafaYazi[playerid] = CreateDynamic3DTextLabel("", 0xFFFFFFFF, 0.0, 0.0, 0.7, 25.0, playerid);

    for(new i = 0; i < N_ARAC_KAPASITE; i++) aracSlotu[playerid][i] = 0;

    foreach(new b: Bolgeler) GangZoneShowForPlayer(playerid, BolgeIslem[b][zoneID], 0xEDD83488);

    PlayerCete[playerid] = -1;
    TeklifAttigim[playerid] = -1;
    onayCount[playerid] = 0;
    OnayTeklif[playerid] = -1;
    GirisZoneYukle(playerid);
    VipIslem[playerid][MotorDusmeDurum] = false;

	SagBarr[playerid][0] = CreatePlayerTextDraw(playerid, 483.399597, 422.266967, "~r~~h~~h~~h~Exp: ~w~~h~50000/50000");
	PlayerTextDrawLetterSize(playerid, SagBarr[playerid][0], 0.180500, 1.282665);
	PlayerTextDrawAlignment(playerid, SagBarr[playerid][0], 2);
	PlayerTextDrawColor(playerid, SagBarr[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][0], 1);
	PlayerTextDrawSetOutline(playerid, SagBarr[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, SagBarr[playerid][0], 17);
	PlayerTextDrawFont(playerid, SagBarr[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, SagBarr[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][0], 1);

	SagBarr[playerid][1] = CreatePlayerTextDraw(playerid, 394.699279, 422.266967, "~r~~h~~h~~h~Level: ~w~~h~1/50");
	PlayerTextDrawLetterSize(playerid, SagBarr[playerid][1], 0.180500, 1.282665);
	PlayerTextDrawAlignment(playerid, SagBarr[playerid][1], 1);
	PlayerTextDrawColor(playerid, SagBarr[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][1], 1);
	PlayerTextDrawSetOutline(playerid, SagBarr[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, SagBarr[playerid][1], 17);
	PlayerTextDrawFont(playerid, SagBarr[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, SagBarr[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][1], 1);

	SagBarr[playerid][2] = CreatePlayerTextDraw(playerid, 326.749572, 422.266967, "~r~~h~~h~~h~Basari: ~w~~h~1/32");
	PlayerTextDrawLetterSize(playerid, SagBarr[playerid][2], 0.180500, 1.282665);
	PlayerTextDrawAlignment(playerid, SagBarr[playerid][2], 1);
	PlayerTextDrawColor(playerid, SagBarr[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][2], 1);
	PlayerTextDrawSetOutline(playerid, SagBarr[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, SagBarr[playerid][2], 17);
	PlayerTextDrawFont(playerid, SagBarr[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, SagBarr[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][2], 1);

	SagBarr[playerid][3] = CreatePlayerTextDraw(playerid, 270.599822, 422.266967, "~r~~h~~h~~h~FPS: ~w~~h~100");
	PlayerTextDrawLetterSize(playerid, SagBarr[playerid][3], 0.180500, 1.282665);
	PlayerTextDrawAlignment(playerid, SagBarr[playerid][3], 1);
	PlayerTextDrawColor(playerid, SagBarr[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][3], 1);
	PlayerTextDrawSetOutline(playerid, SagBarr[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, SagBarr[playerid][3], 17);
	PlayerTextDrawFont(playerid, SagBarr[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, SagBarr[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, SagBarr[playerid][3], 1);

    ExpBar[playerid] = CreatePlayerProgressBar(playerid, 537.000000, 427.000000, 102.000000, 5.000000, 1721355519, 500.000000, BAR_DIRECTION_RIGHT);
    SavasBar[playerid] = CreatePlayerProgressBar(playerid, 637.000000, 418.000000, 10.000000, 180.000000, -427941121, 100.000000, BAR_DIRECTION_UP);

	ParaLevel[playerid][0] = CreatePlayerTextDraw(playerid, 329.824401, 78.583351, "Level_Atladiniz~n~(2)");
	PlayerTextDrawLetterSize(playerid, ParaLevel[playerid][0], 0.280795, 1.568331);
	PlayerTextDrawTextSize(playerid, ParaLevel[playerid][0], 0.000000, 109.000000);
	PlayerTextDrawAlignment(playerid, ParaLevel[playerid][0], 2);
	PlayerTextDrawColor(playerid, ParaLevel[playerid][0], -342543617);
	PlayerTextDrawUseBox(playerid, ParaLevel[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, ParaLevel[playerid][0], 102);
	PlayerTextDrawSetShadow(playerid, ParaLevel[playerid][0], 1);
	PlayerTextDrawSetOutline(playerid, ParaLevel[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, ParaLevel[playerid][0], 51);
	PlayerTextDrawFont(playerid, ParaLevel[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, ParaLevel[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, ParaLevel[playerid][0], 1);

	ParaLevel[playerid][1] = CreatePlayerTextDraw(playerid, 329.824218, 111.833381, "$500,000~n~+250_Exp");
	PlayerTextDrawLetterSize(playerid, ParaLevel[playerid][1], 0.316872, 1.329167);
	PlayerTextDrawTextSize(playerid, ParaLevel[playerid][1], 0.000000, 109.000000);
	PlayerTextDrawAlignment(playerid, ParaLevel[playerid][1], 2);
	PlayerTextDrawColor(playerid, ParaLevel[playerid][1], -1594490369);
	PlayerTextDrawUseBox(playerid, ParaLevel[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, ParaLevel[playerid][1], 102);
	PlayerTextDrawSetShadow(playerid, ParaLevel[playerid][1], 1);
	PlayerTextDrawSetOutline(playerid, ParaLevel[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, ParaLevel[playerid][1], 51);
	PlayerTextDrawFont(playerid, ParaLevel[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, ParaLevel[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, ParaLevel[playerid][1], 1);

	ParaLevel[playerid][2] = CreatePlayerTextDraw(playerid, 270.321746, 106.583343, "-");
	PlayerTextDrawLetterSize(playerid, ParaLevel[playerid][2], 10.083855, 0.660833);
	PlayerTextDrawAlignment(playerid, ParaLevel[playerid][2], 1);
	PlayerTextDrawColor(playerid, ParaLevel[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, ParaLevel[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, ParaLevel[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, ParaLevel[playerid][2], 255);
	PlayerTextDrawFont(playerid, ParaLevel[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, ParaLevel[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, ParaLevel[playerid][2], 0);

	SagBarText[playerid][0] = CreatePlayerTextDraw(playerid, 536.940673, 100.750007, "Can:~n~150");
	PlayerTextDrawLetterSize(playerid, SagBarText[playerid][0], 0.204158, 0.876666);
	PlayerTextDrawAlignment(playerid, SagBarText[playerid][0], 2);
	PlayerTextDrawColor(playerid, SagBarText[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][0], 1);
	PlayerTextDrawSetOutline(playerid, SagBarText[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, SagBarText[playerid][0], 34);
	PlayerTextDrawFont(playerid, SagBarText[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, SagBarText[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][0], 1);

	SagBarText[playerid][1] = CreatePlayerTextDraw(playerid, 587.977966, 101.916671, "Zirh:~n~150");
	PlayerTextDrawLetterSize(playerid, SagBarText[playerid][1], 0.204158, 0.876666);
	PlayerTextDrawAlignment(playerid, SagBarText[playerid][1], 2);
	PlayerTextDrawColor(playerid, SagBarText[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][1], 1);
	PlayerTextDrawSetOutline(playerid, SagBarText[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, SagBarText[playerid][1], 34);
	PlayerTextDrawFont(playerid, SagBarText[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, SagBarText[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][1], 1);

	SagBarText[playerid][2] = CreatePlayerTextDraw(playerid, 605.583923, 117.966735, "]]]]]]]]]]]");
	PlayerTextDrawLetterSize(playerid, SagBarText[playerid][2], 0.266470, 1.133332);
	PlayerTextDrawAlignment(playerid, SagBarText[playerid][2], 3);
	PlayerTextDrawColor(playerid, SagBarText[playerid][2], 255);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, SagBarText[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, SagBarText[playerid][2], 255);
	PlayerTextDrawFont(playerid, SagBarText[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, SagBarText[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][2], 0);

	SagBarText[playerid][3] = CreatePlayerTextDraw(playerid, 605.583923, 117.966735, "]]]]]]]]]]]]");
	PlayerTextDrawLetterSize(playerid, SagBarText[playerid][3], 0.266470, 1.133332);
	PlayerTextDrawAlignment(playerid, SagBarText[playerid][3], 3);
	PlayerTextDrawColor(playerid, SagBarText[playerid][3], -5963521);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, SagBarText[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, SagBarText[playerid][3], 255);
	PlayerTextDrawFont(playerid, SagBarText[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, SagBarText[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, SagBarText[playerid][3], 0);

	PolisLoadSelect[playerid][0] = CreatePlayerTextDraw(playerid, 270.153656, 118.833335, "");
	PlayerTextDrawLetterSize(playerid, PolisLoadSelect[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PolisLoadSelect[playerid][0], 99.000000, 156.000000);
	PlayerTextDrawAlignment(playerid, PolisLoadSelect[playerid][0], 1);
	PlayerTextDrawColor(playerid, PolisLoadSelect[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawFont(playerid, PolisLoadSelect[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, PolisLoadSelect[playerid][0], true);
	PlayerTextDrawSetPreviewModel(playerid, PolisLoadSelect[playerid][0], 281);
	PlayerTextDrawSetPreviewRot(playerid, PolisLoadSelect[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);

	PolisLoadSelect[playerid][1] = CreatePlayerTextDraw(playerid, 259.377624, 240.166625, "ld_beat:left");
	PlayerTextDrawLetterSize(playerid, PolisLoadSelect[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PolisLoadSelect[playerid][1], 25.000000, 23.000000);
	PlayerTextDrawAlignment(playerid, PolisLoadSelect[playerid][1], 1);
	PlayerTextDrawColor(playerid, PolisLoadSelect[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PolisLoadSelect[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PolisLoadSelect[playerid][1], 255);
	PlayerTextDrawFont(playerid, PolisLoadSelect[playerid][1], 4);
	PlayerTextDrawSetProportional(playerid, PolisLoadSelect[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, PolisLoadSelect[playerid][1], true);

	PolisLoadSelect[playerid][2] = CreatePlayerTextDraw(playerid, 365.777282, 240.166625, "ld_beat:right");
	PlayerTextDrawLetterSize(playerid, PolisLoadSelect[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PolisLoadSelect[playerid][2], 25.000000, 23.000000);
	PlayerTextDrawAlignment(playerid, PolisLoadSelect[playerid][2], 1);
	PlayerTextDrawColor(playerid, PolisLoadSelect[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PolisLoadSelect[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PolisLoadSelect[playerid][2], 255);
	PlayerTextDrawFont(playerid, PolisLoadSelect[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, PolisLoadSelect[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, PolisLoadSelect[playerid][2], true);

	SoyulanBar[playerid][0] = CreatePlayerTextDraw(playerid, 30.000000, 231.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][0], 255);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][0], 0.500000, 12.000000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, SoyulanBar[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, SoyulanBar[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, SoyulanBar[playerid][0], 102);
	PlayerTextDrawTextSize(playerid, SoyulanBar[playerid][0], 147.000000, 0.000000);

	SoyulanBar[playerid][1] = CreatePlayerTextDraw(playerid, 73.000000, 230.000000, "SOYGUN");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][1], 17);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][1], 0.210000, 1.300000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][1], -414434049);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][1], 1);

	SoyulanBar[playerid][2] = CreatePlayerTextDraw(playerid, 33.000000, 250.000000, "Soyulan Yer:");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][2], 17);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][2], 0.210000, 1.300000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][2], -1748080385);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][2], 1);

	SoyulanBar[playerid][3] = CreatePlayerTextDraw(playerid, 33.000000, 265.000000, "Kebabci Celalin Mekani");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][3], 17);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][3], 0.210000, 1.300000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][3], 1);

	SoyulanBar[playerid][4] = CreatePlayerTextDraw(playerid, 33.000000, 280.000000, "Calinan Para:");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][4], 17);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][4], 0.210000, 1.300000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][4], -1748080385);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][4], 1);

	SoyulanBar[playerid][5] = CreatePlayerTextDraw(playerid, 33.000000, 295.000000, "$5,000");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][5], 17);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][5], 0.210000, 1.300000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][5], 1);

	SoyulanBar[playerid][6] = CreatePlayerTextDraw(playerid, 32.000000, 317.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][6], 255);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][6], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, SoyulanBar[playerid][6], 1);
	PlayerTextDrawUseBox(playerid, SoyulanBar[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, SoyulanBar[playerid][6], -157548289);
	PlayerTextDrawTextSize(playerid, SoyulanBar[playerid][6], 145.000000, 0.000000);

	SoyulanBar[playerid][7] = CreatePlayerTextDraw(playerid, 32.000000, 317.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][7], 255);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][7], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, SoyulanBar[playerid][7], 1);
	PlayerTextDrawUseBox(playerid, SoyulanBar[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, SoyulanBar[playerid][7], -2487041);
	PlayerTextDrawTextSize(playerid, SoyulanBar[playerid][7], 145.000000, 0.000000);

	SoyulanBar[playerid][8] = CreatePlayerTextDraw(playerid, 73.000000, 315.000000, "00:25");
	PlayerTextDrawBackgroundColor(playerid, SoyulanBar[playerid][8], 21);
	PlayerTextDrawFont(playerid, SoyulanBar[playerid][8], 1);
	PlayerTextDrawLetterSize(playerid, SoyulanBar[playerid][8], 0.210000, 1.300000);
	PlayerTextDrawColor(playerid, SoyulanBar[playerid][8], 169883647);
	PlayerTextDrawSetOutline(playerid, SoyulanBar[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, SoyulanBar[playerid][8], 1);
	
	TextYazi[playerid][0] = CreatePlayerTextDraw(playerid, 330.000000, 400.000000, " ");
	PlayerTextDrawAlignment(playerid, TextYazi[playerid][0], 2);
	PlayerTextDrawBackgroundColor(playerid, TextYazi[playerid][0], 34);
	PlayerTextDrawFont(playerid, TextYazi[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, TextYazi[playerid][0], 0.190000, 1.000000);
	PlayerTextDrawColor(playerid, TextYazi[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, TextYazi[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, TextYazi[playerid][0], 1);

	TextYazi[playerid][1] = CreatePlayerTextDraw(playerid, 330.000000, 388.000000, " ");
	PlayerTextDrawAlignment(playerid, TextYazi[playerid][1], 2);
	PlayerTextDrawBackgroundColor(playerid, TextYazi[playerid][1], 34);
	PlayerTextDrawFont(playerid, TextYazi[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, TextYazi[playerid][1], 0.190000, 1.000000);
	PlayerTextDrawColor(playerid, TextYazi[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, TextYazi[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, TextYazi[playerid][1], 1);

	TextYazi[playerid][2] = CreatePlayerTextDraw(playerid, 330.000000, 376.000000, " ");
	PlayerTextDrawAlignment(playerid, TextYazi[playerid][2], 2);
	PlayerTextDrawBackgroundColor(playerid, TextYazi[playerid][2], 34);
	PlayerTextDrawFont(playerid, TextYazi[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, TextYazi[playerid][2], 0.190000, 1.000000);
	PlayerTextDrawColor(playerid, TextYazi[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, TextYazi[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, TextYazi[playerid][2], 1);
	
	HizBari[playerid][0] = CreatePlayerTextDraw(playerid, 539.852294, 416.494537, "box");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][0], 0.000000, -0.384999);
	PlayerTextDrawTextSize(playerid, HizBari[playerid][0], 615.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][0], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, HizBari[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, HizBari[playerid][0], 696302079);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][0], 255);
	PlayerTextDrawFont(playerid, HizBari[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][0], 0);

	HizBari[playerid][1] = CreatePlayerTextDraw(playerid, 615.000305, 402.193603, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][1], 0.188500, 1.431332);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][1], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][1], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][1], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][1], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][1], 1);

	HizBari[playerid][2] = CreatePlayerTextDraw(playerid, 612.151000, 397.794677, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][2], 0.190500, 2.017555);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][2], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][2], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][2], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][2], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][2], 1);

	HizBari[playerid][3] = CreatePlayerTextDraw(playerid, 609.101745, 394.695434, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][3], 0.190500, 2.403778);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][3], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][3], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][3], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][3], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][3], 1);

	HizBari[playerid][4] = CreatePlayerTextDraw(playerid, 606.152465, 392.146057, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][4], 0.186999, 2.738001);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][4], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][4], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][4], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][4], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][4], 1);

	HizBari[playerid][5] = CreatePlayerTextDraw(playerid, 603.003234, 389.396728, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][5], 0.186499, 3.149557);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][5], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][5], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][5], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][5], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][5], 1);

	HizBari[playerid][6] = CreatePlayerTextDraw(playerid, 600.153930, 386.697387, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][6], 0.184500, 3.510892);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][6], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][6], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][6], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][6], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][6], 1);

	HizBari[playerid][7] = CreatePlayerTextDraw(playerid, 597.004699, 384.697875, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][7], 0.185500, 3.728448);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][7], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][7], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][7], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][7], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][7], 1);

	HizBari[playerid][8] = CreatePlayerTextDraw(playerid, 594.055419, 382.548400, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][8], 0.185000, 4.028228);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][8], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][8], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][8], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][8], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][8], 1);

	HizBari[playerid][9] = CreatePlayerTextDraw(playerid, 591.156127, 379.749084, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][9], 0.184500, 4.387572);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][9], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][9], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][9], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][9], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][9], 1);

	HizBari[playerid][10] = CreatePlayerTextDraw(playerid, 588.006896, 376.949768, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][10], 0.175000, 4.754466);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][10], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][10], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][10], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][10], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][10], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][10], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][10], 1);

	HizBari[playerid][11] = CreatePlayerTextDraw(playerid, 585.057617, 373.300659, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][11], 0.182000, 5.204024);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][11], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][11], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][11], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][11], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][11], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][11], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][11], 1);

	HizBari[playerid][12] = CreatePlayerTextDraw(playerid, 582.058349, 369.701538, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][12], 0.180000, 5.680916);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][12], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][12], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][12], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][12], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][12], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][12], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][12], 1);

	HizBari[playerid][13] = CreatePlayerTextDraw(playerid, 579.209167, 365.080291, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][13], 0.180000, 6.270930);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][13], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][13], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][13], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][13], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][13], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][13], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][13], 1);

	HizBari[playerid][14] = CreatePlayerTextDraw(playerid, 576.059814, 360.903686, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][14], 0.180000, 6.790942);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][14], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][14], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][14], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][14], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][14], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][14], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][14], 1);

	HizBari[playerid][15] = CreatePlayerTextDraw(playerid, 573.060546, 355.205078, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][15], 0.180000, 7.570960);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][15], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][15], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][15], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][15], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][15], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][15], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][15], 1);

	HizBari[playerid][16] = CreatePlayerTextDraw(playerid, 570.161254, 350.056335, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][16], 0.180000, 8.260975);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][16], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][16], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][16], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][16], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][16], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][16], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][16], 1);

	HizBari[playerid][17] = CreatePlayerTextDraw(playerid, 567.211975, 345.907348, "I");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][17], 0.180000, 8.770987);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][17], 1);
	PlayerTextDrawColor(playerid, HizBari[playerid][17], -1448498689);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][17], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][17], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][17], 17);
	PlayerTextDrawFont(playerid, HizBari[playerid][17], 1);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][17], 1);

	HizBari[playerid][18] = CreatePlayerTextDraw(playerid, 552.148620, 378.305603, "0~n~K/M");
	PlayerTextDrawLetterSize(playerid, HizBari[playerid][18], 0.262000, 1.351110);
	PlayerTextDrawAlignment(playerid, HizBari[playerid][18], 2);
	PlayerTextDrawColor(playerid, HizBari[playerid][18], -1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][18], 1);
	PlayerTextDrawSetOutline(playerid, HizBari[playerid][18], 1);
	PlayerTextDrawBackgroundColor(playerid, HizBari[playerid][18], 1093966043);
	PlayerTextDrawFont(playerid, HizBari[playerid][18], 2);
	PlayerTextDrawSetProportional(playerid, HizBari[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, HizBari[playerid][18], 1);

	IsPlayerPausedx[ playerid ] = false;
	PlayerPausedCount[ playerid ] = 0;
	SetPlayerColor(playerid, 0x00FFFFFFFF);
	Canver(playerid, yCan(playerid));
	kafaTextUp(playerid);
	Zirhver(playerid, 0);
	pDrunkLevelLast[playerid] = 0;
	pFPS[playerid] = 0;
	
	SavasIslem[playerid][CeteSavasBolgedemi] = 0;
    SavasIslem[playerid][SavasSurem] = 0;
    SavasIslem[playerid][SavasSurem2] = 0;
    SavasIslem[playerid][Puskurtme] = 0;
    SetPVarInt(playerid, "PuskurtmeModee", 0);
    foreach(new id: CeteSavaslar)
	{
		if(strcmp(CeteSavasMekan[id][ceteMekanRenk], "-1", false) == 0)
		{
		    foreach(new x: Player) { GangZoneShowForPlayer(x, CeteSavasMekan[id][cbZone], 0x00000099); }
		}
		else
		{
		    new sx[11], hex;
		    format(sx, sizeof(sx), "0x%s99", CeteSavasMekan[id][ceteMekanRenk]);
		    sscanf(sx, "x", hex);
		    foreach(new x: Player) { GangZoneShowForPlayer(x, CeteSavasMekan[id][cbZone], hex); }
		}
	}

	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
		ao[playerid][i][ao_model] = 0;
		ao[playerid][i][ao_bone] = 0;
		ao[playerid][i][ao_x] = 0.0;
		ao[playerid][i][ao_y] = 0.0;
		ao[playerid][i][ao_z] = 0.0;
		ao[playerid][i][ao_rx] = 0.0;
		ao[playerid][i][ao_ry] = 0.0;
		ao[playerid][i][ao_rz] = 0.0;
		ao[playerid][i][ao_sx] = 0.0;
		ao[playerid][i][ao_sy] = 0.0;
		ao[playerid][i][ao_sz] = 0.0;
        ao[playerid][i][ao_Sqlid] = -1;
		if(IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			RemovePlayerAttachedObject(playerid, i);
		}
	}
	
	// Yaðýz Ev
	RemoveBuildingForPlayer(playerid, 672, -1975.849, -43.273, 34.718, 0.250);
	RemoveBuildingForPlayer(playerid, 672, -1975.849, -10.312, 34.718, 0.250);
	RemoveBuildingForPlayer(playerid, 672, -1988.949, -19.281, 34.718, 0.250);
	//
	
    // Ayaz Map
    RemoveBuildingForPlayer(playerid, 1308, -2381.790, -40.414, 34.625, 0.250);
    //
	
	// Boyka Ev
	RemoveBuildingForPlayer(playerid, 1283, -2857.590, 459.671, 6.468, 0.250);
	//

	// Deniz
	RemoveBuildingForPlayer(playerid, 693, -601.312, -1494.349, 17.773, 0.250);
	RemoveBuildingForPlayer(playerid, 670, -604.390, -1517.540, 11.890, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -356.859, -1412.550, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -361.812, -1407.540, 25.476, 0.250);
	RemoveBuildingForPlayer(playerid, 17298, -366.671, -1422.689, 30.375, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -358.757, -1423.819, 24.750, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -360.718, -1435.260, 24.898, 0.250);
	RemoveBuildingForPlayer(playerid, 1454, -363.210, -1434.609, 25.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1454, -366.203, -1434.609, 25.437, 0.250);
	RemoveBuildingForPlayer(playerid, 1454, -369.195, -1434.609, 25.515, 0.250);
	RemoveBuildingForPlayer(playerid, 1454, -372.179, -1434.609, 25.515, 0.250);
	RemoveBuildingForPlayer(playerid, 17005, -391.140, -1432.989, 32.429, 0.250);
	RemoveBuildingForPlayer(playerid, 17006, -394.960, -1433.969, 32.445, 0.250);
	RemoveBuildingForPlayer(playerid, 790, -607.046, -1467.229, 15.171, 0.250);
	RemoveBuildingForPlayer(playerid, 727, -578.492, -1511.079, 8.507, 0.250);
	RemoveBuildingForPlayer(playerid, 727, -588.703, -1493.339, 9.445, 0.250);
	RemoveBuildingForPlayer(playerid, 3425, -583.054, -1496.699, 19.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -362.484, -1446.130, 25.476, 0.250);
	RemoveBuildingForPlayer(playerid, 790, -425.953, -1432.780, 25.054, 0.250);
	RemoveBuildingForPlayer(playerid, 790, -448.093, -1442.949, 23.242, 0.250);
	RemoveBuildingForPlayer(playerid, 791, -445.687, -1517.469, 13.265, 0.250);
	RemoveBuildingForPlayer(playerid, 785, -445.687, -1517.469, 13.265, 0.250);
	RemoveBuildingForPlayer(playerid, 790, -488.117, -1441.380, 17.218, 0.250);
	RemoveBuildingForPlayer(playerid, 790, -396.648, -1482.010, 29.648, 0.250);
	RemoveBuildingForPlayer(playerid, 735, -420.554, -1459.569, 21.257, 0.250);
	RemoveBuildingForPlayer(playerid, 735, -410.703, -1520.819, 20.414, 0.250);
	RemoveBuildingForPlayer(playerid, 791, -617.304, -1408.390, 13.914, 0.250);
	RemoveBuildingForPlayer(playerid, 785, -617.304, -1408.390, 13.914, 0.250);
	RemoveBuildingForPlayer(playerid, 17000, -406.914, -1448.969, 24.640, 0.250);
	//

	// Vagos
	RemoveBuildingForPlayer(playerid, 1686, -1665.520, 416.914, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1672.130, 423.500, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1669.910, 412.531, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1676.520, 419.117, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1675.219, 407.195, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1681.829, 413.781, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1679.359, 403.054, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1685.969, 409.640, 6.382, 0.250);
	RemoveBuildingForPlayer(playerid, 11417, -1650.630, 423.164, 11.054, 0.250);
	RemoveBuildingForPlayer(playerid, 10789, -1680.599, 417.945, 8.812, 0.250);
	RemoveBuildingForPlayer(playerid, 11281, -1680.599, 417.945, 8.812, 0.250);
	RemoveBuildingForPlayer(playerid, 11295, -1718.939, 388.085, 11.882, 0.250);
	RemoveBuildingForPlayer(playerid, 11296, -1718.939, 388.085, 11.882, 0.250);
	RemoveBuildingForPlayer(playerid, 11293, -1708.189, 376.835, 11.882, 0.250);
	RemoveBuildingForPlayer(playerid, 11294, -1708.189, 376.835, 11.882, 0.250);
	RemoveBuildingForPlayer(playerid, 11292, -1710.790, 402.531, 7.625, 0.250);
	//

	// San Fierro Sarý Vinç
	RemoveBuildingForPlayer(playerid, 1383, -2080.441, 256.015, 66.869, 0.25);
	RemoveBuildingForPlayer(playerid, 1384, -2080.441, 256.007, 99.408, 0.25);
	RemoveBuildingForPlayer(playerid, 1385, -2080.441, 296.46, 102.861, 0.25);
	RemoveBuildingForPlayer(playerid, 1403, 0.0, 0.0, 0.0, 100000.0);
	RemoveBuildingForPlayer(playerid, 1404, 0.0, 0.0, 0.0, 100000.0);
	RemoveBuildingForPlayer(playerid, 1385, 0.0, 0.0, 0.0, 100000.0);
	RemoveBuildingForPlayer(playerid, 1684, 0.0, 0.0, 0.0, 100000.0);
	//

	// içecek makinasý
	RemoveBuildingForPlayer(playerid, 955, -1980.790, 142.664, 27.070, 0.250);
	//

	// audi
	RemoveBuildingForPlayer(playerid, 9953, -1668.839, 1215.750, 19.226, 0.250);
	RemoveBuildingForPlayer(playerid, 10107, -1668.839, 1215.750, 19.226, 0.250);
	//
	// BURGER-KING
	RemoveBuildingForPlayer(playerid, 10744, -2328.360, -163.578, 35.578, 0.250);
	RemoveBuildingForPlayer(playerid, 10723, -2328.360, -163.578, 35.578, 0.250);
	RemoveBuildingForPlayer(playerid, 1500, -2337.360, -166.054, 34.546, 0.250);
	//
	// cevik_kuvvet
	RemoveBuildingForPlayer(playerid, 10236, -1784.459, 965.906, 40.414, 0.250);
	//

	// EMNIYET
	RemoveBuildingForPlayer(playerid, 10042, -1606.560, 731.437, 39.335, 0.250);
	RemoveBuildingForPlayer(playerid, 10028, -1636.300, 682.765, 27.453, 0.250);
	RemoveBuildingForPlayer(playerid, 9967, -1636.300, 682.765, 27.453, 0.250);
	//

	// deniz bank
	RemoveBuildingForPlayer(playerid, 1232, -1510.660, 918.023, 8.804, 0.250);
	RemoveBuildingForPlayer(playerid, 9901, -1459.099, 920.093, 31.953, 0.250);
	RemoveBuildingForPlayer(playerid, 9963, -1459.099, 920.093, 31.953, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, -1513.829, 875.531, 8.804, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, -1516.170, 960.515, 8.804, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, -1517.839, 833.039, 8.804, 0.250);
	//

	// Jandarma
	RemoveBuildingForPlayer(playerid, 968, -1526.439, 481.382, 6.906, 0.250);
	RemoveBuildingForPlayer(playerid, 966, -1526.390, 481.382, 6.179, 0.250);
	RemoveBuildingForPlayer(playerid, 10829, -1523.260, 486.796, 6.156, 0.250);
	RemoveBuildingForPlayer(playerid, 10835, -1561.630, 434.164, 9.273, 0.250);
	RemoveBuildingForPlayer(playerid, 10886, -1561.630, 434.164, 9.273, 0.250);
	//

	// MIGROS
	RemoveBuildingForPlayer(playerid, 2204, 225.108, 125.969, 1009.239, 0.250);
	RemoveBuildingForPlayer(playerid, 10394, -2336.929, -105.289, 37.000, 0.250);
	RemoveBuildingForPlayer(playerid, 10553, -2336.929, -105.289, 37.000, 0.250);
	//

  	// Özel Harekat
	RemoveBuildingForPlayer(playerid, 10676, -2528.659, -672.304, 139.460, 0.250);
	RemoveBuildingForPlayer(playerid, 10693, -2528.659, -672.304, 139.460, 0.250);
	RemoveBuildingForPlayer(playerid, 705, -2491.590, -670.718, 138.429, 0.250);
	RemoveBuildingForPlayer(playerid, 1684, -2508.409, -669.093, 139.852, 0.250);
	RemoveBuildingForPlayer(playerid, 1684, -2508.500, -680.953, 139.852, 0.250);
	RemoveBuildingForPlayer(playerid, 654, -2541.050, -592.445, 130.546, 0.250);
	RemoveBuildingForPlayer(playerid, 654, -2521.050, -589.382, 129.257, 0.250);
	RemoveBuildingForPlayer(playerid, 705, -2506.629, -582.171, 131.352, 0.250);
	RemoveBuildingForPlayer(playerid, 654, -2510.449, -739.562, 129.522, 0.250);
	RemoveBuildingForPlayer(playerid, 654, -2494.479, -742.867, 131.078, 0.250);
	RemoveBuildingForPlayer(playerid, 654, -2460.979, -638.710, 130.703, 0.250);
	RemoveBuildingForPlayer(playerid, 654, -2458.989, -670.945, 132.585, 0.250);
	RemoveBuildingForPlayer(playerid, 10357, -2501.790, -701.187, 227.147, 0.250);
	RemoveBuildingForPlayer(playerid, 10496, -2501.790, -701.187, 227.147, 0.250);
	RemoveBuildingForPlayer(playerid, 10359, -2483.939, -612.320, 133.671, 0.250);
	RemoveBuildingForPlayer(playerid, 10692, -2483.939, -612.320, 133.671, 0.250);
	//
	
	// Ýþ Bankasý
	RemoveBuildingForPlayer(playerid, 10377, -2784.629, 375.609, 21.578, 0.250);
	RemoveBuildingForPlayer(playerid, 10525, -2784.629, 375.609, 21.578, 0.250);
	RemoveBuildingForPlayer(playerid, 16018, 97.718, 2680.919, 52.625, 0.250);
	RemoveBuildingForPlayer(playerid, 705, -2727.870, 398.921, 3.773, 0.250);
	RemoveBuildingForPlayer(playerid, 705, -2684.719, 399.320, 3.773, 0.250);
	RemoveBuildingForPlayer(playerid, 705, -2684.149, 352.679, 3.773, 0.250);
	RemoveBuildingForPlayer(playerid, 705, -2729.979, 353.945, 3.773, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, -2681.909, 376.093, 5.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, -2690.030, 376.093, 5.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, -2754.879, 390.515, 5.968, 0.250);
	//
	
	// Süsleme Pure
	RemoveBuildingForPlayer(playerid, 11246, -1998.4688, 158.3906, 27.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 11247, -1998.4688, 158.3906, 27.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1998.5625, 133.1094, 26.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1998.5625, 141.8281, 26.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1998.5625, 149.1250, 26.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1998.5625, 164.9063, 26.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1998.5625, 157.6094, 26.8047, 0.25);
	//
	
	// Casino
	RemoveBuildingForPlayer(playerid, 10998, -2194.379, -96.226, 46.062, 0.250);
	RemoveBuildingForPlayer(playerid, 11043, -2194.379, -96.226, 46.062, 0.250);
	RemoveBuildingForPlayer(playerid, 10994, -2195.300, -126.405, 47.414, 0.250);
	RemoveBuildingForPlayer(playerid, 11047, -2195.300, -126.405, 47.414, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, -2171.260, -99.593, 38.187, 0.250);
	//

    SetPVarInt(playerid, "ozelAracID", 0);
    OzelAracim[playerid][0] = 0;
    OzelAracim[playerid][1] = 0;
    
	evlerimiYukle(playerid);
	NormalAraclariHazirla(playerid);
    KiyafetHazirla(playerid);

    TumTimer[playerid] = SetTimerEx("TopluTimer", 1000, true, "d", playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    Iterator_Temizle(PMEngel{playerid});
    BotCheck[playerid] = false;
    KeybindIslem[playerid][keybind_ID] = INVALID_PLAYER_ID;
    
    if(gettime() < GetPVarInt(playerid, "ozelAracSure") && GetPVarInt(playerid, "ozelAracID") != 0)
    {
        SetVehicleVirtualWorld(GetPVarInt(playerid, "ozelAracID"), 0);
        OzelAracObjeTemizle(GetPVarInt(playerid, "ozelAracID"));
        DestroyVehicle(GetPVarInt(playerid, "ozelAracID"));
        SetPVarInt(playerid, "ozelAracID", 0);
        SetPlayerVirtualWorld(playerid, 0);
    }
    OzelAracSil(playerid);

    etkLocal[playerid] = 0;
    ATMMod[playerid] = false;
	SavasIslem[playerid][CeteSavasBolgedemi] = 0;
	
	if(etkYaptim[playerid] == 1)
    {
		etkYaptim[playerid] = 0;
	    if(GetPVarInt(playerid, "ETKAracim") != INVALID_VEHICLE_ID)
	    {
	        DestroyVehicle(GetPVarInt(playerid, "ETKAracim"));
	    }
	    SetPVarInt(playerid, "ETKAracim", INVALID_VEHICLE_ID);
		foreach(new i : Player)
	    {
	        if(Etkde[i] == true)
	        {
	            etkLocal[i] = 0;
	        	TogglePlayerControllable(i, 1);
	        	Etkde[i] = false;
	    		SetPlayerVirtualWorld(i, 0);
	    		PlayerPlaySound(i, 1057,0.0,0.0,0.0);
	    		Canver(i, 0);
			}
	    }
	    for(new i = 0; i < 60; i++)
	    {
	    	if(IsValidVehicle(etkMaxArac[i]) && etkMaxArac[i] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(etkMaxArac[i]);
			}
			etkMaxArac[i] = INVALID_VEHICLE_ID;
	    }
		EtkIslem[etkAktifmi] = 0;
	    EtkIslem[etkKatilim] = 0;
	    KillTimer(etkTimer);
	    etkCount = 0;
	    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	    new b[bMAX_SIZE];
		format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), oyundan çýktýðý için etkinlik otomatik sonlandýrdý.", getName(playerid), playerid);
	    SendClientMessageToAll(0x87B1FFFF, b);
    }
    
	if(SavasIslem[playerid][CeteSavasBolgedemi] == 0 && SavasIslem[playerid][SavasSurem] != 0)
    {
        KillTimer(SavasIslem[playerid][savasTimer]);
		switch(SavasIslem[playerid][SavasTip])
		{
		    case 3: cetePuanArttir(PlayerCete[playerid], -2);
			case 4: cetePuanArttir(PlayerCete[playerid], -3);
		}
		AFkTime[playerid] = 0;
        SavasIslem[playerid][SavasTip] = 0;
        SavasIslem[playerid][SavasSurem] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
					if(GetPVarInt(i, "_SavasID") == GetPVarInt(playerid, "_SavasID"))
					{
				        HidePlayerProgressBar(i, SavasBar[i]);
				        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
				        SetPlayerProgressBarValue(i, SavasBar[i], 0);
					}
		        }
		    }
		}
		new c = PlayerCete[playerid], _bump[100];
        CeteIslem[c][ceteKasasi] -= GetPVarInt(playerid, "_CeteZarar");
		mysql_format(g_SQL, _bump, sizeof(_bump), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
		mysql_query(g_SQL, _bump);
		DeletePVar(playerid, "_CeteZarar");
        new id = GetPVarInt(playerid, "_SavasID");
		if(id != -1)
		{
		    CeteSavasMekan[id][eleGecirenCete] = -1;
			foreach(new i: Player)
			{
				GangZoneStopFlashForPlayer(i, CeteSavasMekan[id][cbZone]);
			}
		}
    }
    
    SavasIslem[playerid][SavasSurem] = 0;
    
    
    SavasIslem[playerid][Puskurtme] = 0;
	if(SavasIslem[playerid][Puskurtme] == 0 && SavasIslem[playerid][SavasSurem2] != 0)
	{
	    KillTimer(SavasIslem[playerid][puskurtTimer]);
		SavasIslem[playerid][Puskurtme] = 0;
		SavasIslem[playerid][SavasSurem2] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
		SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
		            SetPVarInt(i, "PuskurtmeModee", 0);
			        HidePlayerProgressBar(i, SavasBar[i]);
			        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
			        SetPlayerProgressBarValue(i, SavasBar[i], 0);
		        }
		    }
		    SetPVarInt(i, "PuskurtmeModee", 0);
		}
		SendClientMessage(playerid, -1, "{e67e22}Püskürtme: {ffffff}Çete bölgesinden ayrýldýðýnýz için, püskürtme baþarýlý olamadý !");
	}

	KillTimer(HizBarTimer[playerid]);
    HizBarOn[playerid] = 0;
    if(oIslem[playerid][kelepce] == 1)
    {
        oyuncuData[playerid][hapisSure] = 210;
		oyuncuData[playerid][hSureKayit] = 210;
    }
    if(TickSure[playerid] != 0)
    {
    	if(TickSure[playerid] > GetTickCount())
    	{
        	oyuncuData[playerid][Olum] += 2;
    	}
	}
 	if(PlayerBanka[playerid][bankaSoyuyor] == 1)
    {
        KillTimer(BankaGeriSay[playerid]);
        PlayerBanka[playerid][bankaSoyuyor] = 0;
        PlayerBanka[playerid][bankaCount] = 0;
        LazerDurum2 = false;
	}
	if(PlayerBanka[playerid][bankaSoyuyor] == 2)
    {
        if(GetPVarInt(playerid, "BankaSoyuyor") == 1)
        {
		    KillTimer(BankaGeriSay[playerid]);
		    DeletePVar(playerid, "BankaSoyuyor");
		    DeletePVar(playerid, "ToplamBPara");
		    PlayerBanka[playerid][bankaCount] = 0;
		    PlayerBanka[playerid][bankaSoyuyor] = 0;
        }
    }

    BarikatDuzenle[playerid] = false;
	for(new i = 0; i < MAX_BARIKAT; i++)
	{
	    if(BarikatIslem[i][barikatDurum] == 0) continue;
	    if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
	    {
	        BarikatIslem[i][barikatDurum] = 0;
	        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
			BarikatIslem[i][barikatPoss][0] = 0.0;
            BarikatIslem[i][barikatPoss][1] = 0.0;
            BarikatIslem[i][barikatPoss][2] = 0.0;
            BarikatIslem[i][barikatPoss][3] = 0.0;
            BarikatIslem[i][barikatPoss][4] = 0.0;
            BarikatIslem[i][barikatPoss][5] = 0.0;
            BarikatIslem[i][barikatSure] = 0;
	        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
	        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
	        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
	        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
	        Iter_Remove(Barikatlar, i);
	    }
	}
	barikatSayi[playerid] = 0;
    LogGin[playerid] = 0;
    VipIslem[playerid][MotorDusmeDurum] = false;
    //GuvenliKontrol[playerid] = false;
    Etkde[playerid] = false;
    Bombam[playerid] = 0;
   	for(new i = 0; i < 81; i++)
	{
	    if(!IsValidDynamicObject(girisObjeler[playerid][i])) continue;
		DestroyDynamicObject(girisObjeler[playerid][i]);
		girisObjeler[playerid][i] = INVALID_OBJECT_ID;
	}
	
 	for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(Sorular[i][gonderen] == playerid)
        {
			Sorular[i][sonuclanmisMi] = 0;
			Sorular[i][gonderen] = INVALID_PLAYER_ID;
			format(Sorular[i][sorusu], 148, "");
        }
    }

	for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(Sarkilar[i][sGonderen] == playerid)
        {
			Sarkilar[i][acildiMi] = 0;
			Sarkilar[i][sGonderen] = INVALID_PLAYER_ID;
			format(Sarkilar[i][_url], 148, "");
        }
    }

	if(GPSOyuncu[playerid][gpsAktif] == true)
    {
		GPSOyuncu[playerid][gpsAktif] = false;
        KillTimer(GPSOyuncu[playerid][gps_timer]);
		if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
		{
			DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
			SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
		}
		if(GetPVarInt(playerid, "gps_cpID") != -1)
		{
			DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
			SetPVarInt(playerid, "gps_cpID", -1);
		}
    }
    SetPVarInt(playerid, "EleGeciriyomLan", -1);
    TickSure[playerid] = 0;
    oIslem[playerid][kelepce] = 0;
	KillTimer(TumTimer[playerid]);
	KillTimer(yetkilerTimer[playerid]);
    VeriGuncelle(playerid);
    ParaKorumasi[playerid] = 0;
    oyuncuData[playerid][GirisKontrol] = false;
    //girisEkran[playerid] = 0;
    AntiHackFlood[playerid] = 1;
	if(GetPVarInt(playerid, "GirisOnline") == 1)
	{
	    DeletePVar(playerid, "GirisOnline");
	}
	if(IsValidDynamic3DTextLabel(kafaYazi[playerid])){DestroyDynamic3DTextLabel(kafaYazi[playerid]);}
	PlayerCete[playerid] = -1;
    TeklifAttigim[playerid] = -1;
    OnayTeklif[playerid] = -1;
    onayCount[playerid] = 0;
    KillTimer(DuelloTimer[playerid]);
	DuelloSayi[playerid] = 0;
	KillTimer(BolgeTimer[playerid]);
	BolgeTimerDurum[playerid] = 0;
	if(Duelloda[playerid] == true)
	{
		foreach(new i : Player)
		{
		    if(DuelloIslem[i][d_ID] == playerid)
		    {
		        new xb[116 + 24 + 24 + 11];
		        format(xb, sizeof(xb), "Oyuncu %s serverden ayrýldýðý için düelloyu siz kazandýnýz. Ödül: $%s dolar.", getName(playerid), convertNumber(DuelloIslem[i][dP]));
				SendClientMessage(i, 0x71BA51FF, xb);
				SetPVarInt(i, "DuelloYasak", 0);
	   			format(xb, sizeof(xb), "» Düello: {FFFFFF}Oyuncu %s sunucudan ayrýldý ve %s düelloyu kazandý. {64DDBB}Ödül: {FFFFFF}$%s dolar.", getName(playerid), getName(i), convertNumber(DuelloIslem[i][dP]));
				SendClientMessageToAll(0xFD5B03FF, xb);
          		pParaver(playerid, -DuelloIslem[i][dP]);
		        pParaver(i, DuelloIslem[i][dP]);
		        ResetPlayerWeapons(i);
		        SpawnPlayer(i);
		        DuelloOyuncusu[i] = INVALID_PLAYER_ID;
		        DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
		        DuelloIslem[i][dHarita] = 0;
		        DuelloIslem[i][dP] = 0;
		        DuelloIslem[i][dSilah][0] = 0;
		        DuelloIslem[i][dSilah][1] = 0;
		        Duelloda[i] = false;
				DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
		        DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
		        DuelloIslem[playerid][dHarita] = 0;
		        DuelloIslem[playerid][dP] = 0;
		        DuelloIslem[playerid][dSilah][0] = 0;
		        DuelloIslem[playerid][dSilah][1] = 0;
		        Duelloda[playerid] = false;
				aranmaLeveli(playerid, 0);
	        	aranmaLeveli(i, 0);
		    }
		    if(DuelloOyuncusu[i] == playerid)
		    {
				new xb[76 + 24 + 11];
		        format(xb, sizeof(xb), "Oyuncu %s serverden ayrýldýðý için düelloyu siz kazandýnýz. Ödül: $%s dolar.", getName(playerid), convertNumber(DuelloIslem[playerid][dP]));
		        SendClientMessage(i, 0x71BA51FF, xb);
		        SetPVarInt(i, "DuelloYasak", 0);
				format(xb, sizeof(xb), "» Düello: {FFFFFF}Oyuncu %s sunucudan ayrýldý ve %s düelloyu kazandý. {64DDBB}Ödül: {FFFFFF}$%s dolar.", getName(playerid), getName(i), convertNumber(DuelloIslem[playerid][dP]));
				SendClientMessageToAll(0xFD5B03FF, xb);
		        pParaver(playerid, -DuelloIslem[playerid][dP]);
		        pParaver(i, DuelloIslem[playerid][dP]);
		        ResetPlayerWeapons(i);
		        SpawnPlayer(i);
		        DuelloOyuncusu[i] = INVALID_PLAYER_ID;
		        DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
		        DuelloIslem[i][dHarita] = 0;
		        DuelloIslem[i][dP] = 0;
		        DuelloIslem[i][dSilah][0] = 0;
		        DuelloIslem[i][dSilah][1] = 0;
		        Duelloda[i] = false;
				DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
		        DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
		        DuelloIslem[playerid][dHarita] = 0;
		        DuelloIslem[playerid][dP] = 0;
		        DuelloIslem[playerid][dSilah][0] = 0;
		        DuelloIslem[playerid][dSilah][1] = 0;
		        Duelloda[playerid] = false;
		        Duelloda[playerid] = false;
				aranmaLeveli(playerid, 0);
	        	aranmaLeveli(i, 0);
		    }
		}
	}

	KillTimer(tazerTimer[playerid]);
    normalAracSil(playerid);

    if(Izleniyorum[playerid] == 1)
    {
        foreach(new i : Player)
		{
        	if(IzlemeModu[i][izledigimID] == playerid)
        	{
				IzlemeModu[i][izlemeModu] = false;
			    IzlemeModu[i][izledigimID] = INVALID_PLAYER_ID;
				TogglePlayerSpectating(i, 0);
				SetTimerEx("IzlePasif", 500, false, "d", i);
				GameTextForPlayer(i, "~r~~h~~h~Oyuncu Serverden Ayrildi", 2100, 4);
			}
		}
    }
    Izleniyorum[playerid] = 0;

    if(BolgeTimerDurum[playerid] == 1)
	{
	    if(BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeSure] >= 1)
	    {
		    KillTimer(BolgeTimer[playerid]);
		    new bolgeMsj[96 + 25 + 16 + 3 + 10], g = g_oIslem[playerid][g_Id];
			format(bolgeMsj, sizeof(bolgeMsj), "{92F22A}« BÖLGE » {FF6600}%s {FFFFFF}isimli grup {6FA6F2}%s {FFFFFF}adlý bölgeyi ele geçiremedi !", grupIslem[g][g_Ismi], BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeIsim]);
			SendClientMessageToAll(0xF2E76DFF, bolgeMsj);
		  	BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeSure] = BOLGE_SURE;
			BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeAlindi] = 0;
			BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgedurum] = false;
	        foreach(new x: Player) GangZoneStopFlashForPlayer(x, BolgeIslem[GetPVarInt(playerid, "TempBolge")][zoneID]);
			DeletePVar(playerid, "TempBolge");
			BolgeTimerDurum[playerid] = 0;
		}
	}

 	if(soygunCount[playerid] >= 1)
    {
        soygunCount[playerid] = 0;
        soygunParasi[playerid] = 0;
		PlayerTextDrawHide(playerid, SoyulanBar[playerid][0]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][1]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][2]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][3]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][4]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][5]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][6]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][7]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][8]);
    }

	PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][0]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][1]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][2]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][3]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][4]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][5]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][6]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][7]);
    PlayerTextDrawDestroy(playerid, SoyulanBar[playerid][8]);

  	PlayerTextDrawDestroy(playerid, SagBarText[playerid][0]);
    PlayerTextDrawDestroy(playerid, SagBarText[playerid][1]);
    PlayerTextDrawDestroy(playerid, SagBarText[playerid][2]);
    PlayerTextDrawDestroy(playerid, SagBarText[playerid][3]);

    PlayerTextDrawDestroy(playerid, PolisLoadSelect[playerid][0]);
    PlayerTextDrawDestroy(playerid, PolisLoadSelect[playerid][1]);
    PlayerTextDrawDestroy(playerid, PolisLoadSelect[playerid][2]);

    PlayerTextDrawDestroy(playerid, SagBarr[playerid][0]);
    PlayerTextDrawDestroy(playerid, SagBarr[playerid][1]);
    PlayerTextDrawDestroy(playerid, SagBarr[playerid][2]);
    PlayerTextDrawDestroy(playerid, SagBarr[playerid][3]);
    
    PlayerTextDrawDestroy(playerid, TextYazi[playerid][0]);
    PlayerTextDrawDestroy(playerid, TextYazi[playerid][1]);
    PlayerTextDrawDestroy(playerid, TextYazi[playerid][2]);
    
	PlayerTextDrawDestroy(playerid, HizBari[playerid][0]);
    PlayerTextDrawDestroy(playerid, HizBari[playerid][1]);
    PlayerTextDrawDestroy(playerid, HizBari[playerid][2]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][3]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][4]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][5]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][6]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][7]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][8]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][9]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][10]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][11]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][12]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][13]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][14]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][15]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][16]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][17]);
	PlayerTextDrawDestroy(playerid, HizBari[playerid][18]);

   	g_MysqlRaceCheck[playerid]++;
	TecavuzV[playerid] = 0;

    new ekipID = e_oIslem[playerid][e_Id], bilgi_msj[78 + 24 + 24 + 5 + 1];
    if(ekipID != -1)
    {
		foreach(new i: Player)
		{
			if(e_oIslem[i][e_Id] == ekipID)
			{
			    format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] %s(%d), adlý oyuncu ekibinden ayrýldý. Sebep: Serverden çýktý.", getName(playerid), playerid);
				SendClientMessage(i, 0xF59E25FF, bilgi_msj);
			}
		}
	 	e_oIslem[playerid][e_Id] = -1;
		e_oIslem[playerid][e_Davet] = -1;
		e_oIslem[playerid][e_Katilim] = -1;
		
		ekipIslem[ekipID][e_limit]--;

		new slotAra = EkipSlotKontrol(ekipID);
		if(slotAra <= 0)
		{
			format(ekipIslem[ekipID][e_Ismi], MAX_E_ISIM, "");
			format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, "");
			ekipIslem[ekipID][e_kID] = INVALID_PLAYER_ID;
			ekipIslem[ekipID][e_Aktiflik] = 0;
			ekipIslem[ekipID][e_limit] = 0;
			Iter_Remove(_Ekipler, ekipID);
		}
		else
		{
			if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) == 0)
			{
			    ekipIslem[ekipID][e_limit]--;
			    new oCount[MAX_PLAYERS], arttirr = 0, _pid = INVALID_PLAYER_ID;
			    foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) oCount[arttirr] = i, arttirr++;
			    _pid = oCount[random(arttirr)];
				format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, getName(_pid)), ekipIslem[ekipID][e_kID] = _pid;
	   		    format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Lider %s(%d) serverden ayrýldýðý için yeni Lider %s(%d) olarak ayarlandý.", getName(playerid), playerid, getName(_pid), _pid);
			    foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) SendClientMessage(i, 0xF59E25FF, bilgi_msj);
				_pid = INVALID_PLAYER_ID;
				for(new i = 0; i < arttirr; i++) oCount[i] = INVALID_PLAYER_ID;
			}
		}
	}
 	new grupID = g_oIslem[playerid][g_Id];
 	if(grupID != -1)
 	{
		foreach(new i: Player)
		{
			if(g_oIslem[i][g_Id] == grupID)
			{
			    format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] %s(%d), adlý oyuncu gruptan ayrýldý. Sebep: Serverden çýktý.", getName(playerid), playerid);
				SendClientMessage(i, 0xBCB986FF, bilgi_msj);
			}
		}
	 	g_oIslem[playerid][g_Id] = -1;
		g_oIslem[playerid][g_Davet] = -1;
		g_oIslem[playerid][g_Katilim] = -1;

		grupIslem[grupID][g_limit]--;

		new g_slotAra = GrupSlotKontrol(grupID);
		if(g_slotAra <= 0)
		{
			format(grupIslem[grupID][g_Ismi], MAX_G_ISIM, "");
			format(grupIslem[grupID][g_Kurucu], MAX_PLAYER_NAME, "");
			grupIslem[grupID][g_kID] = INVALID_PLAYER_ID;
			grupIslem[grupID][g_Aktiflik] = 0;
			grupIslem[grupID][g_limit] = 0;
			Iter_Remove(_Gruplar, grupID);
		}
		else
		{
			if(strcmp(grupIslem[grupID][g_Kurucu], getName(playerid), false) == 0)
			{
			    grupIslem[grupID][g_limit]--;
			    new oCount[MAX_PLAYERS], arttirr = 0, _pid = INVALID_PLAYER_ID;
			    foreach(new i : Player) if(g_oIslem[i][g_Id] == grupID) oCount[arttirr] = i, arttirr++;
			    _pid = oCount[random(arttirr)];
				format(grupIslem[grupID][g_Kurucu], MAX_PLAYER_NAME, getName(_pid)), grupIslem[grupID][g_kID] = _pid;
	   		    format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] Lider %s(%d) serverden ayrýldýðý için yeni Lider %s(%d) olarak ayarlandý.", getName(playerid), playerid, getName(_pid), _pid);
			    foreach(new i : Player) if(g_oIslem[i][g_Id] == grupID) SendClientMessage(i, 0xBCB986FF, bilgi_msj);
				_pid = INVALID_PLAYER_ID;
				for(new i = 0; i < arttirr; i++) oCount[i] = INVALID_PLAYER_ID;
			}
		}
	}
	GrupFix();
	BolgeFix();
	EkipFix();
	for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	return 1;
}

VeriGuncelle(playerid)
{
	if(oyuncuData[playerid][GirisKontrol] == true)
	{
		new query[85 + 11];
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `oldurme` = %d WHERE `id` = %d", oyuncuData[playerid][Oldurme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

	 	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `olum` = %d WHERE `id` = %d", oyuncuData[playerid][Olum], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		new mxx = ParaKorumasi[playerid];
	  	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Para` = %d WHERE `id` = %d", mxx, oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

	   	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Skor` = %d WHERE `id` = %d", GetPlayerScore(playerid), oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  	   	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `AranmaS` = %d WHERE `id` = %d", oyuncuData[playerid][pAranma] = aranmaSeviyesii[playerid], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

 		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `HapisSure` = %d WHERE `id` = %d", oyuncuData[playerid][hapisSure], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

   		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `HapisSureK` = %d WHERE `id` = %d", oyuncuData[playerid][hSureKayit], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `SoygunS` = %d WHERE `id` = %d", oyuncuData[playerid][soygunS], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `OnlineSure` = %d WHERE `id` = %d", oyuncuData[playerid][onlineSure], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ExpLevel` = %d WHERE `id` = %d", oyuncuData[playerid][_LevelCount], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ExpPuan` = %d WHERE `id` = %d", oyuncuData[playerid][ExpPuan], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `YetenekPuan` = %d WHERE `id` = %d", oyuncuData[playerid][YetenekPuan], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `YetenekCan` = %d WHERE `id` = %d", oyuncuData[playerid][YetenekCan], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `YetenekZirh` = %d WHERE `id` = %d", oyuncuData[playerid][YetenekZirh], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `YetenekSoygun` = %d WHERE `id` = %d", oyuncuData[playerid][YetenekSoygun], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `basarilar` SET `BasariSayisi` = %d WHERE `baid` = %d", BasariIslem[playerid][BasariSayisi], BasariIslem[playerid][basariSQL]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `kiyafetDurum` = %d WHERE `id` = %d", oyuncuData[playerid][kiyafetDurum], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `pmGorme` = %d WHERE `id` = %d", oyuncuData[playerid][pmGorme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `LocalGorme` = %d WHERE `id` = %d", oyuncuData[playerid][LocalGorme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ArGorme` = %d WHERE `id` = %d", oyuncuData[playerid][ArGorme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `GrupGorme` = %d WHERE `id` = %d", oyuncuData[playerid][GrupGorme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `EkipGorme` = %d WHERE `id` = %d", oyuncuData[playerid][EkipGorme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ceteGorme` = %d WHERE `id` = %d", oyuncuData[playerid][ceteGorme], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `realSaat` = %d WHERE `id` = %d", oyuncuData[playerid][realSaat], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `duzenliOyuncu` = %d WHERE `id` = %d", oyuncuData[playerid][duzenliOyuncu], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

	   	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = %d WHERE `id` = %d", oyuncuData[playerid][sureKayit], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  	   	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `textAyar` = %d WHERE `id` = %d", oyuncuData[playerid][textAyar], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `bonzai` = %d WHERE `id` = %d", oyuncuData[playerid][_bonzai], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `eroin` = %d WHERE `id` = %d", oyuncuData[playerid][_eroin], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ot` = %d WHERE `id` = %d", oyuncuData[playerid][_ot], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `bomba` = %d WHERE `id` = %d", oyuncuData[playerid][_bomba], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Bakiye` = %d WHERE `id` = %d", oyuncuData[playerid][_Bakiye], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BakiyeS1` = %d WHERE `id` = %d", oyuncuData[playerid][_bsure][0], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BakiyeS2` = %d WHERE `id` = %d", oyuncuData[playerid][_bsure][1], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BakiyeS3` = %d WHERE `id` = %d", oyuncuData[playerid][_bsure][2], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BakiyeS4` = %d WHERE `id` = %d", oyuncuData[playerid][_bsure][3], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BakiyeS5` = %d WHERE `id` = %d", oyuncuData[playerid][_bsure][4], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `adonline` = %d WHERE `id` = %d", oyuncuData[playerid][gunlukonline], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `adafkonline` = %d WHERE `id` = %d", oyuncuData[playerid][gunlukonlineafk], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `akomuts` = %d WHERE `id` = %d", oyuncuData[playerid][adminkomuts], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `yanits` = %d WHERE `id` = %d", oyuncuData[playerid][yanits], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `dsarki` = %d WHERE `id` = %d", oyuncuData[playerid][dsarki], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `dmkapat` = %d WHERE `id` = %d", oyuncuData[playerid][dmkapat], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `etkyetki` = %d WHERE `id` = %d", oyuncuData[playerid][etkyetki], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `cskinlan` = %d WHERE `id` = %d", oyuncuData[playerid][skinmode], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `kefaletmod` = %d WHERE `id` = %d", oyuncuData[playerid][kefaletmod], oyuncuData[playerid][xID]);
		mysql_query(g_SQL, query);
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
    SetPVarInt(playerid, "OzelMekanda", 0);
	SetPVarInt(playerid, "KelepceBlock", GetTickCount());
	oIslem[playerid][kelepce] = 0;
	oIslem[playerid][kelepceSure] = 0;
    SetPVarInt(playerid, "DuelloYasak", 0);
    altBarGuncelle(playerid);
    if(GetPVarInt(playerid, "SaatAyari") != 12 && oyuncuData[playerid][realSaat] == 1)
    {
		SetPlayerTime(playerid, GetPVarInt(playerid, "SaatAyari"), 0);
	}
    if(oyuncuData[playerid][hapisSure] > 0)
    {
        if(oyuncuData[playerid][hapisSure] >= 181)
        {
			new o[86 + 27];
			format(o, sizeof(o), "[OTO-HAPIS] Oyuncu %s(%d), kelepçeliyken serverden çýktýðý için otomatik hapise atýldý.", getName(playerid), playerid);
			SendClientMessageToAll(0xFF8E3DFF, o);
        }
		aranmaLeveli(playerid, 0);
		ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid, 223.4927,110.8868,999.0156);
		SetPlayerFacingAngle(playerid, 3.1811);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "Hapisdeyimm", 1);
		SetPVarInt(playerid, "SpawnOldum", 1);
		kafaTextUp(playerid);
        return 1;
	}
	if(gTeam[playerid] == SIVIL || gTeam[playerid] >= 9 && gTeam[playerid] <= 14)
	{
	    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
		TextModu[playerid] = 1;
	    TextDrawShowForPlayer(playerid, MeslekBar[0]);
	    TextDrawShowForPlayer(playerid, MeslekBar[1]);
	    TextDrawShowForPlayer(playerid, MeslekBar[2]);
	    TextDrawShowForPlayer(playerid, MeslekBar[3]);
	    TextDrawShowForPlayer(playerid, MeslekBar[4]);
	    TextDrawShowForPlayer(playerid, MeslekBar[5]);
	    TextDrawShowForPlayer(playerid, MeslekBar[6]);
	    TextDrawShowForPlayer(playerid, MeslekBar[7]);
	    TextDrawShowForPlayer(playerid, MeslekBar[8]);
	    TextDrawShowForPlayer(playerid, MeslekBar[9]);
	    TextDrawShowForPlayer(playerid, MeslekBar[10]);
	    TextDrawShowForPlayer(playerid, MeslekBar[11]);
	    TextDrawShowForPlayer(playerid, MeslekBar[12]);
	    TextDrawShowForPlayer(playerid, MeslekBar[13]);
	    TextDrawShowForPlayer(playerid, MeslekBar[14]);
	    SelectTextDraw(playerid, 0xF39C12FF);
	    new randSpawn = random(sizeof(SivilSpawn));
	    SetPlayerPos(playerid, SivilSpawn[randSpawn][0], SivilSpawn[randSpawn][1], SivilSpawn[randSpawn][2]);
	    SetPlayerFacingAngle(playerid, SivilSpawn[randSpawn][3]);
	    ResetPlayerWeapons(playerid);
		Silahver(playerid, 31, 100);
		Silahver(playerid, 26, 100);
		Silahver(playerid, 24, 100);
	}
	if(gTeam[playerid] == POLIS)
	{
	    gTeam[playerid] = POLIS;
	    SetPlayerSkin(playerid, GetPVarInt(playerid, "PolisKarakterrrr"));
	    new randSpawn = random(sizeof(PolisSpawn));
	    SetPlayerPos(playerid, PolisSpawn[randSpawn][0], PolisSpawn[randSpawn][1], PolisSpawn[randSpawn][2]);
	    SetPlayerFacingAngle(playerid, PolisSpawn[randSpawn][3]);
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 3, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 29, 100);
  		Silahver(playerid, 31, 100);
  		K_omutlar(playerid);
	}
	if(gTeam[playerid] == SIVIL_POLIS)
	{
	    gTeam[playerid] = SIVIL_POLIS;
	    SetPlayerSkin(playerid, GetPVarInt(playerid, "SPolisKarakterrrr"));
	    new randSpawn = random(sizeof(SivilPolisSpawn));
	    SetPlayerPos(playerid, SivilPolisSpawn[randSpawn][0], SivilPolisSpawn[randSpawn][1], SivilPolisSpawn[randSpawn][2]);
	    SetPlayerFacingAngle(playerid, SivilPolisSpawn[randSpawn][3]);
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 3, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 29, 100);
  		Silahver(playerid, 31, 100);
  		K_omutlar(playerid);
	}
  	if(gTeam[playerid] == CEVIK_KUVVET)
	{
	    gTeam[playerid] = CEVIK_KUVVET;
	    SetPlayerSkin(playerid, 286);
	    new randSpawn = random(sizeof(CevikKuvvetSpawn));
	    SetPlayerPos(playerid, CevikKuvvetSpawn[randSpawn][0], CevikKuvvetSpawn[randSpawn][1], CevikKuvvetSpawn[randSpawn][2]);
	    SetPlayerFacingAngle(playerid, CevikKuvvetSpawn[randSpawn][3]);
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 3, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 29, 100);
  		Silahver(playerid, 31, 100);
  		K_omutlar(playerid);
	}
   	if(gTeam[playerid] == OZEL_HAREKAT_TIMI)
	{
	    SetPlayerSkin(playerid, 285);
	    new randSpawn = random(sizeof(OzelHarekatSpawn));
	    SetPlayerPos(playerid, OzelHarekatSpawn[randSpawn][0], OzelHarekatSpawn[randSpawn][1], OzelHarekatSpawn[randSpawn][2]);
	    SetPlayerFacingAngle(playerid, OzelHarekatSpawn[randSpawn][3]);
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 3, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 32, 100);
  		Silahver(playerid, 30, 100);
  		K_omutlar(playerid);
	}
	if(gTeam[playerid] == OZEL_KUVVET_B)
	{
	    gTeam[playerid] = OZEL_KUVVET_B;
	    SetPlayerSkin(playerid, 287);
	    new randSpawn = random(sizeof(OzelHarekatSpawn));
	    SetPlayerPos(playerid, OzelKuvvetBirligiSpawn[randSpawn][0], OzelKuvvetBirligiSpawn[randSpawn][1], OzelKuvvetBirligiSpawn[randSpawn][2] + 1.5);
	    SetPlayerFacingAngle(playerid, OzelKuvvetBirligiSpawn[randSpawn][3]);
	    SpawnBeklet(playerid);
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 3, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 28, 100);
  		Silahver(playerid, 31, 100);
  		Silahver(playerid, 34, 100);
  		K_omutlar(playerid);
	}
 	if(gTeam[playerid] == TURK_H_KUVVETLERI)
	{
	    gTeam[playerid] = TURK_H_KUVVETLERI;
	    SetPlayerSkin(playerid, 61);
	    new randSpawn = random(sizeof(HavaKuvvetleriSpawn));
	    SetPlayerPos(playerid, HavaKuvvetleriSpawn[randSpawn][0], HavaKuvvetleriSpawn[randSpawn][1], HavaKuvvetleriSpawn[randSpawn][2] + 1.5);
	    SetPlayerFacingAngle(playerid, HavaKuvvetleriSpawn[randSpawn][3]);
	    SpawnBeklet(playerid);
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 3, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 28, 100);
  		Silahver(playerid, 31, 100);
  		Silahver(playerid, 34, 100);
  		K_omutlar(playerid);
	}
	if(oyuncuData[playerid][kiyafetDurum] == 0)
	{
	 	for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
		{
		    if(IsPlayerAttachedObjectSlotUsed(playerid, i))
			{
				RemovePlayerAttachedObject(playerid, i);
			}
			if(ao[playerid][i][ao_model] != 0)
			{
		    	SetPlayerAttachedObject(playerid, i,
				ao[playerid][i][ao_model],
				ao[playerid][i][ao_bone],
				ao[playerid][i][ao_x],
				ao[playerid][i][ao_y],
				ao[playerid][i][ao_z],
				ao[playerid][i][ao_rx],
				ao[playerid][i][ao_ry],
				ao[playerid][i][ao_rz], ao[playerid][i][ao_sx], ao[playerid][i][ao_sy], ao[playerid][i][ao_sz]);
			}
		}
	}
	SetPVarInt(playerid, "SpawnOldum", 1);
	SetPVarInt(playerid, "SpawnSureC", 1);
	SetPVarInt(playerid, "SpawnSuresi", GetTickCount() + 10 * 1000);
	SendClientMessage(playerid, -1, "{2ecc71}» Spawn Korumasý: {FFFFFF}10 saniyelik spawn korumasý etkin.");
	SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    SetCameraBehindPlayer(playerid);
   	Canver(playerid, yCan(playerid));
	Zirhver(playerid, 0);
	kafaTextUp(playerid);
	SetPVarInt(playerid, "BolgeYasak", 0);
	new c = PlayerCete[playerid];
	if(c != -1)
	{
	    if(CeteIslem[c][ceteSkin] != 0)
	    {
	        SetPVarInt(playerid, "CeteSkinKayit", CeteIslem[c][ceteSkin]);
	        if(oyuncuData[playerid][skinmode] == 0)
	        {
	        	SetPlayerSkin(playerid, CeteIslem[c][ceteSkin]);
			}
	    }
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
    if(BotCheck[playerid] == 1)
    {
		new ba[150];
		format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bot Yazýlýmý kullandýðý için sunucudan kalýcý yasaklandý.", getName(playerid), playerid);
		SendClientMessageToAll(0xE74C3CFF, ba);
		format(ba, sizeof(ba), "%s - Bot Hack", getName(playerid));
		oBanEx(playerid, ba);
        return 1;
    }
	if(AnimasyonDurumu[playerid])
	{
        AnimasyonDurumu[playerid] = 0;
	}
	SetPVarInt(playerid, "OzelMekanda", 0);
    kumarda[playerid] = false;
    SetPVarInt(playerid, "SpawnOldum", 0);
	if(GetPVarInt(playerid, "FakeKillKontrol") > GetTickCount()) return HileKick(playerid, 8);
	SetPVarInt(playerid, "FakeKillKontrol", GetTickCount() + 250);

	HidePlayerProgressBar(playerid, SavasBar[playerid]);
	SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
	SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);

    SetPVarInt(playerid, "EleGeciriyomLan", -1);

    etkLocal[playerid] = 0;
    SavasIslem[playerid][Puskurtme] = 0;

	if(SavasIslem[playerid][Puskurtme] == 0 && SavasIslem[playerid][SavasSurem2] != 0)
	{
	    SetPVarInt(playerid, "PuskurtmeModee", 0);
	    KillTimer(SavasIslem[playerid][puskurtTimer]);
	    SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
		SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
        SavasIslem[playerid][Puskurtme] = 0;
		SavasIslem[playerid][SavasSurem2] = 0;
  		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
					if(GetPVarInt(i, "_SavasID") == GetPVarInt(playerid, "_SavasID"))
					{
					    SetPVarInt(i, "PuskurtmeModee", 0);
				        HidePlayerProgressBar(i, SavasBar[i]);
				        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
				        SetPlayerProgressBarValue(i, SavasBar[i], 0);
					}
		        }
		    }
		}
        SendClientMessage(playerid, -1, "{e67e22}Püskürtme: {ffffff}Öldüðünüz için, püskürtme baþarýlý olamadý !");
	}

	if(SavasIslem[playerid][CeteSavasBolgedemi] == 0 && SavasIslem[playerid][SavasSurem] != 0)
    {
        KillTimer(SavasIslem[playerid][savasTimer]);
        SavasIslem[playerid][SavasSureArttir] = 0;
		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
					if(GetPVarInt(i, "_SavasID") == GetPVarInt(playerid, "_SavasID"))
					{
				        HidePlayerProgressBar(i, SavasBar[i]);
				        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
				        SetPlayerProgressBarValue(i, SavasBar[i], 0);
					}
		        }
		    }
		}
        SendClientMessage(playerid, -1, "{3498db}[Çete Bölge Savaþý] {FFFFFF}Öldüðünüz için çete bölge savaþý iptal edildi.");
		switch(SavasIslem[playerid][SavasTip])
		{
		    case 3: cetePuanArttir(PlayerCete[playerid], -2);
			case 4: cetePuanArttir(PlayerCete[playerid], -3);
		}
        SavasIslem[playerid][SavasTip] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
		new c = PlayerCete[playerid], _bump[100];
        CeteIslem[c][ceteKasasi] -= GetPVarInt(playerid, "_CeteZarar");
		mysql_format(g_SQL, _bump, sizeof(_bump), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
		mysql_query(g_SQL, _bump);
		DeletePVar(playerid, "_CeteZarar");
        new id = GetPVarInt(playerid, "_SavasID");
		if(id != -1)
		{
		    CeteSavasMekan[id][eleGecirenCete] = -1;
			foreach(new i: Player)
			{
				GangZoneStopFlashForPlayer(i, CeteSavasMekan[id][cbZone]);
			}
		}
		SavasIslem[playerid][SavasSurem] = 0;
    }

	SetPVarInt(playerid, "BankaGirdi", 0);
	SetPVarInt(playerid, "SoygunOda", 0);

	if(GPSOyuncu[playerid][gpsAktif] == true)
    {
		GPSOyuncu[playerid][gpsAktif] = false;
        KillTimer(GPSOyuncu[playerid][gps_timer]);
		if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
		{
			DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
			SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
		}
		if(GetPVarInt(playerid, "gps_cpID") != -1)
		{
			DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
			SetPVarInt(playerid, "gps_cpID", -1);
		}
    }
    if(BarikatDuzenle[playerid])
    {
        new id = GetPVarInt(playerid, "bb_BRK");
        BarikatDuzenle[playerid] = false;
        if(IsValidDynamicObject(BarikatIslem[id][b_objeId]))
		{
			SetDynamicObjectPos(BarikatIslem[id][b_objeId], BarikatIslem[id][barikatPoss][0], BarikatIslem[id][barikatPoss][1], BarikatIslem[id][barikatPoss][2]);
			SetDynamicObjectRot(BarikatIslem[id][b_objeId], BarikatIslem[id][barikatPoss][3], BarikatIslem[id][barikatPoss][4], BarikatIslem[id][barikatPoss][5]);
		}
		SetPVarInt(playerid, "bb_BRK", -1);
    }
    
	if(PlayerBanka[playerid][bankaSoyuyor] == 1)
    {
        KillTimer(BankaGeriSay[playerid]);
        PlayerBanka[playerid][bankaSoyuyor] = 0;
        PlayerBanka[playerid][bankaCount] = 0;
        LazerDurum2 = false;
        SendClientMessage(playerid, -1, "{FF773D}[BANKA] {FFFFFF}Öldüðünüz için lazer hackleme iptal edildi.");
	}
	
	if(PlayerBanka[playerid][bankaSoyuyor] == 2)
    {
        if(GetPVarInt(playerid, "BankaSoyuyor") == 1)
        {
		    KillTimer(BankaGeriSay[playerid]);
		    new zx[85];
			format(zx, sizeof(zx), "[BANKA] {FFFFFF}Öldüðünüz için soygun iptal edildi. Çaldýðýnýz para: $%s dolar", convertNumber(GetPVarInt(playerid, "ToplamBPara")));
		    SendClientMessage(playerid, 0xFF773DFF, zx);
		    DeletePVar(playerid, "BankaSoyuyor");
		    DeletePVar(playerid, "ToplamBPara");
		    PlayerBanka[playerid][bankaCount] = 0;
		    PlayerBanka[playerid][bankaSoyuyor] = 0;
        }
    }

	if(GetPVarInt(playerid, "ETKAracim") != INVALID_VEHICLE_ID)
    {
        DestroyVehicle(GetPVarInt(playerid, "ETKAracim"));
    }
    SetPVarInt(playerid, "ETKAracim", INVALID_VEHICLE_ID);

	if(killerid != INVALID_PLAYER_ID)
	{
     	new c = PlayerCete[killerid], query[75];
		if(c != -1)
		{
			CeteIslem[c][CeteOldurme]++;
			mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `CeteOldurme` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][CeteOldurme], c);
			mysql_tquery(g_SQL, query);
		}
      	if(BasariIslem[killerid][ilkOldurme] == 0){
		BasariIslem[killerid][ilkOldurme] = 1;
		basariKilidi(killerid, "ilkOldurme", "Ýlk Öldürme", 10000, 100, 2);
		}
	}

 	if(PlayerCete[playerid] != -1)
	{
	    CeteIslem[PlayerCete[playerid]][ceteOlum]++;
		new query[75];
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteOlum` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[PlayerCete[playerid]][ceteOlum], PlayerCete[playerid]);
		mysql_tquery(g_SQL, query);
	}

	if(killerid != INVALID_PLAYER_ID)
	{
		if(Duelloda[killerid] == true && DuelloIslem[killerid][d_ID] == playerid)
		{
      		SetPVarInt(playerid, "DuelloYasak", 0);
      		SetPVarInt(killerid, "DuelloYasak", 0);
			new xb[114 + 24 + 24 + 11];
			format(xb, sizeof(xb), "Oyuncu %s düelloda yendiniz. Ödül: $%s dolar.", getName(playerid), convertNumber(DuelloIslem[killerid][dP]));
			SendClientMessage(killerid, 0x71BA51FF, xb);
			format(xb, sizeof(xb), "» Düello: {FFFFFF}Oyuncu %s düelloda %s maðlup etti ve düelloyu kazandý. {64DDBB}Ödül: {FFFFFF}$%s dolar.", getName(killerid), getName(playerid), convertNumber(DuelloIslem[killerid][dP]));
			SendClientMessageToAll(0xFD5B03FF, xb);
	        aranmaLeveli(playerid, 0);
	        aranmaLeveli(killerid, 0);
			pParaver(playerid, -DuelloIslem[killerid][dP]);
			pParaver(killerid, DuelloIslem[killerid][dP]);
			ResetPlayerWeapons(killerid);
			ResetPlayerWeapons(playerid);
			SpawnPlayer(killerid);
			DuelloOyuncusu[killerid] = INVALID_PLAYER_ID;
			DuelloIslem[killerid][d_ID] = INVALID_PLAYER_ID;
			DuelloIslem[killerid][dHarita] = 0;
			DuelloIslem[killerid][dP] = 0;
			DuelloIslem[killerid][dSilah][0] = 0;
			DuelloIslem[killerid][dSilah][1] = 0;
			Duelloda[killerid] = false;
   			DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
			DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
			DuelloIslem[playerid][dHarita] = 0;
			DuelloIslem[playerid][dP] = 0;
			DuelloIslem[playerid][dSilah][0] = 0;
			DuelloIslem[playerid][dSilah][1] = 0;
			Duelloda[playerid] = false;
		}
		if(Duelloda[killerid] == true && DuelloOyuncusu[killerid] == playerid)
		{
			SetPVarInt(playerid, "DuelloYasak", 0);
      		SetPVarInt(killerid, "DuelloYasak", 0);
			new xb[114 + 24 + 24 + 11];
			format(xb, sizeof(xb), "Oyuncu %s düelloda yendiniz. Ödül: $%s dolar.", getName(playerid), convertNumber(DuelloIslem[playerid][dP]));
			SendClientMessage(killerid, 0x71BA51FF, xb);
   			format(xb, sizeof(xb), "» Düello: {FFFFFF}Oyuncu %s düelloda %s maðlup etti ve düelloyu kazandý. {64DDBB}Ödül: {FFFFFF}$%s dolar.", getName(killerid), getName(playerid), convertNumber(DuelloIslem[playerid][dP]));
			SendClientMessageToAll(0xFD5B03FF, xb);
   	        aranmaLeveli(playerid, 0);
	        aranmaLeveli(killerid, 0);
			pParaver(playerid, -DuelloIslem[playerid][dP]);
			pParaver(killerid, DuelloIslem[playerid][dP]);
			ResetPlayerWeapons(killerid);
			ResetPlayerWeapons(playerid);
			SpawnPlayer(killerid);
			DuelloOyuncusu[killerid] = INVALID_PLAYER_ID;
			DuelloIslem[killerid][d_ID] = INVALID_PLAYER_ID;
			DuelloIslem[killerid][dHarita] = 0;
			DuelloIslem[killerid][dP] = 0;
			DuelloIslem[killerid][dSilah][0] = 0;
			DuelloIslem[killerid][dSilah][1] = 0;
			Duelloda[killerid] = false;
   			DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
			DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
			DuelloIslem[playerid][dHarita] = 0;
			DuelloIslem[playerid][dP] = 0;
			DuelloIslem[playerid][dSilah][0] = 0;
			DuelloIslem[playerid][dSilah][1] = 0;
			Duelloda[playerid] = false;
		}
	}

    if(GetPVarInt(playerid, "soktabancasi") == 1) cmd_tazer(playerid, "");
	if(soygunCount[playerid] >= 1)
    {
        new bx[100+24+11+5], _s_ = GetPVarInt(playerid, "TempSoygun");
        format(bx, sizeof(bx), "=> Soygun: {FFFFFF}%s mekanýndan $%s dolar çaldýn !", SoygunIslem[_s_][soygunIsmi], convertNumber(soygunParasi[playerid]));
        SendClientMessage(playerid, 0x004C79FF, bx);
        soygunCount[playerid] = 0;
        soygunParasi[playerid] = 0;
		PlayerTextDrawHide(playerid, SoyulanBar[playerid][0]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][1]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][2]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][3]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][4]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][5]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][6]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][7]);
	    PlayerTextDrawHide(playerid, SoyulanBar[playerid][8]);
    }
	if(GetPVarInt(playerid, "Tecavuz") == 1)
	{
	    new xa[58+24+3];
    	TecavuzV[playerid] = 0;
     	format(xa, sizeof(xa), "[TECAVUZ] Oyuncu %s(%d) tecavüzden kaptýðý virüsten öldü.", getName(playerid), playerid);
	    SendClientMessageToAll(0xFFC71FFF, xa);
	}
 	if(BolgeTimerDurum[playerid] == 1)
	{
	    if(BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeSure] >= 1)
	    {
		    KillTimer(BolgeTimer[playerid]);
		    new bolgeMsj[96 + 25 + 16 + 3 + 10], g = g_oIslem[playerid][g_Id];
			format(bolgeMsj, sizeof(bolgeMsj), "{92F22A}« BÖLGE » {FF6600}%s {FFFFFF}isimli grup {6FA6F2}%s {FFFFFF}adlý bölgeyi ele geçiremedi !", grupIslem[g][g_Ismi], BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeIsim]);
			SendClientMessageToAll(0xF2E76DFF, bolgeMsj);
		  	BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeSure] = BOLGE_SURE;
			BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeAlindi] = 0;
			BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgedurum] = false;
			foreach(new x: Player) GangZoneStopFlashForPlayer(x, BolgeIslem[GetPVarInt(playerid, "TempBolge")][zoneID]);
			DeletePVar(playerid, "TempBolge");
			BolgeTimerDurum[playerid] = 0;
		}
	}
	TecavuzV[playerid] = 0;
	//Bombam[playerid] = 0;
    if(killerid != INVALID_PLAYER_ID)
	{
        if(!Etkde[killerid]){
    	oyuncuData[killerid][Oldurme]++;}
    	if(oyuncuData[killerid][Oldurme] >= 100 && oyuncuData[killerid][Oldurme] <= 499)
    	{
			if(BasariIslem[killerid][ilkoYuz] == 0){
			BasariIslem[killerid][ilkoYuz] = 1;
			basariKilidi(killerid, "ilkoYuz", "100 Öldürme", 100000, 500, 10);
			}
		}
      	if(oyuncuData[killerid][Oldurme] >= 500 && oyuncuData[killerid][Oldurme] <= 999)
    	{
			if(BasariIslem[killerid][ilkoBesyuz] == 0){
			BasariIslem[killerid][ilkoBesyuz] = 1;
			basariKilidi(killerid, "ilkoBesyuz", "500 Öldürme", 500000, 2500, 10);
			}
		}
		if(oyuncuData[killerid][Oldurme] >= 1000 && oyuncuData[killerid][Oldurme] <= 4999)
    	{
			if(BasariIslem[killerid][ilkoBin] == 0){
			BasariIslem[killerid][ilkoBin] = 1;
			basariKilidi(killerid, "ilkoBin", "1000 Öldürme", 1000000, 5000, 10);
			}
		}
  		if(oyuncuData[killerid][Oldurme] >= 5000 && oyuncuData[killerid][Oldurme] <= 9999)
    	{
			if(BasariIslem[killerid][ilkoBesBin] == 0){
			BasariIslem[killerid][ilkoBesBin] = 1;
			basariKilidi(killerid, "ilkoBesBin", "5000 Öldürme", 2500000, 10000, 10);
			}
		}
		if(oyuncuData[killerid][Oldurme] >= 10000)
    	{
			if(BasariIslem[killerid][ilkoOnBin] == 0){
			BasariIslem[killerid][ilkoOnBin] = 1;
			basariKilidi(killerid, "ilkoOnBin", "10000 Öldürme", 5000000, 20000, 500);
			}
		}
	}
	SendDeathMessage(killerid, playerid, reason);

	if(killerid != INVALID_PLAYER_ID)
	{
		if(gTeam[killerid] >= 2 && gTeam[killerid] <= 8)
		{
		    new ox[61 + 24 + 3];
			if(gTeam[playerid] == SIVIL || gTeam[playerid] == TECAVUZCU || gTeam[playerid] == GASPCI
			|| gTeam[playerid] == SUIKASTCI || gTeam[playerid] == TAMIRCI || gTeam[playerid] == BOMBACI
			|| gTeam[playerid] == ARAC_HIRSIZI)
			{
		    	if(aranmaSeviyesii[playerid] >= 4 && aranmaSeviyesii[playerid] <= 35)
			    {
					new expp = random(100 - 50) + 50, bx[10];
			        oyuncuData[killerid][ExpPuan] += expp;
			        format(bx, sizeof(bx), "+%d_Exp", expp);
			        PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
			        if(oyuncuData[killerid][textAyar] == 0){
			        PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
			        SetPVarInt(killerid, "YaziMode", 1);
			        SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
			        ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
	          		format(ox, sizeof(ox), "Suçlu þahýs %s(%d), öldürdüðün için $10,000 dolar kazandýn !", getName(playerid), playerid);
				    SendClientMessage(killerid, 0x7BB0A6FF, ox);
				    pParaver(killerid, 10000);
			    }
   			 	if(aranmaSeviyesii[playerid] >= 36 && aranmaSeviyesii[playerid] <= 75)
			    {
	          		format(ox, sizeof(ox), "Suçlu þahýs %s(%d), öldürdüðün için $30,000 dolar kazandýn !", getName(playerid), playerid);
				    SendClientMessage(killerid, 0x7BB0A6FF, ox);
				    pParaver(killerid, 30000);
					new expp = random(150 - 100) + 100, bx[10];
			        oyuncuData[killerid][ExpPuan] += expp;
			        format(bx, sizeof(bx), "+%d_Exp", expp);
			        PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                    if(oyuncuData[killerid][textAyar] == 0){
					PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
			        SetPVarInt(killerid, "YaziMode", 1);
			        SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
			        ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
				}
  			 	if(aranmaSeviyesii[playerid] >= 76)
			    {
	          		format(ox, sizeof(ox), "Suçlu þahýs %s(%d), öldürdüðün için $50,000 dolar kazandýn !", getName(playerid), playerid);
				    SendClientMessage(killerid, 0x7BB0A6FF, ox);
				    pParaver(killerid, 50000);
					new expp = random(200 - 150) + 150, bx[10];
			        oyuncuData[killerid][ExpPuan] += expp;
			        format(bx, sizeof(bx), "+%d_Exp", expp);
			        PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                    if(oyuncuData[killerid][textAyar] == 0){
					PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
			        SetPVarInt(killerid, "YaziMode", 1);
			        SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
			        ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
			    }
			}
		}
	}

 	if(killerid != INVALID_PLAYER_ID)
	{
		if(gTeam[killerid] == SIVIL || gTeam[killerid] == TECAVUZCU || gTeam[killerid] == GASPCI
		|| gTeam[killerid] == SUIKASTCI || gTeam[killerid] == TAMIRCI || gTeam[killerid] == BOMBACI
		|| gTeam[killerid] == ARAC_HIRSIZI)
		{
		    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8)
			{
				aranmaLeveli(killerid, 24);
				new expp = random(250 - 200) + 200, bx[10];
				oyuncuData[killerid][ExpPuan] += expp;
				format(bx, sizeof(bx), "+%d_Exp", expp);
				PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                if(oyuncuData[killerid][textAyar] == 0){
				PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
				SetPVarInt(killerid, "YaziMode", 1);
				SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
				ExpGuncelle(killerid);
				if(oyuncuData[killerid][_LevelCount] >= 50)
				{
					if(oyuncuData[killerid][ExpPuan] > 50000)
					{
					    oyuncuData[killerid][_LevelCount] = 50;
						oyuncuData[killerid][ExpPuan] = 50000;
						ExpGuncelle(killerid);
					}
				}
			}
			else
			{
			    if(aranmaSeviyesii[playerid] <= 3)
			    {
					new expp = random(100 - 75) + 75, bx[10];
					oyuncuData[killerid][ExpPuan] += expp;
					format(bx, sizeof(bx), "+%d_Exp", expp);
					PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                    if(oyuncuData[killerid][textAyar] == 0){
					PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
					SetPVarInt(killerid, "YaziMode", 1);
					SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
					ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
			    }
				if(aranmaSeviyesii[playerid] >= 4 && aranmaSeviyesii[playerid] <= 35)
				{
					new expp = random(100 - 75) + 75, bx[10];
					oyuncuData[killerid][ExpPuan] += expp;
					format(bx, sizeof(bx), "+%d_Exp", expp);
					PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                    if(oyuncuData[killerid][textAyar] == 0){
					PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
					SetPVarInt(killerid, "YaziMode", 1);
					SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
					ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
				}

				if(aranmaSeviyesii[playerid] >= 36 && aranmaSeviyesii[playerid] <= 75)
				{
					new expp = random(150 - 100) + 100, bx[10];
					oyuncuData[killerid][ExpPuan] += expp;
					format(bx, sizeof(bx), "+%d_Exp", expp);
					PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                    if(oyuncuData[killerid][textAyar] == 0){
					PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
					SetPVarInt(killerid, "YaziMode", 1);
					SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
					ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
				}

				if(aranmaSeviyesii[playerid] >= 76)
				{
					new expp = random(200 - 150) + 150, bx[10];
					oyuncuData[killerid][ExpPuan] += expp;
					format(bx, sizeof(bx), "+%d_Exp", expp);
					PlayerTextDrawSetString(killerid, ParaLevel[killerid][1], bx);
                    if(oyuncuData[killerid][textAyar] == 0){
					PlayerTextDrawShow(killerid, ParaLevel[killerid][1]);}
					SetPVarInt(killerid, "YaziMode", 1);
					SetPVarInt(killerid, "YazilariSil", GetTickCount() + 4500);
					ExpGuncelle(killerid);
					if(oyuncuData[killerid][_LevelCount] >= 50)
					{
						if(oyuncuData[killerid][ExpPuan] > 50000)
						{
						    oyuncuData[killerid][_LevelCount] = 50;
							oyuncuData[killerid][ExpPuan] = 50000;
							ExpGuncelle(killerid);
						}
					}
				}
				aranmaLeveli(killerid, 16);
			}
		}
	}
  	if(killerid != INVALID_PLAYER_ID)
	{
		if(SuikastDurum == 1 && sMaruzOyuncu[playerid] == 1 && gTeam[killerid] == SUIKASTCI)
		{
	    	new ba[76 + 24 + 24 + 7];
	    	format(ba, sizeof(ba), "Suikast: Oyuncu %s, hedeflenen oyuncu %s öldürdüðü için $%s dolar ödül aldý.", getName(killerid), getName(playerid), convertNumber(sOdulOyuncu[playerid]));
	    	SendClientMessageToAll(0x63D0FFFF, ba);
			pParaver(killerid, sOdulOyuncu[playerid]);
			sMaruzOyuncu[playerid] = 0;
	    	sOdulOyuncu[playerid] = 0;
		}
	}
 	aranmaLeveli(playerid, 0);
	oyuncuData[playerid][pAranma] = 0;
	if(GetPVarInt(playerid, "KillModu") == 0) if(!Etkde[playerid]) oyuncuData[playerid][Olum]++;
	
	if(Etkde[playerid] == true)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    new arac = GetPlayerVehicleID(playerid);
		    for(new i = 0; i < 60; i++)
	    	{
	    		if(etkMaxArac[i] == arac)
	    		{
	    		    DestroyVehicle(arac);
	                etkMaxArac[i] = INVALID_VEHICLE_ID;
	    		    break;
	    		}
			}
		}
		Etkde[playerid] = false;
	    TogglePlayerControllable(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 0);
    }

    DeletePVar(playerid, "KillModu");

	SetPVarInt(playerid, "DuelloYasak", 0);

    TextModu[playerid] = 0;
    CancelSelectTextDraw(playerid);

	TextDrawHideForPlayer(playerid, MeslekBar[0]);
    TextDrawHideForPlayer(playerid, MeslekBar[1]);
    TextDrawHideForPlayer(playerid, MeslekBar[2]);
    TextDrawHideForPlayer(playerid, MeslekBar[3]);
    TextDrawHideForPlayer(playerid, MeslekBar[4]);
    TextDrawHideForPlayer(playerid, MeslekBar[5]);
    TextDrawHideForPlayer(playerid, MeslekBar[6]);
    TextDrawHideForPlayer(playerid, MeslekBar[7]);
    TextDrawHideForPlayer(playerid, MeslekBar[8]);
    TextDrawHideForPlayer(playerid, MeslekBar[9]);
    TextDrawHideForPlayer(playerid, MeslekBar[10]);
    TextDrawHideForPlayer(playerid, MeslekBar[11]);
    TextDrawHideForPlayer(playerid, MeslekBar[12]);
    TextDrawHideForPlayer(playerid, MeslekBar[13]);
    TextDrawHideForPlayer(playerid, MeslekBar[14]);

	PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][0]);
    PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][1]);
    PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][2]);

    PlayerTextDrawHide(playerid, SagBarText[playerid][0]), PlayerTextDrawHide(playerid, SagBarText[playerid][1]);
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(oaIslem[vehicleid][oaCheck])
	{
	    switch(GetVehicleModel(vehicleid))
	    {
	        case 411:
			{
				AddVehicleComponent(vehicleid, 1010);
				AddVehicleComponent(vehicleid, 1074);
				ChangeVehicleColor(vehicleid, 0, 1);
				ChangeVehiclePaintjob(vehicleid, 0);
			}
			case 560:
			{
		   		AddVehicleComponent(vehicleid, 1032);
				AddVehicleComponent(vehicleid, 1026);
				AddVehicleComponent(vehicleid, 1010);
				AddVehicleComponent(vehicleid, 1028);
				AddVehicleComponent(vehicleid, 1079);
				ChangeVehicleColor(vehicleid, 0, 3);
				ChangeVehiclePaintjob(vehicleid, 0);
			}
			case 578: ChangeVehicleColor(vehicleid, 1, 0);
			case 487: ChangeVehicleColor(vehicleid, 1, 3);
			case 541:
			{
				ChangeVehicleColor(vehicleid, 1, 3);
				AddVehicleComponent(vehicleid, 1010);
			    AddVehicleComponent(vehicleid, 1074);
			}
	    }
	}
	if(CeteArac[vehicleid][ceteAracAktif])
	{
	    SetVehiclePos(vehicleid, CeteArac[vehicleid][ceteAracPos][0], CeteArac[vehicleid][ceteAracPos][1], CeteArac[vehicleid][ceteAracPos][2]);
	    SetVehicleZAngle(vehicleid, CeteArac[vehicleid][ceteAracPos][3]);
	    if(CeteArac[vehicleid][c_pJob] != 0) ChangeVehiclePaintjob(vehicleid, CeteArac[vehicleid][c_pJob] - 1);
		ChangeVehicleColor(vehicleid, CeteArac[vehicleid][ceteAracR][0], CeteArac[vehicleid][ceteAracR][1]);
		for(new i = 0; i < 17; ++i)
		{
			if(CeteArac[vehicleid][c_mParca][i] != 0)
			{
				AddVehicleComponent(vehicleid, CeteArac[vehicleid][c_mParca][i]);
			}
		}
	}
	if(AraclarIslem[vehicleid][aAktif])
    {
		SetVehiclePos(vehicleid, AraclarIslem[vehicleid][a_Pos][0], AraclarIslem[vehicleid][a_Pos][1], AraclarIslem[vehicleid][a_Pos][2]);
        SetVehicleZAngle(vehicleid, AraclarIslem[vehicleid][a_Pos][3]);
        if(AraclarIslem[vehicleid][pJob] != 0) ChangeVehiclePaintjob(vehicleid, AraclarIslem[vehicleid][pJob] - 1);
        ChangeVehicleColor(vehicleid, AraclarIslem[vehicleid][a_Renk][0], AraclarIslem[vehicleid][a_Renk][1]);
        for(new i = 0; i < 17; ++i)
		{
			if(AraclarIslem[vehicleid][a_mParca][i] != 0)
			{
				AddVehicleComponent(vehicleid, AraclarIslem[vehicleid][a_mParca][i]);
			}
		}
    }
    if(vehicleid == polisAraclar[39])
    {
        AddVehicleComponent(polisAraclar[39], 1010);
        AddVehicleComponent(polisAraclar[39], 1078);
        AddVehicleComponent(polisAraclar[39], 1087);
    }
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
    if(GetPVarInt(playerid, "SpawnOldum") == 0) return hataMesaji(playerid, "Spawn olmadan konuþamazsýn"), 0;
    if(chatDurum == 1) return hataMesaji(playerid, "Chat konuþmalarý bir admin tarafýndan kapatýlmýþ. Þuan konuþamazsýnýz."), 0;
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]), 0;
	if(stringContainsIP(text))
	{
		hataMesaji(playerid, "Ip reklam þüphesi.");
		return 0;
	}
 	if(GetPVarInt(playerid, "TextKontrol") > GetTickCount())
	{
	    new textc = GetPVarInt(playerid, "TextKontrol");
	    new kkSure[105];
	    SetPVarInt(playerid, "TextKontrol", textc + 1000);
	    new vSures = (GetPVarInt(playerid, "TextKontrol") - GetTickCount()) / 1000;
	    format(kkSure, sizeof(kkSure), "Chat'e yazý yazmak için 1 saniye beklemelisiniz. Devam Ederseniz süre katlanýr. Kalan Süre: %d", vSures);
		SendClientMessage(playerid, 0xD2D7D3FF, kkSure);
		return 0;
	}

	SetPVarInt(playerid, "TextKontrol", GetTickCount() + 1000);

	for(new i = 0; i < strlen(text); i++)
	{
	    if(text[i] == '{' || text[i] == '}')
	    {
	        hataMesaji(playerid, "Yazdýðýn mesajlarda { ve } iþaretlerini kullanamazsýn.");
	        return 0;
	    }
	}
	
	new i;
	text[0] = toupper(text[0]);
	while (text[++i])
	{
		if(text[i-1] != ':')
		{
			text[i] = tolower(text[i]);
		}
		if ('A' <= text[i] <= 'Z') text[i] |= 0x20;
 		if((0x00C0 <= text[i] <= 0x00DE) && text[i] != 0x00D7) text[i] |= 0x0020;
  		if((0x0100 <= text[i] <= 0x017F) && !(text[i] & 1)) text[i] |= 0x0001;
	}

	textfloodkontrol(text);

	new sz[148];

	if(BasariIslem[playerid][ilkMesaj] == 0){
	BasariIslem[playerid][ilkMesaj] = 1;
	basariKilidi(playerid, "ilkMesaj", "Ýlk Mesaj", 5000, 50, 1);
	}
	new c = PlayerCete[playerid];
	switch(oyuncuData[playerid][pAdmin]) // F22B50
	{
		case 1:
		{
		    if(c == -1)
		    {
				format(sz, sizeof(sz), "{ff783a}[Deneme Admin] {%06x}%s[%d]: {ff783a}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("ff783a", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
			else
			{
   				format(sz, sizeof(sz), "{ff783a}[Deneme Admin] {%s}[%s] {%06x}%s[%d]: {ff783a}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("ff783a", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
  	    case 2:
		{
		    if(c == -1)
		    {
				format(sz, sizeof(sz), "{fffd93}[Görevli Admin] {%06x}%s[%d]: {fffd93}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("fffd93", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
			else
			{
   				format(sz, sizeof(sz), "{fffd93}[Görevli Admin] {%s}[%s] {%06x}%s[%d]: {fffd93}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("fffd93", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
  		case 3:
		{
		    if(c == -1)
		    {
				format(sz, sizeof(sz), "{38caff}[Sorumlu Admin] {%06x}%s[%d]: {38caff}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("38caff", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
			else
			{
   				format(sz, sizeof(sz), "{38caff}[Sorumlu Admin] {%s}[%s] {%06x}%s[%d]: {38caff}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("38caff", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
		case 4:
		{
		    if(c == -1)
		    {
				format(sz, sizeof(sz), "{2cd676}[Baþ Admin] {%06x}%s[%d]: {2cd676}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("2cd676", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
			else
			{
   				format(sz, sizeof(sz), "{2cd676}[Baþ Admin] {%s}[%s] {%06x}%s[%d]: {2cd676}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("2cd676", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
		case 5:
		{
		    if(c == -1)
		    {
				format(sz, sizeof(sz), "{f8ff39}[Yönetici] {%06x}%s[%d]: {f8ff39}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("f8ff39", "4CAF50", text));
            	SendClientMessageToAll(-1, sz);
			}
			else
			{
   				format(sz, sizeof(sz), "{f8ff39}[Yönetici] {%s}[%s] {%06x}%s[%d]: {f8ff39}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("f8ff39", "4CAF50", text));
            	SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
		case 6:
		{
		    if(c == -1)
		    {
				format(sz, sizeof(sz), "{02fc02}[Emektar] {%06x}%s[%d]: {02fc02}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("02fc02", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
			else
			{
   				format(sz, sizeof(sz), "{02fc02}[Emektar] {%s}[%s] {%06x}%s[%d]: {02fc02}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("02fc02", "51ffff", text));
            	SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
  		case 7:
		{
  			if(c == -1)
		    {
	  			format(sz, sizeof(sz), "{e74c3c}[SAHÝP] {%06x}%s[%d]: {00a8ff}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("e04747", "f18181", text));
	            SendClientMessageToAll(-1, sz);
			}
			else
			{
   	  			format(sz, sizeof(sz), "{e74c3c}[SAHÝP] {%s}[%s] {%06x}%s[%d]: {00a8ff}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("e04747", "f18181", text));
	            SendClientMessageToAll(-1, sz);
			}
            return 0;
		}
	}

 	if(oyuncuData[playerid][pRehber] == 1)
	{
		if(c == -1)
		{
	    	format(sz, sizeof(sz), "{c56cf0}[REHBER] {%06x}%s[%d]: {c56cf0}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("c56cf0", "ffee58", text));
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
  	    	format(sz, sizeof(sz), "{c56cf0}[REHBER] {%s}[%s] {%06x}%s[%d]: {c56cf0}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("c56cf0", "ffee58", text));
	    	SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

 	if(oyuncuData[playerid][pDj] == 1)
	{
		if(c == -1)
		{
		    format(sz, sizeof(sz), "{18dcff}[DJ] {%06x}%s[%d]: {18dcff}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("4CD137", "ffee58", text));
		    SendClientMessageToAll(-1, sz);
		}
		else
		{
  		    format(sz, sizeof(sz), "{18dcff}[DJ] {%s}[%s] {%06x}%s[%d]: {18dcff}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, IDBulName("4CD137", "ffee58", text));
		    SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

 	if(oyuncuData[playerid][kral_TAG] == 1)
	{
		if(c == -1)
		{
     		format(sz, sizeof(sz), "{E74C3C}~KRAL~ {%06x}%s[%d]: {%s}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, Renkler[RainbowError][rgbColored], text);
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
       		format(sz, sizeof(sz), "{E74C3C}~KRAL~ {%s}[%s] {%06x}%s[%d]: {%s}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, Renkler[RainbowError][rgbColored], text);
	    	SendClientMessageToAll(-1, sz);
		}
		return 0;
	}

	new vTag[22];
	switch(oyuncuData[playerid][pVip])
	{
	    case 1:
		{
			vTag = "{0F52BA}[Safir Vip]";
			if(c == -1)
			{
	   			format(sz, sizeof(sz), "%s {%06x}%s[%d]: {0F52BA}%s", vTag, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
	   		else
			{
	  			format(sz, sizeof(sz), "%s {%s}[%s] {%06x}%s[%d]: {0F52BA}%s", vTag, CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
			return 0;
		}
	    case 2:
		{
			vTag = "{F62217}[Yakut Vip]";
   			if(c == -1)
			{
	   			format(sz, sizeof(sz), "%s {%06x}%s[%d]: {F62217}%s", vTag, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
	   		else
			{
	  			format(sz, sizeof(sz), "%s {%s}[%s] {%06x}%s[%d]: {F62217}%s", vTag, CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
			return 0;
		}
	    case 3:
		{
			vTag = "{1E7B2C}[Zümrüt Vip]";
			if(c == -1)
			{
	   			format(sz, sizeof(sz), "%s {%06x}%s[%d]: {1E7B2C}%s", vTag, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
	   		else
			{
	  			format(sz, sizeof(sz), "%s {%s}[%s] {%06x}%s[%d]: {1E7B2C}%s", vTag, CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
			return 0;
		}
	    case 4:
		{
			vTag = "{B9F2FF}[Elmas Vip]";
   			if(c == -1)
			{
	   			format(sz, sizeof(sz), "%s {%06x}%s[%d]: {B9F2FF}%s", vTag, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
	   		else
			{
	  			format(sz, sizeof(sz), "%s {%s}[%s] {%06x}%s[%d]: {B9F2FF}%s", vTag, CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	        	SendClientMessageToAll(-1, sz);
			}
			return 0;
		}
	}


	if(gTeam[playerid] == SIVIL)
	{
		if(c == -1)
		{
     		format(sz, sizeof(sz), "{%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
       		format(sz, sizeof(sz), "{%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 14)
	{
 		if(c == -1)
		{
     		format(sz, sizeof(sz), "{%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
       		format(sz, sizeof(sz), "{%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

 	if(gTeam[playerid] == POLIS)
	{
 		if(c == -1)
		{
	     	format(sz, sizeof(sz), "{F1C40F}[POLIS] {%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
		    SendClientMessageToAll(-1, sz);
		}
		else
		{
	     	format(sz, sizeof(sz), "{F1C40F}[POLIS] {%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
		    SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

  	if(gTeam[playerid] == CEVIK_KUVVET)
	{
  		if(c == -1)
		{
     		format(sz, sizeof(sz), "{F1C40F}[Çevik Kuvvet] {%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
       		format(sz, sizeof(sz), "{F1C40F}[Çevik Kuvvet] {%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

  	if(gTeam[playerid] == OZEL_HAREKAT_TIMI)
	{
		if(c == -1)
		{
     		format(sz, sizeof(sz), "{3D8EB9}[Özel Harekat] {%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
       		format(sz, sizeof(sz), "{3D8EB9}[Özel Harekat] {%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

  	if(gTeam[playerid] == SIVIL_POLIS)
	{
		if(c == -1)
		{
	     	format(sz, sizeof(sz), "{E3000E}[Sivil Polis] {%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
		    SendClientMessageToAll(-1, sz);
		}
		else
		{
  	     	format(sz, sizeof(sz), "{E3000E}[Sivil Polis] {%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
		    SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

   	if(gTeam[playerid] == OZEL_KUVVET_B)
	{
 		if(c == -1)
		{
	     	format(sz, sizeof(sz), "{EE543A}[Özel Kuvvet] {%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
		    SendClientMessageToAll(-1, sz);
		}
		else
		{
  	     	format(sz, sizeof(sz), "{EE543A}[Özel Kuvvet] {%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
		    SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}

	if(gTeam[playerid] == TURK_H_KUVVETLERI)
	{
  		if(c == -1)
		{
     		format(sz, sizeof(sz), "{D4AF61}[Hava Kuvvetleri] {%06x}%s[%d]: {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
		else
		{
       		format(sz, sizeof(sz), "{D4AF61}[Hava Kuvvetleri] {%s}[%s] {%06x}%s[%d]: {FFFFFF}%s", CeteIslem[c][ceteRengi], CeteIslem[c][ceteTagi], GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, text);
	    	SendClientMessageToAll(-1, sz);
		}
	    return 0;
	}
	return 0;
}

stock IDBulName(sz_hex[], sz_hex2[], string[])
{
	// Coding: Burak (NexoR)
	new tmp_sz[256], pos_id = -1, id, tmp_isim[MAX_PLAYER_NAME + 1], isim[60];
    format(tmp_sz, sizeof(tmp_sz), string);
    if(strfind(tmp_sz, "@", true) != -1) { pos_id = strfind(tmp_sz, "@", true); }
	if(pos_id != -1)
	{
		switch(tmp_sz[pos_id + 1])
		{
			case '0'..'9':
			{
			    id = strval(tmp_sz[pos_id + 1]);
			    if(IsPlayerConnected(id))
			    {
					strdel(tmp_sz, pos_id, pos_id + 1);
			        strdel(tmp_sz, pos_id, pos_id + 2);
			        GetPlayerName(id, tmp_isim, sizeof(tmp_isim));
			        format(isim, sizeof(isim), "{%s}%s {%s}", sz_hex, tmp_isim, sz_hex2);
				    strins(tmp_sz, isim, pos_id);
				}
			}
		}
	}
	return tmp_sz;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(ispassenger == 0)
	{
	    if(oIslem[playerid][kelepce] == 1)
	    {
	        new Float: _x[3];
	        GetPlayerPos(playerid, _x[0], _x[1], _x[2]);
	        SetPlayerPos(playerid, _x[0], _x[1] - 0.05, _x[2]);
	        SendClientMessage(playerid, -1, "{FF0000}Hata: {FFFFFF}Kelepçeliyken bir araca sürücü olarak binemezsiniz.");
	    }
	    new id = GetPVarInt(playerid, "_SavasID");
	    if(id != -1){
	    if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1)
	    {
	        ClearAnimations(playerid);
	        hataMesaji(playerid, "Çete savaþý olan bölgelerde araçlar kullanýlamaz !");
	    }}
	}
	if(ispassenger == 1)
	{
	    if(!SurucuKontrol(vehicleid))
	    {
	        new Float: _x[3];
	        GetPlayerPos(playerid, _x[0], _x[1], _x[2]);
	        SetPlayerPos(playerid, _x[0], _x[1] - 0.05, _x[2]);
	        SendClientMessage(playerid, -1, "{FF0000}Hata: {FFFFFF}Bu aracýn sürücüsü yok, binemezsiniz.");
	    }
	}
	return 1;
}

stock SurucuKontrol(vehicleid)
{
	new ee = 0;
	foreach(new i: Player)
	{
		if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
		    ee = 1;
		    break;
		}
	}
	return ee;
}


public OnPlayerExitVehicle(playerid, vehicleid)
{
	SetPVarInt(playerid, "SpeedSkinBekle", GetTickCount() + 5000);
    SetPVarInt(playerid, "VipMotor", 0);
    VipIslem[playerid][enSonMotor] = INVALID_VEHICLE_ID;
	return 1;
}

stock IsABike(vehicleid)
{
	new result;
	switch(GetVehicleModel(vehicleid))
	{
		case 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471: result = GetVehicleModel(vehicleid);
		default: result = 0;
	}
	return result;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(oyuncuData[playerid][pVip] != 0 && VipIslem[playerid][MotorDusmeDurum] == true)
	    {
	        if(MotorVipArac(GetPlayerVehicleID(playerid)))
	        {
	            SetPVarInt(playerid, "VipMotor", 1);
    			VipIslem[playerid][enSonMotor] = GetPlayerVehicleID(playerid);
			}
		}

		new arac = GetPlayerVehicleID(playerid);
		
		if(oaIslem[arac][oaCheck])
	    {
			new Float:pXos[3], ba[63+24];
			GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
	        if(strcmp(oaIslem[arac][oaSahip], getName(playerid), false) != 0 && Anahtar[playerid] != arac)
	        {
				SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				format(ba, sizeof(ba), "{B8B6A6}Bu araç {EC555C}%s {B8B6A6}ait. Binemezsiniz.", oaIslem[arac][oaSahip]);
				SendClientMessage(playerid, -1, ba);
				return 1;
	        }
	    }
		
  	    if(CeteArac[arac][ceteAracAktif])
	    {
	        if(PlayerCete[playerid] != CeteArac[arac][ceteIDsi])
	        {
	    		new Float:pXos[3], ba[63+24];
				GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				format(ba, sizeof(ba), "{B8B6A6}Bu araç {EC555C}%s {B8B6A6}çetesine ait. Binemessiniz.", CeteIslem[CeteArac[arac][ceteIDsi]][ceteIsmi]);
				SendClientMessage(playerid, -1, ba);
				return 1;
	        }
	    }
  		if(AraclarIslem[arac][aAktif])
		{
		    if(strcmp(AraclarIslem[arac][a_Sahip], getName(playerid), false) != 0 && Anahtar[playerid] != arac)
		    {
	    		new aylinim[61 + 24], Float:pX, Float:pY, Float:pZ;
		    	format(aylinim, sizeof(aylinim), "Araç: {FFFFFF}Bu araç oyuncu {FD5B03}%s {FFFFFF}aittir.", AraclarIslem[arac][a_Sahip]);
		    	SendClientMessage(playerid, 0x71BA51FF, aylinim);
				GetPlayerPos(playerid,pX, pY, pZ);
				SetPlayerPos(playerid,pX, pY+2, pZ);
		        return 1;
		    }
		    if(!VipIslem[playerid][MotorDusmeDurum]){
		    SendClientMessage(playerid, -1, "{00FF00}Bilgi: {FFFFFF}Satýn almýþ olduðunuz aracý {FF0000}/aPanel {FFFFFF}yazarak yönetebilirsiniz.");
		    }
		}

		if(	GetPlayerVehicleID(playerid) == polisAraclar[0] ||
			GetPlayerVehicleID(playerid) == polisAraclar[1] ||
			GetPlayerVehicleID(playerid) == polisAraclar[2] ||
			GetPlayerVehicleID(playerid) == polisAraclar[3] ||
			GetPlayerVehicleID(playerid) == polisAraclar[4] ||
			GetPlayerVehicleID(playerid) == polisAraclar[5] ||
			GetPlayerVehicleID(playerid) == polisAraclar[6] ||
			GetPlayerVehicleID(playerid) == polisAraclar[7] ||
			GetPlayerVehicleID(playerid) == polisAraclar[8] ||
			GetPlayerVehicleID(playerid) == polisAraclar[9] ||
			GetPlayerVehicleID(playerid) == polisAraclar[10] ||
			GetPlayerVehicleID(playerid) == polisAraclar[11] ||
			GetPlayerVehicleID(playerid) == polisAraclar[12] ||
			GetPlayerVehicleID(playerid) == polisAraclar[13] ||
			GetPlayerVehicleID(playerid) == polisAraclar[14] ||
			GetPlayerVehicleID(playerid) == polisAraclar[15] ||
			GetPlayerVehicleID(playerid) == polisAraclar[16] ||
			GetPlayerVehicleID(playerid) == polisAraclar[17] ||
			GetPlayerVehicleID(playerid) == polisAraclar[18] ||
			GetPlayerVehicleID(playerid) == polisAraclar[19] ||
			GetPlayerVehicleID(playerid) == polisAraclar[20] ||
			GetPlayerVehicleID(playerid) == polisAraclar[21] ||
			GetPlayerVehicleID(playerid) == polisAraclar[22] ||
			GetPlayerVehicleID(playerid) == polisAraclar[23] ||
			GetPlayerVehicleID(playerid) == polisAraclar[24] ||
			GetPlayerVehicleID(playerid) == polisAraclar[25] ||
			GetPlayerVehicleID(playerid) == polisAraclar[26] ||
			GetPlayerVehicleID(playerid) == polisAraclar[27] ||
			GetPlayerVehicleID(playerid) == polisAraclar[28] ||
			GetPlayerVehicleID(playerid) == polisAraclar[29] ||
			GetPlayerVehicleID(playerid) == polisAraclar[30] ||
			GetPlayerVehicleID(playerid) == polisAraclar[31] ||
			GetPlayerVehicleID(playerid) == polisAraclar[32] ||
			GetPlayerVehicleID(playerid) == polisAraclar[33] ||
			GetPlayerVehicleID(playerid) == polisAraclar[34] ||
			GetPlayerVehicleID(playerid) == polisAraclar[35] ||
			GetPlayerVehicleID(playerid) == polisAraclar[36] ||
			GetPlayerVehicleID(playerid) == polisAraclar[37] ||
			GetPlayerVehicleID(playerid) == polisAraclar[38] ||
			GetPlayerVehicleID(playerid) == polisAraclar[39])
		{
		    if(gTeam[playerid] == SIVIL || gTeam[playerid] >= 9 && gTeam[playerid] <= 16)
		    {
				aranmaLeveli(playerid, 4);
    			SendClientMessage(playerid, -1, "{FEC606}Sokaktan polis aracý çaldýðýnýz için aranma seviyeniz yükseldi.");
		    }
		}

		if(GetPlayerVehicleID(playerid) == cevikkuvvetArac[0] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[1] ||
	  	GetPlayerVehicleID(playerid) == cevikkuvvetArac[2] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[3] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[4] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[5] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[6] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[7] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[8] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[9] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[10] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[11] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[12] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[13] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[14] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[15] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[16] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[17] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[18] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[19] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[20] ||
		GetPlayerVehicleID(playerid) == cevikkuvvetArac[21])
		{
   		    if(gTeam[playerid] != CEVIK_KUVVET)
		    {
	    		new Float:pXos[3];
				GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				SendClientMessage(playerid, 0x71BA51FF, "Bu araçlara sadece Çevik Kuvvet mesleðindekiler binebilir.");
				return 1;
		    }
		}

		if(GetPlayerVehicleID(playerid) == ozelharekatArac[0] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[1] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[2] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[3] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[4] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[5] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[6] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[7] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[8] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[9] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[10] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[11] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[12] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[13] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[14] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[15] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[16] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[17] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[18] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[19] ||
		GetPlayerVehicleID(playerid) == ozelharekatArac[20])
		{
   		    if(gTeam[playerid] != OZEL_HAREKAT_TIMI)
		    {
	    		new Float:pXos[3];
				GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
				SendClientMessage(playerid, 0x71BA51FF, "Bu araçlara sadece Özel Harekat mesleðindekiler binebilir.");
				return 1;
		    }
		}

		if(
			GetPlayerVehicleID(playerid) == havaciArac[0] ||
			GetPlayerVehicleID(playerid) == havaciArac[1] ||
			GetPlayerVehicleID(playerid) == havaciArac[2] ||
			GetPlayerVehicleID(playerid) == havaciArac[3] ||
			GetPlayerVehicleID(playerid) == havaciArac[4] ||
			GetPlayerVehicleID(playerid) == havaciArac[5] ||
			GetPlayerVehicleID(playerid) == havaciArac[6] ||
			GetPlayerVehicleID(playerid) == havaciArac[7] ||
			GetPlayerVehicleID(playerid) == havaciArac[8] ||
			GetPlayerVehicleID(playerid) == havaciArac[9] ||
			GetPlayerVehicleID(playerid) == havaciArac[10])
			{
	   		    if(gTeam[playerid] != TURK_H_KUVVETLERI)
			    {
		    		new Float:pXos[3];
					GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
					SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
					SendClientMessage(playerid, 0x71BA51FF, "Bu araçlara sadece Hava Kuvvet mesleðindekiler binebilir.");
					return 1;
			    }
			}

		if(
			GetPlayerVehicleID(playerid) == orduArac[0] ||
			GetPlayerVehicleID(playerid) == orduArac[1] ||
			GetPlayerVehicleID(playerid) == orduArac[2] ||
			GetPlayerVehicleID(playerid) == orduArac[3] ||
			GetPlayerVehicleID(playerid) == orduArac[4] ||
			GetPlayerVehicleID(playerid) == orduArac[5] ||
			GetPlayerVehicleID(playerid) == orduArac[6] ||
			GetPlayerVehicleID(playerid) == orduArac[7] ||
			GetPlayerVehicleID(playerid) == orduArac[8] ||
			GetPlayerVehicleID(playerid) == orduArac[9] ||
			GetPlayerVehicleID(playerid) == orduArac[10] ||
			GetPlayerVehicleID(playerid) == orduArac[11] ||
			GetPlayerVehicleID(playerid) == orduArac[12] ||
			GetPlayerVehicleID(playerid) == orduArac[13] ||
			GetPlayerVehicleID(playerid) == orduArac[14] ||
			GetPlayerVehicleID(playerid) == orduArac[15] ||
			GetPlayerVehicleID(playerid) == orduArac[16] ||
			GetPlayerVehicleID(playerid) == orduArac[17] ||
			GetPlayerVehicleID(playerid) == orduArac[18] ||
			GetPlayerVehicleID(playerid) == orduArac[19] ||
			GetPlayerVehicleID(playerid) == orduArac[20] ||
			GetPlayerVehicleID(playerid) == orduArac[21] ||
			GetPlayerVehicleID(playerid) == orduArac[22] ||
			GetPlayerVehicleID(playerid) == orduArac[23] ||
			GetPlayerVehicleID(playerid) == orduArac[24] ||
			GetPlayerVehicleID(playerid) == orduArac[25] ||
			GetPlayerVehicleID(playerid) == orduArac[26] ||
			GetPlayerVehicleID(playerid) == orduArac[27] ||
			GetPlayerVehicleID(playerid) == orduArac[28] ||
			GetPlayerVehicleID(playerid) == orduArac[29] ||
			GetPlayerVehicleID(playerid) == orduArac[30] ||
			GetPlayerVehicleID(playerid) == orduArac[31] ||
			GetPlayerVehicleID(playerid) == orduArac[32] ||
			GetPlayerVehicleID(playerid) == orduArac[33] ||
			GetPlayerVehicleID(playerid) == orduArac[34] ||
			GetPlayerVehicleID(playerid) == orduArac[35] ||
			GetPlayerVehicleID(playerid) == orduArac[36] ||
			GetPlayerVehicleID(playerid) == orduArac[37] ||
			GetPlayerVehicleID(playerid) == orduArac[38] ||
			GetPlayerVehicleID(playerid) == orduArac[39])
   			{
	   		    if(gTeam[playerid] != OZEL_KUVVET_B)
			    {
		    		new Float:pXos[3];
					GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
					SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
					SendClientMessage(playerid, 0x71BA51FF, "Bu araçlara sadece Özel Kuvvet mesleðindekiler binebilir.");
					return 1;
			    }
			}
		oIslem[playerid][sonArac] = arac;
		HizBarOn[playerid] = 1;
		KillTimer(HizBarTimer[playerid]);
		for(new i = 0; i < 19; i++)
		{
		    PlayerTextDrawHide(playerid, HizBari[playerid][i]);
		    PlayerTextDrawColor(playerid, HizBari[playerid][i], -1);
		    PlayerTextDrawShow(playerid, HizBari[playerid][i]);
		}
		HizBarTimer[playerid] = SetTimerEx("HizBarUpdate", 250, true, "d", playerid);
	}

	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(Izleniyorum[playerid] == 1)
		{
	    	foreach(new i : Player)
	    	{
	    		if(IzlemeModu[i][izledigimID] == playerid)
				{
					PlayerSpectateVehicle(i, GetPlayerVehicleID(playerid));
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(HizBarOn[playerid] == 1)
	    {
		    HizBarOn[playerid] = 0;
			KillTimer(HizBarTimer[playerid]);
	   		for(new i = 0; i < 19; i++)
			{
			    PlayerTextDrawHide(playerid, HizBari[playerid][i]);
			    PlayerTextDrawColor(playerid, HizBari[playerid][i], -1);
			}
		}
		if(GPSOyuncu[playerid][gpsAktif] == true)
		{
			GPSOyuncu[playerid][gpsAktif] = false;
			KillTimer(GPSOyuncu[playerid][gps_timer]);
			if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
			{
				DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
				SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
			}
			if(GetPVarInt(playerid, "gps_cpID") != -1)
			{
				DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
				SetPVarInt(playerid, "gps_cpID", -1);
			}
			SendClientMessage(playerid, -1, "{6FFF00}GPS: {FFFFFF}Araçtan indiðiniz için konum belirleme özelliði kapatýldý.");
	    }

		if(GetPVarInt(playerid, "VipMotor") == 1 && oyuncuData[playerid][pVip] != 0 && VipIslem[playerid][enSonMotor] != INVALID_VEHICLE_ID && VipIslem[playerid][MotorDusmeDurum] == true)
	    {
	        PutPlayerInVehicle(playerid, VipIslem[playerid][enSonMotor], 0);
	    }

		if(Izleniyorum[playerid] == 1)
		{
		    foreach(new i : Player)
		    {
		    	if(IzlemeModu[i][izledigimID] == playerid)
				{
					PlayerSpectatePlayer(i, playerid);
				}
			}
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(GetPVarInt(playerid, "KayitNo") == 1) return kayitMenu(playerid, 0), 0;
	if(!oyuncuData[playerid][GirisKontrol]) return hataMesaji(playerid, "Giriþ yapmadan spawn olamazsýnýz !"), girisMenu(playerid, 0), 0;
    StopAudioStreamForPlayer(playerid);

	SetPVarInt(playerid, "SkinKayit", GetPlayerSkin(playerid));
    
    if(GetPlayerSkin(playerid) >= 300 && GetPlayerSkin(playerid) <= 307)
    {
        if(aranmaSeviyesii[playerid] >= 1)
		{
			hataMesaji(playerid, "Polis mesleðine katýlmak için aranma seviyen olmamasý lazým.");
			return 0;
		}
		if(BasariIslem[playerid][ilkPolis] == 0)
		{
			BasariIslem[playerid][ilkPolis] = 1;
			basariKilidi(playerid, "ilkPolis", "Ýlk Polis", 5000, 100, 1);
		}
    }

	if(e_oIslem[playerid][e_Id] != -1)
	{
		new ekipID = e_oIslem[playerid][e_Id], bilgi_msj[78 + 24 + 24 + 5 + 1];
		foreach(new i: Player)
		{
			if(e_oIslem[i][e_Id] == ekipID)
			{
			    format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] %s(%d), adlý oyuncu ekibinden otomatik ayrýldý. Sebep: F4 + /Kill", getName(playerid), playerid);
				SendClientMessage(i, 0xF59E25FF, bilgi_msj);
			}
		}
	 	e_oIslem[playerid][e_Id] = -1;
		e_oIslem[playerid][e_Davet] = -1;
		e_oIslem[playerid][e_Katilim] = -1;

		new slotAra = EkipSlotKontrol(ekipID);
		if(slotAra <= 0)
		{
			format(ekipIslem[ekipID][e_Ismi], MAX_E_ISIM, "");
			format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, "");
			ekipIslem[ekipID][e_kID] = INVALID_PLAYER_ID;
			ekipIslem[ekipID][e_Aktiflik] = 0;
			Iter_Remove(_Ekipler, ekipID);
		}
		else
		{
			if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) == 0)
			{
			    new oCount[MAX_PLAYERS], arttirr = 0, _pid = INVALID_PLAYER_ID;
			    foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) oCount[arttirr] = i, arttirr++;
			    _pid = oCount[random(arttirr)];
				format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, getName(_pid)), ekipIslem[ekipID][e_kID] = _pid;
	   		    format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Lider %s(%d) ekipten ayrýldýðý için yeni Lider %s(%d) olarak ayarlandý.", getName(playerid), playerid, getName(_pid), _pid);
			    foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) SendClientMessage(i, 0xF59E25FF, bilgi_msj);
				_pid = INVALID_PLAYER_ID;
				for(new i = 0; i < arttirr; i++) oCount[i] = INVALID_PLAYER_ID;
			}
		}
		EkipFix();
	}

	for(new i = 0; i < 15; i++)
    {
        if(i < 3){if(oyuncuData[playerid][textAyar] == 0){TextDrawShowForPlayer(playerid, SaatText[i]);}}
        if(i < 14)
		{
			if(oyuncuData[playerid][textAyar] == 0)
			{
				TextDrawShowForPlayer(playerid, AltBar[i]);
			}
		}
        if(i < 6) if(oyuncuData[playerid][textAyar] == 0){TextDrawShowForPlayer(playerid, Kutucuklar[i]);}
		if(i < 4){
		if(oyuncuData[playerid][textAyar] == 0)
		{
    		PlayerTextDrawShow(playerid, SagBarr[playerid][i]);
		}}
	}
	KarakterEkraninda[playerid] = false;
	karakterOptimize[playerid] = 0;
	sitroen[playerid] = 1;
	KillTimer(yetkilerTimer[playerid]);
	yetkilerTimer[playerid] = SetTimerEx("SureKontrolleri", 2000, true, "d", playerid);
	for(new i = 0; i < 81; i++)
	{
	    if(!IsValidDynamicObject(girisObjeler[playerid][i])) continue;
		DestroyDynamicObject(girisObjeler[playerid][i]);
		girisObjeler[playerid][i] = INVALID_OBJECT_ID;
	}
	if(oyuncuData[playerid][textAyar] == 0){
	TextDrawShowForPlayer(playerid, SagBosKutu);

 	TextDrawShowForPlayer(playerid, SagBarText_Y[0]);
 	TextDrawShowForPlayer(playerid, SagBarText_Y[1]);
 	TextDrawShowForPlayer(playerid, SagBarText_Y[2]);
 	TextDrawShowForPlayer(playerid, SagBarText_Y[3]);

    PlayerTextDrawShow(playerid, SagBarText[playerid][0]);
    PlayerTextDrawShow(playerid, SagBarText[playerid][1]);
    PlayerTextDrawShow(playerid, SagBarText[playerid][2]);
	}
	ShowPlayerProgressBar(playerid, ExpBar[playerid]);
    SetPVarInt(playerid, "SaatAyari", 12);

    new upKill[35];
	PlayerTextDrawHide(playerid, SagBarr[playerid][2]);
	format(upKill, sizeof(upKill), "~r~~h~~h~~h~Basari: ~w~~h~%d/33", BasariIslem[playerid][BasariSayisi]);
    PlayerTextDrawSetString(playerid, SagBarr[playerid][2], upKill);
    if(oyuncuData[playerid][textAyar] == 0){
    PlayerTextDrawShow(playerid, SagBarr[playerid][2]);}

    SetPVarInt(playerid, "AnaKarakter", GetPlayerSkin(playerid));
	ExpGuncelle(playerid);
	if(oyuncuData[playerid][_LevelCount] >= 50)
	{
		if(oyuncuData[playerid][ExpPuan] > 50000)
		{
		    oyuncuData[playerid][_LevelCount] = 50;
			oyuncuData[playerid][ExpPuan] = 50000;
			ExpGuncelle(playerid);
		}
	}
	if(oyuncuData[playerid][textAyar] == 1){
	TextModee(playerid, 2);
	TextModee(playerid, 1);}
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}


public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(pickupid == Pickup_BankaIS[0] || pickupid == Pickup_BankaIS[1])
	{
		if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bankaya giremezsin.");
		SetPlayerPos(playerid, 1667.4932, -989.2959, 683.6970 + 0.5);
		SetPlayerFacingAngle(playerid, 0.2728);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid,0);
	    SetPVarInt(playerid, "Bankada", 1);
		SetPVarInt(playerid, "BankaTextureLoad", GetTickCount() + 1250);
	    return 1;
	}
	if(pickupid == Pickup_BankaG)
	{
		if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bankaya giremezsin.");
		SetPlayerPos(playerid, 5.0844, 153.8045, 1243.1780 + 0.5);
		SetPlayerFacingAngle(playerid, 359.1436);
	    SetCameraBehindPlayer(playerid);
	    TogglePlayerControllable(playerid, 0);
	    SetPVarInt(playerid, "Bankada", 1);
		SetPVarInt(playerid, "BankaTextureLoad", GetTickCount() + 1250);
		SetPVarInt(playerid, "BankaGirdi", 1);
	    return 1;
	}
	if(pickupid == Pickup_Zirh)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
		{
  			if(gTeam[playerid] == POLIS || gTeam[playerid] == CEVIK_KUVVET || gTeam[playerid] == OZEL_HAREKAT_TIMI ||
			gTeam[playerid] == SIVIL_POLIS || gTeam[playerid] == OZEL_KUVVET_B ||
			gTeam[playerid] == TURK_H_KUVVETLERI)
			{
				Zirhver(playerid, yZirh(playerid));
			}
			else
			{
			    Zirhver(playerid, 0);
			    return 0;
			}
		}
	    return 1;
	}
	if(pickupid == Pickup_HavaUssu)
	{
 	    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Þehire dönmek için araçtan inin.");
	    GameTextForPlayer(playerid, "~g~~h~~h~Sehire Donmek Icin~n~~r~~h~Y ~w~~h~Tusuna Basin", 2100, 4);
	    return 1;
	}
	if(pickupid == Oto_Galeri)
	{
	    if(GetPVarInt(playerid, "OtoGalerid") == 1) return 1;
		new str[1500];
		format(str, sizeof(str), "Araç Ýsmi\tAraç Fiyatý\n");
		for(new i = 0; i < sizeof(AracListesi); i++)
		{
		    format(str, sizeof(str), "%s%s\t$%s\n", str, GetVehicleName(AracListesi[i][arac_m]), convertNumber(AracListesi[i][arac_f]));
		}
		ShowPlayerDialog(playerid, ARAC_LISTESI, DIALOG_STYLE_TABLIST_HEADERS, "Araçlar", str, "Satýn Al", "Iptal");
		SetPVarInt(playerid, "OtoGalerid", 1);
	    return 1;
	}
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 0)
    {
        new vehicleid = GetPlayerVehicleID(playerid);
        if(AraclarIslem[vehicleid][aAktif])
	    {
	        if(strcmp(AraclarIslem[vehicleid][a_Sahip], getName(playerid), false) == 0)
	        {
	            new query[70];
	            for(new i = 0; i < 17; i++)
	            {
      				mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aP%d` = '%d' WHERE `nid` = '%d' LIMIT 1", i + 1, AraclarIslem[vehicleid][a_mParca][i], AraclarIslem[vehicleid][aSQL]);
					mysql_query(g_SQL, query);
				}
			}
	    }
		if(CeteArac[vehicleid][ceteAracAktif])
	    {
            new query[100];
            for(new i = 0; i < 17; i++)
            {
  				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetearaclari` SET `aP%d` = '%d' WHERE `caid` = '%d' LIMIT 1", i + 1, CeteArac[vehicleid][c_mParca][i], CeteArac[vehicleid][ceteAracSQL]);
				mysql_query(g_SQL, query);
			}
	    }
    }
    return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(GetPlayerInterior(playerid) == 0)
    {
		HileKick(playerid, 1);
    	return 0;
    }

    if(AraclarIslem[vehicleid][aAktif])
    {
        if(strcmp(AraclarIslem[vehicleid][a_Sahip], getName(playerid), false) == 0)
        {
            SaveComponent(playerid, vehicleid, componentid);
		}
    }
    
    if(CeteArac[vehicleid][ceteAracAktif])
    {
        SaveComponent(playerid, vehicleid, componentid);
    }
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    if(AraclarIslem[vehicleid][aAktif])
    {
        if(strcmp(AraclarIslem[vehicleid][a_Sahip], getName(playerid), false) == 0)
        {
			new query[75];
			AraclarIslem[vehicleid][pJob] = paintjobid + 1;
		   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `PaintJob` = '%d' WHERE `nid` = '%d' LIMIT 1", AraclarIslem[vehicleid][pJob], AraclarIslem[vehicleid][aSQL]);
			mysql_query(g_SQL, query);
		}
    }
	if(CeteArac[vehicleid][ceteAracAktif])
    {
		new query[90];
		CeteArac[vehicleid][c_pJob] = paintjobid + 1;
	   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetearaclari` SET `PaintJob` = '%d' WHERE `caid` = '%d' LIMIT 1", CeteArac[vehicleid][c_pJob], CeteArac[vehicleid][ceteAracSQL]);
		mysql_query(g_SQL, query);
    }
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    if(AraclarIslem[vehicleid][aAktif])
    {
        if(strcmp(AraclarIslem[vehicleid][a_Sahip], getName(playerid), false) == 0)
        {
			new query[75];
			AraclarIslem[vehicleid][a_Renk][0] = color1;
			AraclarIslem[vehicleid][a_Renk][1] = color2;

			mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aR1` = '%d' WHERE `nid` = '%d' LIMIT 1", color1, AraclarIslem[vehicleid][aSQL]);
			mysql_tquery(g_SQL, query);

		 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aR2` = '%d' WHERE `nid` = '%d' LIMIT 1", color2, AraclarIslem[vehicleid][aSQL]);
			mysql_tquery(g_SQL, query);

		    if(color1 == 0)
		    {
		        AraclarIslem[vehicleid][pJob] = 0;
		       	mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `PaintJob` = '0' WHERE `nid` = '%d' LIMIT 1", AraclarIslem[vehicleid][aSQL]);
				mysql_tquery(g_SQL, query);
		    }
		}
    }
    if(CeteArac[vehicleid][ceteAracAktif])
    {
	    if(color1 == 0)
	    {
	        new query[90];
	        CeteArac[vehicleid][c_pJob] = 0;
	       	mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `PaintJob` = '0' WHERE `nid` = '%d' LIMIT 1", CeteArac[vehicleid][ceteAracSQL]);
			mysql_query(g_SQL, query);
	    }
    }
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(Izleniyorum[playerid] == 1)
	{
	    foreach(new i : Player)
	    {
	    	if(IzlemeModu[i][izledigimID] == playerid)
			{
				SetPlayerInterior(i, GetPlayerInterior(playerid));
				SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
			}
		}
	}
	return 1;
}

forward Float:GetPlayerDistanceFromPlayer(playerid, targetid);
public Float:GetPlayerDistanceFromPlayer(playerid, targetid)
{
    new Float:fDist[3];
    GetPlayerPos(playerid, fDist[0], fDist[1], fDist[2]);
    return GetPlayerDistanceFromPoint(targetid, fDist[0], fDist[1], fDist[2]);
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(IsKeyJustDown(KEY_SPRINT,newkeys,oldkeys))
	{
	    if(!AnimasyonDurumu[playerid]) return 1;
	    AnimDurdur(playerid);
    }
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
		new evG = EvKontrol(playerid);
		if(evG != -1)
		{
		    if(EvIslem[evG][evDurumu] == 0)
		    {
			    new evSz = EvIslem[evG][evSeviyesi] - 1, Float: ksyx[4];
			    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bir eve girmek için önce araçtan inmelisin.");
				GetPlayerPos(playerid, ksyx[0], ksyx[1], ksyx[2]);
				GetPlayerFacingAngle(playerid, ksyx[3]);
				SetPVarFloat(playerid, "gX", ksyx[0]);
				SetPVarFloat(playerid, "gY", ksyx[1]);
				SetPVarFloat(playerid, "gZ", ksyx[2]);
				SetPVarFloat(playerid, "gA", ksyx[3]);
				SetPlayerPos(playerid, EvPozisyonlari[evSz][ev_Pozisyon][0], EvPozisyonlari[evSz][ev_Pozisyon][1], EvPozisyonlari[evSz][ev_Pozisyon][2]);
			    SetPlayerFacingAngle(playerid, EvPozisyonlari[evSz][ev_Pozisyon][3]);
			    SetPlayerInterior(playerid, EvPozisyonlari[evSz][evInterior]);
       			SetPlayerVirtualWorld(playerid, EvIslem[evSz][evVirtual]);
				SetCameraBehindPlayer(playerid);
				SendClientMessage(playerid, -1, "{A0F601}=> Ev Bilgisi: {FFFFFF}Bu evi incelemek için giriþ yaptýnýz. Çýkmak için kýrmýzý checkpoint`e gidin.");
			}
		}
	    if(SoygunOIslem[playerid][sDurum])
		{
		    if(GetPVarInt(playerid, "SoyGirisCP") == 1)
		    {
		        new Float:Aylinim[3];// mal burak bir dur amk niye lan bir kýz olarak ben ayarlýyacaðým burayý
		        // iyi tamam amk ayarla he þöyle :D
		        GetPlayerPos(playerid, Aylinim[0], Aylinim[1], Aylinim[2]);
		        SoygunOIslem[playerid][soYgirisCP][0] = Aylinim[0];
		        SoygunOIslem[playerid][soYgirisCP][1] = Aylinim[1];
		        SoygunOIslem[playerid][soYgirisCP][2] = Aylinim[2];
		        DeletePVar(playerid, "SoyGirisCP");
		        soOlusturucu(playerid);
		        SendClientMessage(playerid, -1, "Soygun Giriþ CP ayarlandý.");
		    }
		    if(GetPVarInt(playerid, "SoyGirisCP") == 2)
		    {
		        new Float:Aylinim[4];
		        GetPlayerPos(playerid, Aylinim[0], Aylinim[1], Aylinim[2]);
		        GetPlayerFacingAngle(playerid, Aylinim[3]);
		        SoygunOIslem[playerid][soyIceri][0] = Aylinim[0];
		        SoygunOIslem[playerid][soyIceri][1] = Aylinim[1];
		        SoygunOIslem[playerid][soyIceri][2] = Aylinim[2];
		        SoygunOIslem[playerid][soyIceri][3] = Aylinim[3];
		        DeletePVar(playerid, "SoyGirisCP");
		        soOlusturucu(playerid);
		        SendClientMessage(playerid, -1, "Soygun Mekanýn Giriþi Ayarlandý.");
		    }
		    if(GetPVarInt(playerid, "SoyGirisCP") == 3)
		    {
		        new Float:Aylinim[3];
		        GetPlayerPos(playerid, Aylinim[0], Aylinim[1], Aylinim[2]);
		        SoygunOIslem[playerid][soYulacakCP][0] = Aylinim[0];
		        SoygunOIslem[playerid][soYulacakCP][1] = Aylinim[1];
		        SoygunOIslem[playerid][soYulacakCP][2] = Aylinim[2];
		        SoygunOIslem[playerid][soyInterior] = GetPlayerInterior(playerid);
		        DeletePVar(playerid, "SoyGirisCP");
		        soOlusturucu(playerid);
		        SendClientMessage(playerid, -1, "Soygun yeri Ayarlandý.");
		    }
		    if(GetPVarInt(playerid, "SoyGirisCP") == 4)
		    {
		        new Float:Aylinim[3];
		        GetPlayerPos(playerid, Aylinim[0], Aylinim[1], Aylinim[2]);
		        SoygunOIslem[playerid][soYCikisCP][0] = Aylinim[0];
		        SoygunOIslem[playerid][soYCikisCP][1] = Aylinim[1];
		        SoygunOIslem[playerid][soYCikisCP][2] = Aylinim[2];
		        DeletePVar(playerid, "SoyGirisCP");
		        soOlusturucu(playerid);
		        SendClientMessage(playerid, -1, "Soygun Çýkýþ CP Ayarlandý.");
		    }
		    if(GetPVarInt(playerid, "SoyGirisCP") == 5)
		    {
		        new Float:Aylinim[4];
		        GetPlayerPos(playerid, Aylinim[0], Aylinim[1], Aylinim[2]);
		        GetPlayerFacingAngle(playerid, Aylinim[3]);
		        SoygunOIslem[playerid][soYDisari][0] = Aylinim[0];
		        SoygunOIslem[playerid][soYDisari][1] = Aylinim[1];
		        SoygunOIslem[playerid][soYDisari][2] = Aylinim[2];
		        SoygunOIslem[playerid][soYDisari][3] = Aylinim[3];
		        DeletePVar(playerid, "SoyGirisCP");
		        soOlusturucu(playerid);
		        SendClientMessage(playerid, -1, "Soygun Dýþarý Pozisyon Ayarlandý.");
		    }
		    if(GetPVarInt(playerid, "InteriorsuzCP") == 1)
		    {
      			new Float:Aylinim[3];
		        GetPlayerPos(playerid, Aylinim[0], Aylinim[1], Aylinim[2]);
		        SoygunOIslem[playerid][soYulacakCP][0] = Aylinim[0];
		        SoygunOIslem[playerid][soYulacakCP][1] = Aylinim[1];
		        SoygunOIslem[playerid][soYulacakCP][2] = Aylinim[2];
		        DeletePVar(playerid, "InteriorsuzCP");
		        soOlusturucu2(playerid);
		        SendClientMessage(playerid, -1, "Soygun yeri Ayarlandý.");
		    }
		}
	}

	if(newkeys & KEY_NO)
	{
		if(KeybindIslem[playerid][keybind_ID] != INVALID_PLAYER_ID && KeybindIslem[playerid][keybind_Sure][1] > GetTickCount())
		{
		    new key_id = KeybindIslem[playerid][keybind_ID];
            if(GetPlayerDistanceFromPlayer(playerid, key_id) < 4)
            {
				KeybindIslem[playerid][keybind_Sure][0] = 0;
	    		KeybindIslem[playerid][keybind_Sure][1] = 0;
                KeybindIslem[playerid][keybind_ID] = INVALID_PLAYER_ID;
                HileKick(playerid, 24);
                
                oIslem[key_id][kelepce] = 0;
			 	SetPVarInt(key_id, "KelepceBlock", GetTickCount());
				oIslem[key_id][kelepceSure] = 0;
			    SetPlayerSpecialAction(key_id, SPECIAL_ACTION_NONE);
			    RemovePlayerAttachedObject(key_id, 1);
			    TogglePlayerControllable(key_id, 1);
                return 1;
            }
		}
		if(PlayerBanka[playerid][bankaCount] >= 1)
		{
			SetPVarInt(playerid, "AnimCikar", 1);
		}
	}

	if(newkeys & KEY_YES)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, -1919.0720, 1747.3521, 17.8161))
        {
    		TeleportCam(playerid, 1, -1491.766723, 1009.446838, 7.187500, 111.101928);
        }

	 	if(
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -1929.786376, 872.388183, 35.414062) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -2213.677734, 580.504760, 35.164062) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -2202.507080, 116.936042, 35.447158) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -2577.488037, 122.479766, 4.335937) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -2133.768554, 264.327239, 35.621990) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -1978.972900, 433.164154, 25.686964) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -2780.308837, -56.688892, 10.062500) ||
		 	IsPlayerInRangeOfPoint(playerid, 3.0, -2182.300781, -117.330345, 35.320312))
	    {
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			ShowPlayerDialog(playerid, UYUSTURUCU_SATICI, DIALOG_STYLE_LIST, "{FFFFFF}» Uyuþturucu Satýcýsý", "{FFFFFF}Eroin\t\t{2CC990}5 Adet\t\t{FCB941}$50,000\n{FFFFFF}Ot\t\t{2CC990}100g\t\t{FCB941}$25,000\n{FFFFFF}Bonzai\t\t{2CC990}5 Adet\t\t{FCB941}$100,000\n", "Satýn Al", "Kapat");
	    }


	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -1748.791992, 962.630432, 24.882499))
	    {
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			new pp[40 + 44 + 1];
			format(pp, sizeof(pp), "{3498DB}» Çevik Kuvvet Mesleðine Katýl\n");
			format(pp, sizeof(pp), "%s{E74C3C}» Meslekten Ayrýl\n", pp);
			ShowPlayerDialog(playerid, DIALOG_cevikKUVVET, DIALOG_STYLE_LIST, "{FFFFFF}» "dialogIsim": Çevik Kuvvet", pp, "Seç", "Kapat");
	    }

	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -1597.3688, 439.1314, 7.1797))
	    {
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			new pp[48 + 52];
			format(pp, sizeof(pp), "{3498DB}» Özel Kuvvet Birliði Mesleðine Katýl\n");
			format(pp, sizeof(pp), "%s{E74C3C}» Meslekten Ayrýl\n", pp);
			ShowPlayerDialog(playerid, DIALOG_OKB, DIALOG_STYLE_LIST, "{FFFFFF}» "dialogIsim": Özel Kuvvet Birliði", pp, "Seç", "Kapat");
	    }

		if(IsPlayerInRangeOfPoint(playerid, 3.0, -2454.4304, -628.5150, 132.7248))
	    {
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			new pp[48 + 52];
			format(pp, sizeof(pp), "{3498DB}» Özel Harekat Mesleðine Katýl\n");
			format(pp, sizeof(pp), "%s{E74C3C}» Meslekten Ayrýl\n", pp);
			ShowPlayerDialog(playerid, DIALOG_OHAREKAT, DIALOG_STYLE_LIST, "{FFFFFF}» "dialogIsim": Özel Harekat", pp, "Seç", "Kapat");
	    }

		new label[90 + 24 + 50 + 5];
		foreach(new s: Soygunlar)
		{
  			if(IsPlayerInDynamicCP(playerid, SoygunIslem[s][soygunCP]))
	        {
		        if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Devlet memurlarý soygun yapamaz.");
				if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde soygun yapamazsýn !");
	            if(SoygunIslem[s][soygunSure] >= 1 && SoygunIslem[s][soygunSure] <= 60) return hataMesaji(playerid, "Bu mekanýn tekrar soyulmasýna 1 dakikadan az kalmýþ !");
                if(SoygunIslem[s][soygunSure] >= 1) return hataMesaji(playerid, "Bu mekan soyulmuþ veya soyuluyor..");
	            format(label, sizeof(label), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulmuþ", SoygunIslem[s][soygunIsmi], s);
	            UpdateDynamic3DTextLabelText(SoygunIslem[s][soyLabel], 0xFFFF00AA, label);
				SetPVarInt(playerid, "TempSoygun", s);
				SoygunIslem[s][soygunSure] = SOYGUN_SURESI;
				format(label, sizeof(label), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, suanda ~g~~h~%s ~w~~h~mekanini soyuyor...", getName(playerid), playerid, SoygunIslem[s][soygunIsmi]);
                textFlood++;
				foreach(new i : Player) TextdrawYazi(i, label);
				if(textFlood == 3){ textFlood = 0; }
				soygunCount[playerid] = 26;
				aranmaLeveli(playerid, 4);
				if(BasariIslem[playerid][ilkSoygun] == 0){
				BasariIslem[playerid][ilkSoygun] = 1;
				basariKilidi(playerid, "ilkSoygun", "Ýlk Soygun", 5000, 75, 1);
				}
			}
		}
	    return 1;
	}
	return 1;
}


public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

function TopluTimer(playerid)
{
    if(oyuncuData[playerid][GirisKontrol])
    {
    	oyuncuData[playerid][onlineSure]++;
	}
	new brzz[35];
    new drunknew;
	drunknew = GetPlayerDrunkLevel(playerid);
	
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	    	if(oaIslem[GetPlayerVehicleID(playerid)][oaCheck])
	    	{
	    	    RepairVehicle(GetPlayerVehicleID(playerid));
	    	}
	    	if(GetPVarInt(playerid, "GodMode") == 1)
	    	{
	    	    RepairVehicle(GetPlayerVehicleID(playerid));
	    	}
		}
	}

	if (drunknew < 100)
	{
		SetPlayerDrunkLevel(playerid, 2000);
	}
	else
	{
		if (pDrunkLevelLast[playerid] != drunknew)
		{
			new wfps = pDrunkLevelLast[playerid] - drunknew;
			if ((wfps > 0) && (wfps < 200))
			{
				pFPS[playerid] = wfps;
			}
			pDrunkLevelLast[playerid] = drunknew;
		}
	}
	if(GetPVarInt(playerid, "YaziMode") == 1 && GetPVarInt(playerid, "YazilariSil") < GetTickCount())
    {
		SetPVarInt(playerid, "YaziMode", 0);
		PlayerTextDrawHide(playerid, ParaLevel[playerid][0]);
		PlayerTextDrawHide(playerid, ParaLevel[playerid][1]);
		PlayerTextDrawHide(playerid, ParaLevel[playerid][2]);
    }
    if(GetPVarInt(playerid, "DuelloDavetEttim") == 1 && GetPVarInt(playerid, "Duellobekleet2") < GetTickCount())
	{
	    SetPVarInt(playerid, "DuelloDavetEttim", 0);
	    new get_ID = DuelloIslem[playerid][d_ID];
	    if(get_ID != INVALID_PLAYER_ID)
	    {
	        ShowPlayerDialog(get_ID, 95959, DIALOG_STYLE_MSGBOX, "Düello Teklifi", "{EB6361}10 saniye geçtiði için düello teklifi otomatik olarak iptal edildi.", "Kapat", "");
			KillTimer(DuelloTimer[get_ID]);
			Duelloda[get_ID] = false;
			DuelloSayi[get_ID] = 0;
			DuelloIslem[get_ID][d_ID] = INVALID_PLAYER_ID;
			DuelloIslem[get_ID][dHarita] = 0;
			DuelloIslem[get_ID][dP] = 0;
			DuelloIslem[get_ID][dSilah][0] = 0;
			DuelloIslem[get_ID][dSilah][1] = 0;
			DuelloOyuncusu[get_ID] = INVALID_PLAYER_ID;
	    }
	    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", "{EB6361}10 saniye geçtiði için düello teklifi iptal edildi.", "Kapat", "");
		KillTimer(DuelloTimer[playerid]);
		Duelloda[playerid] = false;
		DuelloSayi[playerid] = 0;
		DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
		DuelloIslem[playerid][dHarita] = 0;
		DuelloIslem[playerid][dP] = 0;
		DuelloIslem[playerid][dSilah][0] = 0;
		DuelloIslem[playerid][dSilah][1] = 0;
	}

	if(GetPVarInt(playerid, "SpawnSureC") == 1)
	{
	    SetPlayerArmedWeapon(playerid, 0);
	}
	
	if(GetPVarInt(playerid, "SpawnSureC") == 1 && GetPVarInt(playerid, "SpawnSuresi") < GetTickCount())
	{
	    SetPVarInt(playerid, "SpawnSureC", 0);
	    SendClientMessage(playerid, -1, "{2ecc71}» Spawn Korumasý: {FFFFFF}10 saniyelik spawn korumanýz sona erdi.");
	}

	if(GetPVarInt(playerid, "soktabancasi") == 1)
	{
		if(GetPlayerWeapon(playerid) == 23){
		SetPlayerAttachedObject(playerid, 0, 18643, 6, 0.100000, 0.029999, 0.079999, 0.000000, -10.000000, 4.000000, 1.000000, 1.000000, 1.000000);
		}else{RemovePlayerAttachedObject(playerid, 0);}
	}

	if(IsPlayerInRangeOfPoint(playerid, 3.0, -1663.6189, 1208.0457, 7.2541)){}else{SetPVarInt(playerid, "OtoGalerid", 0);}

    if(GetPVarInt(playerid, "Aracbloock_") == 1 && GetPVarInt(playerid, "Aracbloock") < GetTickCount())
    {
        DeletePVar(playerid, "Aracbloock_");
		oIslem[playerid][kelepce] = 0;
		oIslem[playerid][kelepceSure] = 0;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid, 1);
		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, 0xF2FA00FF, "Araca atýldýðýnýz için 1.30 dakika sonra kelepçeleriniz çýkartýldý !");
	}

	if(oIslem[playerid][kelepce] == 1 && GetPVarInt(playerid, "KelepceBlock") < GetTickCount())
	{
	    if(GetPVarInt(playerid, "Aracbloock_") == 1) return 1;
		oIslem[playerid][kelepce] = 0;
		oIslem[playerid][kelepceSure] = 0;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid, 1);
		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, 0xF2FA00FF, "Kelepçeniz 30 saniye dolduðu için çýkartýldý !");
	}

    // pFPS[playerid]  =  fps ölçme

    if(GetPVarInt(playerid, "SagTextUpdate") <= gettime())
    {
		new Float:upHealth[2];
	    GetPlayerHealth(playerid, upHealth[0]);
	    GetPlayerArmour(playerid, upHealth[1]);

	    if(upHealth[0] >= 1 && upHealth[0] <= 150)
	    {
	        if(upHealth[1] <= 0)
	        {
				PlayerTextDrawHide(playerid, SagBarText[playerid][1]);
		    	format(brzz, sizeof(brzz), "~r~~h~~h~Zirh:~n~~w~~h~0");
		    	PlayerTextDrawSetString(playerid, SagBarText[playerid][1], brzz);
		    	if(oyuncuData[playerid][textAyar] == 0){
		    	PlayerTextDrawShow(playerid, SagBarText[playerid][1]);}
	        }
			PlayerTextDrawHide(playerid, SagBarText[playerid][0]);
	    	format(brzz, sizeof(brzz), "~b~~h~~h~Can:~n~~w~~h~%.0f", upHealth[0]);
			PlayerTextDrawSetString(playerid, SagBarText[playerid][0], brzz);
			if(oyuncuData[playerid][textAyar] == 0){
			PlayerTextDrawShow(playerid, SagBarText[playerid][0]);
			}
		}

	 	if(upHealth[1] >= 1 && upHealth[1] <= 150)
	    {
	        PlayerTextDrawHide(playerid, SagBarText[playerid][1]);
	    	format(brzz, sizeof(brzz), "~r~~h~~h~Zirh:~n~~w~~h~%.0f", upHealth[1]);
	    	PlayerTextDrawSetString(playerid, SagBarText[playerid][1], brzz);
	    	if(oyuncuData[playerid][textAyar] == 0){
	    	PlayerTextDrawShow(playerid, SagBarText[playerid][1]);
			}
		}

	    if(upHealth[0] <= 0) PlayerTextDrawHide(playerid, SagBarText[playerid][0]), PlayerTextDrawHide(playerid, SagBarText[playerid][1]);

        if(GetPVarInt(playerid, "SpawnOldum") == 1){
		PlayerTextDrawHide(playerid, SagBarr[playerid][3]);
		format(brzz, sizeof(brzz), "~r~~h~~h~~h~Fps: ~w~~h~%d", pFPS[playerid]);
		PlayerTextDrawSetString(playerid, SagBarr[playerid][3], brzz);
		if(oyuncuData[playerid][textAyar] == 0){
		PlayerTextDrawShow(playerid, SagBarr[playerid][3]);
		}}

        new yetkiup[50], zone[28];
		GetPlayer2DZone(playerid, zone, 28);
		format(yetkiup, sizeof(yetkiup), "%s", zone);
		//PlayerTextDrawSetString(playerid, AltBarBilgi[playerid][4], yetkiup);
		OnlineExp[playerid]++;
		if(OnlineExp[playerid] >= 600)
		{
		    OnlineExp[playerid] = 0;
			oyuncuData[playerid][ExpPuan] += 75;
			PlayerTextDrawSetString(playerid, ParaLevel[playerid][1], "+75_Exp");
            if(oyuncuData[playerid][textAyar] == 0){
			PlayerTextDrawShow(playerid, ParaLevel[playerid][1]);}
			SetPVarInt(playerid, "YaziMode", 1);
			SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
			ExpGuncelle(playerid);
			SendClientMessage(playerid, 0xAB0DFFFF, "Online Exp: {FFFFFF}10 dakika boyunca serverde kaldýðýnýz için 75 Exp Ödül Kazandýnýz.");
			GameTextForPlayer(playerid, "~g~~h~~h~~h~5 Skor~n~~g~~h~~h~~h~$100,000", 2500, 4);
			pParaver(playerid, 100000);
			Skorver(playerid, 5);
		}
	}
    SetPVarInt(playerid, "SagTextUpdate", gettime() + 1);

    if(GetPVarInt(playerid, "SaniyeIslemler") <= gettime())
    {
        if(GetPVarInt(playerid, "SpawnOldum") == 1 && oyuncuData[playerid][hapisSure] > 0)
        {
            if(oyuncuData[playerid][hapisSure] == 1)
            {
                oyuncuData[playerid][kefaletmod] = 0;
                oyuncuData[playerid][hapisSure] = 0;
                oyuncuData[playerid][hSureKayit] = 0;
				SetPlayerPos(playerid, 222.4663,114.5875,999.0156);
		  		SetPlayerFacingAngle(playerid, 89.0353);
		  		SetCameraBehindPlayer(playerid);
		  		new si[56 + 24 + 3];
		  		format(si, sizeof(si), "Oyuncu %s(%d), San Fierro hapishanesinden tahliye oldu.", getName(playerid), playerid);
		  		if(GetPVarInt(playerid, "Hapisdeyimm") == 1) SendClientMessageToAll(0xF29B34FF, si);
		  		SetPVarInt(playerid, "Hapisdeyimm", 0);
            	return 1;
			}
            oyuncuData[playerid][hapisSure]--;
            Canver(playerid, yCan(playerid));
			ResetPlayerWeapons(playerid);
			hapisSureDuzen(playerid, oyuncuData[playerid][hapisSure]);
        }
    	if(TecavuzV[playerid] == 1)
    	{
			new Float: _Can;
			GetPlayerHealth(playerid, _Can);
			if(_Can > 0) Canver(playerid, _Can-1);
			if(_Can <= 0) TecavuzV[playerid] = 0, SetPVarInt(playerid, "Tecavuz", 1), Canver(playerid, 0);
    	}
	}
    SetPVarInt(playerid, "SaniyeIslemler", gettime() + 1);

	if(GetPVarInt(playerid, "EroinDurum") == 1 && GetPVarInt(playerid, "EroinIctim") < GetTickCount())
	{
	    SetPVarInt(playerid, "EroinDurum", 0);
	    SetPVarInt(playerid, "OtDurum", 0);
	    SetPVarInt(playerid, "BonzaiDurum", 0);
		SetPlayerDrunkLevel(playerid, 0);
	    SendClientMessage(playerid, 0xF7E999FF, "Eroin etkisi sona erdi.");
	}
	if(GetPVarInt(playerid, "Spawn_Time_Check") == 1 && GetPVarInt(playerid, "Spawn_Time_Login") < GetTickCount())
	{
	    DeletePVar(playerid, "Spawn_Time_Check");
  		ShowPlayerDialog(playerid, DIALOG_BOS, DIALOG_STYLE_MSGBOX, "Þüphe !", "{FFFFFF}30 veya 45 saniye girmediðiniz için sunucudan kicklendiniz.", "Kapat", "");
		oKick(playerid);
	}
 	if(GetPVarInt(playerid, "OtDurum") == 1 && GetPVarInt(playerid, "OtIctim") < GetTickCount())
	{
	    SetPVarInt(playerid, "EroinDurum", 0);
	    SetPVarInt(playerid, "OtDurum", 0);
	    SetPVarInt(playerid, "BonzaiDurum", 0);
		SetPlayerDrunkLevel(playerid, 0);
	    SendClientMessage(playerid, 0xF7E999FF, "Ot etkisi sona erdi.");
	}
  	if(GetPVarInt(playerid, "BonzaiDurum") == 1 && GetPVarInt(playerid, "BonzaiIctim") < GetTickCount())
	{
	    SetPVarInt(playerid, "EroinDurum", 0);
	    SetPVarInt(playerid, "OtDurum", 0);
	    SetPVarInt(playerid, "BonzaiDurum", 0);
		SetPlayerDrunkLevel(playerid, 0);
	    SendClientMessage(playerid, 0xF7E999FF, "Bonzai etkisi sona erdi.");
	}
    if(GetPVarInt(playerid, "BombaSure") < GetTickCount())
    {
        if(GetPVarInt(playerid, "BombaModu") == 1)
        {
			new bombaAraci = GetPVarInt(playerid, "BombaliArac"), Float:aBomba[3];
			GetVehiclePos(bombaAraci, aBomba[0], aBomba[1], aBomba[2]);
   	    	CreateExplosion(aBomba[0], aBomba[1], aBomba[2], 7, 50.0);
	    	CreateExplosion(aBomba[0], aBomba[1], aBomba[2], 7, 75.0);
	    	CreateExplosion(aBomba[0], aBomba[1], aBomba[2], 7, 100.0);
	    	DeletePVar(playerid, "BombaModu");
	    	DeletePVar(playerid, "BombaliArac");
	    	SendClientMessage(playerid, -1, "{FFA21F}Bomba: -> {FFFFFF}Kurduðunuz bomba patladý. Ödül: {00C3FF}+ 2 skor.");
	    	Skorver(playerid, 2);
		}
  		if(GetPVarInt(playerid, "BombaModu") == 2)
        {
   	    	CreateExplosion(BombaIslem[playerid][bombaPos][0], BombaIslem[playerid][bombaPos][1], BombaIslem[playerid][bombaPos][2], 7, 50.0);
	    	CreateExplosion(BombaIslem[playerid][bombaPos][0], BombaIslem[playerid][bombaPos][1], BombaIslem[playerid][bombaPos][2], 7, 75.0);
	    	CreateExplosion(BombaIslem[playerid][bombaPos][0], BombaIslem[playerid][bombaPos][1], BombaIslem[playerid][bombaPos][2], 7, 100.0);
	    	DeletePVar(playerid, "BombaModu");
	    	SendClientMessage(playerid, -1, "{FFA21F}Bomba: -> {FFFFFF}Kurduðunuz bomba patladý. Ödül: {00C3FF}+ 2 skor.");
	    	Skorver(playerid, 2);
	    	BombaIslem[playerid][bombaPos][0] = 0.0, BombaIslem[playerid][bombaPos][1] = 0.0, BombaIslem[playerid][bombaPos][2] = 0.0;
		}
    }
    if(GetPVarInt(playerid, "BankaTextureLoad") < GetTickCount())
    {
        if(GetPVarInt(playerid, "Bankada") == 1)
        {
            DeletePVar(playerid, "Bankada");
        	TogglePlayerControllable(playerid, 1);
		}
    }
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(ParaKorumasi[playerid] != GetPlayerMoney(playerid))
	{
		ParaSifirla(playerid, ParaKorumasi[playerid]);
	}
	PlayerPausedCount[ playerid ] = 0;
    if( IsPlayerPausedx[ playerid ] )
	{
		CallLocalFunction( "OnPlayerUnpaused", "i", playerid );
		IsPlayerPausedx[ playerid ] = false;
	}
 	if(gettime() < GetPVarInt(playerid, "ozelAracSure"))
	{
	    new sureid = GetPVarInt(playerid, "ozelAracSure");
	    new desure[17];
	    format(desure, sizeof(desure), "~g~~h~~h~-%d-", sureid-gettime());
	    GameTextForPlayer(playerid, desure, 1100, 4);
	}
    if(gettime() > GetPVarInt(playerid, "ozelAracSure") && GetPVarInt(playerid, "ozelAracID") != 0)
    {
        SetVehicleVirtualWorld(GetPVarInt(playerid, "ozelAracID"), 0);
        OzelAracObjeTemizle(GetPVarInt(playerid, "ozelAracID"));
        DestroyVehicle(GetPVarInt(playerid, "ozelAracID"));
        SetPVarInt(playerid, "ozelAracID", 0);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerPos(playerid, OzelDenemePos[0], OzelDenemePos[1], OzelDenemePos[2]);
        SetPlayerFacingAngle(playerid, OzelDenemePos[3]);
        SetCameraBehindPlayer(playerid);
    }
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

stock kayitMenu(playerid, kayitDeger)
{
	if(kayitDeger == 0)
	{
		new buf[140 + MAX_PLAYER_NAME + 10];
		format(buf, sizeof(buf), "{FFFFFF}Hoþgeldin {FF3D77}%s {FFFFFF}sunucumuzda mevcut bir kaydýn bulunmuyor.\nLütfen aþaðýdaki kutucuða þifreni girerek kayýt ol.", getName(playerid));
		ShowPlayerDialog(playerid, DIALOG_KAYIT, DIALOG_STYLE_PASSWORD, "=> Kayýt", buf, "Kayýt Ol", "");
	}
	else
	{
 		new buf[218 + MAX_PLAYER_NAME + 10 + MINIMUM_SIFRE];
		format(buf, sizeof(buf), "=> {FFAD1F}Uyarý: {FFFFFF}Þifreni en düþük %d haneli olarak girebilirsin.\n{FFFFFF}Hoþgeldin {FF3D77}%s {FFFFFF}sunucumuzda mevcut bir kaydýn bulunmuyor.\nLütfen aþaðýdaki kutucuða þifreni girerek kayýt ol.", MINIMUM_SIFRE, getName(playerid));
		ShowPlayerDialog(playerid, DIALOG_KAYIT, DIALOG_STYLE_PASSWORD, "=> Kayýt", buf, "Kayýt Ol", "");
	}
	return 1;
}

stock girisMenu(playerid, girisDeger)
{
	if(girisDeger == 0)
	{
		new buf[142 + MAX_PLAYER_NAME + 10];
		format(buf, sizeof(buf), "{FFFFFF}Hoþgeldin {78FF1F}%s {FFFFFF}sunucumuzda mevcut bir kaydýn bulunuyor.\nLütfen aþaðýdaki kutucuða {78FF1F}þifreni {FFFFFF}girerek giriþ yap.", getName(playerid));
		ShowPlayerDialog(playerid, DIALOG_GIRIS, DIALOG_STYLE_PASSWORD, "=> Giriþ", buf, "Giriþ Yap", "");
	}
	else
	{
  		new buf[215 + MAX_PLAYER_NAME + 20 + 2 + MINIMUM_SIFRE];
		format(buf, sizeof(buf), "=> {FFAD1F}Uyarý: {FFFFFF}Kalan giriþ hakkýn [%d/%d]\n\n{FFFFFF}Hoþgeldin {78FF1F}%s {FFFFFF}sunucumuzda mevcut bir kaydýn bulunuyor.\nLütfen aþaðýdaki kutucuða {78FF1F}þifreni {FFFFFF}girerek giriþ yap.", oyuncuData[playerid][GirisDenemesi], MINIMUM_SIFRE, getName(playerid));
		ShowPlayerDialog(playerid, DIALOG_GIRIS, DIALOG_STYLE_PASSWORD, "=> Giriþ", buf, "Giriþ Yap", "");
	}
	return 1;
}

CMD:cpuan(playerid, params[])
{
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
    new ID, puan;
    if(sscanf(params,"dd", ID, puan)) return SendClientMessage(playerid, 0xFFCC33FF, "Kullaným » {FFFFFF}/cPuan (Çete ID) (Puan)");
	if(!Iter_Contains(Ceteler, ID)) return hataMesaji(playerid, "Bu ID`de çete oluþturulmamýþ.");
	cetePuanArttir(ID, puan);
	SCM_Ex(playerid, 0x25CCF7FF, "%s çetesine %d puan verildi !", CeteIslem[ID][ceteIsmi], puan);
    return 1;
}

CMD:skin(playerid, params[])
{
    if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5++ olmalýsýn.");
    new ID, time;
    if(sscanf(params,"ud", ID, time)) return SendClientMessage(playerid, 0xFFCC33FF, "Kullaným » {FFFFFF}/Skin (Ýsim / Oyuncu ID) (Skin ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu kiþi oyunda deðil !");
	if(time < 0 || time > 311) return hataMesaji(playerid, "Geçersiz Skin ID deðeri girdiniz.");
	if(time == 74) return hataMesaji(playerid, "Bu Skin ID kullanýlamaz.");
    SetPVarInt(ID, "SkinKayit", time);
    SetPlayerSkin(ID, time);
    return 1;
}

CMD:id(playerid, params[])
{
	new isim[24], sz[500], tmp_isim[24], bool: durum = false;
	if(sscanf(params, "s[24]", isim)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/ID (Nick)");
    format(sz, sizeof(sz), "Ýsim\tID\n");
    foreach(new i : Player)
    {
        GetPlayerName(i, tmp_isim, 24);
        if(strfind(tmp_isim, isim, true) != -1)
		{
		    format(sz, sizeof(sz), "%s%s\t%d\n", sz, tmp_isim, i);
			durum = true;
		}
    }
    if(durum)
    {
        ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "ID - Bulucu", sz, "Kapat", "");
    }
    if(!durum) { ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "ID - Bulucu", "Aradýðýnýz bir isimde sonuç bulunamadý !", "Kapat", ""); }
	return 1;
}

CMD:ozelarac(playerid)
{
    if(GetPVarInt(playerid, "OzelMekanda") == 0) return hataMesaji(playerid, "Bu komutu kullanmak için VOLKSWAGEN bayisinde olmalýsýn.");
    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken bu komutu kullanamazsýn.");
    if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken bu komutu kullanamazsýn.");
    if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Aranma seviyeniz varken bu komutu kullanamazsýn.");
	new sz[500];
	format(sz, sizeof(sz), "Araç Adý\tFiyat\n");
	for(new i = 0; i < sizeof(OzelAracFiyat); i++)
	{
	    format(sz, sizeof(sz), "%s%s\t/Bakiye\n", sz, OzelAracFiyat[i][oaIsim]);
	}
	ShowPlayerDialog(playerid, DIALOG_OZEL_ARAC, DIALOG_STYLE_TABLIST_HEADERS, "Araç Seçin", sz, "Seç", "Kapat");
	return 1;
}

CMD:guncellemeler(playerid) return cmd_yenilikler(playerid);
CMD:yenilikler(playerid)
{
    ShowPlayerDialog(playerid, YENILIKLER, DIALOG_STYLE_LIST, "Yenilikler",
	"\
	{ff004c}» {FFFFFF}02.06.2018 Güncellemeleri\n\
	{ff004c}» {FFFFFF}26.05.2018 Güncellemeleri\n\
	{ff004c}» {FFFFFF}12.03.2018 Güncellemeleri\n\
	{ff004c}» {FFFFFF}23.02.2018 Güncellemeleri\n\
	{ff004c}» {FFFFFF}12.02.2018 Güncellemeleri\n\
	{ff004c}» {FFFFFF}29.12.2017 Güncellemeleri\n\
	", "Oku", "");
	return 1;
}

CMD:bakiyeler(playerid) return cmd_bakiye(playerid);
CMD:bakiyemenu(playerid) return cmd_bakiye(playerid);
CMD:bakiye(playerid)
{
	new dialogb[50];
	format(dialogb, sizeof(dialogb), "{ffcc00}Toplam Bakiyeniz:  {FFFFFF}%d TL", oyuncuData[playerid][_Bakiye]);
	ShowPlayerDialog(playerid, DIALOG_BAKIYE, DIALOG_STYLE_TABLIST_HEADERS, dialogb,
	"{7A8AFF}Paket\t{7A8AFF}Ücret\t{7A8AFF}Paket Süresi\t{7A8AFF}Ýþlev\n\
	{A9A9A9}» {FFFFFF}Bakiye Yükle\t\t\t\n\
    {A9A9A9}» {FFFFFF}Bakiye Gönder\t\t\t\n\
    \t\t\t\n\
	{a5ff00}Admin Paketleri:\t\t\t\n\
	Deneme Admin\t50 TL\t30 Gün\t30 Günlüðüne Deneme Admin Olursunuz\n\
    \t\t\t\n\
	{a5ff00}Çete & Ev Paketi:\t\t\t\n\
	Özel Ev (Mekansýz)\t20 TL\tSýnýrsýz\tÝstediðiniz Yere Ev Açýlýr\n\
	Özel Ev (Mekanlý)\t40 TL\tSýnýrsýz\tÝstediðiniz Yere Özel Ev Yapýlýr\n\
	Özel Çete (Mekanlý)\t60 TL\tSýnýrsýz\tÖzel Çete Mekaný Yapýlýr\n\
    \t\t\t\n\
	{a5ff00}Vip Paketleri:\t\t\t\n\
	Safir Vip\t10 TL\t30 Gün\t30 Gün Boyunca Safir Vip Olursunuz\n\
	Yakut Vip\t20 TL\t30 Gün\t30 Gün Boyunca Yakut Vip Olursunuz\n\
	Zümrüt Vip\t30 TL\t30 Gün\t30 Gün Boyunca Zümrüt Vip Olursunuz\n\
	Elmas Vip\t40 TL\t30 Gün\t30 Gün Boyunca Elmas Vip Olursunuz\n\
    \t\t\t\n\
	{a5ff00}Oyun Ýçin Paketler:\t\t\t\n\
	Özel Gate\t30 TL\tSýnýrsýz\tÝstediðiniz Yere Þifreli Kapý Açýlýr\n\
	Ýsim Deðiþtirme\t15 TL\tSýnýrsýz\tAnýnda Ýsim Deðiþtirebilirsiniz\n\
	+2 Yetenek Paketi\t5 TL\tSýnýrsýz\tAnýnda +2 Yetenek Puaný\n\
    \t\t\t\n\
	Özel Ýnfernus\t30 TL\tSýnýrsýz\tAnýnda Özel Ýnfernus Aracý Alýrsýnýz\n\
	Özel Sultan\t30 TL\tSýnýrsýz\tAnýnda Özel Sultan Aracý Alýrsýnýz\n\
	Özel Bullet\t30 TL\tSýnýrsýz\tAnýnda Özel Bullet Aracý Alýrsýnýz\n\
	Özel DFT-30\t40 TL\tSýnýrsýz\tAnýnda Özel DFT-30 Aracý Alýrsýnýz\n\
	Özel Maverick\t40 TL\tSýnýrsýz\tAnýnda Özel Maverick Alýrsýnýz\n\
    \t\t\t\n\
	{a5ff00}Þans Paketleri:\t\t\t\n\
	Rastgele Vip Paketi\t20 TL\tRastgele Süre\tRastgele Vip Paketi Ýçerir\n\
    \t\t\t\n\
	Küçük Para Paketi\t10 TL\tSýnýrsýz\t20M - 70M Arasý\n\
	Orta Para Paketi\t25 TL\tSýnýrsýz\t30M - 100M Arasý\n\
	Büyük Para Paketi\t50 TL\tSýnýrsýz\t80M - 150M Arasý\n\
    \t\t\t\n\
	Küçük Skor Paketi\t10 TL\tSýnýrsýz\t250 - 1,000 Arasý\n\
	Orta Skor Paketi\t25 TL\tSýnýrsýz\t500 - 2,000 Arasý\n\
	Büyük Skor Paketi\t50 TL\tSýnýrsýz\t1,000 - 5,000 Arasý\n\
    \t\t\t\n\
	Küçük Exp Paketi\t5 TL\tSýnýrsýz\t3,000 - 7,000 Arasý\n\
	Orta Exp Paketi\t10 TL\tSýnýrsýz\t5,000 - 10,000 Arasý\n\
	Büyük Exp Paketi\t20 TL\tSýnýrsýz\t10,000 - 17,000 Arasý\n\
	", "Satýn Al", "Kapat");
	return 1;
}

CMD:bakiyeyukle(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new ID, miktar, sz[256];
	if(sscanf(params, "ud", ID, miktar)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/BakiyeYukle (Oyuncu ID) (Bakiye Miktarý)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
    oyuncuData[ID][_Bakiye] += miktar;
	format(sz, sizeof(sz), "[BAKIYE] Yetkili %s(%d) oyuncu %s(%d) hesabýna %d TL bakiye yükledi.", getName(playerid), playerid, getName(ID), ID, miktar);
	SendClientMessageToAll(0x00FF00FF, sz);
	return 1;
}

CMD:bakiyesil(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new ID, miktar, sz[256];
	if(sscanf(params, "ud", ID, miktar)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/BakiyeSil (Oyuncu ID) (Bakiye Miktarý)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
    oyuncuData[ID][_Bakiye] -= miktar;
	format(sz, sizeof(sz), "[BAKIYE] Yetkili %s(%d) oyuncu %s(%d) hesabýndan %d TL bakiye sildi.", getName(playerid), playerid, getName(ID), ID, miktar);
	SendClientMessageToAll(0x00FF00FF, sz);
	return 1;
}

CMD:bakiyesifirla(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][pAdmin] < 6/* || !IsPlayerAdmin(playerid)*/) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new ID, sz[256];
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/BakiyeSifirla (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
    oyuncuData[ID][_Bakiye] = 0;
	format(sz, sizeof(sz), "[BAKIYE] Yetkili %s(%d) oyuncu %s(%d) bakiyesini sýfýrladý.", getName(playerid), playerid, getName(ID), ID);
	SendClientMessageToAll(0x00FF00FF, sz);
	return 1;
}

CMD:sifregoster(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(isnull(params)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/SifreGoster (Nick)");
	if(strlen(params) > 24) return hataMesaji(playerid, "Bir oyuncunun nicki maksimum 24 harfden oluþabilir !");
	new query[116 + 24], Cache:VeriCek, list[200];
	new bool: d = false;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%s' LIMIT 1", params);
	VeriCek = mysql_query(g_SQL, query);
   	new rows = cache_num_rows();
	if(rows)
	{
	    d = true;
	    new pw[68];
	    cache_get_value_name(0, "orjSifre", pw);
	    format(list, sizeof(list), "%sÞifre:\t%s\n", list, pw);
	}
	if(!rows)
	{
	    d = false;
		hataMesaji(playerid, "Bu oyuncu veritabanýnda kayýtlý deðil.");
	}
	cache_delete(VeriCek);
	if(d) { ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Þifre", list, "Kapat", ""); }
	return 1;
}

CMD:atmekle(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
    new id = Iter_Free(Atmler), objid, Float: _Pos[3];
    if(id == -1) return hataMesaji(playerid, "Atm sýnýrý dolmuþ, slotu yükseltin.");
	GetPlayerPos(playerid, _Pos[0], _Pos[1], _Pos[2]);
	GetXYInFrontOfPlayer(playerid, _Pos[0], _Pos[1], 3.0);
	objid = CreateDynamicObject(19324, _Pos[0], _Pos[1], _Pos[2], 0.0, 0.0, 0.0, -1, -1);
    ATMMod[playerid] = true;
	EditDynamicObject(playerid, objid);
	SendClientMessage(playerid, 0xF1C40FFF, "ATM`yi kayýt edeceðiniz pozisyonu belirleyin.");
	return 1;
}

CMD:atmsil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ sahip olmalýsýn.");
    new id, query[65];
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, -1, "{8870FF}Bilgi: {FFFFFF}/AtmSil [ATM ID]");
	if(!Iter_Contains(Atmler, id)) return hataMesaji(playerid, "Bu ID`de atm oluþturulmamýþ.");
	for(new i = 0; i < 6; i++) AtmIslem[id][atmPos][i] = 0.0;
	DestroyDynamicObject(AtmIslem[id][atmObje]);
	DestroyDynamicCP(AtmIslem[id][atmCP]);
	DestroyDynamic3DTextLabel(AtmIslem[id][atmLabel]);
    AtmIslem[id][atmLabel] = Text3D: INVALID_3DTEXT_ID;
    Iter_Remove(Atmler, id);
	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `atmler` WHERE `atmid` = '%d' LIMIT 1", id);
	mysql_query(g_SQL, query);
	format(query, sizeof(query), "ATM: {FFFFFF}Þuan {1CE8FF}%d {FFFFFF}idli atmyi sildiniz.", id);
	SendClientMessage(playerid, 0xEFC700FF, query);
	return 1;
}

CMD:cetebolgeler(playerid)
{
	new sz[1000], cDurum[50], xzsc[15], xzc = 0;
	format(sz, sizeof(sz), "Bölge Ýsmi\tEle Geçiren Çete\tTip\n");
    foreach(new i : CeteSavaslar)
    {
        if(CeteSavasMekan[i][ceteMekanSahip] == -1)
        {
            cDurum = "Yok";
        }
        else
        {
            format(cDurum, 50, CeteIslem[CeteSavasMekan[i][ceteMekanSahip]][ceteIsmi]);
        }
		format(xzsc, sizeof(xzsc), "Bolge_%d", i);
	    SetPVarInt(playerid, xzsc, i);
		format(sz, sizeof(sz), "%s%s\t%s\t%d\n", sz, CeteSavasMekan[i][ceteMekanIsmi], cDurum, CeteSavasMekan[i][ceteTip]);
        xzc++;
	}
    ShowPlayerDialog(playerid, DIALOG_BOLGELER2, DIALOG_STYLE_TABLIST_HEADERS, "Savaþ Bölgeleri", sz, "(>)", "(<)");
	return 1;
}

CMD:csbolustur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ sahip olmalýsýn.");
    new csID = Iter_Free(CeteSavaslar), cs_x, cs_y, cs_rx, cs_ry, cs_bolgeName[CETE_BOLGE_ISIM];
    if(csID == -1) return hataMesaji(playerid, "Maksimum çete savaþ bölgesi oluþturma limitine ulaþýldý.");
    if(sscanf(params, "dddds["CBI"]", cs_x, cs_y, cs_rx, cs_ry, cs_bolgeName)) return SendClientMessage(playerid, 0x00FF37FF, "/CsbOlustur [X] [Y] [RX] [RY] [Bölge Ismi]");
	if(strlen(cs_bolgeName) <= 0 || strlen(cs_bolgeName) >= CETE_BOLGE_ISIM+1) return hataMesaji(playerid, "Çete savaþ bölgelerinin ismi Min: 1 Max: 48 olabilir.");
    CeteSavasBolgeOlustur(playerid, csID, cs_x, cs_y, cs_rx, cs_ry, "000000", cs_bolgeName);
	return 1;
}

CMD:csbsil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ sahip olmalýsýn.");
    new id, query[100];
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, -1, "{8870FF}Bilgi: {FFFFFF}/CsbSil [Savaþ Bölge ID]");
	if(!Iter_Contains(CeteSavaslar, id)) return hataMesaji(playerid, "Bu ID`de savaþ bölgesi oluþturulmamýþ.");
	format(CeteSavasMekan[id][ceteMekanIsmi], CETE_BOLGE_ISIM, "");
	CeteSavasMekan[id][cMekanZone][0] = 0.0;
	CeteSavasMekan[id][cMekanZone][1] = 0.0;
	CeteSavasMekan[id][cMekanZone][2] = 0.0;
	CeteSavasMekan[id][cMekanZone][3] = 0.0;
	CeteSavasMekan[id][cMekanZone][0] = 0.0;
    CeteSavasMekan[id][cMekanZone][1] = 0.0;
    CeteSavasMekan[id][cMekanZone][2] = 0.0;
    CeteSavasMekan[id][eleGecirenCete] = -1;
    CeteSavasMekan[id][ceteMekanSahip] = -1;
    CeteSavasMekan[id][ceteMekanSahip] = -1;
    CeteSavasMekan[id][ceteTip] = 0;
	CeteSavasMekan[id][ceteBolgeSure] = 0;
    format(CeteSavasMekan[id][ceteMekanRenk], 7, "");
    GangZoneDestroy(CeteSavasMekan[id][cbZone]);
    DestroyDynamicArea(CeteSavasMekan[id][cbArea]);
	DestroyDynamic3DTextLabel(CeteSavasMekan[id][cbLabel]);
    CeteSavasMekan[id][cbLabel] = Text3D: INVALID_3DTEXT_ID;
    Iter_Remove(CeteSavaslar, id);
	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetemekan` WHERE `ceteMekanid` = '%d' LIMIT 1", id);
	mysql_query(g_SQL, query);
	format(query, sizeof(query), "Savaþ Bölgesi: {FFFFFF}Þuan {1CE8FF}%d {FFFFFF}idli bölgeyi sildiniz.", id);
	SendClientMessage(playerid, 0xEFC700FF, query);
	return 1;
}

CMD:savasac(playerid)
{
	new saat_brk[3], pointt = 0;
	gettime(saat_brk[0], saat_brk[1], saat_brk[2]);
    saat_brk[0] -= 1;
	saat_brk[0] += 1;
	if(saat_brk[0] >= 16 && saat_brk[0] <= 22)
	{
	    pointt++;
	}
 	if(saat_brk[1] >= 0 && saat_brk[1] <= 59)
	{
	    pointt++;
	}
	if(pointt != 2) return hataMesaji(playerid, "Çete savaþlarýný saat 16:00 - 21:59 arasýnda yapabilirsiniz.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bu komutu kullanamazsýnýz.");
	if(GetPlayerInterior(playerid) != 0 && GetPlayerVirtualWorld(playerid) != 0) return hataMesaji(playerid, "Bu komutu interior içinde veya vw deðiþtiði için kullanamazsýn.");
	new c = PlayerCete[playerid], id = GetPVarInt(playerid, "_SavasID"), xq = 0;
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
 	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Çete savaþlarýný sadece çete kurucularý baþlatabilir.");
	    return 1;
	}
    if(SavasIslem[playerid][CeteSavasBolgedemi] == 0) return hataMesaji(playerid, "Herhangi bir çete savaþý bölgesinde deðilsiniz.");
    if(SavasIslem[playerid][SavasSureArttir] != 0) return hataMesaji(playerid, "Bu çete bölgesini zaten ele geçiriyorsunuz.");
    if(c == CeteSavasMekan[id][eleGecirenCete]) return hataMesaji(playerid, "Bu bölgeyi zaten sizin çeteniz ele geçiriyor !");
	if(CeteSavasMekan[id][eleGecirenCete] != -1) return hataMesaji(playerid, "Bu bölgeyi þuan baþka bir çete ele geçiriyor !");
	if(id != -1)
	{
		if(c == CeteSavasMekan[id][ceteMekanSahip]) return hataMesaji(playerid, "Bu çete bölgesi zaten sizin.");
        if(CeteSavasMekan[id][ceteBolgeSure] != 0) return hataMesaji(playerid, "Bu bölgenin süresi bitmeden saldýramazsýn.");
		if(CeteSavasMekan[id][ceteMekanSahip] == -1)
		{
		    foreach(new i : Player)
		    {
		        if(id == GetPVarInt(i, "_SavasID") && SavasIslem[i][CeteSavasBolgedemi] == 1)
		        {
		            xq++;
		        }
		    }
		    if(xq < 3) return hataMesaji(playerid, "Çete arkadaþlarýnla 3 kiþi olmadan savaþ açamazsýn.");
			ShowPlayerDialog(playerid, DIALOG_SAVAS_AC, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Bölgesine Savaþ Açma",
			"{7A8AFF}Saldýrý Tipi\t{7A8AFF}Ýþlev\t{7A8AFF}Kar\t{7A8AFF}Zarar\n\
			Tip 1\tBölgenize tekrar savaþ açýlabilir\t$1,000,000\t-$1,500,000\n\
			Tip 2\tBölgenize 15 dk boyunca savaþ açýlamaz\t$2,500,000\t-$3,250,000\n\
			Tip 3\tBölgenize 1 saat boyunca savaþ açýlamaz\t$5,000,000 | +1 Çete Puaný\t-$6,500,000 | -2 Çete Puaný\n\
			Tip 4\tBölgenize 2 gün boyunca savaþ açýlamaz\t$10,000,000 | +2 Çete Puaný\t-$15,000,000 | -3 Çete Puaný\n\
			", "Savaþ Aç", "Kapat");
		}
		else
		{
		    if(SavasIslem[playerid][Puskurtme] == 1) return hataMesaji(playerid, "Bu çete bölgesini almak için zaten savaþ baþlattýn.");
			foreach(new i : Player)
		    {
		        if(id == GetPVarInt(i, "_SavasID") && SavasIslem[i][CeteSavasBolgedemi] == 1)
		        {
		            xq++;
		        }
		    }
		    if(xq < 3) return hataMesaji(playerid, "Çete arkadaþlarýnla 3 kiþi olmadan savaþ açamazsýn.");
			new
				b_ver[475],
				csS = CeteSavasMekan[id][ceteMekanSahip]
			;
		    format(b_ver, sizeof(b_ver), "{3498db}%s(%d) {ffffff}adlý çete bölgesi {e74c3c}%s(%d) {ffffff}çetesi tarafýndan alýnmýþ.\n{ffffff}Eðer savaþý baþlatýr ve kazanýrsanýz bu bölgeden bu çeteyi atmýþ olacaksýnýz.\n{ffffff}Bu çeteyi bu bölgeden attýktan sonra tekrardan savaþ açarak bu bölgeyi ele geçirebilirsiniz.\n{ffffff}Ele geçirme bölgesinde çetenizle birlikte durursanýz bu bölgeyi daha da hýzlý alabilirsiniz.", CeteSavasMekan[id][ceteMekanIsmi], id, CeteIslem[csS][ceteIsmi], csS);
		    ShowPlayerDialog(playerid, DIALOG_SAVAS_BASLAT, DIALOG_STYLE_MSGBOX, "Çete Savaþý Baþlatma", b_ver, "Baþlat", "Iptal");
		}
	}
	return 1;
}

CMD:esyalar(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz !");
	new str[150];
	format(str, sizeof(str), "{3498db}Madde\t{3498db}Eþyadaki Miktar\t{3498db}Üstündeki Miktar\n");
	format(str, sizeof(str), "%s» Bonzai\t%d\t%d\n", str, oyuncuData[playerid][_bonzai], Bonzaiq[playerid]);
	format(str, sizeof(str), "%s» Eroin\t%d\t%d\n", str, oyuncuData[playerid][_eroin], Eroinq[playerid]);
    format(str, sizeof(str), "%s» Ot\t%d\t%d\n", str, oyuncuData[playerid][_ot], Otq[playerid]);
    format(str, sizeof(str), "%s» Bomba\t%d\t%d\n", str, oyuncuData[playerid][_bomba], Bombam[playerid]);
	ShowPlayerDialog(playerid, DIALOG_ESYALARCMD, DIALOG_STYLE_TABLIST_HEADERS, "Esyalarým", str, "(>>)", "(<<)");
	return 1;
}

CMD:lazerhack(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz !");
	if(LazerDurum2) return hataMesaji(playerid, "Lazerler þuan biri tarafýndan hackleniyor...");
	if(LazerDurum) return b_Gerekenler(playerid, 3);
	if(PlayerBanka[playerid][bankaSoyuyor] == 1) return b_Gerekenler(playerid, 4);
	if(PlayerCete[playerid] == -1) return hataMesaji(playerid, "Banka lazerlerini hacklemek için bir çetede olmalýsýn.");
	if(GetPlayerScore(playerid) < BANKA_SKOR) return b_Gerekenler(playerid, 1);
    if(!IsPlayerInRangeOfPoint(playerid, 1.2, 2.8802, 169.3826, 1243.9690)) return b_Gerekenler(playerid, 2);
    aranmaLeveli(playerid, 40);
    PlayerBanka[playerid][bankaCount] = LAZER_SURE;
    PlayerBanka[playerid][bankaSoyuyor] = 1;
    KillTimer(BankaGeriSay[playerid]);
    BankaGeriSay[playerid] = SetTimerEx("Banka_Geri", 1000, true, "d", playerid);
    SendClientMessageToAll(-1, "{D8FF17}[BANKA] {FFFFFF}Banka Lazerlerleri bir çete tarafýndan hackleniyor...");
    LazerDurum2 = true;
	return 1;
}

CMD:bankasoy(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz !");
    if(!LazerDurum) return hataMesaji(playerid, "Lazerler hacklenmemiþ, bankayý soyamazsýnýz.");
    if(!IsPlayerInRangeOfPoint(playerid, 1.3, -0.4912, 173.0103, 1243.9690)) return hataMesaji(playerid, "Bankanýn soyma kasasýnda deðilsin.");
	if(GetPVarInt(playerid, "SoygunOda") == 0) return SendClientMessage(playerid, -1, "{FF773D}[BANKA] {FFFFFF}Odasýnda deðilsin !");
	if(bankaParasi <= 5) return hataMesaji(playerid, "Bankada soyulacak para kalmamýþ, daha sonra tekrar dene !");
	if(PlayerBanka[playerid][bankaCount] >= 1) return hataMesaji(playerid, "Sürenin bitmesini bekleyin !");
	new cCount = 0;
    if(PlayerCete[playerid] == -1) return hataMesaji(playerid, "Bankayý soymak için bir çetede olmalýsýnýz.");
	foreach(new i : Player) if(GetPVarInt(i, "BankaGirdi") == 1 && PlayerCete[i] == PlayerCete[playerid]) cCount++;
	if(cCount < BANKA_SOYMA) return hataMesaji(playerid, "Bankayý soymak için bankanýn içinde 3 veya daha fazla çete arkadaþýn olmalý.");
	SetPVarInt(playerid, "BankaSoyuyor", 1);
	aranmaLeveli(playerid, 40);
	PlayerBanka[playerid][bankaCount] = LAZER_SURE;
	PlayerBanka[playerid][bankaSoyuyor] = 2;
	BankaGeriSay[playerid] = SetTimerEx("Banka_Geri", 1000, true, "d", playerid);
	SetPVarInt(playerid, "AnimCikar", 0);
	SendClientMessage(playerid, 0xE047FFFF, "[BANKA] {FFFFFF}Soygun animasyonunu kapatýp kaçmak için {00FF00}N {FFFFFF}tuþuna basýn.");
	ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 0, 0, 1);
	new xzz[125];
	format(xzz, sizeof(xzz), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, suanda ~g~~h~Bankayi ~w~~h~soyuyor...", getName(playerid), playerid);
    textFlood++;
	foreach(new i : Player) TextdrawYazi(i, xzz);
	if(textFlood == 3){ textFlood = 0; }
	return 1;
}

CMD:saatdegistir(playerid, params[]) return cmd_mytime(playerid, params);
CMD:mytime(playerid, params[])
{
    new time;
    if(sscanf(params,"i", time)) return SendClientMessage(playerid, 0xFFCC33FF, "Kullaným » {FFFFFF}/SaatDegistir (Saat)");
    if(time < 0 || time > 24) return hataMesaji(playerid, "Saati 0 ile 24 arasý girebilirsiniz.");
    SetPlayerTime(playerid, time, 0);
    SendClientMessage(playerid,0x66FFFFFF, "Bilgi » {FFFFFF}Oyun saatini deðiþtirdiniz.");
    return 1;
}

CMD:havadegistir(playerid, params[]) return cmd_myweather(playerid, params);
CMD:myweather(playerid, params[])
{
    new weather;
    if(sscanf(params,"i", weather)) return SendClientMessage(playerid, 0xFFCC33FF, "Kullaným » {FFFFFF}/HavaDegistir (Hava ID)");
    if(weather < 0 || weather > 50) return hataMesaji(playerid, "Hava ID`lerini 0 ile 50 arasý girebilirsiniz.");
    SetPlayerWeather(playerid, weather);
    SendClientMessage(playerid,0x66FFFFFF, "Bilgi » {FFFFFF}Oyun havasýný deðiþtirdiniz.");
    return 1;
}

CMD:vcmds(playerid) return cmd_vipcmds(playerid);
CMD:vipcmds(playerid)
{
    switch(oyuncuData[playerid][pVip])
    {
        case 0: hataMesaji(playerid, "Bu komutu kullanmak için Vip olmalýsýnýz.");
        case 1:
		{
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}1 Level Vip Komutlarý",
			"{92F22A}Komut\t{92F22A}Ýþlev\n\
			{1E7B2C}/vCan\t{FFFFFF}Canýnýzý fuller\n\
			{1E7B2C}/vZirh\t{FFFFFF}Zýrhýnýzý fuller\n\
			{1E7B2C}/vSilah\t{FFFFFF}Vip silahlarý verir\n\
			{1E7B2C}/vSkin\t{FFFFFF}Ýstediðiniz skini alabilirsiniz\n\
			{1E7B2C}/v\t{FFFFFF}Vip arasý sohbet edebilirsiniz\n\
			{1E7B2C}/vDovuStil\t{FFFFFF}Dövüþ stilini deðiþtirir\n\
			{1E7B2C}/vTpKapat\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný kapatýr\n\
			{1E7B2C}/vTpAc\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný açar\n\
			", "Kapat", "");
		}
        case 2:
        {
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}2 Level Vip Komutlarý",
			"{92F22A}Komut\t{92F22A}Ýþlev\n\
			{1E7B2C}/vCan\t{FFFFFF}Canýnýzý fuller\n\
			{1E7B2C}/vZirh\t{FFFFFF}Zýrhýnýzý fuller\n\
			{1E7B2C}/vSilah\t{FFFFFF}Vip silahlarý verir\n\
			{1E7B2C}/vSkin\t{FFFFFF}Ýstediðiniz skini alabilirsiniz\n\
			{1E7B2C}/v\t{FFFFFF}Vip arasý sohbet edebilirsiniz\n\
			{1E7B2C}/vDovuStil\t{FFFFFF}Dövüþ stilini deðiþtirir\n\
			{1E7B2C}/vTpKapat\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný kapatýr\n\
			{1E7B2C}/vTpAc\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný açar\n\
			{1E7B2C}/vOtoARenk\t{FFFFFF}Kullandýðýnýz aracýn renkleri otomatik deðiþir\n\
			{1E7B2C}/vTamir\t{FFFFFF}Kullandýðýnýz aracý tamir eder\n\
			{1E7B2C}/vDondur\t{FFFFFF}Arabanýz ters dönmüþse düzeltir\n\
			{1E7B2C}/vNitro\t{FFFFFF}Kullandýðýnýz araca x10 nitro ekler\n\
			", "Kapat", "");
        }
        case 3:
        {
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}3 Level Vip Komutlarý",
			"{92F22A}Komut\t{92F22A}Ýþlev\n\
			{1E7B2C}/vCan\t{FFFFFF}Canýnýzý fuller\n\
			{1E7B2C}/vZirh\t{FFFFFF}Zýrhýnýzý fuller\n\
			{1E7B2C}/vSilah\t{FFFFFF}Vip silahlarý verir\n\
			{1E7B2C}/vSkin\t{FFFFFF}Ýstediðiniz skini alabilirsiniz\n\
			{1E7B2C}/v\t{FFFFFF}Vip arasý sohbet edebilirsiniz\n\
			{1E7B2C}/vDovuStil\t{FFFFFF}Dövüþ stilini deðiþtirir\n\
			{1E7B2C}/vTpKapat\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný kapatýr\n\
			{1E7B2C}/vTpAc\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný açar\n\
			{1E7B2C}/vOtoARenk\t{FFFFFF}Kullandýðýnýz aracýn renkleri otomatik deðiþir\n\
			{1E7B2C}/vTamir\t{FFFFFF}Kullandýðýnýz aracý tamir eder\n\
			{1E7B2C}/vDondur\t{FFFFFF}Arabanýz ters dönmüþse düzeltir\n\
			{1E7B2C}/vNitro\t{FFFFFF}Kullandýðýnýz araca x10 nitro ekler\n\
			{1E7B2C}/vGit\t{FFFFFF}Vip olan oyuncularýn yanýna gidebilirsiniz\n\
			{1E7B2C}/vSarki\t{FFFFFF}Araç içindeki oyunculara þarký dinletirsiniz\n\
			", "Kapat", "");
        }
		case 4:
		{
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}4 Level Vip Komutlarý",
			"{92F22A}Komut\t{92F22A}Ýþlev\n\
			{1E7B2C}/vCan\t{FFFFFF}Canýnýzý fuller\n\
			{1E7B2C}/vZirh\t{FFFFFF}Zýrhýnýzý fuller\n\
			{1E7B2C}/vSilah\t{FFFFFF}Vip silahlarý verir\n\
			{1E7B2C}/vSkin\t{FFFFFF}Ýstediðiniz skini alabilirsiniz\n\
			{1E7B2C}/v\t{FFFFFF}Vip arasý sohbet edebilirsiniz\n\
			{1E7B2C}/vDovuStil\t{FFFFFF}Dövüþ stilini deðiþtirir\n\
			{1E7B2C}/vTpKapat\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný kapatýr\n\
			{1E7B2C}/vTpAc\t{FFFFFF}Vip oyuncularýnýn yanýnýza ýþýnlanmasýný açar\n\
			{1E7B2C}/vOtoARenk\t{FFFFFF}Kullandýðýnýz aracýn renkleri otomatik deðiþir\n\
			{1E7B2C}/vTamir\t{FFFFFF}Kullandýðýnýz aracý tamir eder\n\
			{1E7B2C}/vDondur\t{FFFFFF}Arabanýz ters dönmüþse düzeltir\n\
			{1E7B2C}/vNitro\t{FFFFFF}Kullandýðýnýz araca x10 nitro ekler\n\
			{1E7B2C}/vGit\t{FFFFFF}Vip olan oyuncularýn yanýna gidebilirsiniz\n\
			{1E7B2C}/vSarki\t{FFFFFF}Araç içindeki oyunculara þarký dinletirsiniz\n\
			{1E7B2C}/vDuyuru\t{FFFFFF}Ekranda 7 saniyeliðine istediðiniz duyuruyu yapabilirsiniz\n\
			{1E7B2C}/vSifirla\t{FFFFFF}Her 5 dakika da aranma seviyenizi sýfýrlar\n\
			", "Kapat", "");
		}
	}
    return 1;
}

CMD:tumkomutlar(playerid, params[])
{
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Tüm Komutlar",
	"{D33257}» {FFFFFF}/Client\n\
	{D33257}» {FFFFFF}/Dc\n\
	{D33257}» {FFFFFF}/DcAyar\n\
	{D33257}» {FFFFFF}/Komutlar\n\
	{D33257}» {FFFFFF}/Rehberler\n\
	{D33257}» {FFFFFF}/Djler\n\
	{D33257}» {FFFFFF}/SaatDegistir\n\
	{D33257}» {FFFFFF}/HavaDegistir\n\
	{D33257}» {FFFFFF}/CeteOlustur\n\
	{D33257}» {FFFFFF}/CeteKomut\n\
	{D33257}» {FFFFFF}/Kill\n\
	{D33257}» {FFFFFF}/Ayarlar\n\
	{D33257}» {FFFFFF}/Market\n\
	{D33257}» {FFFFFF}/Yardim\n\
	{D33257}» {FFFFFF}/Basarilarim\n\
	{D33257}» {FFFFFF}/Kiyafet\n\
	{D33257}» {FFFFFF}/Yetenekler\n\
	{D33257}» {FFFFFF}/Yapimcilar\n\
	{D33257}» {FFFFFF}/Duello\n\
	{D33257}» {FFFFFF}/Bolgeler\n\
	{D33257}» {FFFFFF}/Apanel\n\
	{D33257}» {FFFFFF}/Aracgetir\n\
	{D33257}» {FFFFFF}/Park\n\
	{D33257}» {FFFFFF}/Anahtarver\n\
	{D33257}» {FFFFFF}/Anahtaral\n\
	{D33257}» {FFFFFF}/Eroinic\n\
	{D33257}» {FFFFFF}/Otic\n\
	{D33257}» {FFFFFF}/Bonzaiic\n\
	{D33257}» {FFFFFF}/Elegecir\n\
	{D33257}» {FFFFFF}/Aracrenkleri\n\
	{D33257}» {FFFFFF}/Tamir\n\
	{D33257}» {FFFFFF}/Arenk\n\
	{D33257}» {FFFFFF}/Songiris\n\
	{D33257}» {FFFFFF}/Paraver\n\
	{D33257}» {FFFFFF}/Mkapat\n\
	{D33257}» {FFFFFF}/Zirh\n\
	{D33257}» {FFFFFF}/Knife\n\
	{D33257}» {FFFFFF}/Deagle\n\
	{D33257}» {FFFFFF}/Sawn\n\
	{D33257}» {FFFFFF}/Mp5\n\
	{D33257}» {FFFFFF}/Ak47\n\
	{D33257}» {FFFFFF}/M4\n\
	{D33257}» {FFFFFF}/Tec9\n\
	{D33257}» {FFFFFF}/Uzi\n\
	{D33257}» {FFFFFF}/Combat\n\
	{D33257}» {FFFFFF}/Sniper\n\
	{D33257}» {FFFFFF}/9Mm\n\
	{D33257}» {FFFFFF}/Pmac\n\
	{D33257}» {FFFFFF}/Pmkapat\n\
	{D33257}» {FFFFFF}/Pm\n\
	{D33257}» {FFFFFF}/Local\n\
	{D33257}» {FFFFFF}/Akilitle\n\
	{D33257}» {FFFFFF}/Akilitac\n\
	{D33257}» {FFFFFF}/Acikar\n\
	{D33257}» {FFFFFF}/Ar\n\
	{D33257}» {FFFFFF}/Animasyonlar\n\
	{D33257}» {FFFFFF}/Animdurdur\n\
	{D33257}» {FFFFFF}/Ellerhavaya\n\
	{D33257}» {FFFFFF}/Sarhos\n\
	{D33257}» {FFFFFF}/Bomb\n\
	{D33257}» {FFFFFF}/Ates\n\
	{D33257}» {FFFFFF}/Gul\n\
	{D33257}» {FFFFFF}/Dgozetle\n\
	{D33257}» {FFFFFF}/Hirsizlik\n\
	{D33257}» {FFFFFF}/31\n\
	{D33257}» {FFFFFF}/31Bitis\n\
	{D33257}» {FFFFFF}/Yakalandin\n\
	{D33257}» {FFFFFF}/Vururum\n\
	{D33257}» {FFFFFF}/Vuruldum\n\
	{D33257}» {FFFFFF}/Saplakyedim\n\
	{D33257}» {FFFFFF}/Saplakat\n\
	{D33257}» {FFFFFF}/Sigara\n\
	{D33257}» {FFFFFF}/Sigara2\n\
	{D33257}» {FFFFFF}/Elsalla\n\
	{D33257}» {FFFFFF}/Bak\n\
	{D33257}» {FFFFFF}/Uzan\n\
	{D33257}» {FFFFFF}/Otur\n\
	{D33257}» {FFFFFF}/Yemek\n\
	{D33257}» {FFFFFF}/Kus\n\
	{D33257}» {FFFFFF}/Ol\n\
	{D33257}» {FFFFFF}/Anlas\n\
	{D33257}» {FFFFFF}/Op\n\
	{D33257}» {FFFFFF}/Emrah\n\
	{D33257}» {FFFFFF}/Nevarlan\n\
	{D33257}» {FFFFFF}/Ýse\n\
	{D33257}» {FFFFFF}/Dans1\n\
	{D33257}» {FFFFFF}/Dans2\n\
	{D33257}» {FFFFFF}/Dans3\n\
	{D33257}» {FFFFFF}/Dans4\n\
	{D33257}» {FFFFFF}/Sex1\n\
	{D33257}» {FFFFFF}/Sex2\n\
	{D33257}» {FFFFFF}/Sex3\n\
	{D33257}» {FFFFFF}/Sex4\n\
	{D33257}» {FFFFFF}/Sex5\n\
	{D33257}» {FFFFFF}/Sex6\n\
	{D33257}» {FFFFFF}/TopPara\n\
	{D33257}» {FFFFFF}/TopBanka\n\
	{D33257}» {FFFFFF}/TopSkor\n\
	{D33257}» {FFFFFF}/TopOnline\n\
	{D33257}» {FFFFFF}/Sorusor\n\
	{D33257}» {FFFFFF}/Ýsteksarki\n\
	{D33257}» {FFFFFF}/Report\n\
	{D33257}» {FFFFFF}/Satinal\n\
	{D33257}» {FFFFFF}/Giris\n\
	{D33257}» {FFFFFF}/Evmenu\n\
	{D33257}» {FFFFFF}/Evegit\n\
	{D33257}» {FFFFFF}/Ke\n\
	{D33257}» {FFFFFF}/Kecikar\n\
	{D33257}» {FFFFFF}/Aracaat\n\
	{D33257}» {FFFFFF}/Ya\n\
	{D33257}» {FFFFFF}/Telsiz\n\
	{D33257}» {FFFFFF}/Tazer\n\
	{D33257}» {FFFFFF}/Rusvet\n\
	{D33257}» {FFFFFF}/Gkur\n\
	{D33257}» {FFFFFF}/Gayril\n\
	{D33257}» {FFFFFF}/Gdavet\n\
	{D33257}» {FFFFFF}/Gkatil\n\
	{D33257}» {FFFFFF}/Glider\n\
	{D33257}» {FFFFFF}/Gat\n\
	{D33257}» {FFFFFF}/G\n\
	{D33257}» {FFFFFF}/Guyeler\n\
	{D33257}» {FFFFFF}/Gruplar\n\
	{D33257}» {FFFFFF}/Ekur\n\
	{D33257}» {FFFFFF}/Eayril\n\
	{D33257}» {FFFFFF}/Edavet\n\
	{D33257}» {FFFFFF}/Ekatil\n\
	{D33257}» {FFFFFF}/Elider\n\
	{D33257}» {FFFFFF}/EkipAt\n\
	{D33257}» {FFFFFF}/E\n\
	{D33257}» {FFFFFF}/Euyeler\n\
	{D33257}» {FFFFFF}/Ekipler\n\
	{D33257}» {FFFFFF}/Bilgiler\n\
	{D33257}» {FFFFFF}/Tecavuz\n\
	{D33257}» {FFFFFF}/Asoy\n\
	{D33257}» {FFFFFF}/Atamir\n\
	{D33257}» {FFFFFF}/Bombakur\n\
	{D33257}» {FFFFFF}/Aracsat\n\
	{D33257}» {FFFFFF}/Hlistesi\n\
	{D33258}» {FFFFFF}/Vipfiyat\n\
	{D33257}» {FFFFFF}/Vipcmds", "Kapat", "");
	return 1;
}

CMD:kurallar(playerid, params[])
{
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Kurallar",
	"{45FF89}Oyuncu Kurallarý:\n\n\
	{FF2E96}• {FFFFFF}Küfür, hakaret, argo, aþaðýlama vb. {FF7D45}(10 Dakika Susturma) (Gün içerisinde x4 küfür eden kiþiler sunucudan 1 gün uzaklaþtýrýlýr)\n\
	{FF2E96}• {FFFFFF}Meslektaþ zarar, suçlu polis iþbirliði {FF7D45}(300 Saniye Hapis)\n\
	{FF2E96}• {FFFFFF}Etkinlik bozmak {FF7D45}(1000 Saniye Hapis)\n\
	{FF2E96}• {FFFFFF}Dolandýrýcýlýk (Dolandýrdýðý miktar silinir) {FF7D45}(7 Gün Ban)\n\
	{FF2E96}• {FFFFFF}Ailevi küfür ve hakaret {FF7D45}(1 Gün Ban)\n\
	{FF2E96}• {FFFFFF}Flood, spam vb. {FF7D45}(Uyarý)\n\
	{FF2E96}• {FFFFFF}Tartýþma çýkarmak {FF7D45}(Tartýþmayý çýkaran / çýkaranlara 5 dakika susturma)\n\
	{FF2E96}• {FFFFFF}Oyun akýþýný etkiliyecek Cleo ve her türlü hile yazýlýmý {FF7D45}(7 Gün Ban) (Her seferinde ceza katlanýr)\n\
	{FF2E96}• {FFFFFF}Yönetimi kandýrmak {FF7D45}(Aðýrlýðýna göre 1 Gün ban)\n\
    {FF2E96}• {FFFFFF}Bug kullanýmý {FF7D45}(Eðer skor/exp/para buguysa bugla kazandýðý para/skor/exp silinir) ve sýnýrsýz ban\n\n\
    {FF2E96}• {FFFFFF}Spawn kill {FF7D45}(300 saniye hapis)\n\
    {FF2E96}• {FFFFFF}Sunucu Reklamý {FF7D45}Sýnýrsýz Ban (Reklam amacý gütmeden sunucu ismi verilirse kullanýcý ilk önce uyarýlýr devam ederse banlanýr)\n\
    {FF2E96}• {FFFFFF}Yetkililerden para istemek {FF7D45}Uyarý\n\
    {FF2E96}• {FFFFFF}Sunucu huzuru bozmak {FF7D45}1 - 3 gün Ban\n\
    {FF2E96}• {FFFFFF}Dini deðerlere saygýsýzlýk ve küfür etmek {FF7D45}7 gün ban\n\
    {FF2E96}• {FFFFFF}Gereksiz /sorusor, /report veya /isteksarki kullanmak {FF7D45}Uyarý cezasý devam ederse kick\n\
    {FF2E96}• {FFFFFF}Gereksiz Barikat kurmak {FF7D45}Düzenli oyuncu yetkisi alýnýr (Kalýcý olarak)\n\
    {FF2E96}• {FFFFFF}Yol ortasý veya Baþka evlerin önüne araç park etmek {FF7D45}Oyuncu sözlü uyarýlýr devamý halinde evi silinir\n\
	",
	"Kapat", "");
	return 1;
}

CMD:vipucret(playerid, params[]) return cmd_vipfiyat(playerid, "");
CMD:vipucreti(playerid, params[]) return cmd_vipfiyat(playerid, "");
CMD:vipbilgi(playerid, params[]) return cmd_vipfiyat(playerid, "");
CMD:vipfiyat(playerid, params[])
{
	cmd_bakiye(playerid);
	return 1;
}

CMD:adminfiyat(playerid, params[])
{
	cmd_bakiye(playerid);
	return 1;
}

CMD:komutlar(playerid, params[])
{
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    K_omutlar(playerid);
	return 1;
}

CMD:kill(playerid,params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Aranma seviyeniz varken kill çekemezsiniz.");
	SetPVarInt(playerid, "KillModu", 1);
	SetPlayerHealth(playerid,0);
	return 1;
}

FixTR(yazi[])
{
	for (new i, l = strlen(yazi); i != l; i++)
	{
	    switch(yazi[i])
	    {
			case 'ý': yazi[i] = 'i';
			case 'ð': yazi[i] = 'g';
			case 'ü': yazi[i] = 'u';
			case 'þ': yazi[i] = 's';
			case 'ö': yazi[i] = 'o';
			case 'ç': yazi[i] = 'c';
			case 'Ð': yazi[i] = 'G';
			case 'Ü': yazi[i] = 'U';
			case 'Þ': yazi[i] = 'S';
			case 'Ý': yazi[i] = 'I';
			case 'Ö': yazi[i] = 'Ö';
			case 'Ç': yazi[i] = 'C';
	    }
	}
	return 1;
}

CMD:ayarlar(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	new sz[550], kardess = GetPVarInt(playerid, "SaatAyari");
	switch(oyuncuData[playerid][pAdmin])
	{
	    case 0..2:
	    {
			format(sz, sizeof(sz), "{CD6B97}Ayar\t{CD6B97}Durum\n");
			format(sz, sizeof(sz), "%sPm Durumu\t%s\n", sz, (GetPVarInt(playerid, "PmDurum") == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
			format(sz, sizeof(sz), "%sGerçek Saat\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][realSaat] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
			format(sz, sizeof(sz), "%sSaat Ayarý\t{7A8AFF}%d\n", sz, kardess);
			format(sz, sizeof(sz), "%sKýyafet Durumu\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][kiyafetDurum] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
			format(sz, sizeof(sz), "%sÞifre Deðiþtir\t{7A8AFF}-\n", sz);
			format(sz, sizeof(sz), "%sTextDraw Durumu\t%s\n", sz, (oyuncuData[playerid][textAyar] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
            format(sz, sizeof(sz), "%sÇete Skin Kullanýmý\t%s\n", sz, (!oyuncuData[playerid][skinmode]) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
		}
	    case 3, 4, 5:
	    {
			format(sz, sizeof(sz), "{CD6B97}Ayar\t{CD6B97}Durum\n");
			format(sz, sizeof(sz), "%sPm Durumu\t%s\n", sz, (GetPVarInt(playerid, "PmDurum") == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
	        format(sz, sizeof(sz), "%sGerçek Saat\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][realSaat] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
			format(sz, sizeof(sz), "%sSaat Ayarý\t{7A8AFF}%d\n", sz, kardess);
		    format(sz, sizeof(sz), "%sKýyafet Durumu\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][kiyafetDurum] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
		    format(sz, sizeof(sz), "%sÞifre Deðiþtir\t{7A8AFF}-\n", sz);
	        format(sz, sizeof(sz), "%sTextDraw Durumu\t%s\n", sz, (oyuncuData[playerid][textAyar] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
	        format(sz, sizeof(sz), "%sÇete Skin Kullanýmý\t%s\n", sz, (!oyuncuData[playerid][skinmode]) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));

			format(sz, sizeof(sz), "%s\t\n\n", sz);
		    format(sz, sizeof(sz), "%sPm Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][pmGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sLocal Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][LocalGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sAraç Ýçi Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][ArGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sGruplarý Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][GrupGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sEkipleri Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][EkipGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	    }
	    default:
	    {
			format(sz, sizeof(sz), "{CD6B97}Ayar\t{CD6B97}Durum\n");
			format(sz, sizeof(sz), "%sPm Durumu\t%s\n", sz, (GetPVarInt(playerid, "PmDurum") == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
	        format(sz, sizeof(sz), "%sGerçek Saat\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][realSaat] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
			format(sz, sizeof(sz), "%sSaat Ayarý\t{7A8AFF}%d\n", sz, kardess);
		    format(sz, sizeof(sz), "%sKýyafet Durumu\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][kiyafetDurum] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
		    format(sz, sizeof(sz), "%sÞifre Deðiþtir\t{7A8AFF}-\n", sz);
	        format(sz, sizeof(sz), "%sTextDraw Durumu\t%s\n", sz, (oyuncuData[playerid][textAyar] == 0) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));
	        format(sz, sizeof(sz), "%sÇete Skin Kullanýmý\t%s\n", sz, (!oyuncuData[playerid][skinmode]) ? ("{53DF83}Açýk") : ("{D33257}Kapalý"));

			format(sz, sizeof(sz), "%s\t\n\n", sz);
		    format(sz, sizeof(sz), "%sPm Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][pmGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sLocal Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][LocalGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sAraç Ýçi Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][ArGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sGruplarý Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][GrupGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sEkipleri Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][EkipGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	        format(sz, sizeof(sz), "%sÇete Görme:\t{7A8AFF}%s\n", sz, (oyuncuData[playerid][ceteGorme] == 0) ? ("{D33257}Kapalý") : ("{53DF83}Açýk"));
	    }
	}
	ShowPlayerDialog(playerid, DIALOG_AYARLAR, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Ayarlar", sz, "Seç", "Kapat");
	return 1;
}

CMD:market(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ba[360];
	format(ba, sizeof(ba), "{92F22A}Silah\t{92F22A}Mermi\t{92F22A}Fiyat\n");
	for(new i = 0; i < sizeof(MarketIslem); i++)
	{
	    format(ba, sizeof(ba), "%s%s\t%d\t$%s\n", ba, MarketIslem[i][sIsmi], MarketIslem[i][smermi], convertNumber(MarketIslem[i][sfiyat]));
	}
	ShowPlayerDialog(playerid, DIALOG_MARKET, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Market", ba, "Satýn Al", "Kapat");
	return 1;
}

/*  {D33257}» {FFFFFF}Sunucu Yapýmýnda Emeði Geçenler\n\ */

CMD:yardim(playerid, paramss[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    ShowPlayerDialog(playerid, DIALOG_YARDIM, DIALOG_STYLE_LIST, "{FFFFFF}Yardým",
	"{D33257}» {FFFFFF}Sunucu Kurallarý\n\
	{D33257}» {FFFFFF}Sunucudaki Komutlara Nasýl Eriþebilirim ?\n\
	{D33257}» {FFFFFF}Polisler Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}Çevik Kuvvet Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}Özel Harekat Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}MIT Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}Sivil Polis Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}Özel Kuvvet Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}Hava Kuvvetleri Ne Ýþ Yapar Ve Komutlarý Nedir ?\n\
	{D33257}» {FFFFFF}Nasýl Grup Kurar Yada Katýlýrým ?\n\
	{D33257}» {FFFFFF}Nasýl Ekip Kurar Yada Katýlýrým ?\n\
	{D33257}» {FFFFFF}Nasýl Çete Kurar Yada Katýlýrým ?\n\
	{D33257}» {FFFFFF}Bir Ev Nasýl Satýn Alýr Veya Satýlýða Çýkartýrým ?\n\
	{D33257}» {FFFFFF}Vip Nasýl Satýn Alabilirim ?\n\
	{D33257}» {FFFFFF}Silah Nasýl Alabilirim ?\n\
	{D33257}» {FFFFFF}Bir Oyuncuya Nasýl Para Verebilirim ?\n\
	{D33257}» {FFFFFF}Sunucuda Çalan Bir Þarkýyý Nasýl Kapatýrým ?\n\
	{D33257}» {FFFFFF}Bir Oyuncuya Nasýl Özel Mesaj Atarým (PM)\n\
	{D33257}» {FFFFFF}Sadece Yakýnýmdaki Oyuncularla Nasýl Konuþabilirim (LOCAL)\n\
	{D33257}» {FFFFFF}Araç Ýçinden Nasýl Konuþabilirim ?\n\
	{D33257}» {FFFFFF}Top Para Ve Top Skora Nasýl Bakabilirim ?\n\
	{D33257}» {FFFFFF}Þifremi Nasýl Deðiþtirebilirim ?\n\
	{D33257}» {FFFFFF}Exp Ne Ýþe Yarar ?\n\
	{D33257}» {FFFFFF}Yetenek Puaný Nedir ?\n\
	{D33257}» {FFFFFF}Baþarý Kasmak Ne Ýþe Yarar ?\n\
	{D33257}» {FFFFFF}Normal Araç Ve Özel Araç Nasýl Alabilirim ?\n\
	{D33257}» {FFFFFF}Satýn Aldýðým Kýyafetleri Nasýl Açýp Kapatabilirim ?\n", "Kapat", "");
	return 1;
}

CMD:basarim(playerid, params[]) return cmd_basarilar(playerid, "");
CMD:basari(playerid, params[]) return cmd_basarilar(playerid, "");
CMD:basarilarim(playerid, params[]) return cmd_basarilar(playerid, "");
CMD:basarilar(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	new bx[1045];
	format(bx, sizeof(bx), "%s\n", (BasariIslem[playerid][ilkGiris] == 1) ? ("{00FF00}Servere Ýlk Giriþ") : ("{A9A9A9}Servere Ýlk Giriþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkMesaj] == 1) ? ("{00FF00}Ýlk Mesajýný Yaz") : ("{A9A9A9}Ýlk Mesajýný Yaz"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkOldurme] == 1) ? ("{00FF00}Ýlk Öldürmeni Yap") : ("{A9A9A9}Ýlk Öldürmeni Yap"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkSoygun] == 1) ? ("{00FF00}Ýlk Soygunu Gerçekleþtir") : ("{A9A9A9}Ýlk Soygunu Gerçekleþtir"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkPolis] == 1) ? ("{00FF00}Ýlk Kez Polis Ol") : ("{A9A9A9}Ýlk Kez Polis Ol"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkCevikKuvvet] == 1) ? ("{00FF00}Ýlk Kez Çevik Kuvvet Ol") : ("{A9A9A9}Ýlk Kez Çevik Kuvvet Ol"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkOzelHarekat] == 1) ? ("{00FF00}Ýlk Kez Özel Harekat Ol") : ("{A9A9A9}Ýlk Kez Özel Harekat Ol"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilksPolis] == 1) ? ("{00FF00}Ýlk Kez Sivil Polis Ol") : ("{A9A9A9}Ýlk Kez Sivil Polis Ol"));
	format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkozelK] == 1) ? ("{00FF00}Ýlk Kez Özel Kuvvet Birliðine Katýl") : ("{A9A9A9}Ýlk Kez Özel Kuvvet Birliðine Katýl"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkHavaKuvvet] == 1) ? ("{00FF00}Ýlk Kez Hava Kuvvetlerine Katýl") : ("{A9A9A9}Ýlk Kez Hava Kuvvetlerine Katýl"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkSucluYa] == 1) ? ("{00FF00}Ýlk Suçlunu Yakala") : ("{A9A9A9}Ýlk Suçlunu Yakala"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkEv] == 1) ? ("{00FF00}Bir Ev Satýn Al") : ("{A9A9A9}Bir Ev Satýn Al"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkSafir] == 1) ? ("{00FF00}Safir Vip Satýn Al") : ("{A9A9A9}Safir Vip Satýn Al"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkYakut] == 1) ? ("{00FF00}Yakut Vip Satýn Al") : ("{A9A9A9}Yakut Vip Satýn Al"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkZumrut] == 1) ? ("{00FF00}Zümrüt Vip Satýn Al") : ("{A9A9A9}Zümrüt Vip Satýn Al"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkElmas] == 1) ? ("{00FF00}Elmas Vip Satýn Al") : ("{A9A9A9}Elmas Vip Satýn Al"));
	format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkoYuz] == 1) ? ("{00FF00}100 Oyuncu Öldür") : ("{A9A9A9}100 Oyuncu Öldür"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkoBesyuz] == 1) ? ("{00FF00}500 Oyuncu Öldür") : ("{A9A9A9}500 Oyuncu Öldür"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkoBin] == 1) ? ("{00FF00}1000 Oyuncu Öldür") : ("{A9A9A9}1000 Oyuncu Öldür"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkoBesBin] == 1) ? ("{00FF00}5000 Oyuncu Öldür") : ("{A9A9A9}5000 Oyuncu Öldür"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkoOnBin] == 1) ? ("{00FF00}10000 Oyuncu Öldür") : ("{A9A9A9}10000 Oyuncu Öldür"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkYuzSoygun] == 1) ? ("{00FF00}100 Soyguna Ulaþ") : ("{A9A9A9}100 Soyguna Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkikiyuzElli] == 1) ? ("{00FF00}250 Soyguna Ulaþ") : ("{A9A9A9}250 Soyguna Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilksBesyuz] == 1) ? ("{00FF00}500 Soyguna Ulaþ") : ("{A9A9A9}500 Soyguna Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilksBesbin] == 1) ? ("{00FF00}5000 Soyguna Ulaþ") : ("{A9A9A9}5000 Soyguna Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilksOnBin] == 1) ? ("{00FF00}10000 Soyguna Ulaþ") : ("{A9A9A9}10000 Soyguna Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkYirmiBinSkor] == 1) ? ("{00FF00}20000 Skora Ulaþ") : ("{A9A9A9}20000 Skora Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkOtuzBinSkor] == 1) ? ("{00FF00}30000 Skora Ulaþ") : ("{A9A9A9}30000 Skora Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n", bx, (BasariIslem[playerid][ilkDortBinSkor] == 1) ? ("{00FF00}40000 Skora Ulaþ") : ("{A9A9A9}40000 Skora Ulaþ"));
    format(bx, sizeof(bx), "%s%s\n\n", bx, (BasariIslem[playerid][ilkElliBinSkor] == 1) ? ("{00FF00}50000 Skora Ulaþ") : ("{A9A9A9}50000 Skora Ulaþ"));
    format(bx, sizeof(bx), "%s%s{00FF00}Yeþil renkli {FFFFFF}yazýlar tamamlanmýþ,\n", bx);
    format(bx, sizeof(bx), "%s%s{A9A9A9}Gri renkli {FFFFFF}yazýlar tamamlanmamýþ\n", bx);
	format(bx, sizeof(bx), "%s{FFFFFF}baþarýlardýr. Toplam baþarýnýz: (%d/31)\n", bx, BasariIslem[playerid][BasariSayisi]);
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Baþarýlar", bx, "Kapat", "");
	return 1;
}

CMD:kiyafet(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bu komutu kullanamazsýn.");
    kiyafetMenu(playerid);
	return 1;
}

CMD:yetenek(playerid, params[]) return cmd_yetenekler(playerid, "");
CMD:yetenekler(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    yetenekMenu(playerid);
	return 1;
}

CMD:kurucu(playerid, params[]) return cmd_credits(playerid, "");
CMD:kurucular(playerid, params[]) return cmd_credits(playerid, "");
CMD:yapimci(playerid, params[]) return cmd_credits(playerid, "");
CMD:yapimcilar(playerid, params[]) return cmd_credits(playerid, "");
CMD:credits(playerid, params[])
{
	new ww[400];
	format(ww, sizeof(ww), "{FFFFFF}Sunucu Sahipleri:\t\t{E01931}NexoR - TakaReis\n");
	format(ww, sizeof(ww), "%s{FFFFFF}Mod Kodlayýcýsý:\t\t{9E9D9B}NexoR ( Burak )\n", ww);
	format(ww, sizeof(ww), "%s{FFFFFF}Map Tasarlayýcý:\t\t{97CE68}RaxaSs | Gorkem. | ServerBey. | Neberius\n", ww);
	format(ww, sizeof(ww), "%s{FFFFFF}Sunucu Sürümü:\t\t{B0A4BE}v1.5 ( Stabil )\n", ww);
	format(ww, sizeof(ww), "%s{FFFFFF}Web Site:\t\t\t{FC575E}www.AnadoluHp.com\n", ww);
	format(ww, sizeof(ww), "%s{FFFFFF}Kuruluþ Tarihi:\t\t\t{3498DB}16.04.2017\n", ww);
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{F07818}Anadolu HP - Yapýmcýlar", ww, "Kapat", "");
	return 1;
}

CMD:duello(playerid, params[])
{
    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bu komutu kullanamazsýn.");
	if(GetPlayerScore(playerid) < 1000) return hataMesaji(playerid, "Artýk 1000 skorunuz olmadan düello yapamazsýnýz.");
    if(SureYasagi(playerid, "DuelloBekle", 180)) return 1;
	DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;DuelloIslem[playerid][dHarita] = 0;
	DuelloIslem[playerid][dP] = 0;DuelloIslem[playerid][dSilah][0] = 0;DuelloIslem[playerid][dSilah][1] = 0;
	DuelloSayi[playerid] = 0; DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
    ShowPlayerDialog(playerid, DIALOG_DKUR, DIALOG_STYLE_LIST, "Düello", "» Düello Kur\n", "Devam", "Kapat");
	return 1;
}

CMD:bolgeler(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] != OZEL_HAREKAT_TIMI) return hataMesaji(playerid, "Bu komutu sadece Özel Harekat mesleðindeki kiþiler kullanabilir.");
	if(GetPVarInt(playerid, "MitKomut") <= 0) return hataMesaji(playerid, "Bu komutu sadece Özel Harekat bölgesinde kullanabilirsin.");
    ShowPlayerDialog(playerid, DIALOG_BOLGELER, DIALOG_STYLE_LIST, "{FFFFFF}Bölgeler", "{92F22A}» Volkswagen Oto Galeri\n{92F22A}» Banka Meydaný\n{92F22A}» Hastane Bölgesi\n{92F22A}» Gym\n{92F22A}» Jizzy", "Iþýnlan", "Kapat");
	return 1;
}

CMD:apanel(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new aid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan bu menüye ulaþamazsýn.");
	if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü olmalýsýn.");
    if(!oaIslem[aid][oaCheck] && !AraclarIslem[aid][aAktif]) return hataMesaji(playerid, "Sokak araçlarýnýn araç panel özelliði bulanmaz !");
	ShowPlayerDialog(playerid, aPANEL_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Araç Paneli", "» Araç Renklerini Deðiþtir (Rastgele)\n» Aracý Kilitle\n» Aracýn Kilitini Aç\n» Plaka Belirle (Normal Araç)\n» Aracý Sat (Normal Alýnmýþ Araç)\n» Aracý Sat (Özel Alýnmýþ Araç)\n", "Seç", "Kapat");
	return 1;
}

CMD:kumar(playerid)
{
    if(!kumarda[playerid]) return hataMesaji(playerid, "Bu komutu sadece kumarhanede kullanabilirsiniz.");
	if(aranmaSeviyesii[playerid] != 0) return hataMesaji(playerid, "Bu komutu sadece siviller kullanabilir.");
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken bu komutu kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken bu komutu kullanamazsýn.");
	if(oIslem[playerid][dondurulmus] == 1) return hataMesaji(playerid, "Dondurulmuþken bu komutu kullanamazsýn.");
    if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken bu komutu kullanamazsýn.");
    if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken bu komutu kullanamazsýn.");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araçtayken, bu komutu kullanamazsýn.");
    ShowPlayerDialog(playerid, KUMAR_MENU1, DIALOG_STYLE_TABLIST_HEADERS, "Kumarhane",
	"{7A8AFF}Mod\t{7A8AFF}Ýþlev\n\
	» SinglePair\tTek / Çift\n\
	» SupremeNumber\tEn Yüksek Zar Deðeri\n\
	",
	 "Devam", "Kapat");
	return 1;
}

CMD:aracgetir(playerid, params[])
{
	if(kumarda[playerid]) return hataMesaji(playerid, "Kumarhanede bu komutu kullanamazsýn.");
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return hataMesaji(playerid, "Bir interior veya farklý bir bölüm içinde olduðunuz için araç getiremezsiniz.");
	if(oIslem[playerid][dondurulmus] == 1) return hataMesaji(playerid, "Dondurulmuþken araç getiremezsin.");
    if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken araç getiremezsin.");
    if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken araç getiremezsin.");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araçtayken, bu komutu kullanamazsýn.");
    if(GetPVarInt(playerid, "BankaGirdi") == 1) return hataMesaji(playerid, "Bankaya araç park edemezsin !");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý olan bölgelerde araç getirilemez !");
	return 1;}}
	if(SavasIslem[playerid][CeteSavasBolgedemi] == 1) return hataMesaji(playerid, "Çete savaþ bölgelerinde araç getiremezsin.");
	ShowPlayerDialog(playerid, ARAC_GETIR, DIALOG_STYLE_LIST, "{FFFFFF}Araç Getirme", "{1DABB8}» {FFFFFF}Normal Araçlardan Getir\n{1DABB8}» {FFFFFF}Özel Araçlardan Getir", "Seç", "Kapat");
	return 1;
}

CMD:park(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan özel bir araç satamazýn.");
	if(GetPlayerInterior(playerid) != 0) return hataMesaji(playerid, "Farklý bir interiorda aracýný park edemezsin.");
    if(GetPlayerVirtualWorld(playerid) != 0) return hataMesaji(playerid, "Farklý bir virtual da aracýný park edemezsin.");
	if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü olmalýsýn.");
	if(GetPVarInt(playerid, "BankaGirdi") == 1) return hataMesaji(playerid, "Bankaya araç park edemezsin !");
	if(GetPVarInt(playerid, "BankaOnunde") == 1) return hataMesaji(playerid, "Banka yakýnlarýna araç park edemezsin !");
    new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý olan bölgelerde araç park edilemez !");
	return 1;}}
	new aid = GetPlayerVehicleID(playerid);
	if(CeteArac[aid][ceteAracAktif]) return hataMesaji(playerid, "Bu araç çete aracý. /cPark yazarak park edebilirsin.");
	if(oaIslem[aid][oaCheck])
	{
	    if(strcmp(oaIslem[aid][oaSahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
		new Float: tmp_F[4], tmp_SQL, Float: tmp_Can, nwArac, query[100], z, r, buff[48];
		r = GetVehicleModel(aid);
		GetVehiclePos(aid, tmp_F[0], tmp_F[1], tmp_F[2]);
		GetVehicleZAngle(aid, tmp_F[3]);
		oaIslem[aid][oaCheck] = false;
		tmp_SQL = oaIslem[aid][sql_id];
		oaIslem[aid][sql_id] = 0;
		format(oaIslem[aid][oaSahip], MAX_PLAYER_NAME, "-");
		oaIslem[aid][oaPos][0] = 0.0;
		oaIslem[aid][oaPos][1] = 0.0;
		oaIslem[aid][oaPos][2] = 0.0;
		oaIslem[aid][oaPos][3] = 0.0;
		GetVehicleHealth(aid, tmp_Can);
  		for(new i = 0; i < OZEL_ARAC_SLOT; i++)
	    {
	    	if(OzelAracim[playerid][i] == aid)
			{
			    z = i;
			    OzelAracim[playerid][i] = 0;
			    break;
			}
		}
		OzelAracObjeTemizle(aid);
		DestroyVehicle(aid);
		nwArac = CreateVehicle(r, tmp_F[0], tmp_F[1], tmp_F[2], tmp_F[3], -1, -1, 999999);
		oaIslem[nwArac][oaCheck] = true;
		oaIslem[nwArac][sql_id] = tmp_SQL;
		format(oaIslem[nwArac][oaSahip], MAX_PLAYER_NAME, getName(playerid));
		oaIslem[nwArac][oaPos][0] = tmp_F[0];
		oaIslem[nwArac][oaPos][1] = tmp_F[1];
		oaIslem[nwArac][oaPos][2] = tmp_F[2];
		oaIslem[nwArac][oaPos][3] = tmp_F[3];
		/*
		switch(r)
        {
            case 411: OzelAracInfernus1(nwArac);
            case 487: OzelAracMaverick(nwArac);
            case 560: OzelAracSultan(nwArac);
            case 578: OzelAracDFT30(nwArac);
        }*/
        AracaObjeVer(nwArac);
        PutPlayerInVehicle(playerid, nwArac, 0);
        OzelAracim[playerid][z] = nwArac;
        format(buff, sizeof(buff), "%.2f|%.2f|%.2f|%.2f|", tmp_F[0], tmp_F[1], tmp_F[2], tmp_F[3]);
        SendClientMessage(playerid, 0x00FF00FF, "Araç: {FFFFFF}Özel Aracýnýz park edildi.");
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `ozelarac` SET `pos` = '%s' WHERE `id` = '%d'", buff, tmp_SQL);
		mysql_tquery(g_SQL, query);
		return 1;
	}
	if(!AraclarIslem[aid][aAktif]) return hataMesaji(playerid, "Bu araçlar sokak aracý, park edemezsin !");
 	if(AraclarIslem[aid][aAktif])
 	{
 	    if(evim[playerid] == -1) return hataMesaji(playerid, "Araç park etmek için normal evden alýnmýþ bir aracýn olmasý gerekir.");
		if(strcmp(AraclarIslem[aid][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
 	    new Float: tmpPoss[4], tmp_re[2], tmp_pjob, tmp_parca[17], tmp_SQL, Float: tmp_Can, nwModel = GetVehicleModel(aid), nwArac, bid, query[100], plakaTmp[11];
		if(strlen(AraclarIslem[aid][n_Plaka]) >= 1){
		format(plakaTmp, 10, AraclarIslem[aid][n_Plaka]);
		format(AraclarIslem[aid][n_Plaka], 11, "");}
		GetVehicleHealth(aid, tmp_Can);
		GetVehiclePos(aid, tmpPoss[0], tmpPoss[1], tmpPoss[2]);
		GetVehicleZAngle(aid, tmpPoss[3]);
		tmp_re[0] = AraclarIslem[aid][a_Renk][0];
		tmp_re[1] = AraclarIslem[aid][a_Renk][1];
		tmp_pjob = AraclarIslem[aid][pJob];
		for(new i = 0; i < 17; i++) tmp_parca[i] = AraclarIslem[aid][a_mParca][i];
		tmp_SQL = AraclarIslem[aid][aSQL];
		aracSill(playerid, aid);
		format(AraclarIslem[aid][a_Sahip], 24, "");
		AraclarIslem[aid][aAktif] = false;
		AraclarIslem[aid][aSQL] = -1;
		DestroyVehicle(aid);
		nwArac = CreateVehicle(nwModel, tmpPoss[0], tmpPoss[1], tmpPoss[2], tmpPoss[3], tmp_re[0], tmp_re[1], 999999);
		if(strlen(plakaTmp) >= 1)
		{
		    format(AraclarIslem[nwArac][n_Plaka], 10, plakaTmp);
		    SetVehicleNumberPlate(nwArac, AraclarIslem[nwArac][n_Plaka]);
		}
		format(AraclarIslem[nwArac][a_Sahip], 24, getName(playerid));
		AraclarIslem[nwArac][a_Pos][0] = tmpPoss[0];
		AraclarIslem[nwArac][a_Pos][1] = tmpPoss[1];
		AraclarIslem[nwArac][a_Pos][2] = tmpPoss[2];
		AraclarIslem[nwArac][a_Pos][3] = tmpPoss[3];
		AraclarIslem[nwArac][a_Renk][0] = tmp_re[0];
		AraclarIslem[nwArac][a_Renk][1] = tmp_re[1];
		AraclarIslem[nwArac][pJob] = tmp_pjob;
		for(new i = 0; i < 17; i++) AraclarIslem[nwArac][a_mParca][i] = tmp_parca[i];
		AraclarIslem[nwArac][aAktif] = true;
		AraclarIslem[nwArac][aSQL] = tmp_SQL;
		SetVehicleHealth(nwArac, tmp_Can);
  		if(AraclarIslem[nwArac][pJob] != 0) ChangeVehiclePaintjob(nwArac, AraclarIslem[nwArac][pJob] - 1);
        ChangeVehicleColor(nwArac, AraclarIslem[nwArac][a_Renk][0], AraclarIslem[nwArac][a_Renk][1]);
        for(new i = 0; i < 17; ++i) if(AraclarIslem[nwArac][a_mParca][i] != 0) AddVehicleComponent(nwArac, AraclarIslem[nwArac][a_mParca][i]);
		PutPlayerInVehicle(playerid, nwArac, 0);
		SendClientMessage(playerid, 0x00FF00FF, "Araç: {FFFFFF}Aracýnýz park edildi.");
		bid = aracKontrolu(playerid);
		aracSlotu[playerid][bid] = nwArac;
	  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aX` = '%f' WHERE `nid` = '%d' LIMIT 1", tmpPoss[0], tmp_SQL);
		mysql_tquery(g_SQL, query);
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aY` = '%f' WHERE `nid` = '%d' LIMIT 1", tmpPoss[1], tmp_SQL);
		mysql_tquery(g_SQL, query);
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aZ` = '%f' WHERE `nid` = '%d' LIMIT 1", tmpPoss[2], tmp_SQL);
		mysql_tquery(g_SQL, query);
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aA` = '%f' WHERE `nid` = '%d' LIMIT 1", tmpPoss[3], tmp_SQL);
		mysql_tquery(g_SQL, query);
 	}
	return 1;
}

CMD:anahtarver(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
 	new a = GetPlayerVehicleID(playerid), ID, b[71 + MAX_PLAYER_NAME + 3];
 	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracýn anahtarlarýný vermek için sürücü olmalýsýn.");
    if(oaIslem[a][oaCheck])
    {
		if(strcmp(oaIslem[a][oaSahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
		if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/AnahtarVer (Oyuncu ID)");
	 	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID sunucuda yok !");
	 	if(playerid == ID) return hataMesaji(playerid, "Bu aracýn sahibi zaten sensin.");
	 	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Anahtar vermek istediðin oyuncu yakýnýnda deðil.");
	 	if(Anahtar[ID] == a) return hataMesaji(playerid, "Bu oyuncuda arabanýn anahtarý bulunuyor.");
		Anahtar[ID] = a;
		format(b, sizeof(b), "[ANAHTAR] {FFFFFF}Oyuncu %s(%d), size aracýnýn anahtarýný verdi.", getName(playerid), playerid);
		SendClientMessage(ID, 0x1FF031FF, b);
	 	format(b, sizeof(b), "[ANAHTAR] {FFFFFF}Oyuncu %s(%d), aracýn anahtarýný verdiniz.", getName(ID), ID);
		SendClientMessage(playerid, 0x1FF031FF, b);
		return 1;
	}
	if(!AraclarIslem[a][aAktif]) return hataMesaji(playerid, "Bu araçlar sokak aracý, anahtar veremezsin !");
	if(AraclarIslem[a][aAktif])
	{
	    if(strcmp(AraclarIslem[a][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
	}
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/AnahtarVer (Oyuncu ID)");
 	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID sunucuda yok !");
 	if(playerid == ID) return hataMesaji(playerid, "Bu aracýn sahibi zaten sensin.");
 	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Anahtar vermek istediðin oyuncu yakýnýnda deðil.");
 	if(Anahtar[ID] == a) return hataMesaji(playerid, "Bu oyuncuda arabanýn anahtarý bulunuyor.");
	Anahtar[ID] = a;
	format(b, sizeof(b), "[ANAHTAR] {FFFFFF}Oyuncu %s(%d), size aracýnýn anahtarýný verdi.", getName(playerid), playerid);
	SendClientMessage(ID, 0x1FF031FF, b);
 	format(b, sizeof(b), "[ANAHTAR] {FFFFFF}Oyuncu %s(%d), aracýn anahtarýný verdiniz.", getName(ID), ID);
	SendClientMessage(playerid, 0x1FF031FF, b);
	return 1;
}

CMD:anahtaral(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new a = GetPlayerVehicleID(playerid), ID, b[71 + MAX_PLAYER_NAME + 3];
 	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bir oyuncudan araç anahtarlarýný almak için sürücü olmalýsýn.");
 	if(sscanf(params, "u", ID)) return hataMesaji(playerid, "[BILGI] {FFFFFF}/AnahtarAl (Oyuncu ID)");
 	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID sunucuda yok !");
 	if(playerid == ID) return hataMesaji(playerid, "Bu aracýn sahibi zaten sensin.");
 	if(Anahtar[ID] == -1) return hataMesaji(playerid, "Bu oyuncuda arabanýn anahtarý bulunmuyor.");
 	if(Anahtar[ID] != a) return hataMesaji(playerid, "Bu oyuncuda arabanýn anahtarý bulunmuyor. Baþka bir oyuncunun anahtarýný kullanýyor.");
	Anahtar[ID] = -1;
	format(b, sizeof(b), "[ANAHTAR] {FFFFFF}Oyuncu %s(%d), sizden aracýn anahtarlarýný aldý.", getName(playerid), playerid);
	SendClientMessage(ID, 0x1FF031FF, b);
 	format(b, sizeof(b), "[ANAHTAR] {FFFFFF}Oyuncu %s(%d), aracýn anahtarlarýný aldýnýz.", getName(ID), ID);
	SendClientMessage(playerid, 0x1FF031FF, b);
	return 1;
}

CMD:eroinic(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(GetPVarInt(playerid, "EroinDurum") >= 1) return hataMesaji(playerid, "Daha önce eroin içmiþsin, tekrar eroin içemezsin !");
	if(GetPVarInt(playerid, "OtDurum") >= 1) return hataMesaji(playerid, "Daha önce ot içmiþsin, tekrar eroin içemezsin !");
    if(GetPVarInt(playerid, "BonzaiDurum") >= 1) return hataMesaji(playerid, "Daha önce bonzai içmiþsin, tekrar eroin içemezsin !");
    if(Eroinq[playerid] <= 0) return hataMesaji(playerid, "Bir eroinin bulunmuyor, uyuþturucu satýcýlarýndan satýn alabilirsin.");
    if(aDondurma[playerid] == 1) return hataMesaji(playerid, "Admin tarafýndan dondurulmuþken eroin içemezsin !");
    if(SureYasagi(playerid, "EroinYasak", 180)) return 1;
    Skorver(playerid, 2);
    Eroinq[playerid] -= 1;
	SetPVarInt(playerid, "EroinDurum", 1);
    SetPVarInt(playerid, "EroinIctim", GetTickCount() + 180 * 1000);
    SetPlayerDrunkLevel(playerid, 25000);
    GameTextForPlayer(playerid, "~g~~h~~h~+2 Skor", 2100, 4);
    SendClientMessage(playerid, 0xDED7E6FF, "Þuan eroin'in etkisindesiniz, 2 dakika içinde eroin etkisi geçecek.");
	if(oyuncuData[playerid][pVip] >= 1)
    {
        Skorver(playerid, 1);
        if(oyuncuData[playerid][pAdmin] <= 0)
        {
            new ax[112+24];
        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her içtiði eroin`den +1 skor kazanýyor.", getName(playerid), playerid);
			SendClientMessageToAll(-1, ax);
		}
	}
	return 1;
}

CMD:otic(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(GetPVarInt(playerid, "EroinDurum") <= 0 && GetPVarInt(playerid, "BonzaiDurum") <= 0) return hataMesaji(playerid, "Eroin yada bonzai içmeden, ot içemezsin !");
	if(GetPVarInt(playerid, "OtDurum") >= 1) return hataMesaji(playerid, "Daha önce ot içmiþsin, tekrar ot içemezsin !");
    if(Otq[playerid] <= 19) return hataMesaji(playerid, "Bir otun bulunmuyor, uyuþturucu satýcýlarýndan satýn alabilirsin.");
    if(aDondurma[playerid] == 1) return hataMesaji(playerid, "Admin tarafýndan dondurulmuþken ot içemezsin !");
	new limitt;
	if(sscanf(params, "i", limitt)) return aBilgi(playerid, "/OtIc (Gram)");
	if(limitt <= 19) return hataMesaji(playerid, "Otu 19 gram veya altýnda giremezsin !");
	if(limitt == 20)
	{
	    if(SureYasagi(playerid, "OtYasagi", 10)) return 1;
	    Skorver(playerid, 1);
	    Otq[playerid] -= 20;
		SetPVarInt(playerid, "OtDurum", 1);
	    SetPVarInt(playerid, "OtIctim", GetTickCount() + 10 * 1000);
	    SetPlayerDrunkLevel(playerid, 4000);
	    GameTextForPlayer(playerid, "~g~~h~~h~+1 Skor", 2100, 4);
	    SendClientMessage(playerid, 0xDED7E6FF, "Þuan ot etkisindesiniz, 10 saniye içinde ot etkisi geçecek.");
     	if(oyuncuData[playerid][pVip] >= 1)
	    {
	        Skorver(playerid, 1);
	        if(oyuncuData[playerid][pAdmin] <= 0)
	        {
	            new ax[112+24];
	        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her içtiði ot`dan +1 skor kazanýyor.", getName(playerid), playerid);
				SendClientMessageToAll(-1, ax);
			}
		}
	}
	else
	{
	    hataMesaji(playerid, "Ot gramajýný sadece 20 girebilirsin.");
	}
	return 1;
}

CMD:bonzaiic(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(GetPVarInt(playerid, "EroinDurum") >= 1) return hataMesaji(playerid, "Daha önce eroin içmiþsin, bonzai içemezsin !");
	if(GetPVarInt(playerid, "OtDurum") >= 1) return hataMesaji(playerid, "Daha önce ot içmiþsin, bonzai içemezsin !");
    if(GetPVarInt(playerid, "BonzaiDurum") >= 1) return hataMesaji(playerid, "Daha önce bonzai içmiþsin, etkisinin bitmesini bekle !");
	if(Bonzaiq[playerid] <= 0) return hataMesaji(playerid, "Bir bonzain bulunmuyor, uyuþturucu satýcýlarýndan satýn alabilirsin.");
    if(aDondurma[playerid] == 1) return hataMesaji(playerid, "Admin tarafýndan dondurulmuþken bonzai içemezsin !");
    if(SureYasagi(playerid, "BonzaiYasagi", 180)) return 1;
    Skorver(playerid, 3);
    Bonzaiq[playerid] -= 1;
	SetPVarInt(playerid, "BonzaiDurum", 1);
    SetPVarInt(playerid, "BonzaiIctim", GetTickCount() + 180 * 1000);
    SetPlayerDrunkLevel(playerid, 50000);
    GameTextForPlayer(playerid, "~g~~h~~h~+3 Skor", 2100, 4);
    SendClientMessage(playerid, 0xDED7E6FF, "Þuan bonzai etkisindesiniz, 2 dakika içinde bonzai etkisi geçecek.");
	if(oyuncuData[playerid][pVip] >= 1)
    {
        Skorver(playerid, 1);
        if(oyuncuData[playerid][pAdmin] <= 0)
        {
            new ax[112+24];
        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her içtiði bonzai`den +1 skor kazanýyor.", getName(playerid), playerid);
			SendClientMessageToAll(-1, ax);
		}
	}
	return 1;
}

stock saveLan(playerid)
{
    if(oyuncuData[playerid][GirisKontrol] == true)
    {
	    new query[85 + 11];

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `adonline` = %d WHERE `id` = %d", oyuncuData[playerid][gunlukonline], oyuncuData[playerid][xID]);
		mysql_tquery(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `adafkonline` = %d WHERE `id` = %d", oyuncuData[playerid][gunlukonlineafk], oyuncuData[playerid][xID]);
		mysql_tquery(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `akomuts` = %d WHERE `id` = %d", oyuncuData[playerid][adminkomuts], oyuncuData[playerid][xID]);
		mysql_tquery(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `yanits` = %d WHERE `id` = %d", oyuncuData[playerid][yanits], oyuncuData[playerid][xID]);
		mysql_tquery(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `dsarki` = %d WHERE `id` = %d", oyuncuData[playerid][dsarki], oyuncuData[playerid][xID]);
		mysql_tquery(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `dmkapat` = %d WHERE `id` = %d", oyuncuData[playerid][dmkapat], oyuncuData[playerid][xID]);
		mysql_tquery(g_SQL, query);
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch (dialogid)
	{
		case CETE_DOST_MENU:
		{
		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
					{
					    new c = PlayerCete[playerid];
         				if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Dost çete eklemek için Çete sahiplerinden biri olmalýsýn.");
						    return 1;
						}
						ShowPlayerDialog(playerid, CETE_DOST_EKLE, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Ekleme", "{FFFFFF}Dost eklemek istediðiniz çetenin ID numarasýný girin.", "Ekle", "Geri");
		            }
		            case 1:
					{
					    new c = PlayerCete[playerid];
         				if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Dost çete silmek için Çete sahiplerinden biri olmalýsýn.");
						    return 1;
						}
						ShowPlayerDialog(playerid, CETE_DOST_SIL, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Silme", "{FFFFFF}Silmek istediðiniz çetenin ID numarasýný girin.", "Sil", "Geri");
		            }
		            default: CeteDostt(playerid);
		        }
		    }
		}
		case CETE_DOST_EKLE:
		{
		    if(!response) return CeteDostt(playerid);
		    if(response)
		    {
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_DOST_EKLE, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Ekleme", "{FFFFFF}Ekraný boþ býrakmayýn !\n\nDost eklemek istediðiniz çetenin ID numarasýný girin.", "Ekle", "Geri");
				new id = strval(inputtext), c = PlayerCete[playerid], SahipCz[4];
				if(!Iter_Contains(Ceteler, id)) return ShowPlayerDialog(playerid, CETE_DOST_EKLE, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Ekleme", "{FFFFFF}Geçersiz çete ID numarasý !\n\nDost eklemek istediðiniz çetenin ID numarasýný girin.", "Ekle", "Geri");
				if(id == c) return ShowPlayerDialog(playerid, CETE_DOST_EKLE, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Ekleme", "{FFFFFF}Kendi çetenizi ekleyemezsiniz !\n\nDost eklemek istediðiniz çetenin ID numarasýný girin.", "Ekle", "Geri");
                if(Iterator_Bul(DostCete[c], id)) return ShowPlayerDialog(playerid, CETE_DOST_EKLE, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Ekleme", "{FFFFFF}Bu çeteyi zaten dost çete listesine eklemiþsiniz !\n\nDost eklemek istediðiniz çetenin ID numarasýný girin.", "Ekle", "Geri");

                SahipCz[0] = GetPlayerID(CeteIslem[id][cSahip1]);
                SahipCz[1] = GetPlayerID(CeteIslem[id][cSahip2]);
                SahipCz[2] = GetPlayerID(CeteIslem[id][cSahip3]);
                SahipCz[3] = GetPlayerID(CeteIslem[id][cSahip4]);
                
                if(SahipCz[0] != INVALID_PLAYER_ID) SCM_Ex(SahipCz[0], 0xFBC531FF, "[!] {FFFFFF}%s çetesi sizinle dost çete olmak istiyor. Kabul etmek için /cdKabul %d yazýn.", CeteIslem[c][ceteIsmi], c);
                if(SahipCz[1] != INVALID_PLAYER_ID) SCM_Ex(SahipCz[1], 0xFBC531FF, "[!] {FFFFFF}%s çetesi sizinle dost çete olmak istiyor. Kabul etmek için /cdKabul %d yazýn.", CeteIslem[c][ceteIsmi], c);
                if(SahipCz[2] != INVALID_PLAYER_ID) SCM_Ex(SahipCz[2], 0xFBC531FF, "[!] {FFFFFF}%s çetesi sizinle dost çete olmak istiyor. Kabul etmek için /cdKabul %d yazýn.", CeteIslem[c][ceteIsmi], c);
                if(SahipCz[3] != INVALID_PLAYER_ID) SCM_Ex(SahipCz[3], 0xFBC531FF, "[!] {FFFFFF}%s çetesi sizinle dost çete olmak istiyor. Kabul etmek için /cdKabul %d yazýn.", CeteIslem[c][ceteIsmi], c);

				CeteIslem[c][ceteDostTemp] = id;
				CeteIslem[id][ceteDostTemp] = c;
                SCM_Ex(playerid, 0xFBC531FF, "[!] {FFFFFF}%s çetesinin sahiplerine isteðiniz gönderildi. Onaylanýnca bilgilendirileceksiniz.", CeteIslem[id][ceteIsmi]);
			}
		}
		case CETE_DOST_SIL:
		{
		    if(!response) return CeteDostt(playerid);
		    if(response)
		    {
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_DOST_SIL, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Silme", "{FFFFFF}Ekraný boþ býrakmayýn !\n\nSilmek istediðiniz çetenin ID numarasýný girin.", "Sil", "Geri");
				new id = strval(inputtext), c = PlayerCete[playerid];
				if(!Iter_Contains(Ceteler, id)) return ShowPlayerDialog(playerid, CETE_DOST_SIL, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Silme", "{FFFFFF}Böyle bir çete ID numarasý yok !\n\n{FFFFFF}Silmek istediðiniz çetenin ID numarasýný girin.", "Sil", "Geri");
				if(id == c) return ShowPlayerDialog(playerid, CETE_DOST_SIL, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Silme", "{FFFFFF}Kendi çetende bu iþlemi uygulayamazsýn !\n\n{FFFFFF}Silmek istediðiniz çetenin ID numarasýný girin.", "Sil", "Geri");
                if(!Iterator_Bul(DostCete[c], id)) return ShowPlayerDialog(playerid, CETE_DOST_SIL, DIALOG_STYLE_INPUT, "{FFFFFF}Dost Çete Silme", "{FFFFFF}Bu çete dost listenizde yok !\n\n{FFFFFF}Silmek istediðiniz çetenin ID numarasýný girin.", "Sil", "Geri");
                Iterator_Sil(DostCete[c], id);
                Iterator_Sil(DostCete[id], c);
                
				foreach(new i : Player)
				{
					if(PlayerCete[i] == c)
					{
						SCM_Ex(i, 0xFBC531FF, "[!] {FFFFFF}%s çetesiyle artýk dost çete deðilsiniz.", CeteIslem[id][ceteIsmi]);
					}
			  		if(PlayerCete[i] == id)
					{
						SCM_Ex(i, 0xFBC531FF, "[!] {FFFFFF}%s çetesiyle artýk dost çete deðilsiniz.", CeteIslem[c][ceteIsmi]);
					}
				}
                CeteDostt(playerid);
				new query[60 + 120];
			    new sz[120];
				Iterator_For(DostCete[c], i)
				{
				    new idlan = Iterator_Getir(DostCete[c], i);
				    format(sz, sizeof(sz), "%s%d ", sz, idlan);
				}
	      		mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `dostCete` = '%s' WHERE `cid` = '%d'", sz, c);
				mysql_tquery(g_SQL, query);
				
				format(sz, sizeof(sz), "");
				
				Iterator_For(DostCete[id], i)
				{
				    new idlan = Iterator_Getir(DostCete[id], i);
				    format(sz, sizeof(sz), "%s%d ", sz, idlan);
				}
	      		mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `dostCete` = '%s' WHERE `cid` = '%d'", sz, id);
				mysql_tquery(g_SQL, query);
			}
		}
	    case TAKIP_MENU:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
		            case 0:
					{
						foreach(new i : Player) saveLan(i);
						new Cache:VeriCek, query[135];
						mysql_format(g_SQL, query, sizeof(query), "SELECT isim, adonline, adafkonline, akomuts FROM oyuncuveri WHERE aLevel > 0 AND aLevel <= 8 ORDER BY adonline DESC, adafkonline ASC");
						VeriCek = mysql_query(g_SQL, query);
						new rows = cache_num_rows();
						if(rows)
						{
							new
								list[1800],
								_isim[24],
								_aonline,
								_aonlineafk,
								_akomut
							;
							format(list, sizeof(list), "Ýsim\tOnline Süresi\tAFK Süresi\tKullandýðý Komut Sayýsý\n");
							for(new i = 0; i < rows; ++i)
							{
								cache_get_value_name(i, "isim", _isim);
								cache_get_value_name_int(i, "adonline", _aonline);
								cache_get_value_name_int(i, "adafkonline", _aonlineafk);
                                cache_get_value_name_int(i, "akomuts", _akomut);
								new year[2], month[2], day[2], hour[2], minute[2], second[2];
								SureCek(_aonline, year[0], month[0], day[0], hour[0], minute[0], second[0]);
								SureCek(_aonlineafk, year[1], month[1], day[1], hour[1], minute[1], second[1]);
								format(list, sizeof(list), "%s%s\t%d Saat, %d Dakika, %d Saniye\t%d Saat, %d Dakika, %d Saniye\t%d\n", list, _isim, hour[0], minute[0], second[0], hour[1], minute[1], second[1], _akomut);
							}
							ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Admin Takip", list, "Kapat", "");
						}
						if(!rows)
						{
						    SendClientMessage(playerid, 0xFF0000F, "Hata: {FFFFFF}Admin kayýtlarý bulunamadý.");
						}
						cache_delete(VeriCek);
		            }
		            case 1:
		            {
		                foreach(new i : Player) saveLan(i);
						new Cache:VeriCek, query[150];
						mysql_format(g_SQL, query, sizeof(query), "SELECT id, isim, adonline, adafkonline, akomuts, yanits, dsarki, dmkapat FROM oyuncuveri WHERE rLevel > 0 ORDER BY adonline DESC, adafkonline ASC");
						VeriCek = mysql_query(g_SQL, query);
						new rows = cache_num_rows();
						if(rows)
						{
							new
								list[1800],
								_isim[24],
								_aonline,
								_aonlineafk,
								ax[10],
								q,
								id
							;
							format(list, sizeof(list), "Ýsim\tOnline Süresi\tAFK Süresi\n");
							for(new i = 0; i < rows; ++i)
							{
							    cache_get_value_name_int(i, "id", id);
							    
							    format(ax, sizeof(ax), "p_%d", q);
							    SetPVarInt(playerid, ax, id);
							    
							    q++;
							    
								cache_get_value_name(i, "isim", _isim);
								cache_get_value_name_int(i, "adonline", _aonline);
								cache_get_value_name_int(i, "adafkonline", _aonlineafk);
								new year[2], month[2], day[2], hour[2], minute[2], second[2];
								SureCek(_aonline, year[0], month[0], day[0], hour[0], minute[0], second[0]);
								SureCek(_aonlineafk, year[1], month[1], day[1], hour[1], minute[1], second[1]);
								format(list, sizeof(list), "%s%s\t%d Saat, %d Dakika, %d Saniye\t%d Saat, %d Dakika, %d Saniye\n", list, _isim, hour[0], minute[0], second[0], hour[1], minute[1], second[1]);
							}
							ShowPlayerDialog(playerid, TAKIP_MENU_REHBER, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Rehber Takip", list, "Detaylar", "");
						}
						if(!rows)
						{
						    SendClientMessage(playerid, 0xFF0000F, "Hata: {FFFFFF}Rehber kayýtlarý bulunamadý.");
						}
						cache_delete(VeriCek);
		            }
		            case 2:
		            {
		                foreach(new i : Player) saveLan(i);
						new Cache:VeriCek, query[140];
						mysql_format(g_SQL, query, sizeof(query), "SELECT id, isim, adonline, adafkonline, akomuts, dsarki, dmkapat FROM oyuncuveri WHERE dLevel > 0 ORDER BY adonline DESC, adafkonline ASC");
						VeriCek = mysql_query(g_SQL, query);
						new rows = cache_num_rows();
						if(rows)
						{
							new
								list[1800],
								_isim[24],
								_aonline,
								_aonlineafk,
								ax[10],
								q,
								id
							;
							format(list, sizeof(list), "Ýsim\tOnline Süresi\tAFK Süresi\n");
							for(new i = 0; i < rows; ++i)
							{
							    cache_get_value_name_int(i, "id", id);

							    format(ax, sizeof(ax), "p_%d", q);
							    SetPVarInt(playerid, ax, id);

							    q++;

								cache_get_value_name(i, "isim", _isim);
								cache_get_value_name_int(i, "adonline", _aonline);
								cache_get_value_name_int(i, "adafkonline", _aonlineafk);
								new year[2], month[2], day[2], hour[2], minute[2], second[2];
								SureCek(_aonline, year[0], month[0], day[0], hour[0], minute[0], second[0]);
								SureCek(_aonlineafk, year[1], month[1], day[1], hour[1], minute[1], second[1]);
								format(list, sizeof(list), "%s%s\t%d Saat, %d Dakika, %d Saniye\t%d Saat, %d Dakika, %d Saniye\n", list, _isim, hour[0], minute[0], second[0], hour[1], minute[1], second[1]);
							}
							ShowPlayerDialog(playerid, TAKIP_MENU_DJ, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}DJ Takip", list, "Detaylar", "");
						}
						if(!rows)
						{
						    SendClientMessage(playerid, 0xFF0000F, "Hata: {FFFFFF}DJ kayýtlarý bulunamadý.");
						}
						cache_delete(VeriCek);
		            }
				}
	        }
	    }
	    case TAKIP_MENU_REHBER:
	    {
	        if(response)
	        {
	            new id, limiter[10];
	            format(limiter, sizeof(limiter), "p_%d", listitem);
	            id = GetPVarInt(playerid, limiter);
				new Cache:VeriCek, query[135];
				mysql_format(g_SQL, query, sizeof(query), "SELECT isim, adonline, adafkonline, akomuts, yanits, dsarki, dmkapat FROM oyuncuveri WHERE id = %d", id);
				VeriCek = mysql_query(g_SQL, query);
				new rows = cache_num_rows();
				if(rows)
				{
					new
						list[1500],
						_isim[24],
						_aonline,
						_aonlineafk,
						rea,
						rs,
						as,
						ks,
						year[2], month[2], day[2], hour[2], minute[2], second[2]
					;
				    cache_get_value_name(0, "isim", _isim);
				    cache_get_value_name_int(0, "adonline", _aonline);
				    cache_get_value_name_int(0, "adafkonline", _aonlineafk);
				    cache_get_value_name_int(0, "akomuts", rea);
				    cache_get_value_name_int(0, "yanits", rs);
				    cache_get_value_name_int(0, "dsarki", as);
				    cache_get_value_name_int(0, "dmkapat", ks);
				    SureCek(_aonline, year[0], month[0], day[0], hour[0], minute[0], second[0]);
				    SureCek(_aonlineafk, year[1], month[1], day[1], hour[1], minute[1], second[1]);
				    format(list, sizeof(list), "Ýsim: %s\n", _isim);
				    format(list, sizeof(list), "%sOnline Süre: %d Saat, %d Dakika, %d Saniye\n", list, hour[0], minute[0], second[0]);
				    format(list, sizeof(list), "%sAFK Süre: %d Saat, %d Dakika, %d Saniye\n", list, hour[1], minute[1], second[1]);
				    format(list, sizeof(list), "%s/Cc Sayýsý: %d\n", list, rea);
				    format(list, sizeof(list), "%sSoru Yanýtý: %d\n", list, rs);
				    format(list, sizeof(list), "%sAçtýðý Þarký: %d\n", list, as);
				    format(list, sizeof(list), "%sKapattýðý Þarký: %d\n", list, ks);
					ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Rehber Takip", list, "Kapat", "");
				}
				cache_delete(VeriCek);
	        }
	    }
		case TAKIP_MENU_DJ:
	    {
	        if(response)
	        {
	            new id, limiter[10];
	            format(limiter, sizeof(limiter), "p_%d", listitem);
	            id = GetPVarInt(playerid, limiter);
				new Cache:VeriCek, query[135];
				mysql_format(g_SQL, query, sizeof(query), "SELECT id, isim, adonline, adafkonline, akomuts, dsarki, dmkapat FROM oyuncuveri WHERE id = %d", id);
				VeriCek = mysql_query(g_SQL, query);
				new rows = cache_num_rows();
				if(rows)
				{
					new
						list[1500],
						_isim[24],
						_aonline,
						_aonlineafk,
						rea,
						as,
						ks,
						year[2], month[2], day[2], hour[2], minute[2], second[2]
					;
				    cache_get_value_name(0, "isim", _isim);
				    cache_get_value_name_int(0, "adonline", _aonline);
				    cache_get_value_name_int(0, "adafkonline", _aonlineafk);
				    cache_get_value_name_int(0, "akomuts", rea);
				    cache_get_value_name_int(0, "dsarki", as);
				    cache_get_value_name_int(0, "dmkapat", ks);
				    SureCek(_aonline, year[0], month[0], day[0], hour[0], minute[0], second[0]);
				    SureCek(_aonlineafk, year[1], month[1], day[1], hour[1], minute[1], second[1]);
				    format(list, sizeof(list), "Ýsim: %s\n", _isim);
				    format(list, sizeof(list), "%sOnline Süre: %d Saat, %d Dakika, %d Saniye\n", list, hour[0], minute[0], second[0]);
				    format(list, sizeof(list), "%sAFK Süre: %d Saat, %d Dakika, %d Saniye\n", list, hour[1], minute[1], second[1]);
				    format(list, sizeof(list), "%s/Cc Sayýsý: %d\n", list, rea);
				    format(list, sizeof(list), "%sAçtýðý Þarký: %d\n", list, as);
				    format(list, sizeof(list), "%sKapattýðý Þarký: %d\n", list, ks);
					ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}DJ Takip", list, "Kapat", "");
				}
				cache_delete(VeriCek);
	        }
	    }
		case DIALOG_OZEL_ARAC:
	    {
	        if(response)
	        {
	            SetPVarInt(playerid, "OzelList", listitem);
	            ShowPlayerDialog(playerid, DIALOG_OZEL_MENU, DIALOG_STYLE_LIST, "Seçim Yapýn", "\
				{FF0073}» {FFFFFF}Özel Aracý Satýn Al\n\
				{FF0073}» {FFFFFF}Özel Aracý Gör", "Seç", "Geri");
	        }
	    }
	    case DIALOG_OZEL_MENU:
	    {
			if(!response) return cmd_ozelarac(playerid);
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: cmd_bakiye(playerid);
			        case 1:
					{
					    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
					    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
					    if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken bu komutu kullanamazsýn.");
					    if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken bu komutu kullanamazsýn.");
					    if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Aranma seviyeniz varken bu komutu kullanamazsýn.");
					    GetPlayerPos(playerid, OzelDenemePos[0], OzelDenemePos[1], OzelDenemePos[2]);
					    GetPlayerFacingAngle(playerid, OzelDenemePos[3]);
					    new id = GetPVarInt(playerid, "OzelList");
					    new cid;
					    cid = CreateVehicle(OzelAracFiyat[id][oamodel], 2569.3027, 1342.7283, 78.4764, 270.1425, OzelAracFiyat[id][oarenk1], OzelAracFiyat[id][oarenk2], 999999);
                        SetVehicleVirtualWorld(cid, playerid + 1);
                        SetPlayerVirtualWorld(playerid, playerid + 1);
                        AracaObjeVer(cid);
                        PutPlayerInVehicle(playerid, cid, 0);
                        SetPVarInt(playerid, "ozelAracSure", gettime() + OZEL_ARAC_SURE);
                        SetPVarInt(playerid, "ozelAracID", cid);
					}
			    }
			}
		}
	    case DIALOG_BAKIYE:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Bakiye Yükleme", "\
						{FFCC00}Bakiye yükletmek için lütfen aþaðýdaki yetkililere ulaþýnýz.\n\n\
						{00AFF0}[Skype] {ff6666}NexoR:\t{FFFFFF}live:pro.daggermen\n\
						{00AFF0}[Skype] {ff6666}RaXaSs:\t{FFFFFF}ali.keyf1\n\n\
						{ff0080}Ödeme Yollarý:\n\
						{b6feb6}Ýninal {FFFFFF}- {b6feb6}Ziraat Bankasý\n", "Kapat", "");
	                }
					case 1:
	                {
						ShowPlayerDialog(playerid, DIALOG_BAKIYE_1, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", "{FFFFFF}Bakiye göndermek istediðiniz oyuncu ID numarasýný girin.", "Devam", "Geri");
	                }
	                case 2, 3, 5, 6, 10, 11, 16, 17, 21, 27, 28, 30, 34, 38: cmd_bakiye(playerid);
	                case 4:
	                {
						new ff = 50, query[128];
		                if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
		                SCM_Ex(playerid, 0x3498DBFF, "Deneme Adminlik paketini baþarýyla aldýnýz. Emektar ile görüþürüp yetkinizi isteyiniz.");
		                SCM_Ex(playerid, 0x3498DBFF, "Deneme Adminlik paketiniz reddedilirse bakiyeniz tekrardan iade edilecektir.");
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `siparis`(`Odeyen`, `NeAldi`, `tarih`) VALUES ('%e', 'Deneme Admin', '%d')", getName(playerid), gettime());
						mysql_tquery(g_SQL, query);
	                }
                    case 7:
                    {
						new ff = 20, query[128];
		                if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
		                SCM_Ex(playerid, 0x3498DBFF, "Sahipler ile görüþüp özel evinizi isteyin.");
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `siparis`(`Odeyen`, `NeAldi`, `tarih`) VALUES ('%e', 'Özel Ev (Mekansýz)', '%d')", getName(playerid), gettime());
						mysql_tquery(g_SQL, query);
                    }
					case 8:
                    {
						new ff = 40, query[128];
		                if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
		                SCM_Ex(playerid, 0x3498DBFF, "Sahipler ile görüþüp özel mekanlý evinizi isteyin. Mekanýn yapýlmasý biraz zaman alabilir.");
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `siparis`(`Odeyen`, `NeAldi`, `tarih`) VALUES ('%e', 'Özel Ev (Mekanlý)', '%d')", getName(playerid), gettime());
						mysql_tquery(g_SQL, query);
                    }
					case 9:
                    {
						new ff = 60, query[128];
		                if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
		                SCM_Ex(playerid, 0x3498DBFF, "Sahipler ile görüþüp özel çete mekanýnýzý isteyin. Mekanýn yapýlmasý biraz zaman alabilir.");
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `siparis`(`Odeyen`, `NeAldi`, `tarih`) VALUES ('%e', 'Özel Çete (Mekanlý)', '%d')", getName(playerid), gettime());
						mysql_tquery(g_SQL, query);
                    }
                    case 12:
                    {
						new ff = 10, level = 1, str[128], paket[35] = "Safir Vip", sure;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
						KillTimer(yetkilerTimer[playerid]);
						oyuncuData[playerid][pVip] = level;
						sure = gettime() + 30 * 86400;
						oyuncuData[playerid][pVipSure] = sure;

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = %d WHERE `id` = %d LIMIT 1", level, oyuncuData[playerid][xID]);
						mysql_query(g_SQL, str);

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = %d WHERE `id` = %d LIMIT 1", sure, oyuncuData[playerid][xID]);
						mysql_tquery(g_SQL, str);

						kafaTextUp(playerid);
						yetkilerTimer[playerid] = SetTimerEx("SureKontrolleri", 2000, true, "d", playerid);

						if(level == 1)
						{
							if(BasariIslem[playerid][ilkSafir] == 0){
							BasariIslem[playerid][ilkSafir] = 1;
							basariKilidi(playerid, "ilkSafir", "Ýlk Safir Vip", 7500000, 2500, 150);
							}
						}
						format(str, sizeof(str), "[BAKIYE] Oyuncu %s(%d) bakiye sistemini kullanarak kendine %s aldý.", getName(playerid), playerid, paket);
						SendClientMessageToAll(0x79c7e0ff, str);
                    }
                    case 13:
                    {
						new ff = 20, level = 2, str[128], paket[35] = "Yakut Vip", sure;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
						KillTimer(yetkilerTimer[playerid]);
						oyuncuData[playerid][pVip] = level;
						sure = gettime() + 30 * 86400;
						oyuncuData[playerid][pVipSure] = sure;

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = %d WHERE `id` = %d LIMIT 1", level, oyuncuData[playerid][xID]);
						mysql_query(g_SQL, str);

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = %d WHERE `id` = %d LIMIT 1", sure, oyuncuData[playerid][xID]);
						mysql_tquery(g_SQL, str);

						kafaTextUp(playerid);
						yetkilerTimer[playerid] = SetTimerEx("SureKontrolleri", 2000, true, "d", playerid);

						if(level == 2)
						{
							if(BasariIslem[playerid][ilkYakut] == 0){
							BasariIslem[playerid][ilkYakut] = 1;
							basariKilidi(playerid, "ilkYakut", "Ýlk Yakut Vip", 15000000, 10000, 200);
							}
						}
						format(str, sizeof(str), "[BAKIYE] Oyuncu %s(%d) bakiye sistemini kullanarak kendine %s aldý.", getName(playerid), playerid, paket);
						SendClientMessageToAll(0x79c7e0ff, str);
                    }
                    case 14:
                    {
						new ff = 30, level = 3, str[128], paket[35] = "Zümrüt Vip", sure;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
						KillTimer(yetkilerTimer[playerid]);
						oyuncuData[playerid][pVip] = level;
						sure = gettime() + 30 * 86400;
						oyuncuData[playerid][pVipSure] = sure;

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = %d WHERE `id` = %d LIMIT 1", level, oyuncuData[playerid][xID]);
						mysql_query(g_SQL, str);

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = %d WHERE `id` = %d LIMIT 1", sure, oyuncuData[playerid][xID]);
						mysql_tquery(g_SQL, str);

						kafaTextUp(playerid);
						yetkilerTimer[playerid] = SetTimerEx("SureKontrolleri", 2000, true, "d", playerid);

						if(level == 3)
						{
							if(BasariIslem[playerid][ilkZumrut] == 0){
							BasariIslem[playerid][ilkZumrut] = 1;
							basariKilidi(playerid, "ilkZumrut", "Ýlk Zümrüt Vip", 20000000, 15000, 250);
							}
						}
						format(str, sizeof(str), "[BAKIYE] Oyuncu %s(%d) bakiye sistemini kullanarak kendine %s aldý.", getName(playerid), playerid, paket);
						SendClientMessageToAll(0x79c7e0ff, str);
                    }
                    case 15:
                    {
						new ff = 40, level = 4, str[128], paket[35] = "Elmas Vip", sure;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
		                oyuncuData[playerid][_Bakiye] -= ff;
						KillTimer(yetkilerTimer[playerid]);
						oyuncuData[playerid][pVip] = level;
						sure = gettime() + 30 * 86400;
						oyuncuData[playerid][pVipSure] = sure;

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = %d WHERE `id` = %d LIMIT 1", level, oyuncuData[playerid][xID]);
						mysql_query(g_SQL, str);

						mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = %d WHERE `id` = %d LIMIT 1", sure, oyuncuData[playerid][xID]);
						mysql_tquery(g_SQL, str);

						kafaTextUp(playerid);
						yetkilerTimer[playerid] = SetTimerEx("SureKontrolleri", 2000, true, "d", playerid);

						if(BasariIslem[playerid][ilkElmas] == 0)
						{
						    if(BasariIslem[playerid][ilkSafir] == 0)
							{
								BasariIslem[playerid][ilkSafir] = 1;
								basariKilidi(playerid, "ilkSafir", "Ýlk Safir Vip", 7500000, 2500, 150);
							}
							if(BasariIslem[playerid][ilkYakut] == 0)
							{
								BasariIslem[playerid][ilkYakut] = 1;
								basariKilidi(playerid, "ilkYakut", "Ýlk Yakut Vip", 15000000, 10000, 200);
							}
							if(BasariIslem[playerid][ilkZumrut] == 0)
							{
								BasariIslem[playerid][ilkZumrut] = 1;
								basariKilidi(playerid, "ilkZumrut", "Ýlk Zümrüt Vip", 20000000, 15000, 250);
							}
							BasariIslem[playerid][ilkElmas] = 1;
							basariKilidi(playerid, "ilkElmas", "Ýlk Elmas Vip", 25000000, 20000, 500);
						}
						format(str, sizeof(str), "[BAKIYE] Oyuncu %s(%d) bakiye sistemini kullanarak kendine %s aldý.", getName(playerid), playerid, paket);
						SendClientMessageToAll(0x79c7e0ff, str);
                    }
					case 18:
					{
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Paket Satýn Alma", "\
						{FFCC00}Bu özelliði sadece Ziraat Bankasýndan yatýrýlmýþ bakiyelerde kullanabilirsiniz.\n", "Kapat", "");
					}
					case 19:
					{
						new ff = 15;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
			            ShowPlayerDialog(playerid, DIALOG_BAKIYE_S30, DIALOG_STYLE_INPUT, "{FFFFFF}Paket Satýn Alma", "{FFFFFF}Deðiþtirmek istediðiniz Nicki girin.", "Deðiþtir", "Geri");
					}
					case 20:
					{
						new ff = 5;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
                        oyuncuData[playerid][YetenekPuan] += 2;
                        SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Kendine +2 Yetenek Puaný Aldý.", getName(playerid), playerid);
					}
					case 22:
					{
						new ff = 30;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
						new id = 0;
						if(!OzelAracSlotKontrol(playerid)) return hataMesaji(playerid, "Özel araç alma kapasitesi dolmuþ.");
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) kendine Özel Infernus aracý aldý.", getName(playerid), playerid);
                        oyuncuData[playerid][_Bakiye] -= ff;
						new icar;
						new query[135], buff[45];
						icar = CreateVehicle(OzelAracFiyat[id][oamodel], 4379.8984, 886.3598, 3.2020, 291.6649, OzelAracFiyat[id][oarenk1], OzelAracFiyat[id][oarenk2], 999999);
						oaIslem[icar][oaCheck] = true;
						format(oaIslem[icar][oaSahip], MAX_PLAYER_NAME, getName(playerid));
						oaIslem[icar][oaPos][0] = 4379.8984;
						oaIslem[icar][oaPos][1] = 886.3598;
						oaIslem[icar][oaPos][2] = 3.2020;
						oaIslem[icar][oaPos][3] = 291.6649;
						AracaObjeVer(icar);
						SetVehiclePos(icar, -1979.1650, 262.6553, 35.1918);
						SetVehicleZAngle(icar, 0.6030);
						PutPlayerInVehicle(playerid, icar, 0);
						OzelAracSlotEkle(playerid, icar);
						format(buff, sizeof(buff), "%.2f|%.2f|%.2f|%.2f|", oaIslem[icar][oaPos][0], oaIslem[icar][oaPos][1], oaIslem[icar][oaPos][2], oaIslem[icar][oaPos][3]);
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `ozelarac`(`Sahip`, `model`, `pos`) VALUES ('%e', '%d', '%s')", getName(playerid), OzelAracFiyat[id][oamodel], buff);
						mysql_tquery(g_SQL, query, "OzelAracSQLKayit", "d", icar);
					}
					case 23:
					{
						new ff = 30;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
						new id = 1;
						if(!OzelAracSlotKontrol(playerid)) return hataMesaji(playerid, "Özel araç alma kapasitesi dolmuþ.");
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) kendine Özel Sultan aracý aldý.", getName(playerid), playerid);
                        oyuncuData[playerid][_Bakiye] -= ff;
						new icar;
						new query[135], buff[45];
						icar = CreateVehicle(OzelAracFiyat[id][oamodel], 4379.8984, 886.3598, 3.2020, 291.6649, OzelAracFiyat[id][oarenk1], OzelAracFiyat[id][oarenk2], 999999);
						oaIslem[icar][oaCheck] = true;
						format(oaIslem[icar][oaSahip], MAX_PLAYER_NAME, getName(playerid));
						oaIslem[icar][oaPos][0] = 4379.8984;
						oaIslem[icar][oaPos][1] = 886.3598;
						oaIslem[icar][oaPos][2] = 3.2020;
						oaIslem[icar][oaPos][3] = 291.6649;
						AracaObjeVer(icar);
						SetVehiclePos(icar, -1979.1650, 262.6553, 35.1918);
						SetVehicleZAngle(icar, 0.6030);
						PutPlayerInVehicle(playerid, icar, 0);
						OzelAracSlotEkle(playerid, icar);
						format(buff, sizeof(buff), "%.2f|%.2f|%.2f|%.2f|", oaIslem[icar][oaPos][0], oaIslem[icar][oaPos][1], oaIslem[icar][oaPos][2], oaIslem[icar][oaPos][3]);
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `ozelarac`(`Sahip`, `model`, `pos`) VALUES ('%e', '%d', '%s')", getName(playerid), OzelAracFiyat[id][oamodel], buff);
						mysql_tquery(g_SQL, query, "OzelAracSQLKayit", "d", icar);
					}
					case 24:
					{
						new ff = 30;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
						new id = 2;
						if(!OzelAracSlotKontrol(playerid)) return hataMesaji(playerid, "Özel araç alma kapasitesi dolmuþ.");
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) kendine Özel Bullet aracý aldý.", getName(playerid), playerid);
                        oyuncuData[playerid][_Bakiye] -= ff;
						new icar;
						new query[135], buff[45];
						icar = CreateVehicle(OzelAracFiyat[id][oamodel], 4379.8984, 886.3598, 3.2020, 291.6649, OzelAracFiyat[id][oarenk1], OzelAracFiyat[id][oarenk2], 999999);
						oaIslem[icar][oaCheck] = true;
						format(oaIslem[icar][oaSahip], MAX_PLAYER_NAME, getName(playerid));
						oaIslem[icar][oaPos][0] = 4379.8984;
						oaIslem[icar][oaPos][1] = 886.3598;
						oaIslem[icar][oaPos][2] = 3.2020;
						oaIslem[icar][oaPos][3] = 291.6649;
						AracaObjeVer(icar);
						SetVehiclePos(icar, -1979.1650, 262.6553, 35.1918);
						SetVehicleZAngle(icar, 0.6030);
						PutPlayerInVehicle(playerid, icar, 0);
						OzelAracSlotEkle(playerid, icar);
						format(buff, sizeof(buff), "%.2f|%.2f|%.2f|%.2f|", oaIslem[icar][oaPos][0], oaIslem[icar][oaPos][1], oaIslem[icar][oaPos][2], oaIslem[icar][oaPos][3]);
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `ozelarac`(`Sahip`, `model`, `pos`) VALUES ('%e', '%d', '%s')", getName(playerid), OzelAracFiyat[id][oamodel], buff);
						mysql_tquery(g_SQL, query, "OzelAracSQLKayit", "d", icar);
					}
					case 25:
					{
						new ff = 40;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
						new id = 3;
						if(!OzelAracSlotKontrol(playerid)) return hataMesaji(playerid, "Özel araç alma kapasitesi dolmuþ.");
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) kendine Özel DFT-30 aracý aldý.", getName(playerid), playerid);
                        oyuncuData[playerid][_Bakiye] -= ff;
						new icar;
						new query[135], buff[45];
						icar = CreateVehicle(OzelAracFiyat[id][oamodel], 4379.8984, 886.3598, 3.2020, 291.6649, OzelAracFiyat[id][oarenk1], OzelAracFiyat[id][oarenk2], 999999);
						oaIslem[icar][oaCheck] = true;
						format(oaIslem[icar][oaSahip], MAX_PLAYER_NAME, getName(playerid));
						oaIslem[icar][oaPos][0] = 4379.8984;
						oaIslem[icar][oaPos][1] = 886.3598;
						oaIslem[icar][oaPos][2] = 3.2020;
						oaIslem[icar][oaPos][3] = 291.6649;
						AracaObjeVer(icar);
						SetVehiclePos(icar, -1979.1650, 262.6553, 35.1918);
						SetVehicleZAngle(icar, 0.6030);
						PutPlayerInVehicle(playerid, icar, 0);
						OzelAracSlotEkle(playerid, icar);
						format(buff, sizeof(buff), "%.2f|%.2f|%.2f|%.2f|", oaIslem[icar][oaPos][0], oaIslem[icar][oaPos][1], oaIslem[icar][oaPos][2], oaIslem[icar][oaPos][3]);
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `ozelarac`(`Sahip`, `model`, `pos`) VALUES ('%e', '%d', '%s')", getName(playerid), OzelAracFiyat[id][oamodel], buff);
						mysql_tquery(g_SQL, query, "OzelAracSQLKayit", "d", icar);
					}
					case 26:
					{
						new ff = 40;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
						new id = 4;
						if(!OzelAracSlotKontrol(playerid)) return hataMesaji(playerid, "Özel araç alma kapasitesi dolmuþ.");
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) kendine Özel Maverick aracý aldý.", getName(playerid), playerid);
                        oyuncuData[playerid][_Bakiye] -= ff;
						new icar;
						new query[135], buff[45];
						icar = CreateVehicle(OzelAracFiyat[id][oamodel], 4379.8984, 886.3598, 3.2020, 291.6649, OzelAracFiyat[id][oarenk1], OzelAracFiyat[id][oarenk2], 999999);
						oaIslem[icar][oaCheck] = true;
						format(oaIslem[icar][oaSahip], MAX_PLAYER_NAME, getName(playerid));
						oaIslem[icar][oaPos][0] = 4379.8984;
						oaIslem[icar][oaPos][1] = 886.3598;
						oaIslem[icar][oaPos][2] = 3.2020;
						oaIslem[icar][oaPos][3] = 291.6649;
						AracaObjeVer(icar);
						SetVehiclePos(icar, -1979.1650, 262.6553, 35.1918);
						SetVehicleZAngle(icar, 0.6030);
						PutPlayerInVehicle(playerid, icar, 0);
						OzelAracSlotEkle(playerid, icar);
						format(buff, sizeof(buff), "%.2f|%.2f|%.2f|%.2f|", oaIslem[icar][oaPos][0], oaIslem[icar][oaPos][1], oaIslem[icar][oaPos][2], oaIslem[icar][oaPos][3]);
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `ozelarac`(`Sahip`, `model`, `pos`) VALUES ('%e', '%d', '%s')", getName(playerid), OzelAracFiyat[id][oamodel], buff);
						mysql_tquery(g_SQL, query, "OzelAracSQLKayit", "d", icar);
					}
					case 29:
					{
						new ff = 20;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
						RandomVip(playerid, ff);
					}
					case 31:
					{
						new ff2 = 10;
			            if(oyuncuData[playerid][_Bakiye] < ff2) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff2;
						new ff = random(11) + 1, fff;
						switch(ff)
						{
							case 1: fff = 20000000;
							case 2: fff = 25000000;
							case 3: fff = 30000000;
							case 4: fff = 35000000;
							case 5: fff = 40000000;
							case 6: fff = 45000000;
							case 7: fff = 50000000;
							case 8: fff = 55000000;
							case 9: fff = 60000000;
							case 10: fff = 65000000;
							case 11: fff = 70000000;
						}
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Küçük Para Paketinden $%s dolar çýktý !", getName(playerid), playerid, convertNumber(fff));
						pParaver(playerid, fff);
					}
					case 32:
					{
						new ff2 = 25;
			            if(oyuncuData[playerid][_Bakiye] < ff2) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff2;
						new ff = random(15) + 1, fff;
						switch(ff)
						{
							case 1: fff = 30000000;
							case 2: fff = 35000000;
							case 3: fff = 40000000;
							case 4: fff = 45000000;
							case 5: fff = 50000000;
							case 6: fff = 55000000;
							case 7: fff = 60000000;
							case 8: fff = 65000000;
							case 9: fff = 70000000;
							case 10: fff = 75000000;
							case 11: fff = 80000000;
							case 12: fff = 85000000;
							case 13: fff = 90000000;
							case 14: fff = 95000000;
							case 15: fff = 100000000;
						}
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Orta Para Paketinden $%s dolar çýktý !", getName(playerid), playerid, convertNumber(fff));
						pParaver(playerid, fff);
					}
					case 33:
					{
						new ff2 = 50;
			            if(oyuncuData[playerid][_Bakiye] < ff2) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff2;
						new ff = random(15) + 1, fff;
						switch(ff)
						{
							case 1: fff = 80000000;
							case 2: fff = 85000000;
							case 3: fff = 90000000;
							case 4: fff = 95000000;
							case 5: fff = 100000000;
							case 6: fff = 105000000;
							case 7: fff = 110000000;
							case 8: fff = 115000000;
							case 9: fff = 120000000;
							case 10: fff = 125000000;
							case 11: fff = 130000000;
							case 12: fff = 135000000;
							case 13: fff = 140000000;
							case 14: fff = 145000000;
							case 15: fff = 150000000;
						}
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Büyük Para Paketinden $%s dolar çýktý !", getName(playerid), playerid, convertNumber(fff));
						pParaver(playerid, fff);
					}
					case 35:
					{
						new ff = 10;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
						new f2f = random(16) + 1, fff;
						switch(f2f)
						{
							case 1: fff = 250;
							case 2: fff = 300;
							case 3: fff = 350;
							case 4: fff = 400;
							case 5: fff = 450;
							case 6: fff = 500;
							case 7: fff = 550;
							case 8: fff = 600;
							case 9: fff = 650;
							case 10: fff = 700;
							case 11: fff = 750;
							case 12: fff = 800;
							case 13: fff = 850;
							case 14: fff = 900;
							case 15: fff = 950;
							case 16: fff = 1000;
						}
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Küçük Skor Paketinden %s skor çýktý !", getName(playerid), playerid, convertNumber(fff));
						Skorver(playerid, fff);
					}
					case 36:
					{
						new ff = 25;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
						new f2f = random(31) + 1, fff;
						switch(f2f)
						{
							case 1: fff = 500;
							case 2: fff = 550;
							case 3: fff = 600;
							case 4: fff = 650;
							case 5: fff = 700;
							case 6: fff = 750;
							case 7: fff = 800;
							case 8: fff = 850;
							case 9: fff = 900;
							case 10: fff = 950;
							case 11: fff = 1000;
							case 12: fff = 1050;
							case 13: fff = 1100;
							case 14: fff = 1150;
							case 15: fff = 1200;
							case 16: fff = 1250;
							case 17: fff = 1300;
							case 18: fff = 1350;
							case 19: fff = 1400;
							case 20: fff = 1450;
							case 21: fff = 1500;
							case 22: fff = 1550;
							case 23: fff = 1600;
							case 24: fff = 1650;
							case 25: fff = 1700;
							case 26: fff = 1750;
							case 27: fff = 1800;
							case 28: fff = 1850;
							case 29: fff = 1900;
							case 30: fff = 1950;
							case 31: fff = 2000;
						}
					    SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Orta Skor Paketinden %s skor çýktý !", getName(playerid), playerid, convertNumber(fff));
						Skorver(playerid, fff);
					}
					case 37:
					{
						new ff = 50;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
						new f2f = random(81) + 1, fff;
						switch(f2f)
						{
							case 1: fff = 1000;
							case 2: fff = 1050;
							case 3: fff = 1100;
							case 4: fff = 1150;
							case 5: fff = 1200;
							case 6: fff = 1250;
							case 7: fff = 1300;
							case 8: fff = 1350;
							case 9: fff = 1400;
							case 10: fff = 1450;
							case 11: fff = 1500;
							case 12: fff = 1550;
							case 13: fff = 1600;
							case 14: fff = 1650;
							case 15: fff = 1700;
							case 16: fff = 1750;
							case 17: fff = 1800;
							case 18: fff = 1850;
							case 19: fff = 1900;
							case 20: fff = 1950;
							case 21: fff = 2000;
							case 22: fff = 2050;
							case 23: fff = 2100;
							case 24: fff = 2150;
							case 25: fff = 2200;
							case 26: fff = 2250;
							case 27: fff = 2300;
							case 28: fff = 2350;
							case 29: fff = 2400;
							case 30: fff = 2450;
							case 31: fff = 2500;
							case 32: fff = 2550;
							case 33: fff = 2600;
							case 34: fff = 2650;
							case 35: fff = 2700;
							case 36: fff = 2750;
							case 37: fff = 2800;
							case 38: fff = 2850;
							case 39: fff = 2900;
							case 40: fff = 2950;
							case 41: fff = 3000;
							case 42: fff = 3050;
							case 43: fff = 3100;
							case 44: fff = 3150;
							case 45: fff = 3200;
							case 46: fff = 3250;
							case 47: fff = 3300;
							case 48: fff = 3350;
							case 49: fff = 3400;
							case 50: fff = 3450;
							case 51: fff = 3500;
							case 52: fff = 3550;
							case 53: fff = 3600;
							case 54: fff = 3650;
							case 55: fff = 3700;
							case 56: fff = 3750;
							case 57: fff = 3800;
							case 58: fff = 3850;
							case 59: fff = 3900;
							case 60: fff = 3950;
							case 61: fff = 4000;
							case 62: fff = 4050;
							case 63: fff = 4100;
							case 64: fff = 4150;
							case 65: fff = 4200;
							case 66: fff = 4250;
							case 67: fff = 4300;
							case 68: fff = 4350;
							case 69: fff = 4400;
							case 70: fff = 4450;
							case 71: fff = 4500;
							case 72: fff = 4550;
							case 73: fff = 4600;
							case 74: fff = 4650;
							case 75: fff = 4700;
							case 76: fff = 4750;
							case 77: fff = 4800;
							case 78: fff = 4850;
							case 79: fff = 4900;
							case 80: fff = 4950;
							case 81: fff = 5000;
						}
					    SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Büyük Skor Paketinden %s skor çýktý !", getName(playerid), playerid, convertNumber(fff));
						Skorver(playerid, fff);
					}
					case 39:
					{
						new ff = 5;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
						new f2f = random(81) + 1, fff;
						switch(f2f)
						{
							case 1: fff = 3000;
							case 2: fff = 3050;
							case 3: fff = 3100;
							case 4: fff = 3150;
							case 5: fff = 3200;
							case 6: fff = 3250;
							case 7: fff = 3300;
							case 8: fff = 3350;
							case 9: fff = 3400;
							case 10: fff = 3450;
							case 11: fff = 3500;
							case 12: fff = 3550;
							case 13: fff = 3600;
							case 14: fff = 3650;
							case 15: fff = 3700;
							case 16: fff = 3750;
							case 17: fff = 3800;
							case 18: fff = 3850;
							case 19: fff = 3900;
							case 20: fff = 3950;
							case 21: fff = 4000;
							case 22: fff = 4050;
							case 23: fff = 4100;
							case 24: fff = 4150;
							case 25: fff = 4200;
							case 26: fff = 4250;
							case 27: fff = 4300;
							case 28: fff = 4350;
							case 29: fff = 4400;
							case 30: fff = 4450;
							case 31: fff = 4500;
							case 32: fff = 4550;
							case 33: fff = 4600;
							case 34: fff = 4650;
							case 35: fff = 4700;
							case 36: fff = 4750;
							case 37: fff = 4800;
							case 38: fff = 4850;
							case 39: fff = 4900;
							case 40: fff = 4950;
							case 41: fff = 5000;
							case 42: fff = 5050;
							case 43: fff = 5100;
							case 44: fff = 5150;
							case 45: fff = 5200;
							case 46: fff = 5250;
							case 47: fff = 5300;
							case 48: fff = 5350;
							case 49: fff = 5400;
							case 50: fff = 5450;
							case 51: fff = 5500;
							case 52: fff = 5550;
							case 53: fff = 5600;
							case 54: fff = 5650;
							case 55: fff = 5700;
							case 56: fff = 5750;
							case 57: fff = 5800;
							case 58: fff = 5850;
							case 59: fff = 5900;
							case 60: fff = 5950;
							case 61: fff = 6000;
							case 62: fff = 6050;
							case 63: fff = 6100;
							case 64: fff = 6150;
							case 65: fff = 6200;
							case 66: fff = 6250;
							case 67: fff = 6300;
							case 68: fff = 6350;
							case 69: fff = 6400;
							case 70: fff = 6450;
							case 71: fff = 6500;
							case 72: fff = 6550;
							case 73: fff = 6600;
							case 74: fff = 6650;
							case 75: fff = 6700;
							case 76: fff = 6750;
							case 77: fff = 6800;
							case 78: fff = 6850;
							case 79: fff = 6900;
							case 80: fff = 6950;
							case 81: fff = 7000;
						}
						SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Küçük Exp Paketinden %s Exp çýktý !", getName(playerid), playerid, convertNumber(fff));
						oyuncuData[playerid][ExpPuan] += fff;
						new bx[15];
						format(bx, sizeof(bx), "+%d_Exp", fff);
				        PlayerTextDrawSetString(playerid, ParaLevel[playerid][1], bx);
				        if(oyuncuData[playerid][textAyar] == 0){
				        PlayerTextDrawShow(playerid, ParaLevel[playerid][1]);}
				        SetPVarInt(playerid, "YaziMode", 1);
				        SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
						ExpGuncelle(playerid);
						if(oyuncuData[playerid][_LevelCount] >= 50)
						{
							if(oyuncuData[playerid][ExpPuan] > 50000)
							{
							    oyuncuData[playerid][_LevelCount] = 50;
								oyuncuData[playerid][ExpPuan] = 50000;
								ExpGuncelle(playerid);
							}
						}
					}
					case 40:
					{
						new ff = 10;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
						new f2f = random(101) + 1, fff;
						switch(f2f)
						{
							case 1: fff = 5000;
							case 2: fff = 5050;
							case 3: fff = 5100;
							case 4: fff = 5150;
							case 5: fff = 5200;
							case 6: fff = 5250;
							case 7: fff = 5300;
							case 8: fff = 5350;
							case 9: fff = 5400;
							case 10: fff = 5450;
							case 11: fff = 5500;
							case 12: fff = 5550;
							case 13: fff = 5600;
							case 14: fff = 5650;
							case 15: fff = 5700;
							case 16: fff = 5750;
							case 17: fff = 5800;
							case 18: fff = 5850;
							case 19: fff = 5900;
							case 20: fff = 5950;
							case 21: fff = 6000;
							case 22: fff = 6050;
							case 23: fff = 6100;
							case 24: fff = 6150;
							case 25: fff = 6200;
							case 26: fff = 6250;
							case 27: fff = 6300;
							case 28: fff = 6350;
							case 29: fff = 6400;
							case 30: fff = 6450;
							case 31: fff = 6500;
							case 32: fff = 6550;
							case 33: fff = 6600;
							case 34: fff = 6650;
							case 35: fff = 6700;
							case 36: fff = 6750;
							case 37: fff = 6800;
							case 38: fff = 6850;
							case 39: fff = 6900;
							case 40: fff = 6950;
							case 41: fff = 7000;
							case 42: fff = 7050;
							case 43: fff = 7100;
							case 44: fff = 7150;
							case 45: fff = 7200;
							case 46: fff = 7250;
							case 47: fff = 7300;
							case 48: fff = 7350;
							case 49: fff = 7400;
							case 50: fff = 7450;
							case 51: fff = 7500;
							case 52: fff = 7550;
							case 53: fff = 7600;
							case 54: fff = 7650;
							case 55: fff = 7700;
							case 56: fff = 7750;
							case 57: fff = 7800;
							case 58: fff = 7850;
							case 59: fff = 7900;
							case 60: fff = 7950;
							case 61: fff = 8000;
							case 62: fff = 8050;
							case 63: fff = 8100;
							case 64: fff = 8150;
							case 65: fff = 8200;
							case 66: fff = 8250;
							case 67: fff = 8300;
							case 68: fff = 8350;
							case 69: fff = 8400;
							case 70: fff = 8450;
							case 71: fff = 8500;
							case 72: fff = 8550;
							case 73: fff = 8600;
							case 74: fff = 8650;
							case 75: fff = 8700;
							case 76: fff = 8750;
							case 77: fff = 8800;
							case 78: fff = 8850;
							case 79: fff = 8900;
							case 80: fff = 8950;
							case 81: fff = 9000;
							case 82: fff = 9050;
							case 83: fff = 9100;
							case 84: fff = 9150;
							case 85: fff = 9200;
							case 86: fff = 9250;
							case 87: fff = 9300;
							case 88: fff = 9350;
							case 89: fff = 9400;
							case 90: fff = 9450;
							case 91: fff = 9500;
							case 92: fff = 9550;
							case 93: fff = 9600;
							case 94: fff = 9650;
							case 95: fff = 9700;
							case 96: fff = 9750;
							case 97: fff = 9800;
							case 98: fff = 9850;
							case 99: fff = 9900;
							case 100: fff = 9950;
							case 101: fff = 10000;
						}
					    SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Orta Exp Paketinden %s Exp çýktý !", getName(playerid), playerid, convertNumber(fff));
						oyuncuData[playerid][ExpPuan] += fff;
						new bx[15];
						format(bx, sizeof(bx), "+%d_Exp", fff);
				        PlayerTextDrawSetString(playerid, ParaLevel[playerid][1], bx);
				        if(oyuncuData[playerid][textAyar] == 0){
				        PlayerTextDrawShow(playerid, ParaLevel[playerid][1]);}
				        SetPVarInt(playerid, "YaziMode", 1);
				        SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
						ExpGuncelle(playerid);
						if(oyuncuData[playerid][_LevelCount] >= 50)
						{
							if(oyuncuData[playerid][ExpPuan] > 50000)
							{
							    oyuncuData[playerid][_LevelCount] = 50;
								oyuncuData[playerid][ExpPuan] = 50000;
								ExpGuncelle(playerid);
							}
						}
					}
					case 41:
					{
						new ff = 20;
			            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
                        oyuncuData[playerid][_Bakiye] -= ff;
						new f2f = random(141) + 1, fff;
						switch(f2f)
						{
							case 1: fff = 10000;
							case 2: fff = 10050;
							case 3: fff = 10100;
							case 4: fff = 10150;
							case 5: fff = 10200;
							case 6: fff = 10250;
							case 7: fff = 10300;
							case 8: fff = 10350;
							case 9: fff = 10400;
							case 10: fff = 10450;
							case 11: fff = 10500;
							case 12: fff = 10550;
							case 13: fff = 10600;
							case 14: fff = 10650;
							case 15: fff = 10700;
							case 16: fff = 10750;
							case 17: fff = 10800;
							case 18: fff = 10850;
							case 19: fff = 10900;
							case 20: fff = 10950;
							case 21: fff = 11000;
							case 22: fff = 11050;
							case 23: fff = 11100;
							case 24: fff = 11150;
							case 25: fff = 11200;
							case 26: fff = 11250;
							case 27: fff = 11300;
							case 28: fff = 11350;
							case 29: fff = 11400;
							case 30: fff = 11450;
							case 31: fff = 11500;
							case 32: fff = 11550;
							case 33: fff = 11600;
							case 34: fff = 11650;
							case 35: fff = 11700;
							case 36: fff = 11750;
							case 37: fff = 11800;
							case 38: fff = 11850;
							case 39: fff = 11900;
							case 40: fff = 11950;
							case 41: fff = 12000;
							case 42: fff = 12050;
							case 43: fff = 12100;
							case 44: fff = 12150;
							case 45: fff = 12200;
							case 46: fff = 12250;
							case 47: fff = 12300;
							case 48: fff = 12350;
							case 49: fff = 12400;
							case 50: fff = 12450;
							case 51: fff = 12500;
							case 52: fff = 12550;
							case 53: fff = 12600;
							case 54: fff = 12650;
							case 55: fff = 12700;
							case 56: fff = 12750;
							case 57: fff = 12800;
							case 58: fff = 12850;
							case 59: fff = 12900;
							case 60: fff = 12950;
							case 61: fff = 13000;
							case 62: fff = 13050;
							case 63: fff = 13100;
							case 64: fff = 13150;
							case 65: fff = 13200;
							case 66: fff = 13250;
							case 67: fff = 13300;
							case 68: fff = 13350;
							case 69: fff = 13400;
							case 70: fff = 13450;
							case 71: fff = 13500;
							case 72: fff = 13550;
							case 73: fff = 13600;
							case 74: fff = 13650;
							case 75: fff = 13700;
							case 76: fff = 13750;
							case 77: fff = 13800;
							case 78: fff = 13850;
							case 79: fff = 13900;
							case 80: fff = 13950;
							case 81: fff = 14000;
							case 82: fff = 14050;
							case 83: fff = 14100;
							case 84: fff = 14150;
							case 85: fff = 14200;
							case 86: fff = 14250;
							case 87: fff = 14300;
							case 88: fff = 14350;
							case 89: fff = 14400;
							case 90: fff = 14450;
							case 91: fff = 14500;
							case 92: fff = 14550;
							case 93: fff = 14600;
							case 94: fff = 14650;
							case 95: fff = 14700;
							case 96: fff = 14750;
							case 97: fff = 14800;
							case 98: fff = 14850;
							case 99: fff = 14900;
							case 100: fff = 14950;
							case 101: fff = 15000;
							case 102: fff = 15050;
							case 103: fff = 15100;
							case 104: fff = 15150;
							case 105: fff = 15200;
							case 106: fff = 15250;
							case 107: fff = 15300;
							case 108: fff = 15350;
							case 109: fff = 15400;
							case 110: fff = 15450;
							case 111: fff = 15500;
							case 112: fff = 15550;
							case 113: fff = 15600;
							case 114: fff = 15650;
							case 115: fff = 15700;
							case 116: fff = 15750;
							case 117: fff = 15800;
							case 118: fff = 15850;
							case 119: fff = 15900;
							case 120: fff = 15950;
							case 121: fff = 16000;
							case 122: fff = 16050;
							case 123: fff = 16100;
							case 124: fff = 16150;
							case 125: fff = 16200;
							case 126: fff = 16250;
							case 127: fff = 16300;
							case 128: fff = 16350;
							case 129: fff = 16400;
							case 130: fff = 16450;
							case 131: fff = 16500;
							case 132: fff = 16550;
							case 133: fff = 16600;
							case 134: fff = 16650;
							case 135: fff = 16700;
							case 136: fff = 16750;
							case 137: fff = 16800;
							case 138: fff = 16850;
							case 139: fff = 16900;
							case 140: fff = 16950;
							case 141: fff = 17000;
						}
					    SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Büyük Exp Paketinden %s Exp çýktý !", getName(playerid), playerid, convertNumber(fff));
						new bx[15];
						format(bx, sizeof(bx), "+%d_Exp", fff);
				        PlayerTextDrawSetString(playerid, ParaLevel[playerid][1], bx);
				        if(oyuncuData[playerid][textAyar] == 0){
				        PlayerTextDrawShow(playerid, ParaLevel[playerid][1]);}
				        SetPVarInt(playerid, "YaziMode", 1);
				        SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
						oyuncuData[playerid][ExpPuan] += fff;
						ExpGuncelle(playerid);
						if(oyuncuData[playerid][_LevelCount] >= 50)
						{
							if(oyuncuData[playerid][ExpPuan] > 50000)
							{
							    oyuncuData[playerid][_LevelCount] = 50;
								oyuncuData[playerid][ExpPuan] = 50000;
								ExpGuncelle(playerid);
							}
						}
					}
				}
	        }
	    }
  		case DIALOG_BAKIYE_S30:
		{
			if(!response) return cmd_bakiye(playerid);
 	        if(response)
	        {
	            new ff = 15;
	            if(oyuncuData[playerid][_Bakiye] < ff) return hataMesaji(playerid, "Bu paketi almak için bakiyeniz yetersiz.");
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_S30, DIALOG_STYLE_INPUT, "{FFFFFF}Paket Satýn Alma", "{ff4848}Ekraný Boþ Býrakmayýn !\n{FFFFFF}Deðiþtirmek istediðiniz Nicki girin.", "Deðiþtir", "Geri");
                if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_S30, DIALOG_STYLE_INPUT, "{FFFFFF}Paket Satýn Alma", "{ff4848}Nick uzunluðu 3 den kýsa olamaz !\n{FFFFFF}Deðiþtirmek istediðiniz Nicki girin.", "Deðiþtir", "Geri");
				if(!NickControl(inputtext)) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_S30, DIALOG_STYLE_INPUT, "{FFFFFF}Paket Satýn Alma", "{ff4848}Geçersiz karakterler bulundu !\n{FFFFFF}Deðiþtirmek istediðiniz Nicki girin.", "Deðiþtir", "Geri");
                new query[156], Cache:VeriCek, bool: var_yok = false, yNick[MAX_PLAYER_NAME], id;
			    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", inputtext);
				VeriCek = mysql_query(g_SQL, query);
			   	new rows = cache_num_rows();
				if(rows) { var_yok = true; }
				cache_delete(VeriCek);
			    if(var_yok) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_S30, DIALOG_STYLE_INPUT, "{FFFFFF}Paket Satýn Alma", "{ff4848}Bu nick veritabanýnda kayýtlý !\n{FFFFFF}Deðiþtirmek istediðiniz Nicki girin.", "Deðiþtir", "Geri");
				format(yNick, MAX_PLAYER_NAME, inputtext);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `basarilar` WHERE `bSahip` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "baid", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `basarilar` SET `bSahip` = '%e' WHERE `baid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
				}
				cache_delete(VeriCek);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "cbid", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `cetebagis` SET `Bagisim` = '%e' WHERE `cbid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
				}
				cache_delete(VeriCek);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip1` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "cid", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip1` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
					new c = PlayerCete[playerid], xq[116 + 48 + 48 + 24 + 2 + 5];
					format(CeteIslem[c][cSahip1], 24, yNick);
					format(xq, sizeof(xq), "{FF0067}[Çete Bölgesi]\n{07FFA7}%s(%d)\n{FF9F00}Çete Sahibi: {FFFFFF}%s\n{00FF0C}Çete Seviyesi: {FFFFFF}%d", CeteIslem[c][ceteIsmi], c, yNick, CeteIslem[c][ceteSeviye]);
					UpdateDynamic3DTextLabelText(CeteIslem[c][cLabel], 0xFFFFFFFF, xq);
				}
				cache_delete(VeriCek);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip2` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "cid", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip2` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
					new c = PlayerCete[playerid];
					format(CeteIslem[c][cSahip2], 24, yNick);
				}
				cache_delete(VeriCek);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip3` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "cid", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip3` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
					new c = PlayerCete[playerid];
					format(CeteIslem[c][cSahip3], 24, yNick);
				}
				cache_delete(VeriCek);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip4` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "cid", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip4` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
					new c = PlayerCete[playerid];
					format(CeteIslem[c][cSahip4], 24, yNick);
				}
				cache_delete(VeriCek);
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `evler` WHERE `EvSahibi` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				new tmp_id;
				if(rows)
				{
					cache_get_value_name_int(0, "eid", id);
					tmp_id = id;
					mysql_format(g_SQL, query, sizeof query, "UPDATE `evler` SET `EvSahibi` = '%e' WHERE `eid` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
					format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, yNick);
				}
				cache_delete(VeriCek);
				for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
				{
					if(ao[playerid][i][ao_model] != 0)
					{
						mysql_format(g_SQL, query, sizeof query, "UPDATE `kiyafet` SET `KiyafetSahip` = '%e' WHERE `kid` = '%d' LIMIT 1", yNick, ao[playerid][i][ao_Sqlid]);
						mysql_tquery(g_SQL, query);
					}
				}
				for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
				{
                    if(strcmp(oaIslem[i][oaSahip], getName(playerid), false) == 0)
					{
					    format(oaIslem[i][oaSahip], MAX_PLAYER_NAME, yNick);
						mysql_format(g_SQL, query, sizeof query, "UPDATE `ozelarac` SET `Sahip` = '%e' WHERE `id` = '%d' LIMIT 1", yNick, oaIslem[i][sql_id]);
						mysql_tquery(g_SQL, query);
					}
					if(strcmp(AraclarIslem[i][a_Sahip], getName(playerid), false) == 0)
					{
						format(AraclarIslem[i][a_Sahip], MAX_PLAYER_NAME, yNick);
						mysql_format(g_SQL, query, sizeof query, "UPDATE `normalarac` SET `aSahip` = '%e' WHERE `nid` = '%d' LIMIT 1", yNick, AraclarIslem[i][aSQL]);
						mysql_tquery(g_SQL, query);
					}
				}
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", getName(playerid));
				VeriCek = mysql_query(g_SQL, query);
				rows = cache_num_rows();
				if(rows)
				{
					cache_get_value_name_int(0, "id", id);
					mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `isim` = '%e' WHERE `id` = '%d' LIMIT 1", yNick, id);
					mysql_tquery(g_SQL, query);
				}
				cache_delete(VeriCek);
				new grupID = g_oIslem[playerid][g_Id];
				if(grupID != -1)
				{
					if(strcmp(grupIslem[grupID][g_Kurucu], getName(playerid), false) == 0)
					{
						format(grupIslem[grupID][g_Kurucu], 24, yNick);
					}
				}
				new ekipID = e_oIslem[playerid][e_Id];
				if(ekipID != -1)
				{
					if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) == 0)
					{
						format(ekipIslem[ekipID][e_Kurucu], 24, yNick);
					}
				}
				new xb[66 + 24 + 24 + 24 + 2];
				format(xb, sizeof(xb), "[BAKIYE] Oyuncu %s(%d) bakiye sisteminde Nick Deðiþtirme yaptý. Yeni Nicki: %s", getName(playerid), playerid, yNick);
				SendClientMessageToAll(0x79c7e0ff, xb);
                oyuncuData[playerid][_Bakiye] -= ff;
				SetPlayerName(playerid, yNick);
				EvLabelGuncelle(playerid, tmp_id);
			}
		}
	    case DIALOG_BAKIYE_1:
	    {
	        if(!response) return cmd_bakiye(playerid);
	        if(response)
	        {
	            new id = strval(inputtext), str[128];
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_1, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", "{ff4848}Ekraný boþ býrakmayýn !\n{FFFFFF}Bakiye göndermek istediðiniz oyuncu ID numarasýný girin.", "Devam", "Geri");
	            if(playerid == id) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_1, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", "{ff4848}Kendini seçemezsin !\n{FFFFFF}Bakiye göndermek istediðiniz oyuncu ID numarasýný girin.", "Devam", "Geri");
				if(!IsPlayerConnected(id)) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_1, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", "{ff4848}Böyle bir ID yok !\n{FFFFFF}Bakiye göndermek istediðiniz oyuncu ID numarasýný girin.", "Devam", "Geri");
				SetPVarInt(playerid, "bakiye_id", id);
				format(str, sizeof(str), "{1e90ff}%s(%d) {ffffff}adlý kiþiye göndermek istediðiniz tutarý girin.", getName(id), id);
				ShowPlayerDialog(playerid, DIALOG_BAKIYE_2, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", str, "Gönder", "Geri");
			}
	    }
	    case DIALOG_BAKIYE_2:
	    {
	        if(!response) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_1, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", "{FFFFFF}Bakiye göndermek istediðiniz oyuncu ID numarasýný girin.", "Devam", "Geri");
	        if(response)
	        {
	            new id = GetPVarInt(playerid, "bakiye_id"), str[135 + 35], miktar = strval(inputtext);
	            format(str, sizeof(str), "{ff4848}Ekraný boþ býrakmayýn !\n{1e90ff}%s(%d) {ffffff}adlý kiþiye göndermek istediðiniz tutarý girin.", getName(id), id);
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_2, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", str, "Gönder", "Geri");
				format(str, sizeof(str), "{ff4848}0 Ve altýnda miktar gönderemezsin !\n{1e90ff}%s(%d) {ffffff}adlý kiþiye göndermek istediðiniz tutarý girin.", getName(id), id);
				if(miktar <= 0) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_2, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", str, "Gönder", "Geri");
				format(str, sizeof(str), "{ff4848}Kendi bakiyenin üstünde miktar giremezsin !\n{1e90ff}%s(%d) {ffffff}adlý kiþiye göndermek istediðiniz tutarý girin.", getName(id), id);
                if(miktar > oyuncuData[playerid][_Bakiye]) return ShowPlayerDialog(playerid, DIALOG_BAKIYE_2, DIALOG_STYLE_INPUT, "{FFFFFF}Bakiye Gönderme", str, "Gönder", "Geri");
				if(!IsPlayerConnected(id)) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Bakiye Gönderme", "{ff4848}Göndereceðin oyuncu sunucudan çýkmýþ !", "Kapat", "");
                oyuncuData[playerid][_Bakiye] -= miktar;
				oyuncuData[id][_Bakiye] += miktar;
				format(str, sizeof(str), "{8080ff}Bakiye: {FFFFFF}Oyuncu %s(%d) size %d TL tutarýnda bakiye gönderdi.", getName(playerid), playerid, miktar);
				SendClientMessage(id, -1, str);
				format(str, sizeof(str), "{8080ff}Bakiye: {FFFFFF}Oyuncu %s(%d) - %d TL tutarýnda bakiye gönderdiniz.", getName(id), id, miktar);
				SendClientMessage(playerid, -1, str);
			}
	    }
		case KUMAR_MENU1:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: ShowPlayerDialog(playerid, KUMAR_MENU2, DIALOG_STYLE_INPUT, "SinglePair", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Devam", "Geri");
	                case 1: ShowPlayerDialog(playerid, KUMAR_MENU4, DIALOG_STYLE_INPUT, "SupremeNumber", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Oyna", "Geri");
	            }
	        }
	    }
	    case KUMAR_MENU2:
	    {
	        if(!response) { cmd_kumar(playerid); }
	        if(response)
	        {
	            if(!kumarda[playerid]) return hataMesaji(playerid, "Bu komutu sadece kumarhanede kullanabilirsiniz.");
	            new para = strval(inputtext);
	            if(para < 100000)
	            {
	                ShowPlayerDialog(playerid, KUMAR_MENU2, DIALOG_STYLE_INPUT, "SinglePair", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Devam", "Geri");
	                hataMesaji(playerid, "Girdiðiniz para $100,000 dolarýn altýnda.");
	                return 1;
	            }
				if(para > 250000)
	            {
	                ShowPlayerDialog(playerid, KUMAR_MENU2, DIALOG_STYLE_INPUT, "SinglePair", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Devam", "Geri");
	                hataMesaji(playerid, "Girdiðiniz para $250,000 dolarýn üstünde.");
	                return 1;
	            }
	            if(ParaKorumasi[playerid] < para)
	            {
	                ShowPlayerDialog(playerid, KUMAR_MENU2, DIALOG_STYLE_INPUT, "SinglePair", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Devam", "Geri");
	                hataMesaji(playerid, "Girdiðiniz tutar sizin paranýzýn üstünde.");
	                return 1;
	            }
	            SetPVarInt(playerid, "KumarParasi", para);
	            ShowPlayerDialog(playerid, KUMAR_MENU3, DIALOG_STYLE_LIST, "SinglePair", "Tek\nÇift", "Oyna", "Geri");
	        }
	    }
	    case KUMAR_MENU3:
	    {
	        if(!response) { ShowPlayerDialog(playerid, KUMAR_MENU2, DIALOG_STYLE_INPUT, "SinglePair", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Devam", "Geri"); }
			if(response)
			{
			    if(!kumarda[playerid]) return hataMesaji(playerid, "Bu komutu sadece kumarhanede kullanabilirsiniz.");
				new para = GetPVarInt(playerid, "KumarParasi");
				new zar = random(6) + 1;
				new list = listitem;
				new sz[128];
                SetPVarInt(playerid, "KumarParasi", 0);
                kumarCount[playerid]++;
                if(kumarCount[playerid] == 4 || kumarCount[playerid] == 5 || kumarCount[playerid] == 6 || kumarCount[playerid] == 7)
                {
                    if(list == 0)
					{
						if(zar == 1)
						{
							zar += 1;
						}else if(zar == 3 || zar == 5)
						{
						    zar -= 1;
						}
					}
					if(list == 1)
					{
						if(zar == 6)
						{
							zar -= 1;
						}else if(zar == 2 || zar == 4)
						{
						    zar += 1;
						}
					}
                }
                if(kumarCount[playerid] >= 8) kumarCount[playerid] = 0;
				switch(listitem)
				{
				    case 0:
					{
					    if(zar == 1 || zar == 3 || zar == 5)
					    {
					        pParaver(playerid, -para);
					        pParaver(playerid, para * 2);
					        format(sz, sizeof(sz), "[KUMAR] {FFFFFF}Kurpiyer zar attý ve %d geldi, Tek sayý tercih ettiðiniz için $%s dolar kazandýnýz.", zar, convertNumber(para*2));
							SendClientMessage(playerid, 0x2796CBFF, sz);
						}
					    else
					    {
					        pParaver(playerid, -para);
					        format(sz, sizeof(sz), "[KUMAR] {FFFFFF}Kurpiyer zar attý ve %d geldi, Tek sayý tercih ettiðiniz için $%s dolar kaybettiniz.", zar, convertNumber(para));
							SendClientMessage(playerid, 0x2796CBFF, sz);
					    }
				    }
				    case 1:
				    {
					    if(zar == 2 || zar == 4 || zar == 6)
					    {
					        pParaver(playerid, -para);
					        pParaver(playerid, para * 2);
					        format(sz, sizeof(sz), "[KUMAR] {FFFFFF}Kurpiyer zar attý ve %d geldi, Çift sayý tercih ettiðiniz için $%s dolar kazandýnýz.", zar, convertNumber(para*2));
							SendClientMessage(playerid, 0x2796CBFF, sz);
					    }
					    else
					    {
					        pParaver(playerid, -para);
					        format(sz, sizeof(sz), "[KUMAR] {FFFFFF}Kurpiyer zar attý ve %d geldi, Çift sayý tercih ettiðiniz için $%s dolar kaybettiniz.", zar, convertNumber(para));
							SendClientMessage(playerid, 0x2796CBFF, sz);
					    }
				    }
				}
			}
		}
		case KUMAR_MENU4:
		{
	        if(!response) { cmd_kumar(playerid); }
	        if(response)
	        {
	            if(!kumarda[playerid]) return hataMesaji(playerid, "Bu komutu sadece kumarhanede kullanabilirsiniz.");
				new para = strval(inputtext);
	            if(para < 100000)
	            {
	                ShowPlayerDialog(playerid, KUMAR_MENU4, DIALOG_STYLE_INPUT, "SupremeNumber", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Oyna", "Geri");
	                hataMesaji(playerid, "Girdiðiniz para $100,000 dolarýn altýnda.");
	                return 1;
	            }
				if(para > 250000)
	            {
	                ShowPlayerDialog(playerid, KUMAR_MENU4, DIALOG_STYLE_INPUT, "SupremeNumber", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Oyna", "Geri");
	                hataMesaji(playerid, "Girdiðiniz para $250,000 dolarýn üstünde.");
	                return 1;
	            }
	            if(ParaKorumasi[playerid] < para)
	            {
	                ShowPlayerDialog(playerid, KUMAR_MENU4, DIALOG_STYLE_INPUT, "SupremeNumber", "Oynamak istediðiniz bahis miktarýný girin.\n\nUyarý: En az $100,000 en fazla $250,000 bahis oynayabilirsin.", "Oyna", "Geri");
	                hataMesaji(playerid, "Girdiðiniz tutar sizin paranýzýn üstünde.");
	                return 1;
	            }
	            new sz[128], kurpiyer = random(6) + 1, Brk = random(6) + 1;
				kumarCount[playerid]++;
                if(kumarCount[playerid] == 3 || kumarCount[playerid] == 4 || kumarCount[playerid] == 5 || kumarCount[playerid] == 6)
                {
                    if(Brk > kurpiyer)
					{
					    if(Brk == 1)
					    {
                            Brk += 1;
                            kurpiyer += 2;
					    }
					}
                }
                if(kumarCount[playerid] >= 6) kumarCount[playerid] = 0;
				if(kurpiyer > Brk)
	            {
	                SendClientMessage(playerid, 0x2796CBFF, "============================================");
	                format(sz, sizeof(sz), "[KUMAR] Kurpiyer zar attý ve %d geldi.", kurpiyer);
	                SendClientMessage(playerid, 0x2796CBFF, sz);
					format(sz, sizeof(sz), "[KUMAR] %s zar attý ve %d geldi.", getName(playerid), Brk);
	                SendClientMessage(playerid, 0x2796CBFF, sz);
					format(sz, sizeof(sz), "[KUMAR] Üzgünüz $%s dolar kaybettiniz.", convertNumber(para));
	                SendClientMessage(playerid, 0x2796CBFF, sz);
	                pParaver(playerid, -para);
	            }
				if(Brk > kurpiyer)
	            {
	                SendClientMessage(playerid, 0x2796CBFF, "============================================");
	                format(sz, sizeof(sz), "[KUMAR] Kurpiyer zar attý ve %d geldi.", kurpiyer);
	                SendClientMessage(playerid, 0x2796CBFF, sz);
					format(sz, sizeof(sz), "[KUMAR] %s zar attý ve %d geldi.", getName(playerid), Brk);
	                SendClientMessage(playerid, 0x2796CBFF, sz);
					format(sz, sizeof(sz), "[KUMAR] Tebrikler $%s dolar kazandýnýz.", convertNumber(para*2));
	                SendClientMessage(playerid, 0x2796CBFF, sz);
	                pParaver(playerid, -para);
	                pParaver(playerid, para * 2);
	            }
				if(Brk == kurpiyer)
	            {
	                SendClientMessage(playerid, 0x2796CBFF, "============================================");
	                format(sz, sizeof(sz), "[KUMAR] Kurpiyer zar attý ve %d geldi.", kurpiyer);
	                SendClientMessage(playerid, 0x2796CBFF, sz);
					format(sz, sizeof(sz), "[KUMAR] %s zar attý ve %d geldi.", getName(playerid), Brk);
	                SendClientMessage(playerid, 0x2796CBFF, sz);
					format(sz, sizeof(sz), "[KUMAR] Zarlar eþit geldiði için paranýz iade edildi.");
	                SendClientMessage(playerid, 0x2796CBFF, sz);
	            }
	        }
		}
	    case DIALOG_BOLGELER2:
	    {
	        if(response)
	        {
	        	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu iþlemi kullanmak için araçta olmalýsýn.");
    			if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu iþlemi kullanmak için sürücü olmalýsýn.");
				new xzsc[15], i;
				format(xzsc, sizeof(xzsc), "Bolge_%d", listitem);
				i = GetPVarInt(playerid, xzsc);
				if(CeteSavasMekan[i][ceteMekanSahip] != -1) return hataMesaji(playerid, "Bu mekan ele geçirilmiþ, bölge konumunu alamazsýnýz.");
				GPSOyuncu[playerid][gpsAktif] = true;
				if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
				{
				    DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
				    SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
				}
				new obID;
				obID = CreateDynamicObject(1318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid);
				SetPVarInt(playerid, "gpsID", obID);
				KillTimer(GPSOyuncu[playerid][gps_timer]);
				GPSOyuncu[playerid][gps_timer] = SetTimerEx("GPSTakip", 100, true, "d", playerid);
				SetPVarFloat(playerid, "GPS_X", CeteSavasMekan[i][cMekanLabel][0]);
				SetPVarFloat(playerid, "GPS_Y", CeteSavasMekan[i][cMekanLabel][1]);
				if(GetPVarInt(playerid, "gps_cpID") != -1)
				{
					DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
					SetPVarInt(playerid, "gps_cpID", -1);
				}
				new gps_cpp;
				gps_cpp = CreateDynamicRaceCP(1, CeteSavasMekan[i][cMekanLabel][0], CeteSavasMekan[i][cMekanLabel][1], CeteSavasMekan[i][cMekanLabel][2], CeteSavasMekan[i][cMekanLabel][0], CeteSavasMekan[i][cMekanLabel][1], CeteSavasMekan[i][cMekanLabel][2], 5.0, -1, -1, playerid);
                SetPVarInt(playerid, "gps_cpID", gps_cpp);
				SendClientMessage(playerid, -1, "{6FFF00}GPS: {FFFFFF}Bölge konumu belirlendi, aracýnýz haraket ettirin ve ok iþaretini izleyin.");
	        }
	    }
	    case YENILIKLER:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}02.06.2018 Güncellemeleri",
						"\
						{FF2E96}• {FFFFFF}Dost çete sistemi yapýldý.\n\
						{FF2E96}• {FFFFFF}Dost çeteleri artýk /cPanel ve /Ceteler --> baþvuru kýsmýnda görebileceksiniz.\n\
						{FF2E96}• {FFFFFF}Çeteler için araç respawn özelliði eklendi. /cPanel üzerinden sadece sahipler tarafýndan resetlenebilir.\n\
                        {FF2E96}• {FFFFFF}Çete skini artýk /Ayarlar komutundan kapatýlýp açýlabilir.\n\
                        {FF2E96}• {FFFFFF}Bakiyede bazý deðiþiklikler yapýldý. Deneme Admin getirildi. Eðer iþini iyi yaparsa terfi alabilir.\n\
                        {FF2E96}• {FFFFFF}Artýk adminler tarafýndan hapise atýlýnca /Kefalet komutunu kullanamayacaksýnýz.\n\
						",
						"Kapat", "");
	                }
					case 1:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}26.05.2018 Güncellemeleri",
						"\
						{FF2E96}• {FFFFFF}/PmEngelle, /PmEngelKaldir, /PmEngelTemizle komutlarý yapýldý.\n\
						{FF2E96}• {FFFFFF}Admin sisteminde köklü deðiþiklikler yapýldý.\n\
						{FF2E96}• {FFFFFF}Artýk Etkinlik yapma yetkisine sahip yetkililer etkinlik yapabilecek.\n\
						",
						"Kapat", "");
	                }
					case 2:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}12.03.2018 Güncellemeleri",
						"{FF2E96}• {FFFFFF}Kumarhane sistemi yapýldý.\n\
						{FF2E96}• {FFFFFF}GPS komutuna kumarhane bölgesi eklendi.\n\
						{FF2E96}• {FFFFFF}Giriþ müziði deðiþtirildi.\n\
						",
						"Kapat", "");
	                }
					case 3:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}23.02.2018 Güncellemeleri",
						"{FF2E96}• {FFFFFF}Neon kaldýrýldý.\n\
						{FF2E96}• {FFFFFF}/CeteBolgeler komutu eklendi.\n\
						{FF2E96}• {FFFFFF}Sustur komutuna bir oyuncuyu susturunca tekrar susturmama özelliði getirildi.\n\
						{FF2E96}• {FFFFFF}Uyar komutuna bir oyuncu uyarýldýðýnda 3 saniye geçmeden tekrar uyarýlamayacak.\n\
						{FF2E96}• {FFFFFF}Kral bir oyuncu susturulduðunda artýk duyuru yapamayacak.\n\
						{FF2E96}• {FFFFFF}Vip bir oyuncu susturulduðunda artýk duyuru yapamayacak.\n\
						{FF2E96}• {FFFFFF}Telsiz ve RC komutlarýna flood korumasý eklendi.\n\
						{FF2E96}• {FFFFFF}Artýk çete bölgelerine tüm araçlarla girilebilir.\n\
						{FF2E96}• {FFFFFF}Artýk karakter seçme ekranýnda ilk sýrada polisler olacak ve 0 skor ile baþlanabilecek.\n\
						{FF2E96}• {FFFFFF}Çete savaþlarýnda artýk Sawn, Deagle kýsacasý tüm silahlar kullanýlabilir hale getirildi.\n\
						{FF2E96}• {FFFFFF}Çete savaþ açma ve püskürtme limiti 3 kiþiye yükseltildi.\n\
						{FF2E96}• {FFFFFF}Çete kasasýnda $1,000,000,0 dolarý aþan paralar artýk yatýrýlmayacak.\n\
						{FF2E96}• {FFFFFF}Kral duyuruya 30 saniyede bir duyuru yapma özelliði eklendi.\n\
						{FF2E96}• {FFFFFF}Kefalet komutlarýna artýk 1 dakika da bir kullanýlabilecek.\n\
						{FF2E96}• {FFFFFF}Ölmüþ biri artýk tecavüz edemeyeceksiniz.\n\
						{FF2E96}• {FFFFFF}Güvenlik þifresi girmeden spawn olma bugu giderildi.\n\
						",
						"Kapat", "");
	                }
             		case 4:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}12.02.2018 Güncellemeleri",
						"{FF2E96}• {FFFFFF}Sunucu performansý geliþtirildi.\n\
						{FF2E96}• {FFFFFF}Dinamik gate sistemi yapýldý.\n\
						",
						"Kapat", "");
	                }
	                case 5:
	                {
						ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}29.12.2017 Güncellemeleri",
						"{FF2E96}• {FFFFFF}Sunucunun Tasarýmý tümden deðiþtirildi.\n\
						{FF2E96}• {FFFFFF}Polisken bir ekipte iseniz F4 + /Kill yapýnca ekipten ayrýlmama bugu düzeltildi.\n\
						{FF2E96}• {FFFFFF}EvTemizlemede gözden kaçmýþ ufak bir hata düzeltildi.\n\
						{FF2E96}• {FFFFFF}/AracGetir ve /cArac komutunda kelepçeli ve tazerliyken \"etkinliðe gidemezsin\" yazým hatasý düzeltildi.\n\
						{FF2E96}• {FFFFFF}TextDrawlarý kapatýp, açma stabil hale getirildi.\n\
						{FF2E96}• {FFFFFF}Soygun gibi Textdraw Olaylarýnda 2 tane gözükme sorunu düzeltildi ve tekrardan 3 ayarlandý.\n\
						{FF2E96}• {FFFFFF}Çete Puan sistemi yapýldý.\n\
						{FF2E96}• {FFFFFF}/Ceteler komutundaki Ranklar Çete Puanýna göre ayarlandý. Ve Ranklar yapýldý.\n\
						{FF2E96}• {FFFFFF}Barikatlara sýnýrlama getirildi. En fazla 3 barikat ekleyebilirsiniz.\n\
						{FF2E96}• {FFFFFF}Silinmiþ bir map hatasý düzeltildi.\n\
					    {FF2E96}• {FFFFFF}Eðer bir çete bölgesinde savaþ oluyorsa o bölgeye araçla girememe ve araç getirememe özelliði aktif hale getirildi.\n\
					    {FF2E96}• {FFFFFF}ATM sistemi tekrar yapýldý, sadece banka iþlevi görmekte.\n\
					    {FF2E96}• {FFFFFF}Eþyalar komutu yapýldý. /Esyalar yazarak görebilirsiniz.\n\
					    {FF2E96}• {FFFFFF}GPS menüsüne Çetelerin mekanlarý eklendi.\n\
					    {FF2E96}• {FFFFFF}Hýz göstergesi yapýldý.\n\
					    {FF2E96}• {FFFFFF}Çete mekanlarýna ýþýnlanýnca map yüklenene kadar oyuncuyu bekletme eklendi.\n\
					    {FF2E96}• {FFFFFF}Polis, Çevik Kuvvet ve Özel Hareket yerlerine zone eklendi. (Renk)\n\
					    {FF2E96}• {FFFFFF}/aRenk komutunda araçlarýn bazý verilerin güncellenmemesi sorunu düzeltildi.\n\
					    {FF2E96}• {FFFFFF}Artýk Yakalama, Yakalanma, Kelepçeleme, Kelepçelenme verileriniz kayýt altýna alýnýyor.\n\
					    {FF2E96}• {FFFFFF}Tab Statü ekranýna Yakalama, Yakalanma, Kelepçeleme, Kelepçelenme verileriniz eklendi.\n\
					    {FF2E96}• {FFFFFF}Soru Sorma ve Ýstek Þarkýlar artýk dialoglu hale getirildi. Ýstediðiniz þarkýlar ve sorular belirli bir sýra içinde yanýtlanýp, açýlacaktýr.\n\
					    {FF2E96}• {FFFFFF}Eðer araçta olmadan /aPanel komutunu kullanýrsak \"Araç içinde olmadan özel bir araç satamazýn\" adlý yazým hatasý düzeltildi.\n\
					    {FF2E96}• {FFFFFF}Apanelden üzerinden rasgele renk deðiþtirmeye $10,000 dolar ücretlendirme eklendi.\n\
					    {FF2E96}• {FFFFFF}Çete araçlarýna ve Ev araçlarýna Plaka deðiþtirme desteði getirildi.\n\
					    {FF2E96}• {FFFFFF}Çete araçlarýna Modifiye yapma desteði getirildi.\n\
					    {FF2E96}• {FFFFFF}Artýk çete üyeleri sunucuya girince çetedeki tüm üyeler giriþ yaptý bilgisi veriliyor.\n\
						",
						"Kapat", "");
	                }
	            }
	        }
	    }
		case SARKILAR:
	    {
	        if(response)
	        {
				new sz[15], c;
				format(sz, sizeof(sz), "sarkiID_%d", listitem);
				c = GetPVarInt(playerid, sz);
				if(Sarkilar[c][acildiMi] == 0) return hataMesaji(playerid, "Bu kullanýcýnýn þarkýsý açýlmýþ.");
	            SetPVarInt(playerid, "sarkicID", listitem);
	            ShowPlayerDialog(playerid, SARKI_YANIT, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ýstek Þarký", "{FFCF4B}Bu kullanýcýnýn þarkýsýný açtýnýz mý veya açýldýmý ?\n{FFCF4B}Eðer \"Açýldý\" butonuna basarsanýz bu istek listeden otomatik olarak silinecektir.\n{FFCF4B}Þarký sile basarsan bu istek kaldýrýlacaktýr.", "Açýldý", "Þarkýyý Sil");
	        }
	    }
	    case SARKI_YANIT:
	    {
	        if(!response)
	        {
				new sz[15], c;
				format(sz, sizeof(sz), "sarkiID_%d", GetPVarInt(playerid, "sarkicID"));
				c = GetPVarInt(playerid, sz);
				Sarkilar[c][acildiMi] = 0;
				Sarkilar[c][sGonderen] = INVALID_PLAYER_ID;
				format(Sarkilar[c][_url], 148, "");
				SendClientMessage(playerid, -1, "{f1c40f}Ýstek Þarký: {ffffff}Listeden kaldýrýldý.");
				foreach(new i : Player)
				{
				    if(oyuncuData[i][pAdmin] >= 9)
				    {
						SCM_Ex(i, 0x6AB04CFF, "[!] Oyuncu %s(%d), /Sarkilar komutundan bir þarký kaldýrdý.", getName(playerid), playerid);
				    }
				}
	        }
	        if(response)
	        {
				new sz[15], c, bb[400];
				format(sz, sizeof(sz), "sarkiID_%d", GetPVarInt(playerid, "sarkicID"));
				c = GetPVarInt(playerid, sz);
				if(Sarkilar[c][acildiMi] == 0) return hataMesaji(playerid, "Bu kullanýcýnýn þarkýsý açýlmýþ.");
				if(!IsPlayerConnected(Sarkilar[c][sGonderen]))
				{
				    Sarkilar[c][acildiMi] = 0;
				    Sarkilar[c][sGonderen] = INVALID_PLAYER_ID;
				    format(Sarkilar[c][_url], 148, "");
				    hataMesaji(playerid, "Bu kullanýcý oyundan çýkmýþ.");
				    return 1;
				}
                format(bb, sizeof(bb), "{f1c40f}Açan Yetkili: {FFFFFF}%s\n{f1c40f}Ýstediðiniz Þarký: {ffffff}%s\n\n{ffffff}Ýstediðiniz þarký açýlmýþtýr, keyifli dinlemeler.", getName(playerid), Sarkilar[c][_url]);
				ShowPlayerDialog(Sarkilar[c][sGonderen], 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ýstek Þarkýnýz", bb, "Kapat", "");
				SendClientMessage(playerid, -1, "{f1c40f}Ýstek Þarký: {ffffff}Kullanýcýnýn istediði þarkýyý açtýnýz.");
				Sarkilar[c][acildiMi] = 0;
				Sarkilar[c][sGonderen] = INVALID_PLAYER_ID;
				format(Sarkilar[c][_url], 148, "");
			}
	    }
		case SORULAR:
	    {
	        if(response)
	        {
				new sz[15], c;
				format(sz, sizeof(sz), "SoruID_%d", listitem);
				c = GetPVarInt(playerid, sz);
				if(Sorular[c][sonuclanmisMi] == 0) return hataMesaji(playerid, "Bu kullanýcýnýn sorusu yanýtlanmýþ !");
	            SetPVarInt(playerid, "cevapID", listitem);
	            ShowPlayerDialog(playerid, SORU_YANIT, DIALOG_STYLE_INPUT, "{FFFFFF}Soru -> Yanýt", "{FFFFFF}Sorunun yanýtýný gönderdiðiniz zaman bu soru otomatik olarak silinecektir.", "Yanýtla", "Geri");
	        }
	    }
	    case SORU_YANIT:
	    {
	        if(!response) return cmd_sorular(playerid);
	        if(response)
	        {
				new sz[15], c, bb[400];
				format(sz, sizeof(sz), "SoruID_%d", GetPVarInt(playerid, "cevapID"));
				c = GetPVarInt(playerid, sz);
				if(Sorular[c][sonuclanmisMi] == 0) return hataMesaji(playerid, "Bu kullanýcýnýn sorusu yanýtlanmýþ !");
				if(!IsPlayerConnected(Sorular[c][gonderen]))
				{
					Sorular[c][sonuclanmisMi] = 0;
					Sorular[c][gonderen] = INVALID_PLAYER_ID;
					format(Sorular[c][sorusu], 148, "");
				    hataMesaji(playerid, "Bu kullanýcý oyundan çýkmýþ.");
				    return 1;
				}
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, SORU_YANIT, DIALOG_STYLE_INPUT, "{FFFFFF}Soru -> Yanýt", "{FFFFFF}Ekraný Boþ Býrakma !\n\n{FFFFFF}Sorunun yanýtýný gönderdiðiniz zaman bu soru otomatik olarak silinecektir.", "Yanýtla", "Geri");
                format(bb, sizeof(bb), "{f1c40f}Yanýtlayan Yetkili: {FFFFFF}%s\n{f1c40f}Sorunuz: {ffffff}%s\n{f1c40f}Yanýt: {ffffff}%s", getName(playerid), Sorular[c][sorusu], inputtext);
				ShowPlayerDialog(Sorular[c][gonderen], 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sorunuzun Yanýtý", bb, "Kapat", "");
				SendClientMessage(playerid, -1, "{f1c40f}Sorular: {ffffff}Kullanýcýnýn sorusunu yanýtladýnýz.");
				Sorular[c][sonuclanmisMi] = 0;
				Sorular[c][gonderen] = INVALID_PLAYER_ID;
				format(Sorular[c][sorusu], 148, "");
				oyuncuData[playerid][yanits]++;
			}
	    }
	    case DIALOG_ESYALARCMD:
	    {
	        if(response)
	        {
	            SetPVarInt(playerid, "neSecti", listitem);
	            switch(listitem)
	            {
	                case 0: ShowPlayerDialog(playerid, DIALOG_ESYALAR1, DIALOG_STYLE_LIST, "{FFFFFF}Eþyalar -> Bonzai", "» Bonzai Koy\n» Bonzai Al\n", "(>>)", "(<<)");
					case 1: ShowPlayerDialog(playerid, DIALOG_ESYALAR1, DIALOG_STYLE_LIST, "{FFFFFF}Eþyalar -> Eroin", "» Eroin Koy\n» Eroin Al\n", "(>>)", "(<<)");
					case 2: ShowPlayerDialog(playerid, DIALOG_ESYALAR1, DIALOG_STYLE_LIST, "{FFFFFF}Eþyalar -> Ot", "» Ot Koy\n» Ot Al\n", "(>>)", "(<<)");
					case 3: ShowPlayerDialog(playerid, DIALOG_ESYALAR1, DIALOG_STYLE_LIST, "{FFFFFF}Eþyalar -> Bomba", "» Bomba Koy\n» Bomba Al\n", "(>>)", "(<<)");
	            }
	        }
	    }
	    case DIALOG_ESYALAR1:
	    {
			if(!response) return cmd_esyalar(playerid);
			if(response)
			{
				new
					_baslik[25],
					id = GetPVarInt(playerid, "neSecti")
				;
				switch(listitem)
			    { 
			        case 0:
					{
         				if(id == 0) _baslik = "Eþyalar -> Bonzai Koy";
		                if(id == 1) _baslik = "Eþyalar -> Eroin Koy";
		                if(id == 2) _baslik = "Eþyalar -> Ot Koy";
		                if(id == 3) _baslik = "Eþyalar -> Bomba Koy";
						ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Koymak istediðiniz miktarý girin.", "Koy", "(<<)");
					}
					case 1:
					{
         				if(id == 0) _baslik = "Eþyalar -> Bonzai Al";
		                if(id == 1) _baslik = "Eþyalar -> Eroin Al";
		                if(id == 2) _baslik = "Eþyalar -> Ot Al";
		                if(id == 3) _baslik = "Eþyalar -> Bomba Al";
						ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Almak istediðiniz miktarý girin.", "Al", "(<<)");
					}
			    }
			}
	    }
	    case DIALOG_ESYALAR2:
	    {
			if(!response) return cmd_esyalar(playerid);
			if(response)
			{
			    new koyacak = strval(inputtext), id = GetPVarInt(playerid, "neSecti"), _baslik[25];
				if(id == 0) _baslik = "Eþyalar -> Bonzai Koy";
                if(id == 1) _baslik = "Eþyalar -> Eroin Koy";
                if(id == 2) _baslik = "Eþyalar -> Ot Koy";
                if(id == 3) _baslik = "Eþyalar -> Bomba Koy";
                if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Boþ býrakamazsýn !\n\nKoymak istediðiniz miktarý girin.", "Koy", "(<<)");
				if(koyacak <= 0) return ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Geçersiz deðer !\n\nKoymak istediðiniz miktarý girin.", "Koy", "(<<)");
				switch(id)
				{
				    case 0:
					{
						if(koyacak > Bonzaiq[playerid]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Üstünüzde bu kadar bonzai yok !\n\nKoymak istediðiniz miktarý girin.", "Koy", "(<<)");
                        Bonzaiq[playerid] -= koyacak;
                        oyuncuData[playerid][_bonzai] += koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Koyma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
					case 1:
					{
						if(koyacak > Eroinq[playerid]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Üstünüzde bu kadar eroin yok !\n\nKoymak istediðiniz miktarý girin.", "Koy", "(<<)");
                        Eroinq[playerid] -= koyacak;
                        oyuncuData[playerid][_eroin] += koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Koyma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
					case 2:
					{
						if(koyacak > Otq[playerid]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Üstünüzde bu kadar ot yok !\n\nKoymak istediðiniz miktarý girin.", "Koy", "(<<)");
						Otq[playerid] -= koyacak;
                        oyuncuData[playerid][_ot] += koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Koyma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
					case 3:
					{
						if(koyacak > Bombam[playerid]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR2, DIALOG_STYLE_INPUT, _baslik, "Üstünüzde bu kadar bomba yok !\n\nKoymak istediðiniz miktarý girin.", "Koy", "(<<)");
						Bombam[playerid] -= koyacak;
                        oyuncuData[playerid][_bomba] += koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Koyma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
				}
			}
	    }
		case DIALOG_ESYALAR3:
	    {
			if(!response) return cmd_esyalar(playerid);
			if(response)
			{
			    new koyacak = strval(inputtext), id = GetPVarInt(playerid, "neSecti"), _baslik[25];
				if(id == 0) _baslik = "Eþyalar -> Bonzai Al";
                if(id == 1) _baslik = "Eþyalar -> Eroin Al";
                if(id == 2) _baslik = "Eþyalar -> Ot Al";
                if(id == 3) _baslik = "Eþyalar -> Bomba Al";
                if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Boþ býrakamazsýn !\n\nAlmak istediðiniz miktarý girin.", "Al", "(<<)");
				if(koyacak <= 0) return ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Geçersiz deðer !\n\nAlmak istediðiniz miktarý girin.", "Al", "(<<)");
				switch(id)
				{
				    case 0:
					{
						if(koyacak > oyuncuData[playerid][_bonzai]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Eþyanýzda bu kadar bonzai yok !\n\nAlmak istediðiniz miktarý girin.", "Al", "(<<)");
                        Bonzaiq[playerid] += koyacak;
                        oyuncuData[playerid][_bonzai] -= koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Alma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
					case 1:
					{
						if(koyacak > oyuncuData[playerid][_eroin]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Eþyanýzda bu kadar eroin yok !\n\nAlmak istediðiniz miktarý girin.", "Al", "(<<)");
                        Eroinq[playerid] += koyacak;
                        oyuncuData[playerid][_eroin] -= koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Alma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
					case 2:
					{
						if(koyacak > oyuncuData[playerid][_ot]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Eþyanýzda bu kadar ot yok !\n\nAlmak istediðiniz miktarý girin.", "Al", "(<<)");
						Otq[playerid] += koyacak;
                        oyuncuData[playerid][_ot] -= koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Alma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
					case 3:
					{
						if(koyacak > oyuncuData[playerid][_bomba]) return ShowPlayerDialog(playerid, DIALOG_ESYALAR3, DIALOG_STYLE_INPUT, _baslik, "Eþyanýzda bu kadar bomba yok !\n\nAlmak istediðiniz miktarý girin.", "Al", "(<<)");
						Bombam[playerid] += koyacak;
                        oyuncuData[playerid][_bomba] -= koyacak;
                        SendClientMessage(playerid, 0x3498DBFF, "Bilgi: {ffffff}Alma iþlemi baþarýlý !");
                        cmd_esyalar(playerid);
					}
				}
			}
	    }
	    case DIALOG_SAVAS_BASLAT:
    	{
			if(response)
			{
       			new c = PlayerCete[playerid], sb[310], id = GetPVarInt(playerid, "_SavasID");
				if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
				if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
				{
					hataMesaji(playerid, "Çete savaþlarýný sadece çete kurucularý baþlatabilir.");
					return 1;
				}
				if(SavasIslem[playerid][CeteSavasBolgedemi] == 0) return hataMesaji(playerid, "Herhangi bir çete savaþý bölgesinde deðilsiniz.");
				aranmaLeveli(playerid, 24);
				foreach(new i: Player){if(SavasIslem[i][CeteSavasBolgedemi] == 1){if(PlayerCete[i] == c){
				if(GetPVarInt(i, "_SavasID") == GetPVarInt(playerid, "_SavasID")){if(playerid != i){
				aranmaLeveli(i, 24);}}}}}
				new sID = CeteSavasMekan[id][ceteMekanSahip];
				if(sID != -1){
                format(sb, sizeof(sb), "[!] Püskürtme: {3D8EB9}%s {EBBD63}çetesi þuan {97CE68}%s {EBBD63}çetesini {81E2E6}%s {EBBD63}adlý mekandan püskürtmeye çalýþýyor !", CeteIslem[c][ceteIsmi], CeteIslem[sID][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi]);
				}
				SendClientMessageToAll(0xD33257FF, sb);
				GameTextForPlayer(playerid, "~r~~h~~h~Puskurtme ~w~~h~Baslatildi !", 5000, 4);
				SavasIslem[playerid][Puskurtme] = 1;
				SavasIslem[playerid][SavasSurem2] = PUSKURTME; // 1350
                SavasIslem[playerid][SavasSureArttir] += 2;
                SetPVarInt(playerid, "PuskurtmeModee", 1);
                ShowPlayerProgressBar(playerid, SavasBar[playerid]);
                SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], PUSKURTME);
                SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
                KillTimer(SavasIslem[playerid][puskurtTimer]);
                SavasIslem[playerid][puskurtTimer] = SetTimerEx("SavasPuskurt", 1000, true, "d", playerid);
			}
	    }
		case DIALOG_SAVAS_AC:
	    {
	        if(response)
	        {
				new c = PlayerCete[playerid], id = GetPVarInt(playerid, "_SavasID"), gParax[125];
				if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
				if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
				{
					hataMesaji(playerid, "Çete savaþlarýný sadece çete kurucularý baþlatabilir.");
					return 1;
				}
				if(SavasIslem[playerid][CeteSavasBolgedemi] == 0) return hataMesaji(playerid, "Herhangi bir çete savaþý bölgesinde deðilsiniz.");
				new sb[310];
				switch(listitem)
	            {
	                case 0:
	                {
	                    if(CeteIslem[c][ceteKasasi] < 1500000)
	                    {
	                        format(gParax, sizeof(gParax), "{E67E22}Hata: {FFFFFF}Çete kasanýzda $%s dolar eksik !", convertNumber(1500000-CeteIslem[c][ceteKasasi]));
							SendClientMessage(playerid, -1, gParax);
							return 1;
	                    }
						if(id != -1){
						if(c == CeteSavasMekan[id][eleGecirenCete]) return hataMesaji(playerid, "Bu bölgeyi zaten sizin çeteniz ele geçiriyor !");
						if(CeteSavasMekan[id][eleGecirenCete] != -1) return hataMesaji(playerid, "Bu bölgeyi þuan baþka bir çete ele geçiriyor !");
	                    }
       					CeteSavasMekan[id][eleGecirenCete] = c;
						new sID = CeteSavasMekan[id][ceteMekanSahip];
						if(sID == -1){
						format(sb, sizeof(sb), "[!] Savaþ: {3D8EB9}%s {EBBD63}çetesi þuan {97CE68}%s {EBBD63}adlý çete bölgesini ele geçiriyor !", CeteIslem[c][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi]);
						}
						SendClientMessageToAll(0xD33257FF, sb);
						aranmaLeveli(playerid, 24);
						foreach(new i: Player){if(SavasIslem[i][CeteSavasBolgedemi] == 1){if(PlayerCete[i] == c){
						if(GetPVarInt(i, "_SavasID") == id){if(playerid != i){
						aranmaLeveli(i, 24);}}}}}
						SetPVarInt(playerid, "_CeteZarar", 1500000);
	                    GameTextForPlayer(playerid, "~g~~h~~h~Savas Baslatildi !~n~~b~~h~~h~Sag Taraftan Ne Zaman~n~~r~~h~~h~Alacaginizi Gorebilirsiniz", 10000, 4);
	                    SavasIslem[playerid][SavasTip] = 1;
	                    SavasIslem[playerid][SavasSurem] = TIP_1;
	                    SavasIslem[playerid][SavasSureArttir] += 2;
	                    ShowPlayerProgressBar(playerid, SavasBar[playerid]);
	                    SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], TIP_1);
                        SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
						KillTimer(SavasIslem[playerid][savasTimer]);
						SetPVarInt(playerid, "EleGeciriyomLan", id);
						SavasIslem[playerid][savasTimer] = SetTimerEx("SavasBarUp", 1000, true, "d", playerid);
					}
					case 1:
	                {
						if(CeteIslem[c][ceteKasasi] < 3250000)
	                    {
	                        format(gParax, sizeof(gParax), "{E67E22}Hata: {FFFFFF}Çete kasanýzda $%s dolar eksik !", convertNumber(3250000-CeteIslem[c][ceteKasasi]));
							SendClientMessage(playerid, -1, gParax);
							return 1;
	                    }
						if(id != -1){
						if(c == CeteSavasMekan[id][eleGecirenCete]) return hataMesaji(playerid, "Bu bölgeyi zaten sizin çeteniz ele geçiriyor !");
						if(CeteSavasMekan[id][eleGecirenCete] != -1) return hataMesaji(playerid, "Bu bölgeyi þuan baþka bir çete ele geçiriyor !");
	                    }
       					CeteSavasMekan[id][eleGecirenCete] = c;
	                    new sID = CeteSavasMekan[id][ceteMekanSahip];
						if(sID == -1){
						format(sb, sizeof(sb), "[!] Savaþ: {3D8EB9}%s {EBBD63}çetesi þuan {97CE68}%s {EBBD63}adlý çete bölgesini ele geçiriyor !", CeteIslem[c][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi]);
						}
						SendClientMessageToAll(0xD33257FF, sb);
						aranmaLeveli(playerid, 24);
						foreach(new i: Player){if(SavasIslem[i][CeteSavasBolgedemi] == 1){if(PlayerCete[i] == c){
						if(GetPVarInt(i, "_SavasID") == id){if(playerid != i){
						aranmaLeveli(i, 24);}}}}}
	                    SetPVarInt(playerid, "_CeteZarar", 3250000);
	                    GameTextForPlayer(playerid, "~g~~h~~h~Savas Baslatildi !~n~~b~~h~~h~Sag Taraftan Ne Zaman~n~~r~~h~~h~Alacaginizi Gorebilirsiniz", 10000, 4);
	                    SavasIslem[playerid][SavasTip] = 2;
	                    SavasIslem[playerid][SavasSurem] = TIP_2;
	                    SavasIslem[playerid][SavasSureArttir] += 2;
	                    ShowPlayerProgressBar(playerid, SavasBar[playerid]);
	                    SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], TIP_2);
                        SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
                        KillTimer(SavasIslem[playerid][savasTimer]);
                        SetPVarInt(playerid, "EleGeciriyomLan", id);
                        SavasIslem[playerid][savasTimer] = SetTimerEx("SavasBarUp", 1000, true, "d", playerid);
					}
					case 2:
	                {
						if(CeteIslem[c][ceteKasasi] < 6500000)
	                    {
	                        format(gParax, sizeof(gParax), "{E67E22}Hata: {FFFFFF}Çete kasanýzda $%s dolar eksik !", convertNumber(6500000-CeteIslem[c][ceteKasasi]));
							SendClientMessage(playerid, -1, gParax);
							return 1;
	                    }
						if(id != -1){
						if(c == CeteSavasMekan[id][eleGecirenCete]) return hataMesaji(playerid, "Bu bölgeyi zaten sizin çeteniz ele geçiriyor !");
						if(CeteSavasMekan[id][eleGecirenCete] != -1) return hataMesaji(playerid, "Bu bölgeyi þuan baþka bir çete ele geçiriyor !");
	                    }
       					CeteSavasMekan[id][eleGecirenCete] = c;
	                    new sID = CeteSavasMekan[id][ceteMekanSahip];
						if(sID == -1){
						format(sb, sizeof(sb), "[!] Savaþ: {3D8EB9}%s {EBBD63}çetesi þuan {97CE68}%s {EBBD63}adlý çete bölgesini ele geçiriyor !", CeteIslem[c][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi]);
						}
						SendClientMessageToAll(0xD33257FF, sb);
						aranmaLeveli(playerid, 24);
						foreach(new i: Player){if(SavasIslem[i][CeteSavasBolgedemi] == 1){if(PlayerCete[i] == c){
						if(GetPVarInt(i, "_SavasID") == id){if(playerid != i){
						aranmaLeveli(i, 24);}}}}}
	                    SetPVarInt(playerid, "_CeteZarar", 6500000);
	                    GameTextForPlayer(playerid, "~g~~h~~h~Savas Baslatildi !~n~~b~~h~~h~Sag Taraftan Ne Zaman~n~~r~~h~~h~Alacaginizi Gorebilirsiniz", 10000, 4);
	                    SavasIslem[playerid][SavasTip] = 3;
	                    SavasIslem[playerid][SavasSurem] = TIP_3;
	                    SavasIslem[playerid][SavasSureArttir] += 2;
	                    ShowPlayerProgressBar(playerid, SavasBar[playerid]);
	                    SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], TIP_3);
                        SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
                        KillTimer(SavasIslem[playerid][savasTimer]);
                        SetPVarInt(playerid, "EleGeciriyomLan", id);
                        SavasIslem[playerid][savasTimer] = SetTimerEx("SavasBarUp", 1000, true, "d", playerid);
					}
					case 3:
	                {
						if(CeteIslem[c][ceteKasasi] < 15000000)
	                    {
	                        format(gParax, sizeof(gParax), "{E67E22}Hata: {FFFFFF}Çete kasanýzda $%s dolar eksik !", convertNumber(15000000-CeteIslem[c][ceteKasasi]));
							SendClientMessage(playerid, -1, gParax);
							return 1;
	                    }
						new sBlok@ = 0;
		    			foreach(new idf: CeteSavaslar)
						{
						    if(CeteSavasMekan[idf][ceteMekanSahip] == c)
						    {
						    	if(CeteSavasMekan[idf][ceteTip] == 4)
						    	{
						    	    sBlok@++;
						    	}
							}
						}
						if(sBlok@ >= 1) return hataMesaji(playerid, "Tip 4 den en fazla 1 bölge ele geçirebilirsiniz.");
						if(id != -1){
						if(c == CeteSavasMekan[id][eleGecirenCete]) return hataMesaji(playerid, "Bu bölgeyi zaten sizin çeteniz ele geçiriyor !");
						if(CeteSavasMekan[id][eleGecirenCete] != -1) return hataMesaji(playerid, "Bu bölgeyi þuan baþka bir çete ele geçiriyor !");
	                    }
						CeteSavasMekan[id][eleGecirenCete] = c;
	                    new sID = CeteSavasMekan[id][ceteMekanSahip];
						if(sID == -1){
						format(sb, sizeof(sb), "[!] Savaþ: {3D8EB9}%s {EBBD63}çetesi þuan {97CE68}%s {EBBD63}adlý çete bölgesini ele geçiriyor !", CeteIslem[c][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi]);
						}
						SendClientMessageToAll(0xD33257FF, sb);
	                    aranmaLeveli(playerid, 24);
						foreach(new i: Player){if(SavasIslem[i][CeteSavasBolgedemi] == 1){if(PlayerCete[i] == c){
						if(GetPVarInt(i, "_SavasID") == id){if(playerid != i){
						aranmaLeveli(i, 24);}}}}}
	                    GameTextForPlayer(playerid, "~g~~h~~h~Savas Baslatildi !~n~~b~~h~~h~Sag Taraftan Ne Zaman~n~~r~~h~~h~Alacaginizi Gorebilirsiniz", 10000, 4);
						SetPVarInt(playerid, "_CeteZarar", 15000000);
						SavasIslem[playerid][SavasTip] = 4;
	                    SavasIslem[playerid][SavasSurem] = TIP_4;
	                    SavasIslem[playerid][SavasSureArttir] += 2;
	                    ShowPlayerProgressBar(playerid, SavasBar[playerid]);
	                    SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], TIP_4);
                        SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
                        KillTimer(SavasIslem[playerid][savasTimer]);
                        SetPVarInt(playerid, "EleGeciriyomLan", id);
                        SavasIslem[playerid][savasTimer] = SetTimerEx("SavasBarUp", 1000, true, "d", playerid);
					}
				}
	        }
		}
	    /*case DIALOG_GUVENLIK3:
	    {
	        if(response)
	        {
             	new v = 0;
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(
				        inputtext[i] == '^' ||
						inputtext[i] == '*' ||
						inputtext[i] == '/' ||
						inputtext[i] == '\\' ||
						inputtext[i] == ''' ||
						inputtext[i] == '%' ||
						inputtext[i] == '`' ||
						inputtext[i] == ',' ||
						inputtext[i] == '#' ||
						inputtext[i] == ';' ||
						inputtext[i] == ' ' ||
						inputtext[i] == '{' ||
						inputtext[i] == '}' ||
						inputtext[i] == '&' ||
						inputtext[i] == '£')
				    {
				        v = 1;
						break;
				    }
				}
				if(v == 1) return hataMesaji(playerid, "Güvenlik þifresi onaylanmadý !");
	            GenelLog(playerid, 6, "", inputtext, 0, 0, 0);
	            new xcexk[7];
				GetPVarString(playerid, "GuvenlikPass", xcexk, sizeof(xcexk));
				if(!strlen(inputtext)) return hataMesaji(playerid, "Güvenlik þifresi onaylanmadý !");
				if(strlen(inputtext) != 6) return hataMesaji(playerid, "Güvenlik þifresi onaylanmadý !");
				if(strcmp(inputtext, xcexk, false) != 0) return hataMesaji(playerid, "Güvenlik þifresi onaylanmadý !");
				GuvenlikGoruntule(playerid);
				GenelLog(playerid, 7, "", inputtext, 0, 0, 0);
	        }
	    }
		case DIALOG_GUVENLIK2:
		{
		    if(!response) return Kick(playerid);
		    if(response)
		    {
				new v = 0;
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(
				        inputtext[i] == '^' ||
						inputtext[i] == '*' ||
						inputtext[i] == '/' ||
						inputtext[i] == '\\' ||
						inputtext[i] == ''' ||
						inputtext[i] == '%' ||
						inputtext[i] == '`' ||
						inputtext[i] == ',' ||
						inputtext[i] == '#' ||
						inputtext[i] == ';' ||
						inputtext[i] == ' ' ||
						inputtext[i] == '{' ||
						inputtext[i] == '}' ||
						inputtext[i] == '&' ||
						inputtext[i] == '£')
				    {
				        v = 1;
						break;
				    }
				}
				if(v == 1)
				{
					if(LogGin[playerid] >= 3)
			        {
	              		ShowPlayerDialog(playerid, DIALOG_BOS, DIALOG_STYLE_MSGBOX, "Þüphe !", "{FFFFFF}Üzgünüz, þifrenizi hatýrlamýyorsanýz yeni bir hesap açýn.\n{FFFFFF}Veya yetkililer ile konuþun !", "Kapat", "");
						oKick(playerid);
						return 1;
			        }
					LogGin[playerid]++;
					GuveenlikGiriss(playerid);
				    return 1;
				}
		        GenelLog(playerid, 4, "", inputtext, 0, 0, 0);
				new xcexk[7];
				GetPVarString(playerid, "GuvenlikPass", xcexk, sizeof(xcexk));
                if(!strlen(inputtext)){
                	if(LogGin[playerid] >= 3)
			        {
	              		ShowPlayerDialog(playerid, DIALOG_BOS, DIALOG_STYLE_MSGBOX, "Þüphe !", "{FFFFFF}Üzgünüz, þifrenizi hatýrlamýyorsanýz yeni bir hesap açýn.\n{FFFFFF}Veya yetkililer ile konuþun !", "Kapat", "");
						oKick(playerid);
						return 1;
			        }
					LogGin[playerid]++;
					GuveenlikGiriss(playerid);
                    return 1;
                }
                if(strlen(inputtext) != 6)
                {
					if(LogGin[playerid] >= 3)
			        {
	              		ShowPlayerDialog(playerid, DIALOG_BOS, DIALOG_STYLE_MSGBOX, "Þüphe !", "{FFFFFF}Üzgünüz, þifrenizi hatýrlamýyorsanýz yeni bir hesap açýn.\n{FFFFFF}Veya yetkililer ile konuþun !", "Kapat", "");
						oKick(playerid);
						return 1;
			        }
					LogGin[playerid]++;
					GuveenlikGiriss(playerid);
                    return 1;
                }
				if(strcmp(inputtext, xcexk, false) != 0)
				{
					if(LogGin[playerid] >= 3)
			        {
	              		ShowPlayerDialog(playerid, DIALOG_BOS, DIALOG_STYLE_MSGBOX, "Þüphe !", "{FFFFFF}Üzgünüz, þifrenizi hatýrlamýyorsanýz yeni bir hesap açýn.\n{FFFFFF}Veya yetkililer ile konuþun !", "Kapat", "");
						oKick(playerid);
						return 1;
			        }
					LogGin[playerid]++;
					GuveenlikGiriss(playerid);
					return 1;
				}
				GenelLog(playerid, 5, "", inputtext, 0, 0, 0);
                SendClientMessage(playerid, 0x9B59B6, "Güvenlik Þifresi {FFFFFF}doðrulandý.");
                GuvenliKontrol[playerid] = false;
				girisMenu(playerid, 0);
		    }
		}
	    case DIALOG_GUVENLIK:
	    {
	        if(!response) return GuvenlikSiffre(playerid);
			if(response)
	        {
         		new
         		    bli[110],
		 			query[85],
				 	bool: gecerDurum = false,
				 	sS = 0,
					kS = 0,
					pasz[MAX_GSifre]
		 		;
				new v = 0;
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(
				        inputtext[i] == '^' ||
						inputtext[i] == '*' ||
						inputtext[i] == '/' ||
						inputtext[i] == '\\' ||
						inputtext[i] == ''' ||
						inputtext[i] == '%' ||
						inputtext[i] == '`' ||
						inputtext[i] == ',' ||
						inputtext[i] == '#' ||
						inputtext[i] == ';' ||
						inputtext[i] == ' ' ||
						inputtext[i] == '{' ||
						inputtext[i] == '}' ||
						inputtext[i] == '&' ||
						inputtext[i] == '£')
				    {
				        v = 1;
						break;
				    }
				}
				if(v == 1) return GuvenlikSiffre(playerid);
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    switch(inputtext[i])
				    {
						case '0'..'9': sS++, gecerDurum = true;
						case 'A'..'Z': kS++, gecerDurum = true;
						case 'Ð': gecerDurum = false;
						case 'Ü': gecerDurum = false;
						case 'Þ': gecerDurum = false;
						case 'Ý': gecerDurum = false;
						case 'Ö': gecerDurum = false;
						case 'Ç': gecerDurum = false;
						default: gecerDurum = false;
				    }
				}
				if(strcmp(inputtext, "12345A", false) == 0) return hataMesaji(playerid, "Örnek þifre girmeyin !"), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A12345", false) == 0) return hataMesaji(playerid, "Örnek þifre girmeyin !"), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345S", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "S12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345D", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "D12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12332A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "32112A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A12332", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A32112", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345S", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "S12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345D", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "D12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345Q", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "Q12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345W", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "W12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345E", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "E12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "12345F", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "F12345", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "32165A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A32165", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "32165S", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "S32165", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "32165D", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "D32165", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "56123A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A56123", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "56123S", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "S56123", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "56123D", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "D56123", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "11111A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A11111", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "88888A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A88888", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "55555A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A55555", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "A54321", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(strcmp(inputtext, "54321A", false) == 0) return hataMesaji(playerid, "Þifreniz kolay gibi gözüküyor, farklý bir þifre girin."), GuvenlikSiffre(playerid);
				if(!gecerDurum) return GuvenlikSiffre(playerid);
	            if(!strlen(inputtext)) return GuvenlikSiffre(playerid);
	            if(strlen(inputtext) != 6) return GuvenlikSiffre(playerid);
				if(GetPVarInt(playerid, "GuvenlikSifre") > GetTickCount()) return GuvenlikSiffre(playerid);
				if(kS != 1 && sS != 4 && gecerDurum) return GuvenlikSiffre(playerid);
				format(pasz, sizeof(pasz), "%s", inputtext);
				oyuncuData[playerid][guvenlikGiris] = 1;
				mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `GSPass` = '%s' WHERE `id` = '%d' LIMIT 1", pasz, oyuncuData[playerid][xID]);
				mysql_query(g_SQL, query);
				mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `GuvenlikLog` = '1' WHERE `id` = '%d' LIMIT 1", oyuncuData[playerid][xID]);
				mysql_query(g_SQL, query);
				format(bli, sizeof(bli), "Güvenlik Þifresi: {FFFFFF}Hesabýnýzýn güvenlik þifresi: {e74c3c}%s {FFFFFF}olarak ayarlanmýþtýr.", pasz);
				SendClientMessage(playerid, 0x9B59B6, bli);
				SetPVarInt(playerid, "AntGuvenlik", 0);
	        }
	    }*/
	    case DIALOG_GPS_CETELER:
	    {
	        if(!response) return cmd_gps(playerid);
	        if(response)
	        {
				if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu iþlemi kullanmak için araçta olmalýsýn.");
    			if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu iþlemi kullanmak için sürücü olmalýsýn.");
				new xzsc[16], i;
				format(xzsc, sizeof(xzsc), "CeteP_%d", listitem);
				i = GetPVarInt(playerid, xzsc);
				GPSOyuncu[playerid][gpsAktif] = true;
				if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
				{
				    DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
				    SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
				}
				new obID;
				obID = CreateDynamicObject(1318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid);
				SetPVarInt(playerid, "gpsID", obID);
				KillTimer(GPSOyuncu[playerid][gps_timer]);
				GPSOyuncu[playerid][gps_timer] = SetTimerEx("GPSTakip", 100, true, "d", playerid);
				SetPVarFloat(playerid, "GPS_X", CeteIslem[i][ceteSpawnPos][0]);
				SetPVarFloat(playerid, "GPS_Y", CeteIslem[i][ceteSpawnPos][1]);
				if(GetPVarInt(playerid, "gps_cpID") != -1)
				{
					DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
					SetPVarInt(playerid, "gps_cpID", -1);
				}
				new gps_cpp;
				gps_cpp = CreateDynamicRaceCP(1, CeteIslem[i][ceteSpawnPos][0], CeteIslem[i][ceteSpawnPos][1], CeteIslem[i][ceteSpawnPos][2], CeteIslem[i][ceteSpawnPos][0], CeteIslem[i][ceteSpawnPos][1], CeteIslem[i][ceteSpawnPos][2], 5.0, -1, -1, playerid);
                SetPVarInt(playerid, "gps_cpID", gps_cpp);
				SendClientMessage(playerid, -1, "{6FFF00}GPS: {FFFFFF}Çete bölgesinin konumu belirlendi, aracýnýz haraket ettirin ve ok iþaretini izleyin.");
	        }
	    }
		case DIALOG_GPS:
	    {
	        if(response)
	        {
				if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    			if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "GPS kullanmak için sürücü olmalýsýn.");
	            new i = listitem;
				switch(listitem)
				{
				    case 0:
				    {
						new sz[1500], xzc = 0, xzsc[12];
						format(sz, sizeof(sz), "{7A8AFF}ID\t{7A8AFF}Çete Ismi\n");
						foreach(new c: Ceteler)
						{
						    if(CeteIslem[c][ceteDeger] != 1)
						    {
								format(xzsc, sizeof(xzsc), "CeteP_%d", xzc);
								SetPVarInt(playerid, xzsc, c);
								xzc++;
								format(sz, sizeof(sz), "%s%d\t%s\n", sz, c, CeteIslem[c][ceteIsmi]);
							}
						}
						if(xzc == 0) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete", "Aktif bir çete yok !", "Kapat", "");
						if(xzc != 0) return ShowPlayerDialog(playerid, DIALOG_GPS_CETELER, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çeteler", sz, "Detay", "Kapat");
				    }
				    case 1:
					{
						ShowPlayerDialog(playerid, DIALOG_GPS_ID, DIALOG_STYLE_INPUT, "GPS > Ev Konum ID", "{FFFFFF}Bulmak istediðiniz {FF0048}Evin ID`sini {FFFFFF}girin.", "Bul", "Geri");
						return 1;
					}
					case 2:
					{
						banSayfasi[playerid] = 0;
					    new Cache:VeriCek, query[95], list[1024];
						mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `evler` ORDER BY eid DESC LIMIT %d, 15;", banSayfasi[playerid] * 15);
						VeriCek = mysql_query(g_SQL, query);
						new rows = cache_num_rows();
						if(rows)
						{
							new
								x,
								_evName[MAX_EV_ISMI],
								_evOwner[24],
								_eSev
							;
							format(list, sizeof(list), "Ev ID\tEv Ýsmi\tEv Sahibi\tEv Seviyesi\n");
							format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Sonraki Sayfa\t\t\n", list);
							format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Önceki Sayfa\t\t\n", list);
							format(list, sizeof(list), "%s\t\t\n", list);
							for(new c = 0; c < rows; ++c)
							{
							    cache_get_value_name_int(c, "eid", x);
								cache_get_value_name(c, "EvIsmi", _evName);
								cache_get_value_name(c, "EvSahibi", _evOwner);
								cache_get_value_name_int(c, "evSeviyesi", _eSev);
								textfloodkontrol(_evName);
								if(strlen(_evName) == 1)
								{
									_evName = "Satýlýk Ev";
								}
								format(list, sizeof(list), "%s%d\t%s\t%s\t%d\n", list, x, _evName, _evOwner, _eSev);
							}
							ShowPlayerDialog(playerid, DIALOG_GPS_LISTE, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}GPS > Ev Listesi | Sayfa: (1)", list, "Tamam", "Geri");
						}
						if(!rows)
						{
						    SendClientMessage(playerid, 0xFF0000F, "GPS: {FFFFFF}Daha önce ev oluþturulmamýþ.");
						}
						cache_delete(VeriCek);
						return 1;
					}
	        		case 3: { cmd_gps(playerid); return 1; }
				}
				GPSOyuncu[playerid][gpsAktif] = true;
				if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
				{
				    DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
				    SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
				}
				new obID;
				obID = CreateDynamicObject(1318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid);
				SetPVarInt(playerid, "gpsID", obID);
				KillTimer(GPSOyuncu[playerid][gps_timer]);
				GPSOyuncu[playerid][gps_timer] = SetTimerEx("GPSTakip", 100, true, "d", playerid);
				SetPVarFloat(playerid, "GPS_X", GPSYukle[i][GPS_Pos][0]);
				SetPVarFloat(playerid, "GPS_Y", GPSYukle[i][GPS_Pos][1]);
				if(GetPVarInt(playerid, "gps_cpID") != -1)
				{
					DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
					SetPVarInt(playerid, "gps_cpID", -1);
				}
				new gps_cpp;
				gps_cpp = CreateDynamicRaceCP(1, GPSYukle[i][GPS_Pos][0], GPSYukle[i][GPS_Pos][1], GPSYukle[i][GPS_Pos][2], GPSYukle[i][GPS_Pos][0], GPSYukle[i][GPS_Pos][1], GPSYukle[i][GPS_Pos][2], 5.0, -1, -1, playerid);
                SetPVarInt(playerid, "gps_cpID", gps_cpp);
				SendClientMessage(playerid, -1, "{6FFF00}GPS: {FFFFFF}Seçtiðiniz konum belirlendi, aracýnýz haraket ettirin ve ok iþaretini izleyin.");
			}
	    }
		case DIALOG_GPS_LISTE:
		{
  	        if(!response) return cmd_gps(playerid);
	        if(response)
			{
			    switch(listitem)
			    {
			        case 0: banSayfasi[playerid]++;
			        case 1:
			        {
						banSayfasi[playerid]--;
			        	if(banSayfasi[playerid] < 0)
						{
						    banSayfasi[playerid] = 0;
						    cmd_gps(playerid);
						    return 1;
						}
			        }
			    }
			}
			new Cache:VeriCek, query[95], list[1024], xxx[36];
			format(xxx, sizeof(xxx), "GPS > Ev Listesi | Sayfa: (%d)", banSayfasi[playerid] + 1);
			mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `evler` ORDER BY eid DESC LIMIT %d, 15;", banSayfasi[playerid] * 15);
			VeriCek = mysql_query(g_SQL, query);
			new rows = cache_num_rows();
			if(rows)
			{
				new
					x,
					_evName[MAX_EV_ISMI],
					_evOwner[24],
					_eSev
				;
				format(list, sizeof(list), "Ev ID\tEv Ýsmi\tEv Sahibi\tEv Seviyesi\n");
				format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Sonraki Sayfa\t\t\n", list);
				format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Önceki Sayfa\t\t\n", list);
				format(list, sizeof(list), "%s\t\t\n", list);
				for(new c = 0; c < rows; ++c)
				{
				    cache_get_value_name_int(c, "eid", x);
					cache_get_value_name(c, "EvIsmi", _evName);
					cache_get_value_name(c, "EvSahibi", _evOwner);
					cache_get_value_name_int(c, "evSeviyesi", _eSev);
					textfloodkontrol(_evName);
					if(strlen(_evName) == 1)
					{
						_evName = "Satýlýk Ev";
					}
					format(list, sizeof(list), "%s%d\t%s\t%s\t%d\n", list, x, _evName, _evOwner, _eSev);
				}
				ShowPlayerDialog(playerid, DIALOG_GPS_LISTE, DIALOG_STYLE_TABLIST_HEADERS, xxx, list, "Tamam", "Geri");
			}
			if(!rows)
			{
			    SendClientMessage(playerid, 0xFF0000F, "GPS: {FFFFFF}Ev listesinin son sayfasýna ulaþtýnýz.");
			}
			cache_delete(VeriCek);
		}
	    case DIALOG_GPS_ID:
	    {
			if(!response) { cmd_gps(playerid); }
	        if(response)
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_GPS_ID, DIALOG_STYLE_INPUT, "GPS > Ev Konum ID", "{FF8000}Ekraný boþ býrakmayýn !\n{FFFFFF}Bulmak istediðiniz {FF0048}Evin ID`sini {FFFFFF}girin.", "Bul", "Geri");
	            new i = strval(inputtext);
	            if(!Iter_Contains(Evler, i)) return ShowPlayerDialog(playerid, DIALOG_GPS_ID, DIALOG_STYLE_INPUT, "GPS > Ev Konum ID", "{FF8000}Bu ID`de ev yok !\n{FFFFFF}Bulmak istediðiniz {FF0048}Evin ID`sini {FFFFFF}girin.", "Bul", "Geri");
				if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    			if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "GPS kullanmak için sürücü olmalýsýn.");
				if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_GPS_ID, DIALOG_STYLE_INPUT, "GPS > Ev Konum ID", "{FF8000}Bu ID`de ev yok !\n{FFFFFF}Bulmak istediðiniz {FF0048}Evin ID`sini {FFFFFF}girin.", "Bul", "Geri");
				GPSOyuncu[playerid][gpsAktif] = true;
				if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
				{
					DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
					SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
				}
				new obID;
				obID = CreateDynamicObject(1318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid);
				SetPVarInt(playerid, "gpsID", obID);
				KillTimer(GPSOyuncu[playerid][gps_timer]);
				GPSOyuncu[playerid][gps_timer] = SetTimerEx("GPSTakip", 100, true, "d", playerid);
				SetPVarFloat(playerid, "GPS_X", EvIslem[i][EvPos][0]);
				SetPVarFloat(playerid, "GPS_Y", EvIslem[i][EvPos][1]);
				if(GetPVarInt(playerid, "gps_cpID") != -1)
				{
					DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
					SetPVarInt(playerid, "gps_cpID", -1);
				}
				new gps_cpp;
				gps_cpp = CreateDynamicRaceCP(1, EvIslem[i][EvPos][0], EvIslem[i][EvPos][1], EvIslem[i][EvPos][2], EvIslem[i][EvPos][0], EvIslem[i][EvPos][1], EvIslem[i][EvPos][2], 5.0, -1, -1, playerid);
                SetPVarInt(playerid, "gps_cpID", gps_cpp);
				SendClientMessage(playerid, -1, "{6FFF00}GPS: {FFFFFF}Seçtiðiniz ev ID`si belirlendi, aracýnýz haraket ettirin ve ok iþaretini izleyin.");
			}
	    }
		case DIALOG_VSILAH:
	    {
	        if(response)
	        {
	            new x = listitem;
                Silahver(playerid, SilahIsimler[x][d_silaahh], 1000);
                cmd_vsilah(playerid);
	        }
	    }
     	case DIALOG_ESIlAH:
	    {
	        if(response)
	        {
				new b[bMAX_SIZE], x = listitem, mermii = GetPVarInt(playerid, "eMermiKayit"), Float: exPos[3];
				format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyunculara %d mermilik %s silahýný verdi.", getName(playerid), playerid, mermii, SilahIsimler[x][_dsIsim]);
				GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
			    SendClientMessage(playerid, 0x87B1FFFF, b);
				foreach(new i: Player)
				{
				    if(Etkde[i] == true)
				    {
				        SendClientMessage(i, 0x87B1FFFF, b);
				        Silahver(i, SilahIsimler[x][d_silaahh], mermii);
				    }
				}
	        }
	    }
		case DIALOG_EARAC:
	    {
	        if(response)
	        {
	            new b[bMAX_SIZE], x = listitem, Float: exPos[3], ba = 0;
	            format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyunculara %s adlý aracý verdi.", getName(playerid), playerid, GetVehicleName(EtkAracIslem[x][eAracId]));
                GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
                SendClientMessage(playerid, 0x87B1FFFF, b);
				foreach(new i: Player)
				{
				    if(Etkde[i] == true)
				    {
		                GetPlayerPos(i, exPos[0], exPos[1], exPos[2]);
						new _ar = CreateVehicle(EtkAracIslem[x][eAracId], exPos[0], exPos[1], exPos[2], 0.0, -1, -1, -1);
						LinkVehicleToInterior(_ar, GetPlayerInterior(playerid));
						SetVehicleVirtualWorld(_ar, ETK_WORLD);
						PutPlayerInVehicle(i, _ar, 0);
						etkMaxArac[ba] = _ar;
						ba++;
				    }
				}
			}
	    }
	    case DIALOG_EARAC2:
	    {
	        if(response)
	        {
	            if(GetPVarInt(playerid, "ETKAracim") != INVALID_VEHICLE_ID)
	            {
	                DestroyVehicle(GetPVarInt(playerid, "ETKAracim"));
	            }
	            new x = listitem, Float: exPos[3];
                GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
                new _ar = CreateVehicle(EtkAracIslem[x][eAracId], exPos[0], exPos[1], exPos[2], 0.0, -1, -1, -1);
				LinkVehicleToInterior(_ar, GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(_ar, ETK_WORLD);
				PutPlayerInVehicle(playerid, _ar, 0);
				SetPVarInt(playerid, "ETKAracim", _ar);
			}
	    }
     	case DIALOG_VGIT:
		{
		    if(response)
		    {
				new str[11], id, Float: xPos[4], xxx[75 + 24];
				format(str, sizeof(str), "vipTP_%d", listitem);
				id = GetPVarInt(playerid, str);
				if(VipIslem[id][vGitt] == 1) return hataMesaji(playerid, "Bu oyuncu vip ýþýnlanma özelliðini kapatmýþ.");
				if(Duelloda[id]) return hataMesaji(playerid, "Bu kiþi düelloda, gidemezsin.");
				if(SureYasagi(playerid, "vTPP", 60)) return 1;
				GetPlayerPos(id, xPos[0], xPos[1], xPos[2]);
				GetPlayerFacingAngle(id, xPos[3]);
				SetPlayerInterior(playerid, GetPlayerInterior(id));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
				if(IsPlayerInAnyVehicle(playerid))
				{
				    new arac = GetPlayerVehicleID(playerid);
				 	SetVehiclePos(arac, xPos[0], xPos[1] -1.7, xPos[2] + 2.0);
					GetVehicleZAngle(arac, xPos[3]);
					PutPlayerInVehicle(playerid, arac, 0);
				}
				else
				{
					SetPlayerPos(playerid, xPos[0], xPos[1] - 0.5, xPos[2] + 0.5);
					SetPlayerFacingAngle(playerid, xPos[3]);
				}
			    SetCameraBehindPlayer(playerid);
			    format(xxx, sizeof(xxx), "{3EC9F7}VipGit: {FFFFFF}Oyuncu %s(%d), yanýna ýþýnlandýnýz.", getName(id), id);
			    SendClientMessage(playerid, -1, xxx);
				format(xxx, sizeof(xxx), "{3EC9F7}VipGit: {FFFFFF}Oyuncu %s(%d), sizin yanýnýza ýþýnlandý.", getName(playerid), playerid);
			    SendClientMessage(id, -1, xxx);
		    }
		}
		case DIALOG_SIPSAYFASI:
		{
  	        if(!response) return 1;
	        if(response)
			{
				switch(listitem)
				{
				    case 0: banSayfasi[playerid]++;
				    case 1:
				    {
			            banSayfasi[playerid]--;
			        	if(banSayfasi[playerid] < 0)
						{
						    banSayfasi[playerid] = 0;
						    return 1;
						}
				    }
				}
			}
		    new Cache:VeriCek, query[85], xxx[45];
		    format(xxx, sizeof(xxx), "{FFFFFF}Sipariþ Listesi > Sayfa: (%d)", banSayfasi[playerid] + 1);
			mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `siparis` ORDER BY id DESC LIMIT %d, 15;", banSayfasi[playerid] * 15);
			VeriCek = mysql_query(g_SQL, query);
			new rows = cache_num_rows();
			if(rows)
			{
				new
					list[1024],
					_alici[24],
					_neAldi[50],
					_tarih,
					_tarihh[80]
				;
				format(list, sizeof(list), "Alýcý\tNe Ýstiyor ?\tAldýðý Tarih\n");
				format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Sonraki Sayfa\t\n", list);
				format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Önceki Sayfa\t\n", list);
				format(list, sizeof(list), "%s\t\n", list);
				for(new i = 0; i < rows; ++i)
				{
					cache_get_value_name(i, "Odeyen", _alici);
					cache_get_value_name(i, "NeAldi", _neAldi);
					cache_get_value_name_int(i, "tarih", _tarih);
					TimeStampCevir(_tarih, _tarihh);
					format(list, sizeof(list), "%s%s\t%s\t%s\n", list, _alici, _neAldi, _tarihh);
				}
				ShowPlayerDialog(playerid, DIALOG_SIPSAYFASI, DIALOG_STYLE_TABLIST_HEADERS, xxx, list, "Tamam", "Kapat");
			}
			if(!rows)
			{
			    SendClientMessage(playerid, 0xFF0000F, "Sipariþ: {FFFFFF}Son sayfaya ulaþtýnýz.");
			}
			cache_delete(VeriCek);
		}
	    case DIALOG_BANSAYFASI:
	    {
	        if(!response) return 1;
	        if(response)
			{
			    switch(listitem)
			    {
			        case 0: banSayfasi[playerid]++;
			        case 1:
					{
			            banSayfasi[playerid]--;
			        	if(banSayfasi[playerid] < 0)
						{
						    banSayfasi[playerid] = 0;
						    return 1;
						}
					}
				}
			}
	        new Cache:VeriCek, query[85], xxx[36];
			mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` ORDER BY banid DESC LIMIT %d, 15;", banSayfasi[playerid] * 15);
			VeriCek = mysql_query(g_SQL, query);
			format(xxx, sizeof(xxx), "{FFFFFF}Ban Listesi > Sayfa: (%d)", banSayfasi[playerid] + 1);
			new rows = cache_num_rows();
			if(rows)
			{
				new
					list[1500],
					_banlayan[24],
					_banlanan[24],
					_tarih,
					_sebep[128],
					_xx[65]
				;
				format(list, sizeof(list), "Banlayan\tBanlanan\tTarih\tSebep\n");
				format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Sonraki Sayfa\t\t\t\n", list);
				format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Önceki Sayfa\t\t\t\n", list);
				format(list, sizeof(list), "%s\t\t\t\n", list);
				for(new i = 0; i < rows; ++i)
				{
					cache_get_value_name(i, "Banlayan", _banlayan);
					cache_get_value_name(i, "Banlanan", _banlanan);
					cache_get_value_name_int(i, "YGA", _tarih);
					cache_get_value_name(i, "Sebep", _sebep);
					textfloodkontrol(_sebep);
					TimeStampTamTarih(_tarih, _xx);
					format(list, sizeof(list), "%s%s\t%s\t%s\t%s\n", list, _banlayan, _banlanan, _xx, _sebep);
				}
				ShowPlayerDialog(playerid, DIALOG_BANSAYFASI, DIALOG_STYLE_TABLIST_HEADERS, xxx, list, "Tamam", "Kapat");
			}
   			if(!rows)
			{
			    SendClientMessage(playerid, 0x00FF00FF, "Ban Listesi: {FFFFFF}Ban listesinin son sayfasýna ulaþtýnýz.");
			}
			cache_delete(VeriCek);
	    }
	    case DIALOG_CETEARAC_G:
	    {
	        if(response)
	        {
				if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken araç getiremezsin.");
    			if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken araç getiremezsin.");
 				new sz[11], c, bool: kullanim_cete = false;
				format(sz, sizeof(sz), "CeteArr_%d", listitem);
				c = GetPVarInt(playerid, sz);
				foreach(new i : Player)
				{
				    if(GetPlayerVehicleID(i) == c)
				    {
				        kullanim_cete = true;
				    }
				}
				if(kullanim_cete) return hataMesaji(playerid, "Bu çete aracý þuan kullanýlýyor.");
				new Float:Pos[4];
				GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
				GetPlayerFacingAngle(playerid, Pos[3]);
				SetVehiclePos(c, Pos[0], Pos[1], Pos[2]);
				PutPlayerInVehicle(playerid, c, 0);
				SetVehicleZAngle(c, Pos[3]);
				new id = GetPVarInt(playerid, "_SavasID");
				if(id != -1)
				{
					if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1)
					{
						new vehid = GetPlayerVehicleID(playerid);
						new a = GetVehicleModel(vehid);
						if(aracUyum(a))
						{
		        			SetPVarInt(playerid, "CeteYasakGirdi", 1);
							new Float: _donder[4];
							GetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3] + 180);
							GetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
						    _donder[0] -= _donder[0]; _donder[1] -= _donder[1];
							SetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
							if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 25){
						    SetVehicleSpeed(GetPlayerVehicleID(playerid), -GetVehicleSpeed(GetPlayerVehicleID(playerid)));}
						    else{ SetVehicleSpeed(GetPlayerVehicleID(playerid), -100); }
			                GameTextForPlayer(playerid, "~w~~h~Cete Bolgelerine~n~~w~~h~Bu araclarla~n~~r~~h~~h~Giremezsiniz", 6000, 4);
							return 1;
						}
					}
				}
	        }
	    }
	    case DIALOG_BELES_CETE:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    if(ParaKorumasi[playerid] < MAX_BELES_FIYAT) return hataMesaji(playerid, "$"MAX_BELES_FIYAT_" dolarýn yok !");
	                    if(GetPlayerScore(playerid) < MAX_BELES_SKOR) return hataMesaji(playerid, ""MAX_BELES_SKOR_" skorun yok !");
	                    ShowPlayerDialog(playerid, DIALOG_BELES_CETE2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Ýsim Girin", "{FEC606}UYARI:\t{FFFFFF}Çete ismini sadece 1 kez oluþturabilir,\n      \t{FFFFFF}Ve tekrardan deðiþtiremezsiniz.\n\n{FFFFFF}- Çete isminizi girin:", "Oluþtur", "Kapat");
	                }
	                case 1:
	                {
	                    SendClientMessage(playerid, -1, "{4d69ff}Çete: {FFFFFF}Ücretli çete açtýrmak için yetkililerle konuþun.");
	                }
	            }
	        }
	    }
	    case DIALOG_BELES_CETE2:
	    {
			if(response)
	        {
	            new cid = Iter_Free(Ceteler), cIsimmm[MAX_CETE_ISIM];
	            if(cid == -1) return hataMesaji(playerid, "Maksimum çete oluþturma kapasitesi dolmuþ !");
             	foreach(new c : Ceteler)
				{
					if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip2], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip3], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip4], getName(playerid), false) == 0)
					{
						hataMesaji(playerid, "Bir çetede sahipsiniz. Ayrýlýn.");
						return 1;
					}
				}
	            if(PlayerCete[playerid] != -1) return hataMesaji(playerid, "Bir çeteye üyesiniz. Çeteden ayrýlýn !");
                if(strlen(inputtext) <= 4 || strlen(inputtext) > MAX_CETE_ISIM) return ShowPlayerDialog(playerid, DIALOG_BELES_CETE2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Ýsim Girin", "{FEC606}UYARI:\t{FFFFFF}Çete ismini sadece 1 kez oluþturabilir,\n      \t{FFFFFF}Ve tekrardan deðiþtiremezsiniz.\n\n{FFFFFF}- Çete ismi 5 ile 24 karakter arasý oluþabilir !", "Oluþtur", "Kapat");
                if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_BELES_CETE2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Ýsim Girin", "{FEC606}UYARI:\t{FFFFFF}Çete ismini sadece 1 kez oluþturabilir,\n      \t{FFFFFF}Ve tekrardan deðiþtiremezsiniz.\n\n{FFFFFF}- Çete ismi 5 ile 24 karakter arasý oluþabilir !", "Oluþtur", "Kapat");
				if(CeteIsimKontrol(inputtext)) return ShowPlayerDialog(playerid, DIALOG_BELES_CETE2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Ýsim Girin", "{FEC606}UYARI:\t{FFFFFF}Çete ismini sadece 1 kez oluþturabilir,\n      \t{FFFFFF}Ve tekrardan deðiþtiremezsiniz.\n\n{FFFFFF}- Bu çete ismi kullanýlýyor !", "Oluþtur", "Kapat");
				//Skorver(playerid, -MAX_BELES_SKOR);
				pParaver(playerid, -MAX_BELES_FIYAT);
				format(cIsimmm, MAX_CETE_ISIM, inputtext);
                CeteOlustur(playerid, cid, 50, 50, 50, 50, playerid, cIsimmm, 1);
				kafaTextUp(playerid);
				SendClientMessage(playerid, -1, "{4d69ff}Çete: {FFFFFF}Artýk çeteniz oluþturuldu, Hesabýnýzdan $"MAX_BELES_FIYAT_" dolar kesildi.");
				SendClientMessage(playerid, -1, "{4d69ff}Çete: {FFFFFF}/CetePanel veya /cPanel yazarak çete menüsünü açabilirsiniz.");
	        }
	    }
		case DIALOG_CETELER:
	    {
	        if(response)
	        {
				new sz[11], c, zs[400+24+11+500];
				format(sz, sizeof(sz), "Cete_%d", listitem);
				c = GetPVarInt(playerid, sz);
				format(zs, sizeof(zs), "{1F9EA3}%s {FFFFFF}çetenin detaylý bilgileri:\n\n", CeteIslem[c][ceteIsmi]);
                format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 1: {FFFFFF}%s\n", zs, CeteIslem[c][cSahip1]);
				if(strcmp(CeteIslem[c][cSahip2], "-", false) == 0){format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 2: {FFFFFF}Yok\n", zs);
				}else{
				format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 2: {FFFFFF}%s\n", zs, CeteIslem[c][cSahip2]);}
				if(strcmp(CeteIslem[c][cSahip3], "-", false) == 0){format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 3: {FFFFFF}Yok\n", zs);
				}else{
				format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 3: {FFFFFF}%s\n", zs, CeteIslem[c][cSahip3]);}
				if(strcmp(CeteIslem[c][cSahip4], "-", false) == 0){format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 4: {FFFFFF}Yok\n", zs);
				}else{
				format(zs, sizeof(zs), "%s{F07818}Çete Sahibi 4: {FFFFFF}%s\n", zs, CeteIslem[c][cSahip4]);}
                format(zs, sizeof(zs), "%s{F07818}Üye Sayýsý: {FFFFFF}%d\n", zs, CeteIslem[c][ceteCountL]);
                format(zs, sizeof(zs), "%s{F07818}Kasadaki Para: {FFFFFF}$%s\n", zs, convertNumber(CeteIslem[c][ceteKasasi]));
				format(zs, sizeof(zs), "%s{F07818}Çete Seviyesi: {FFFFFF}%d\n", zs, CeteIslem[c][ceteSeviye]);
				//format(zs, sizeof(zs), "%s{F07818}Öldürme: {FFFFFF}%d\n", zs, CeteIslem[c][CeteOldurme]);
				//format(zs, sizeof(zs), "%s{F07818}Ölüm: {FFFFFF}%d\n", zs, CeteIslem[c][ceteOlum]);
				format(zs, sizeof(zs), "%s{F07818}Çete Ýçi Hasar: {FFFFFF}%s\n", zs, (CeteIslem[c][ceteGod] == 0) ? ("Kapalý") : ("Açýk"));
                format(zs, sizeof(zs), "%s{F07818}Dost Çeteler:\n", zs);
				if(Iterator_Size(DostCete[c]) != 0)
			    {
			        Iterator_For(DostCete[c], i)
			        {
			            new id = Iterator_Getir(DostCete[c], i);
			            format(zs, sizeof(zs), "%s\t\t{FFFFFF}%s\n", zs, CeteIslem[id][ceteIsmi]);
					}
			    }
			    else
			    {
			        format(zs, sizeof(zs), "%s\t\t{FFFFFF}Yok\n", zs);
			    }
				SetPVarInt(playerid, "CeteDetay", c);
                ShowPlayerDialog(playerid, DIALOG_DETAY, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete Detayý", zs, "Baþvur", "Kapat");
			}
	    }
	    case DIALOG_DETAY:
	    {
			if(!response) SetPVarInt(playerid, "CeteDetay", -1);
	        if(response)
	        {
				if(PlayerCete[playerid] != -1) return hataMesaji(playerid, "Sizin bir çeteniz var zaten !");
	            new c = GetPVarInt(playerid, "CeteDetay"), mo[113+24+4], SahipCz[4];
            	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 || strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 || strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 || strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
				{
				    hataMesaji(playerid, "Bu çetenin sahibi zaten sizsiniz.");
				    return 1;
				}
				if(CeteIslem[c][ceteDeger] == 1 && CeteIslem[c][ceteCountL] > MAX_BELES_UYE-1) return hataMesaji(playerid, "Bu çete maksimum üye sayýsýna ulaþmýþ.");
				if(TeklifAttigim[playerid] == c) return hataMesaji(playerid, "Daha önce bu çeteye katýlma isteði gönderdiniz.");
				format(mo, sizeof(mo), "{00FF00}« ÇETE » {FFFFFF}Oyuncu %s çetenize katýlmak istiyor. Onaylamak için {00B5B5}/CeteKabul %d {FFFFFF}yazýn.", getName(playerid), playerid);
                SahipCz[0] = GetPlayerID(CeteIslem[c][cSahip1]);
                SahipCz[1] = GetPlayerID(CeteIslem[c][cSahip2]);
                SahipCz[2] = GetPlayerID(CeteIslem[c][cSahip3]);
                SahipCz[3] = GetPlayerID(CeteIslem[c][cSahip4]);
                if(SahipCz[0] != INVALID_PLAYER_ID) SendClientMessage(SahipCz[0], -1, mo);
                if(SahipCz[1] != INVALID_PLAYER_ID) SendClientMessage(SahipCz[1], -1, mo);
                if(SahipCz[2] != INVALID_PLAYER_ID) SendClientMessage(SahipCz[2], -1, mo);
                if(SahipCz[3] != INVALID_PLAYER_ID) SendClientMessage(SahipCz[3], -1, mo);
                TeklifAttigim[playerid] = c;
                format(mo, sizeof(mo), "{FFFF00}« ÇETE » {00FF00}%s {FFFFFF}çetesine katýlma isteði gönderdiniz.", CeteIslem[c][ceteIsmi]);
				SendClientMessage(playerid, -1, mo);
			}
	    }
	    case DIALOG_CPANEL:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: cmd_cetepanel(playerid, "");
	                case 1:
					{
					    new c = PlayerCete[playerid];
         				if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete sahiplerini düzenlemek için bu çetenin sahiplerinden biri olmalýsýn.");
						    return 1;
						}
						CeteSahip(playerid);
					}
					case 2: CeteDostt(playerid);
					case 3: CeteKasa(playerid);
					case 4:
					{
					    new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete rengini sadece sahipler deðiþtirebilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Çete rengini deðiþtirmek istediðiniz hex kodunu girin.\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
					}
					case 5:
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete rengini sadece sahipler deðiþtirebilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_CETETAG, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Çete Tagýný girin.\nMaks. 5 karakterden oluþabilir.", "Deðiþtir", "Geri");
					}
					case 6:
					{
						new c = PlayerCete[playerid];
						if(CeteIslem[c][ceteDeger] == 1) return hataMesaji(playerid, "Ücretsiz çeteler, geliþtirme yapamaz !"), cmd_cetepanel(playerid, "");
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete seviyesini sadece sahipler geliþtirebilir.");
						    return 1;
						}
						if(CeteIslem[c][ceteSeviye] >= 5) return hataMesaji(playerid, "Çetenizi daha fazla geliþtiremezsiniz."), cmd_cetepanel(playerid, "");
					    new sz[303];
					    format(sz, sizeof(sz), "{FEC606}Çetenizi {FFFFFF}%d {FEC606}seviyeden {FFFFFF}%d {FEC606}çekmek istiyor musunuz ?\n", CeteIslem[c][ceteSeviye], CeteIslem[c][ceteSeviye] + 1);
					    format(sz, sizeof(sz), "%s{FEC606}Eðer kabul ediyorsanýz {FFFFFF}$%s dolar {FEC606}ödemeniz gerekiyor.\n\n", sz, convertNumber(cyMiktar(c)));
					    format(sz, sizeof(sz), "%s{00FF00}Yükseltme sonrasý olacaklar:\n", sz);
					    format(sz, sizeof(sz), "%s{FFFFFF}Araç kapasitesi: {FFFF00}%d {FFFFFF}ve Çete Kapasitesi {FFFF00}%d {FFFFFF}olacak.\n", sz, caKapasite(c), cKapasite(c) + 5);
					    ShowPlayerDialog(playerid, DIALOG_CETEGELISTIR, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Çete Seviyesi", sz, "Geliþtir", "Geri");
					}
					case 7:
					{
					    new c = PlayerCete[playerid];
						new Cache:VeriCek, query[55], ssr[1024];
						mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `ceteid` = '%d'", c);
						VeriCek = mysql_query(g_SQL, query);
						new rows = cache_num_rows();
						if(rows)
						{
						    new getIsim[24], gDurum;
						    format(ssr, sizeof(ssr), "Ýsim\tDurum\n");
						    for(new i = 0; i < rows; ++i)
						    {
						        cache_get_value_name(i, "isim", getIsim);
						        gDurum = GetPlayerID(getIsim);
						        if(gDurum != INVALID_PLAYER_ID)
						        {
						            format(ssr, sizeof(ssr), "%s%s\t{00FF00}Çevrimiçi\n", ssr, getIsim);
						        }
						        else
						        {
						            format(ssr, sizeof(ssr), "%s%s\t{A9A9A9}Çevrimdýþý\n", ssr, getIsim);
						        }
						    }
						}
						cache_delete(VeriCek);
					    ShowPlayerDialog(playerid, DIALOG_CETEUYELER, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete » Üyeler", ssr, "Geri", "");
					}
					case 8:
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete skinini sadece sahipler deðiþtirebilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_CETESKIN, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Skin", "{FEC606}Çetenizin kullanacaðý skini ID`sini girin.", "Deðiþtir", "Geri");
					}
					case 9:
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çeteye araç sadece sahipler alabilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_CETEARAC, DIALOG_STYLE_LIST, "{FFFFFF}Çete » Çete Araç", "{FF0073}» {FFFFFF}Araç satýn al\n", "Seç", "Geri");
					}
					case 10: // renk
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Araç renklerini sadece sahipler deðiþtirebilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_ARENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 1 girin\n", "Gir", "Geri");
					}
					case 11: // Plaka
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Araç plakalarýný sadece sahipler deðiþtirebilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_CETEARACP, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Plaka", "{FF0073}» {FFFFFF}Kullanmak istediðiniz Plakayý girin.\n", "Deðiþtir", "Geri");
					}
					case 12:
					{
					    new c = PlayerCete[playerid], bool: w = false;
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Araç resetleme özelliðini sadece sahipler kullanabilir.");
						    return 1;
						}
						new bool:UsedVehicle[MAX_VEHICLES];
						foreach(new i: Player)
						{
							if(IsPlayerInAnyVehicle(i))
							{
								UsedVehicle[GetPlayerVehicleID(i)] = true;
					   	        if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(i)))
						        {
						            new dorseid = GetVehicleTrailer(GetPlayerVehicleID(i));
									UsedVehicle[dorseid] = true;
								}
							}
						}
						for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
						{
						    if(c == CeteArac[i][ceteIDsi] && CeteArac[i][ceteAracAktif] == true)
						    {
								if(!UsedVehicle[i])
								{
								    w = true;
									SetVehicleToRespawn(i);
								}
							}
						}
						if(w) SCM_Ex(playerid, 0xFBC531FF, "[!] {FFFFFF}Çete araçlarý respawn edildi.");
						if(!w) SCM_Ex(playerid, 0xFBC531FF, "[!] {FFFFFF}Çetenizin araçlarý yok !");
						cmd_cetepanel(playerid, "");
					}
					case 13: cmd_cetepanel(playerid, "");
					case 14:
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete içi hasarý sadece sahipler deðiþtirebilir.");
						    return 1;
						}
					    new ba[77 + 24];
					    if(CeteIslem[c][ceteGod] == 0)
						{
						    format(ba, sizeof(ba), "{6157D4}« ÇETE » {FFFFFF}%s tarafýndan çete içi hasar aktif hale getirildi.", getName(playerid));
							foreach(new i: Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, ba);
							CeteIslem[c][ceteGod] = 1,
							cmd_cetepanel(playerid, "");
							return 1;
						}
						if(CeteIslem[c][ceteGod] == 1)
						{
						    format(ba, sizeof(ba), "{6157D4}« ÇETE » {FFFFFF}%s tarafýndan çete içi hasar kapalý hale getirildi.", getName(playerid));
							foreach(new i: Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, ba);
							CeteIslem[c][ceteGod] = 0,
							cmd_cetepanel(playerid, "");
							return 1;
						}
					}
					case 15:
					{
						new c = PlayerCete[playerid];
 						if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Dost Çete hasarýný sadece sahipler deðiþtirebilir.");
						    return 1;
						}
						new query[125];
					    CeteIslem[c][dostGode] = (!CeteIslem[c][dostGode]) ? (1) : (0);
                        cmd_cetepanel(playerid, "");
						switch(CeteIslem[c][dostGode])
					    {
					        case 0:
					        {
					            // Kapalý
					            foreach(new i: Player) if(PlayerCete[i] == c) SCM_Ex(i, -1, "{6157D4}« ÇETE » {FFFFFF}%s tarafýndan dost çete hasarý kapatýldý.", getName(playerid));
					        }
					        case 1:
					        {
					            // Açýk
					            foreach(new i: Player) if(PlayerCete[i] == c) SCM_Ex(i, -1, "{6157D4}« ÇETE » {FFFFFF}%s tarafýndan dost çete hasarý açýldý.", getName(playerid));
					        }
					    }
						mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `dostgode` = '%d' WHERE `cid` = '%d'", CeteIslem[c][dostGode], c);
						mysql_tquery(g_SQL, query);
					}
					case 16:
					{
						new Cache:VeriCek, query[63], c = PlayerCete[playerid], ba[1024];
						mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `ceteid` = '%d'", c);
						VeriCek = mysql_query(g_SQL, query);
						new rows = cache_num_rows();
						if(rows)
						{
						    format(ba, sizeof(ba), "Ýsim\tToplam Baðýþý\n");
						    for(new i = 0; i < rows; ++i)
						    {
						        new bagislayan[24], bamiktar = 0;
								cache_get_value_name(i, "Bagisim", bagislayan);
	        					cache_get_value_name_int(i, "Bagisi", bamiktar);
	        					format(ba, sizeof(ba), "%s%s\t$%s\n", ba, bagislayan, convertNumber(bamiktar));
						    }
						    ShowPlayerDialog(playerid, DIALOG_BAGISLISTE, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete » Baðýþ Yapanlar", ba, "Geri", "");
						}
						if(!rows) { ShowPlayerDialog(playerid, DIALOG_BAGISLISTE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Baðýþ Yapanlar", "Henüz baðýþ yapýlmamýþ", "Geri", ""); }
						cache_delete(VeriCek);
					}
					case 17:
					{
						if(strcmp(CeteIslem[PlayerCete[playerid]][cSahip1], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Çete silme iþlemini asýl kurucu yapabilir.");
						    return 1;
						}
					    ShowPlayerDialog(playerid, CETE_SIL_ONAY, DIALOG_STYLE_INPUT, "{FFFFFF}Çeteyi Sil", "{DEDEDE}Çetenizi silmek istiyorsanýz\n{DEDEDE}kutucuðua büyük harflerle {DC2F2F}ONAY {DEDEDE}yazýnýz.", "Sil", "Geri");
					}
				}
	        }
	    }
	    case CETE_SIL_ONAY:
	    {
	        if(!response) return cmd_cpanel(playerid);
	        if(response)
	        {
	            new cid = PlayerCete[playerid], query[156], sx[11], hex;
	            if(strlen(inputtext) != 4) return ShowPlayerDialog(playerid, CETE_SIL_ONAY, DIALOG_STYLE_INPUT, "{FFFFFF}Çeteyi Sil", "{DEDEDE}Çetenizi silmek istiyorsanýz\n{DEDEDE}kutucuðua büyük harflerle {DC2F2F}ONAY {DEDEDE}yazýnýz.", "Sil", "Geri");
	            if(strcmp(inputtext, "ONAY", false) != 0) return ShowPlayerDialog(playerid, CETE_SIL_ONAY, DIALOG_STYLE_INPUT, "{FFFFFF}Çeteyi Sil", "{DEDEDE}Çetenizi silmek istiyorsanýz\n{DEDEDE}kutucuðua büyük harflerle {DC2F2F}ONAY {DEDEDE}yazýnýz.", "Sil", "Geri");
				CeteSil(cid);
			 	foreach(new id: CeteSavaslar)
			    {
			        if(CeteSavasMekan[id][ceteMekanSahip] == cid)
			        {
						mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '-1' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
						mysql_query(g_SQL, query);

			   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '000000' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
						mysql_query(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
						mysql_query(g_SQL, query);

			   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
						mysql_query(g_SQL, query);

			            CeteSavasMekan[id][ceteMekanSahip] = -1;
			            CeteSavasMekan[id][ceteBolgeSure] = 0;
			            CeteSavasMekan[id][ceteTip] = 0;
			            CeteSavasMekan[id][eleGecirenCete] = -1;
			            format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}Yok\n{C938FF}/SavasAc\n", CeteSavasMekan[id][ceteMekanIsmi], id);
			            UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, query);
			            GangZoneDestroy(CeteSavasMekan[id][cbZone]);
						CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
						format(CeteSavasMekan[id][ceteMekanRenk], 7, "000000");
						format(sx, sizeof(sx), "0x%s99", CeteSavasMekan[id][ceteMekanRenk]);
						sscanf(sx, "x", hex);
						foreach(new i: Player) GangZoneShowForPlayer(i, CeteSavasMekan[id][cbZone], hex);
			        }
			    }
				SendClientMessage(playerid, 0x00B0FFFF, "« ÇETE » {FFFFFF}Çeteniz þuan sildiniz.");
			}
	    }
	    case DIALOG_CETEARACP:
	    {
			if(!response) return cmd_cetepanel(playerid, "");
	        if(response)
	        {
	            new ba[100], c = PlayerCete[playerid], bool:_sonuc = false;
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CETEARACP, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Plaka", "{FF0073}» {FFFFFF}Ekraný boþ býrakmayýn !\n\nKullanmak istediðiniz Plakayý girin.\n", "Deðiþtir", "Geri");
				if(strlen(inputtext) < 3 || strlen(inputtext) > 10) return ShowPlayerDialog(playerid, DIALOG_CETEARACP, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Plaka", "{FF0073}» {FFFFFF}En düþük 3, en fazla 10 karakterli plaka girebilirsin.\n\nKullanmak istediðiniz Plakayý girin.\n", "Deðiþtir", "Geri");
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(inputtext[i] == '%' || inputtext[i] == '*' || inputtext[i] == '\\')
				    {
				        _sonuc = true;
				    }
				}
				if(_sonuc) return ShowPlayerDialog(playerid, DIALOG_CETEARACP, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Plaka", "{FF0073}» {FFFFFF}Plaka isminde geçerli olmayan karakterler bulundu.\n\nKullanmak istediðiniz Plakayý girin.\n", "Deðiþtir", "Geri");
				format(CeteIslem[c][cetePlaka], 10, inputtext);
				mysql_format(g_SQL, ba, sizeof(ba), "UPDATE `ceteler` SET `Plaka` = '%s' WHERE `cid` = '%d' LIMIT 1", inputtext, c);
				mysql_query(g_SQL, ba);
		    	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
				{
			    	if(CeteArac[i][ceteAracAktif] == true)
			    	{
			        	if(CeteArac[i][ceteIDsi] == c)
			        	{
                			new Float: cAractala[4];
							GetVehiclePos(i, cAractala[0], cAractala[1], cAractala[2]);
							GetVehicleZAngle(i, cAractala[3]);
							SetVehicleNumberPlate(i, inputtext);
							SetVehicleToRespawn(i);
							SetVehiclePos(i, cAractala[0], cAractala[1], cAractala[2]);
							SetVehicleZAngle(i, cAractala[3]);
			        	}
					}
				}
				SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete Araç Plakasý deðiþtirildi.");
				cmd_cetepanel(playerid, "");
			}
	    }
	    case DIALOG_CSAHIP:
	    {
	        if(!response) return cmd_cetepanel(playerid, "");
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: hataMesaji(playerid, "Sahip 1, çetenin asýl kurucusudur. Deðiþtiremezsiniz."), CeteSahip(playerid);
					case 1: SetPVarInt(playerid, "SahipSecim", 1), ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
					case 2: SetPVarInt(playerid, "SahipSecim", 2), ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
                    case 3: SetPVarInt(playerid, "SahipSecim", 3), ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
				}
	        }
	    }
	    case DIALOG_CSSEC:
	    {
	        if(!response)
	        {
				new csS = GetPVarInt(playerid, "SahipSecim"), cx[86+24+24+1], c = PlayerCete[playerid];
				if(csS == 1)
				{
					new csi = GetPlayerID(CeteIslem[c][cSahip2]);
					if(csi != INVALID_PLAYER_ID)
					{
					    format(cx, sizeof(cx), "{2C82C9}« ÇETE » {00FF00}%s sizin {FF214C}%s {FFFFFF}çetesindeki sahip yetkinizi aldý.", getName(playerid), CeteIslem[c][ceteIsmi]);
					    SendClientMessage(csi, -1, cx);
					}
				    format(CeteIslem[c][cSahip2], 24, "-");
					mysql_format(g_SQL, cx, sizeof(cx), "UPDATE `ceteler` SET `cSahip2` = '-' WHERE `cid` = '%d' LIMIT 1", c);
					mysql_tquery(g_SQL, cx);
				}
				if(csS == 2)
				{
					new csi = GetPlayerID(CeteIslem[c][cSahip3]);
					if(csi != INVALID_PLAYER_ID)
					{
					    format(cx, sizeof(cx), "{2C82C9}« ÇETE » {00FF00}%s sizin {FF214C}%s {FFFFFF}çetesindeki sahip yetkinizi aldý.", getName(playerid), CeteIslem[c][ceteIsmi]);
					    SendClientMessage(csi, -1, cx);
					}
				    format(CeteIslem[c][cSahip3], 24, "-");
					mysql_format(g_SQL, cx, sizeof(cx), "UPDATE `ceteler` SET `cSahip3` = '-' WHERE `cid` = '%d' LIMIT 1", c);
					mysql_tquery(g_SQL, cx);
				}
				if(csS == 3)
				{
					new csi = GetPlayerID(CeteIslem[c][cSahip4]);
					if(csi != INVALID_PLAYER_ID)
					{
					    format(cx, sizeof(cx), "{2C82C9}« ÇETE » {00FF00}%s sizin {FF214C}%s {FFFFFF}çetesindeki sahip yetkinizi aldý.", getName(playerid), CeteIslem[c][ceteIsmi]);
					    SendClientMessage(csi, -1, cx);
					}
				    format(CeteIslem[c][cSahip4], 24, "-");
					mysql_format(g_SQL, cx, sizeof(cx), "UPDATE `ceteler` SET `cSahip4` = '-' WHERE `cid` = '%d' LIMIT 1", c);
					mysql_tquery(g_SQL, cx);
				}
				SetPVarInt(playerid, "SahipSecim", 0);
				CeteSahip(playerid);
				SendClientMessage(playerid, 0x00FF00FF, "Çete: {FFFFFF}Seçtiðiniz oyuncu sahiplikten atýldý.");
	        }
	        if(response)
	        {
	            new ciz = strval(inputtext), c = PlayerCete[playerid], cxz[115+24+24+1];
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
				if(!IsPlayerConnected(ciz)) return ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{00FF00}Sunucuda böyle bir id yok !\n{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
				if(playerid == ciz) return ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{00FF00}Zaten bu çetedesin !\n{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
				if(PlayerCete[ciz] == -1) return ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{00FF00}Bu oyuncunun bir çetesi yok !\n{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
				if(PlayerCete[ciz] != c) return ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{00FF00}Bu oyuncu baþka bir çetede !\n{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
                if(strcmp(CeteIslem[c][cSahip1], getName(ciz), false) == 0 || strcmp(CeteIslem[c][cSahip2], getName(ciz), false) == 0 || strcmp(CeteIslem[c][cSahip3], getName(ciz), false) == 0 || strcmp(CeteIslem[c][cSahip4], getName(ciz), false) == 0) return ShowPlayerDialog(playerid, DIALOG_CSSEC, DIALOG_STYLE_INPUT, "{FFFFFF}Çete Sahip Ekleme", "{00FF00}Bu oyuncu zaten çete sahiplerinin arasýnda !\n{FEC606}Sahip ekleyeceðiniz oyuncunun ID`sini girin.\n{FEC606}Eðer bu oyuncuyu sahiplikten çýkartmak isterseniz {FFFFFF}Çýkar {FEC606}butonuna basýn.", "Gönder", "Çýkar");
				format(cxz, sizeof(cxz), "{00FF00}%s {FFFFFF}sizi {D33257}%s {FFFFFF}çetesinin sahibi yapmak istiyor.\n{FFFFFF}Bu teklifi onaylýyor musunuz ?", getName(playerid), CeteIslem[c][ceteIsmi]);
				ShowPlayerDialog(ciz, DIALOG_CONAY, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", cxz, "Onayla", "Reddet");
				SetPVarInt(ciz, "OnayID", playerid);
				onayCount[playerid] = 0;
				OnayTimer[playerid] = SetTimerEx("SahipOnayBekle", 250, true, "dd", playerid, ciz);
			}
	    }
	    case DIALOG_CONAY:
	    {
	        if(!response)
	        {
	            new getcete = GetPVarInt(playerid, "OnayID");
	            KillTimer(OnayTimer[getcete]);
	            GameTextForPlayer(playerid, "~r~~h~Teklifi Reddettiniz", 3000, 3);
	            ShowPlayerDialog(getcete, DIALOG_CONAYBEKLE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{FEC606}Karþý taraf teklifinizi reddetti.", "Kapat", "");
				SetPVarInt(playerid, "OnayID", INVALID_PLAYER_ID);
			}
			if(response)
			{
   	            new getcete = GetPVarInt(playerid, "OnayID");
   	            new c = PlayerCete[getcete];
   	            new csS = GetPVarInt(getcete, "SahipSecim");
   	            new cx[90+24+24+1+8];
	            KillTimer(OnayTimer[getcete]);
	            ShowPlayerDialog(getcete, DIALOG_CONAYBEKLE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{1DABB8}Karþý taraf teklifinizi onayladý.", "Kapat", "");
                if(csS == 1)
                {
					format(CeteIslem[c][cSahip2], 24, getName(playerid));
					mysql_format(g_SQL, cx, sizeof(cx), "UPDATE `ceteler` SET `cSahip2` = '%e' WHERE `cid` = '%d' LIMIT 1", getName(playerid), c);
					mysql_tquery(g_SQL, cx);
                }
				if(csS == 2)
                {
					format(CeteIslem[c][cSahip3], 24, getName(playerid));
					mysql_format(g_SQL, cx, sizeof(cx), "UPDATE `ceteler` SET `cSahip3` = '%e' WHERE `cid` = '%d' LIMIT 1", getName(playerid), c);
					mysql_tquery(g_SQL, cx);
                }
				if(csS == 3)
                {
					format(CeteIslem[c][cSahip4], 24, getName(playerid));
					mysql_format(g_SQL, cx, sizeof(cx), "UPDATE `ceteler` SET `cSahip4` = '%e' WHERE `cid` = '%d' LIMIT 1", getName(playerid), c);
					mysql_tquery(g_SQL, cx);
                }
                format(cx, sizeof(cx), "{2C82C9}« ÇETE » {FFFFFF}Oyuncu {00FF00}%s {FFFFFF}artýk {FF214C}%s {FFFFFF}çetesinin yeni sahibi.", getName(playerid), CeteIslem[c][ceteIsmi]);
				foreach(new i: Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, cx);
				SetPVarInt(playerid, "OnayID", INVALID_PLAYER_ID);
			}
	    }
	    case DIALOG_KASA:
	    {
	        if(!response) return cmd_cetepanel(playerid, "");
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: CeteKasa(playerid);
					case 1: CeteKasa(playerid);
					case 2: ShowPlayerDialog(playerid, DIALOG_KASAYATIR, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Yatýrma", "{FEC606}Yatýrmak istediðiniz miktarý girin.", "Yatýr", "Geri");
					case 3:
					{
	    				new c = PlayerCete[playerid];
         				if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
						{
					        hataMesaji(playerid, "Para çekme iþlemlerini sadece Çete Sahipleri yapabilir.");
						    return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_KASACEK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Çek", "{FEC606}Çekmek istediðiniz miktarý girin.", "Çek", "Geri");
					}
				}
	        }
	    }
	    case DIALOG_KASAYATIR:
	    {
	        if(!response) return CeteKasa(playerid);
	        if(response)
	        {
	            new para = strval(inputtext), c = PlayerCete[playerid], query[85];
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_KASAYATIR, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Yatýrma", "{FEC606}Yatýrmak istediðiniz miktarý girin.", "Yatýr", "Geri");
			    if(para <= 0) return ShowPlayerDialog(playerid, DIALOG_KASAYATIR, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Yatýrma", "{00FF00}0 veya Altýnda bir deðer giriniz !\n{FEC606}Yatýrmak istediðiniz miktarý girin.", "Yatýr", "Geri");
				if(para > ParaKorumasi[playerid]) return ShowPlayerDialog(playerid, DIALOG_KASAYATIR, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Yatýrma", "{00FF00}Kendi paranýn üstünde bir miktar giremezsin !\n{FEC606}Yatýrmak istediðiniz miktarý girin.", "Yatýr", "Geri");
                if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_KASAYATIR, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Yatýrma", "{FEC606}Yatýrmak istediðiniz miktarý girin.", "Yatýr", "Geri");
				new _tmp = CeteIslem[c][ceteKasasi] + para;
				if(_tmp > 1000000000) return ShowPlayerDialog(playerid, DIALOG_KASAYATIR, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Yatýrma", "{00FF00}Paranýz çok fazla, $1,000,000,000 dolarý aþýyor !\n{FEC606}Yatýrmak istediðiniz miktarý girin.", "Yatýr", "Geri");
				if(CeteIslem[c][ceteKasasi] > 1000000000) return hataMesaji(playerid, "Çete kasasýna daha fazla para yatýramazsýnýz."), CeteKasa(playerid);
				pParaver(playerid, -para);
				ParaLogu(playerid, 6, "", para);
                CeteIslem[c][ceteKasasi] += para;
                CeteKasa(playerid);
                SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete kasasýna girdiðiniz miktar yatýrýldý.");
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
				mysql_tquery(g_SQL, query);
				BagisYapti(playerid, para);
			}
	    }
     	case DIALOG_KASACEK:
		{
		    if(!response) return CeteKasa(playerid);
		    if(response)
		    {
	     		new para = strval(inputtext), c = PlayerCete[playerid], query[77+24+11];
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_KASACEK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Çek", "{FEC606}Çekmek istediðiniz miktarý girin.", "Çek", "Geri");
			    if(para <= 0) return ShowPlayerDialog(playerid, DIALOG_KASACEK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Çek", "{00FF00}0 Veya Altýnda bir deðer giremezsin\n{FEC606}Çekmek istediðiniz miktarý girin.", "Çek", "Geri");
				if(para > CeteIslem[c][ceteKasasi]) return ShowPlayerDialog(playerid, DIALOG_KASACEK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Çek", "{00FF00}Çete kasasýnda bu kadar para yok !\n{FEC606}Çekmek istediðiniz miktarý girin.", "Çek", "Geri");
                if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_KASACEK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Kasa » Para Çek", "{FEC606}Çekmek istediðiniz miktarý girin.", "Çek", "Geri");
				pParaver(playerid, para);
				ParaLogu(playerid, 7, "", para);
	            CeteIslem[c][ceteKasasi] -= para;
	            CeteKasa(playerid);
	            SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete kasasýndan girdiðiniz miktardaki parayý çektiniz.");
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
				mysql_tquery(g_SQL, query);
            	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip2], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip3], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip4], getName(playerid), false) == 0)
				{
					new Cache:VeriCek;
					mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(playerid));
					VeriCek = mysql_query(g_SQL, query);
					new rows = cache_num_rows();
					if(rows)
					{
						mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetebagis` SET `Bagisi` = Bagisi - %d WHERE `Bagisim` = '%e' LIMIT 1", para, getName(playerid));
						mysql_query(g_SQL, query);
					}
					cache_delete(VeriCek);
				}
			}
		}
		case DIALOG_CETERENK:
		{
  		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        new c = PlayerCete[playerid], query[95], sx[11], hex, xHex[7], fixYedixD[7];
		        if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Hex kodu 6 karakterli olmalýdýr\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
		        if(strlen(inputtext) != 6) return ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Hex kodu 6 karakterli olmalýdýr\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
				if(sscanf(inputtext, "h", xHex)) return ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Hex kodu geçersiz\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
				for(new i = 0; i < strlen(inputtext); i++)
				{
					inputtext[i] = toupper(inputtext[i]);
				}
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(inputtext[1] == 'X')
				    {
				        ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Hex kodu geçersiz\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
				        return 1;
				    }
				}
				if(strcmp(inputtext, CeteIslem[c][ceteRengi], false) == 0) return ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Bu çete rengini zaten kullanýyorsunuz\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
				format(fixYedixD, sizeof(fixYedixD), "%c%c%c%c%c%c", inputtext[0], inputtext[1], inputtext[2], inputtext[3], inputtext[4], inputtext[5]);
				if(CeteRenkKontrol(fixYedixD)) return ShowPlayerDialog(playerid, DIALOG_CETERENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Renk", "{FEC606}Bu rengi baþka bir çete kullanýyor\n{FFFFFF}Örnek {00FF00}00FF00 {FFFFFF}gibi.", "Deðiþtir", "Geri");
				format(CeteIslem[c][ceteRengi], 7, inputtext);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteRengi` = '%s' WHERE `cid` = '%d' LIMIT 1", inputtext, c);
				mysql_tquery(g_SQL, query);
				SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete rengini deðiþtirdiniz.");
				if(CeteIslem[c][ceteDeger] == 2)
				{
					GangZoneDestroy(CeteIslem[c][cZone]);
					CeteIslem[c][cZone] = GangZoneCreate(CeteIslem[c][cetePos][0], CeteIslem[c][cetePos][1], CeteIslem[c][cetePos][2], CeteIslem[c][cetePos][3]);
					format(sx, sizeof(sx), "0x%s99", inputtext);
	    			sscanf(sx, "x", hex);
					foreach(new x: Player) GangZoneShowForPlayer(x, CeteIslem[c][cZone], hex);
			     	foreach(new id: CeteSavaslar)
			    	{
			        	if(c == CeteSavasMekan[id][ceteMekanSahip])
						{
							mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '%s' WHERE `ceteMekanid` = '%d' LIMIT 1", inputtext, id);
							mysql_query(g_SQL, query);
          					GangZoneDestroy(CeteSavasMekan[id][cbZone]);
							CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
							format(sx, sizeof(sx), "0x%s99", CeteIslem[c][ceteRengi]);
							sscanf(sx, "x", hex);
							foreach(new i: Player) GangZoneShowForPlayer(i, CeteSavasMekan[id][cbZone], hex);
						}
					}
				}
		    	foreach(new i : Player)
			    {
			        if(PlayerCete[i] == c)
			        {
						kafaTextUp(i);
			        }
			    }
				cmd_cetepanel(playerid, "");
			}
		}
		case DIALOG_CETETAG:
		{
			if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        new c = PlayerCete[playerid], tagfix[7], query[75];
                if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CETETAG, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Tag", "{FEC606}Çete Tagýný girin.", "Deðiþtir", "Geri");
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CETETAG, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Tag", "{FEC606}Çete Tagýný girin.", "Deðiþtir", "Geri");
		        if(strlen(inputtext) > 5) return ShowPlayerDialog(playerid, DIALOG_CETETAG, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Tag", "{FEC606}Çete Tagýný girin.\nMaks. 5 karakterden oluþabilir.", "Deðiþtir", "Geri");
				format(tagfix, sizeof(tagfix), "%c%c%c%c%c%c%c", inputtext[0], inputtext[1], inputtext[2], inputtext[3], inputtext[4], inputtext[5], inputtext[6]);
				if(CeteTagKontrol(tagfix)) return ShowPlayerDialog(playerid, DIALOG_CETETAG, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Tag", "{FEC606}Bu Tag baþka bir çetede kullanýlýyor.\nMaks. 5 karakterden oluþabilir.", "Deðiþtir", "Geri");
                format(CeteIslem[c][ceteTagi], 6, inputtext);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteTagi` = '%s' WHERE `cid` = '%d' LIMIT 1", inputtext, c);
				mysql_tquery(g_SQL, query);
				SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete Tagýný deðiþtirdiniz.");
				cmd_cetepanel(playerid, "");
			}
		}
		case DIALOG_CETEGELISTIR:
		{
		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        new c = PlayerCete[playerid], query[115+24+24];
		        if(CeteIslem[c][ceteDeger] == 1) return hataMesaji(playerid, "Ücretsiz çeteler, geliþtirme yapamaz !"), cmd_cetepanel(playerid, "");
		        new cmiktarr = cyMiktar(c);
		        if(CeteIslem[c][ceteKasasi] < cmiktarr) return hataMesaji(playerid, "Çete kasasýnda bu kadar para yok !"), cmd_cetepanel(playerid, "");
				CeteIslem[c][ceteKasasi] -= cmiktarr;
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
				mysql_tquery(g_SQL, query);
				CeteIslem[c][ceteSeviye]++;
				new akapaa = caKapasite(c) - 2;
				CeteIslem[c][ceteAracKapasite] = akapaa;
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteSeviye` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteSeviye], c);
				mysql_tquery(g_SQL, query);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteAracKapasite` = '%d' WHERE `cid` = '%d' LIMIT 1", akapaa, c);
				mysql_tquery(g_SQL, query);
				SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete seviyeniz yükseltildi.");
                format(query, sizeof(query), "{FF0067}[Çete Bölgesi]\n{07FFA7}%s(%d)\n{FF9F00}Çete Sahibi: {FFFFFF}%s\n{00FF0C}Çete Seviyesi: {FFFFFF}%d", CeteIslem[c][ceteIsmi], c, CeteIslem[c][cSahip1], CeteIslem[c][ceteSeviye]);
       			UpdateDynamic3DTextLabelText(CeteIslem[c][cLabel], 0xFFFFFFFF, query);
       			cmd_cetepanel(playerid, "");
			}
		}
		case DIALOG_CETEUYELER:
		{
  		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response) cmd_cetepanel(playerid, "");
		}
		case DIALOG_CETESKIN:
		{
		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
				new cvskin = strval(inputtext), query[95], c = PlayerCete[playerid];
				if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CETESKIN, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Skin", "{FEC606}Çetenizin kullanacaðý skini ID`sini girin.", "Deðiþtir", "Geri");
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CETESKIN, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Skin", "{FEC606}Çetenizin kullanacaðý skini ID`sini girin.", "Deðiþtir", "Geri");
				if(cvskin < 0 || cvskin > 311) return ShowPlayerDialog(playerid, DIALOG_CETESKIN, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Skin", "{FEC606}Çete skini en düþük 0 en fazla 311 arasý olabilir.", "Deðiþtir", "Geri");
				if(cvskin == 74) return ShowPlayerDialog(playerid, DIALOG_CETESKIN, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Skin", "{FEC606}Bu skin ID`sini kullanamazsýn.", "Deðiþtir", "Geri");
                if(CeteSkinKontrol(cvskin)) return ShowPlayerDialog(playerid, DIALOG_CETESKIN, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Skin", "{FEC606}Bu skin baþka bir çetede kullanýlýyor.", "Deðiþtir", "Geri");
                CeteIslem[c][ceteSkin] = cvskin;
                format(query, sizeof(query), "{6157D4}« ÇETE » {FFFFFF}%s tarafýndan çete skinleri deðiþtirildi.", getName(playerid));
				foreach(new i: Player)
                {
                    if(PlayerCete[i] == c)
                    {
						if(GetPlayerSkin(i) != CeteIslem[c][ceteSkin])
						{
					    	SetPlayerSkin(i, CeteIslem[c][ceteSkin]);
						}
						SendClientMessage(i, -1, query);
					}
                }
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteSkin` = '%d' WHERE `cid` = '%d' LIMIT 1", cvskin, c);
				mysql_tquery(g_SQL, query);
                cmd_cetepanel(playerid, "");
			}
		}
  		case DIALOG_CETEARAC:
		{
		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        switch(listitem)
		        {
		        	case 0:
		        	{
						new sz[1524];
		        	    format(sz, sizeof(sz), "Araç Ýsmi\tFiyat\n");
		        	    for(new i = 0; i < sizeof(CeteAracIslem); ++i)
		        	    {
		        	        format(sz, sizeof(sz), "%s%s\t$%s\n", sz, GetVehicleName(CeteAracIslem[i][ceteeAid]), convertNumber(CeteAracIslem[i][ceteeFiyat]));
		        	    }
		        	    ShowPlayerDialog(playerid, DIALOG_CETEARACS, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete » Araçlar", sz, "Satýn Al", "Geri");
		        	}
				}
			}
		}
		case DIALOG_CETEARACS:
		{
		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        new Float: bpos[4], carac, c = PlayerCete[playerid], query[256], caSlot[2];
		        if(CeteIslem[c][ceteKasasi] < CeteAracIslem[listitem][ceteeFiyat]) return hataMesaji(playerid, "Çete kasasýnda bu kadar para yok !"), cmd_cetepanel(playerid, "");
                caSlot[0] = caGet(c);
                caSlot[1] = caKapasite2(c);
                if(caSlot[0] == caSlot[1]) return hataMesaji(playerid, "Daha fazla araç almak için çete seviyesini yükseltin. Yada araç satýn.");
				CeteIslem[c][ceteKasasi] -= CeteAracIslem[listitem][ceteeFiyat];
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
				mysql_query(g_SQL, query);
				GetPlayerPos(playerid, bpos[0], bpos[1], bpos[2]);
		        GetPlayerFacingAngle(playerid, bpos[3]);
		        carac = CreateVehicle(CeteAracIslem[listitem][ceteeAid], bpos[0], bpos[1], bpos[2], bpos[3], CeteIslem[c][ceteAracRenk][0], CeteIslem[c][ceteAracRenk][1], 999999);
				if(strlen(CeteIslem[c][cetePlaka]) >= 1)
				{
				    SetVehicleNumberPlate(carac, CeteIslem[c][cetePlaka]);
				}
				CeteArac[carac][ceteIDsi] = c;
		        CeteArac[carac][ceteAracPos][0] = bpos[0];
		        CeteArac[carac][ceteAracPos][1] = bpos[1];
		        CeteArac[carac][ceteAracPos][2] = bpos[2];
		        CeteArac[carac][ceteAracPos][3] = bpos[3];
		        CeteArac[carac][ceteAracR][0] = CeteIslem[c][ceteAracRenk][0];
		        CeteArac[carac][ceteAracR][1] = CeteIslem[c][ceteAracRenk][1];
		        CeteArac[carac][ceteAracAktif] = true;
		        PutPlayerInVehicle(playerid, carac, 0);
          		mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `cetearaclari`(`CeteSahipID`, `CeteAModel`, `CeteaPosX`, `CeteaPosY`, `CeteaPosZ`, `CeteaPosA`, `CeteaR1`, `CeteaR2`) VALUES ('%d', '%d', '%f', '%f', '%f', '%f', '%d', '%d')", c, CeteAracIslem[listitem][ceteeAid], bpos[0], bpos[1], bpos[2], bpos[3], CeteArac[carac][ceteAracR][0], CeteArac[carac][ceteAracR][1]);
          		mysql_tquery(g_SQL, query, "AracSQLKayit", "d", carac);
          		SendClientMessage(playerid, -1, "{2C82C9}« ÇETE » {FFFFFF}Çete aracý satýn alýndý. {48AD01}/cPark {FFFFFF}yazarak aracý park edebilirsiniz.");
		    }
		}
		case DIALOG_CASATIYOR:
		{
		    if(response)
		    {
		        new
					c = PlayerCete[playerid],
					getArac = GetPVarInt(playerid, "SatiyorumList."),
					delArac = GetPVarInt(playerid, "Satiyorum."),
					query[75],
					tmpSQL1 = CeteArac[delArac][ceteAracSQL]
				;
				CeteIslem[c][ceteKasasi] += CeteAracIslem[getArac][ceteeFiyat]/2;
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
				mysql_tquery(g_SQL, query);
				CeteArac[delArac][ceteIDsi] = -1;
				CeteArac[delArac][ceteAracPos][0] = 0.0;
				CeteArac[delArac][ceteAracPos][1] = 0.0;
				CeteArac[delArac][ceteAracPos][2] = 0.0;
				CeteArac[delArac][ceteAracPos][3] = 0.0;
				CeteArac[delArac][ceteAracR][0] = 0;
				CeteArac[delArac][ceteAracR][1] = 0;
				CeteArac[delArac][ceteAracSQL] = -1;
				CeteArac[delArac][ceteAracAktif] = false;
				DestroyVehicle(delArac);
				SendClientMessage(playerid, 0x00B0FFFF, "« ÇETE » {FFFFFF}Çete aracý satýldý, para çete kasasýna aktarýldý.");
				mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetearaclari` WHERE `caid` = '%d' LIMIT 1", tmpSQL1);
				mysql_tquery(g_SQL, query);
		    }
		}
		case DIALOG_BAGISLISTE:
		{
			if(!response) return cmd_cetepanel(playerid, "");
		    if(response) cmd_cetepanel(playerid, "");
		}
		case DIALOG_ARENK:
		{
		    if(!response) return cmd_cetepanel(playerid, "");
		    if(response)
		    {
		        new areenk = strval(inputtext), c = PlayerCete[playerid];
		        if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 1 girin\n", "Gir", "Geri");
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 1 girin\n", "Gir", "Geri");
				if(areenk < 0 || areenk > 255) return ShowPlayerDialog(playerid, DIALOG_ARENK, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 0 altýnda ve 255 üstünde olamaz !\n", "Gir", "Geri");
                CeteIslem[c][ceteAracRenk][0] = areenk;
                ShowPlayerDialog(playerid, DIALOG_ARENK2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 2 girin !\n", "Deðiþtir", "");
			}
		}
  		case DIALOG_ARENK2:
		{
		    if(!response) return ShowPlayerDialog(playerid, DIALOG_ARENK2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 2 girin !\n", "Deðiþtir", "");
		    if(response)
		    {
		        new areenk = strval(inputtext), c = PlayerCete[playerid], ba[80];
		        if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARENK2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 2 girin\n", "Deðiþtir", "");
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARENK2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 2 girin\n", "Deðiþtir", "");
				if(areenk < 0 || areenk > 255) return ShowPlayerDialog(playerid, DIALOG_ARENK2, DIALOG_STYLE_INPUT, "{FFFFFF}Çete » Çete Araç Renk", "{FF0073}» {FFFFFF}Renk 0 altýnda ve 255 üstünde olamaz !\n", "Deðiþtir", "");
                CeteIslem[c][ceteAracRenk][1] = areenk;
    			format(ba, sizeof(ba), "{6157D4}« ÇETE » {FFFFFF}%s tarafýndan araç renkleri.", getName(playerid));
				foreach(new i: Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, ba);
				cmd_cetepanel(playerid, "");
				mysql_format(g_SQL, ba, sizeof(ba), "UPDATE `cetearaclari` SET `CeteaR1` = '%d' WHERE `CeteSahipID` = '%d'", CeteIslem[c][ceteAracRenk][0], c);
				mysql_tquery(g_SQL, ba);
				mysql_format(g_SQL, ba, sizeof(ba), "UPDATE `cetearaclari` SET `CeteaR2` = '%d' WHERE `CeteSahipID` = '%d'", CeteIslem[c][ceteAracRenk][1], c);
				mysql_tquery(g_SQL, ba);
				mysql_format(g_SQL, ba, sizeof(ba), "UPDATE `ceteler` SET `AR1` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteAracRenk][1], c);
				mysql_tquery(g_SQL, ba);
				mysql_format(g_SQL, ba, sizeof(ba), "UPDATE `ceteler` SET `AR2` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteAracRenk][1], c);
				mysql_tquery(g_SQL, ba);
				for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
				{
				    if(CeteArac[i][ceteAracAktif] == true)
				    {
				        if(CeteArac[i][ceteIDsi] == c)
				        {
				            ChangeVehicleColor(i, CeteIslem[c][ceteAracRenk][0], CeteIslem[c][ceteAracRenk][1]);
				            CeteArac[i][ceteAracR][0] = CeteIslem[c][ceteAracRenk][0];
				            CeteArac[i][ceteAracR][1] = CeteIslem[c][ceteAracRenk][1];
				        }
				    }
				}
			}
		}
	    case DIALOG_AYARLAR:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    new lagamFaresi = GetPVarInt(playerid, "PmDurum");
	                    if(lagamFaresi <= 0)
	                    {
	                        SetPVarInt(playerid, "PmDurum", 1);
                            SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Pm'niz kapatýldý.");
                            cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
						if(lagamFaresi == 1)
	                    {
	                        SetPVarInt(playerid, "PmDurum", 0);
	                        SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Pm'niz aktif edildi.");
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 1:
	                {
						if(oyuncuData[playerid][realSaat] == 0)
	                    {
							SetPlayerTime(playerid, GetPVarInt(playerid, "SaatAyari"), 0);
	                        oyuncuData[playerid][realSaat] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
						if(oyuncuData[playerid][realSaat] == 1)
	                    {
	                        oyuncuData[playerid][realSaat] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 2:
	                {
	                    if(oyuncuData[playerid][realSaat] == 0) return hataMesaji(playerid, "Gerçek saat aktifken bu ayarý kullanamazsýn."), cmd_ayarlar(playerid, "");
						new sz[150];
						for(new i = 0; i < 23; i++)
						{
							format(sz, sizeof(sz), "%s%d:00\n", sz, i);
						}
						ShowPlayerDialog(playerid, DIALOG_SAATAYAR, DIALOG_STYLE_LIST, "{FFFFFF}Saat Ayarý", sz, "Deðiþtir", "Kapat");
	                }
	                case 3:
	                {
	                    if(oyuncuData[playerid][kiyafetDurum] == 0)
	                    {
	                        oyuncuData[playerid][kiyafetDurum] = 1;
	                        SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Kýyafetleriniz kapatýldý.");
	                        for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                    if(oyuncuData[playerid][kiyafetDurum] == 1)
	                    {
							for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
							{
							    if(IsPlayerAttachedObjectSlotUsed(playerid, i))
								{
									RemovePlayerAttachedObject(playerid, i);
								}
								if(ao[playerid][i][ao_model] != 0)
								{
							    	SetPlayerAttachedObject(playerid, i,
									ao[playerid][i][ao_model],
									ao[playerid][i][ao_bone],
									ao[playerid][i][ao_x],
									ao[playerid][i][ao_y],
									ao[playerid][i][ao_z],
									ao[playerid][i][ao_rx],
									ao[playerid][i][ao_ry],
									ao[playerid][i][ao_rz], ao[playerid][i][ao_sx], ao[playerid][i][ao_sy], ao[playerid][i][ao_sz]);
								}
							}
	                        oyuncuData[playerid][kiyafetDurum] = 0;
	                        SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Kýyafetleriniz açýldý.");
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 4:
	                {
						ShowPlayerDialog(playerid, DIALOG_SIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Þifre Deðiþtirme", "{FF770B}Þifrenizi deðiþtirmek için güvenlik sebebiyle eski þifrenizi girin.", "Onayla", "Geri");
	                }
	                case 5:
	                {
						if(oyuncuData[playerid][textAyar] == 0)
						{
						    TextModee(playerid, 1);
						    oyuncuData[playerid][textAyar] = 1;
						    cmd_ayarlar(playerid, "");
						    return 1;
						}
						if(oyuncuData[playerid][textAyar] == 1)
						{
						    TextModee(playerid, 2);
						    oyuncuData[playerid][textAyar] = 0;
						    cmd_ayarlar(playerid, "");
						    return 1;
						}
	                }
	                case 6:
	                {
	                    if(oyuncuData[playerid][skinmode] == 0)
	                    {
	                        SetPlayerSkin(playerid, GetPVarInt(playerid, "SkinKayit"));
	                        oyuncuData[playerid][skinmode] = 1;
	                        return 1;
	                    }
						if(oyuncuData[playerid][skinmode] == 1)
	                    {
	                        SetPlayerSkin(playerid, GetPVarInt(playerid, "CeteSkinKayit"));
	                        oyuncuData[playerid][skinmode] = 0;
	                        return 1;
	                    }
	                }
	                case 7: cmd_ayarlar(playerid, "");
	                case 8:
	                {
	                    if(oyuncuData[playerid][pmGorme] == 0)
	                    {
	                        oyuncuData[playerid][pmGorme] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
                 		if(oyuncuData[playerid][pmGorme] == 1)
	                    {
	                        oyuncuData[playerid][pmGorme] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 9:
	                {
	                    if(oyuncuData[playerid][LocalGorme] == 0)
	                    {
	                        oyuncuData[playerid][LocalGorme] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                    if(oyuncuData[playerid][LocalGorme] == 1)
	                    {
	                        oyuncuData[playerid][LocalGorme] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 10:
	                {
                 		if(oyuncuData[playerid][ArGorme] == 0)
	                    {
	                        oyuncuData[playerid][ArGorme] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                    if(oyuncuData[playerid][ArGorme] == 1)
	                    {
	                        oyuncuData[playerid][ArGorme] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 11:
	                {
                 		if(oyuncuData[playerid][GrupGorme] == 0)
	                    {
	                        oyuncuData[playerid][GrupGorme] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                    if(oyuncuData[playerid][GrupGorme] == 1)
	                    {
	                        oyuncuData[playerid][GrupGorme] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	                case 12:
	                {
                 		if(oyuncuData[playerid][EkipGorme] == 0)
	                    {
	                        oyuncuData[playerid][EkipGorme] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                    if(oyuncuData[playerid][EkipGorme] == 1)
	                    {
	                        oyuncuData[playerid][EkipGorme] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
					case 13:
	                {
                 		if(oyuncuData[playerid][ceteGorme] == 0)
	                    {
	                        oyuncuData[playerid][ceteGorme] = 1;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                    if(oyuncuData[playerid][ceteGorme] == 1)
	                    {
	                        oyuncuData[playerid][ceteGorme] = 0;
	                        cmd_ayarlar(playerid, "");
	                        return 1;
	                    }
	                }
	            }
	        }
	    }
	    case DIALOG_SIFRE:
	    {
	        if(response)
	        {
				if(!(MINIMUM_SIFRE <= strlen(inputtext) <= 20)) return ShowPlayerDialog(playerid, DIALOG_SIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Þifre Deðiþtirme", "{FF770B}Þifreyi çok uzun veya kýsa girdiniz.", "Onayla", "Geri");
		    	new hashed_pass[65];
				SHA256_PassHash(inputtext, oyuncuData[playerid][SaltSifre], hashed_pass, 65);
				if(strcmp(hashed_pass, oyuncuData[playerid][Sifre]) == 0)
				{
				    ShowPlayerDialog(playerid, DIALOG_SIFRE2, DIALOG_STYLE_INPUT, "{FFFFFF}Yeni Deðiþtirme", "{528CCB}Yeni Þifrenizi Girin\n\n{F31D2F}Uyarý: {FFFFFF}Þifrenizi unutursanýz tekrardan þifrenizi alamazsýnýz.", "Onayla", "Geri");
				    return 1;
				}
				else
				{
				    ShowPlayerDialog(playerid, DIALOG_SIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Þifre Deðiþtirme", "{FF770B}Girdiðiniz þifre hatalý.", "Onayla", "Geri");
				}
	        }
	    }
	    case DIALOG_SIFRE2:
	    {
	        if(response)
	        {
	            new query[140];
      			for (new i = 0; i < 16; i++) oyuncuData[playerid][SaltSifre][i] = random(94) + 33;
				SHA256_PassHash(inputtext, oyuncuData[playerid][SaltSifre], oyuncuData[playerid][Sifre], 65);
				SendClientMessage(playerid, 0x00B5B5FF, "Þifreniz deðiþtirildi. Þifreniz büyük küçük harfe duyarlýdýr, unutmayýn !");
				format(query, sizeof(query), "Yeni Þifreniz: {FFFFFF}%s", inputtext);
				SendClientMessage(playerid, 0x00B5B5FF, query);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `sifre` = '%s' WHERE `id` = '%d' LIMIT 1", oyuncuData[playerid][Sifre], oyuncuData[playerid][xID]);
				mysql_query(g_SQL, query);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `saltsifre` = '%e' WHERE `id` = '%d' LIMIT 1", oyuncuData[playerid][SaltSifre], oyuncuData[playerid][xID]);
				mysql_query(g_SQL, query);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `orjSifre` = '%s' WHERE `id` = '%d' LIMIT 1", inputtext, oyuncuData[playerid][xID]);
				mysql_query(g_SQL, query);
	        }
	    }
	    case DIALOG_SAATAYAR:
	    {
	        if(response)
	        {
	            SetPVarInt(playerid, "SaatAyari", listitem);
	            SetPlayerTime(playerid, listitem, 0);
	            SendClientMessage(playerid, 0x00B5B5FF, "Saat ayarý deðiþtirildi.");
	            cmd_ayarlar(playerid, "");
	        }
	    }
	    case DIALOG_MARKET:
	    {
	        if(response)
	        {
	            if(ParaKorumasi[playerid] < MarketIslem[listitem][sfiyat]) return hataMesaji(playerid, "Bu silahý alacak yeterli paran yok !");
				pParaver(playerid, -MarketIslem[listitem][sfiyat]);
				Silahver(playerid, MarketIslem[listitem][sid], MarketIslem[listitem][smermi]);
				SendClientMessage(playerid, 0x00B5B5FF, "Silah satýn alýndý.");
			}
	    }
	    case DIALOG_YARDIM:
	    {
			if(response)
			{
				switch(listitem)
				{
				    //case 0: cmd_credits(playerid, "");
				    case 0: cmd_kurallar(playerid, "");
				    case 1: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Sunucumuzdaki komutlara eriþebilmek\n{FFFFFF}için {E01931}/TumKomutlar {FFFFFF}yazmanýz yeterlidir.", "Kapat", "");
					case 2: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Polisler þehirdeki suçlu oyuncularý yakalamakla görevlidirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada öldürmeleri gerekir.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
					case 3: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalamakla görevlidirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada öldürmeleri gerekir.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
                    case 4: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalamakla görevlidirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada öldürmeleri gerekir.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
                    case 5: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalamakla görevlidirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada öldürmeleri gerekir.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
                    case 6: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Þehirde sivil oyuncu gibi dolaþýp suçlu oyuncularý yakalamakla görevlidirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada öldürmeleri gerekir.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
                    case 7: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalamakla görevlidirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada öldürmeleri gerekir.\n\t{FFFFFF}Ek özellik olarak Base bölgesinde ýþýnlanma komutu kullanabilirler.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Bolgeler {FFFFFF}- Þehir için bazý mekanlara ýþýnlanmanýzý saðlar.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
					case 8: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{F24D16}Ne Ýþ Yaparlar:\n\t{FFFFFF}Þehirde uçarak suçlu þahýslarý hýzlýca tespit edebilirler.\n\t{FFFFFF}Þehirdeki {F24D16}turuncu, {CF000F}kýrmýzý {FFFFFF}oyuncularý yakalayýp hapise atmalarý yada hava da bombalayarak öldürmelidirler.\n\n{F24D16}Komutlar Nedir:\n\t{1DABB8}/Ke {FFFFFF}- Suçlu þahsý kelepçeler.\n\t{1DABB8}/KeCikar {FFFFFF}- Suçlu þahsýn kelepçesini çýkartýr.\n\t{1DABB8}/AracaAt {FFFFFF}- Suçlu þahsý en son bindiðiniz araca atar.\n\t{1DABB8}/Ya {FFFFFF}- Suçlu þahsý hapise atar.\n\t{1DABB8}/Telsiz {FFFFFF}- Polis telsizi üzerinden iletiþime geçmenizi saðlar.\n\t{1DABB8}/Tazer {FFFFFF}- Oyuncuya þok etkisi verir.\n\t{1DABB8}/Barikat {FFFFFF}- barikat kurmanýzý saðlar.\n\t{1DABB8}/BarikatDuzenle {FFFFFF}- Kurduðunuz barikatý düzenlersiniz.\n\t{1DABB8}/BarikatSil {FFFFFF}- Kurduðunuz barikatý siler.\n", "Kapat", "");
					case 9: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Yardým",
					"{92F22A}Komut\t{92F22A}Ýþlevi\n\
					{7A8AFF}/gKur\t{FFFFFF}Bir grup kurmanýzý saðlar\n\
					{7A8AFF}/gAyril\t{FFFFFF}Bulunduðunuz gruptan ayrýlmanýzý saðlar\n\
					{7A8AFF}/gDavet\t{FFFFFF}Bir grup kurduysanýz oyuncularý davet edebilirsiniz\n\
					{7A8AFF}/gKatil\t{FFFFFF}Bir gruptan teklif geldiyse bu komutla katýlabilirsiniz\n\
					{7A8AFF}/gLider\t{FFFFFF}Kurduðunuz gruptan bir oyuncuyu yeni lider yapabilirsiniz\n\
					{7A8AFF}/gAt\t{FFFFFF}Grubunuzdaki bir oyuncuyu atabilirsiniz\n\
					{7A8AFF}/G\t{FFFFFF}Grup üzerinden konuþabilirsiniz\n\
					{7A8AFF}/gUyeler\t{FFFFFF}Grup üyelerini gösterir\n\
					{7A8AFF}/Gruplar\t{FFFFFF}Açýlmýþ bütün gruplarý gösterir\
					", "Kapat", "");
					case 10: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Yardým",
					"{92F22A}Komut\t{92F22A}Ýþlevi\n\
					{7A8AFF}/eKur\t{FFFFFF}Bir ekip kurmanýzý saðlar\n\
					{7A8AFF}/eAyril\t{FFFFFF}Bulunduðunuz ekipten ayrýlmanýzý saðlar\n\
					{7A8AFF}/gDavet\t{FFFFFF}Bir ekip kurduysanýz oyuncularý davet edebilirsiniz\n\
					{7A8AFF}/eKatil\t{FFFFFF}Bir ekipten teklif geldiyse bu komutla katýlabilirsiniz\n\
					{7A8AFF}/eLider\t{FFFFFF}Kurduðunuz ekipten bir oyuncuyu yeni lider yapabilirsiniz\n\
					{7A8AFF}/EkipAt\t{FFFFFF}Ekibinizdeki bir oyuncuyu atabilirsiniz\n\
					{7A8AFF}/E\t{FFFFFF}Ekip üzerinden konuþabilirsiniz\n\
					{7A8AFF}/eUyeler\t{FFFFFF}Ekip üyelerini gösterir\n\
					{7A8AFF}/Ekipler\t{FFFFFF}Açýlmýþ bütün ekipleri gösterir\
					", "Kapat", "");
					case 11: hataMesaji(playerid, "Çete");
					case 12: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Bir ev satýn almak için yeþil ev iconun üstünde\n{FFFFFF}durup {E01931}/SatinAl {FFFFFF}yazmanýz yeterlidir.\n\n{FFFFFF}Evinizi satýlýða çýkartmak için evinizde {E01931}/EvMenu {FFFFFF}komutunu kullanýn.", "Kapat", "");
					case 13: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Vip satýn almak için yetkililerle konuþunuz.\n{00FF00}/VipFiyat {FFFFFF}komutuyla vip fiyatlarýna bakabilirsiniz.", "Kapat", "");
					case 14: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{00FF00}/Market {FFFFFF}komutuyla silah alabilirsiniz.\n{FFFFFF}Tüm komutlardaki silah komutlarýyla da silah alabilirsiniz.", "Kapat", "");
					case 15: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Yakýnýnýzda ki oyuncuya {00FF00}/ParaVer {FFFFFF}komutuyla para aktarýmý yapabilirsiniz.", "Kapat", "");
                    case 16: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Þarkýyý kapatmak için {00FF00}/mKapat {FFFFFF}yazmanýz yeterlidir.", "Kapat", "");
                    case 17: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Özel mesaj atmak için {00FF00}/Pm {FFFFFF}komutunu kullanmanýz yeterlidir.", "Kapat", "");
                	case 18: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Yanýnýzdaki oyuncularla {00FF00}/Local {FFFFFF}komutuyla konuþabilirsiniz.", "Kapat", "");
                    case 19: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Arabanýzdaki oyuncularla {00FF00}/Ar {FFFFFF}komutuyla konuþabilirsiniz.", "Kapat", "");
                    case 20: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{00FF00}/TopPara {FFFFFF}ve {00FF00}/TopSkor {FFFFFF}komutlarýný kullanýn.", "Kapat", "");
                    case 21: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Þifrenizi {00FF00}/Ayarlar {FFFFFF}komutu üzerinden deðiþtirebilirsiniz.", "Kapat", "");
                    case 22: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Her Exp tamamladýðýnýzda yetenek puaný kazanýrsýnýz.\n{FFFFFF}Yetenek puaný ile yeteneklerinizi geliþtirebilirsiniz.", "Kapat", "");
					case 23: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Eðer yetenek puanýnýz varsa {00FF00}Can, Zýrh, Soygun Kazancýný {FFFFFF}arttýrabilirsiniz.", "Kapat", "");
                    case 24: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Her baþarý tamamladýðýnýzda {00FF00}Para, Skor, Exp {FFFFFF}kazanýrsýnýz.", "Kapat", "");
                    case 25: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Normal araçlarý eviniz varsa {00FF00}Oto Galeri {FFFFFF}üzerinden alabilirsiniz.\n{FFFFFF}Özel araçlarý {00FF00}Tamircinin Ordaki Galeri {FFFFFF}üzerinden para ile satýn alabilirsiniz.", "Kapat", "");
					case 26: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Yardým", "{FFFFFF}Kýyafetlerinizi {00FF00}/Ayarlar {FFFFFF}komutu üzerinden açýp, kapatabilirsiniz.", "Kapat", "");
				}
			}
	    }
		case DIALOG_KIYAFET:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: kiyafetBolgesi(playerid);
					case 1: kiyafetDuzenle(playerid);
					case 2: kiyafetSat(playerid);
				}
			}
		}
		case DIALOG_KIYAFETB:
		{
		    if(!response) return kiyafetMenu(playerid);
			if(response)
			{
			    SetPVarInt(playerid, "KBolge", listitem + 1);
			    kiyafetListesi(playerid);
			}
		}
		case DIALOG_KIYAFETL:
		{
		    if(!response) return kiyafetMenu(playerid);
  			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    new kiyafetID[sizeof(Aksesuarlar2)];
					    for(new i = 0; i < sizeof(Aksesuarlar2); i++) kiyafetID[i] = Aksesuarlar2[i][modelidx];
                        ShowModelSelectionMenuEx(playerid, kiyafetID, sizeof(kiyafetID), "Aksesuarlar", AKSESUAR_SELECT, .dialogBGcolor = 0x00000077, .previewBGcolor = 0x00000066, .tdSelectionColor = 0xf27a09ff);
					}
					case 1:
					{
						new kiyafetID[sizeof(Gozlukler)];
					    for(new i = 0; i < sizeof(Gozlukler); i++) kiyafetID[i] = Gozlukler[i][modelidx];
                        ShowModelSelectionMenuEx(playerid, kiyafetID, sizeof(kiyafetID), "Gozlukler", GOZLUK_SELECT, .dialogBGcolor = 0x00000077, .previewBGcolor = 0x00000066, .tdSelectionColor = 0xf27a09ff);
					}
					case 2:
					{
						new kiyafetID[sizeof(SapkaAndPeruk)];
					    for(new i = 0; i < sizeof(SapkaAndPeruk); i++) kiyafetID[i] = SapkaAndPeruk[i][modelidx];
                        ShowModelSelectionMenuEx(playerid, kiyafetID, sizeof(kiyafetID), "Sapka Ve Peruk", SAPKA_PERUK_SELECT, .dialogBGcolor = 0x00000077, .previewBGcolor = 0x00000066, .tdSelectionColor = 0xf27a09ff);
					}
					case 3:
					{
						new kiyafetID[sizeof(MaskeAndKask)];
					    for(new i = 0; i < sizeof(MaskeAndKask); i++) kiyafetID[i] = MaskeAndKask[i][modelidx];
                        ShowModelSelectionMenuEx(playerid, kiyafetID, sizeof(kiyafetID), "Maske Ve Kask", MASKE_KASK_SELECT, .dialogBGcolor = 0x00000077, .previewBGcolor = 0x00000066, .tdSelectionColor = 0xf27a09ff);
					}
				}
			}
		}
		case DIALOG_KIYAFETO:
		{
		    if(!response)
		    {
		        new ssil = GetPVarInt(playerid, "BossKSlot");
		        RemovePlayerAttachedObject(playerid, ssil);
		        SendClientMessage(playerid, -1, "{FEC606}Kýyafeti satýn almaktan vazgeçtiniz.");
				ao[playerid][ssil][ao_model] = 0;
	  	        ao[playerid][ssil][ao_bone] = 0;
	  	        ao[playerid][ssil][ao_x] = 0.0;
	  	        ao[playerid][ssil][ao_y] = 0.0;
	  	        ao[playerid][ssil][ao_z] = 0.0;
	  	        ao[playerid][ssil][ao_rx] = 0.0;
	  	        ao[playerid][ssil][ao_ry] = 0.0;
	  	        ao[playerid][ssil][ao_rz] = 0.0;
	  	        ao[playerid][ssil][ao_sx] = 0.0;
	  	        ao[playerid][ssil][ao_sy] = 0.0;
	  	        ao[playerid][ssil][ao_sz] = 0.0;
	  	        kiyafetMenu(playerid);
		    }
		    if(response)
		    {
		        new ssil = GetPVarInt(playerid, "kiyafetTutar"), query[300];
		        pParaver(playerid, -ssil);
		        SendClientMessage(playerid, 0x2CC990FF, "Kýyafeti satýn aldýnýz.");
				new i = GetPVarInt(playerid, "BossKSlot");
				mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `kiyafet`(`KiyafetSahip`, `kModel`, `kBone`, `kX`, `kY`, `kZ`, `kRX`, `kRY`, `kRZ`, `kSX`, `kSY`, `kSZ`) VALUES ('%e', '%d', '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f')",
				getName(playerid),
				ao[playerid][i][ao_model],
				ao[playerid][i][ao_bone],
				ao[playerid][i][ao_x],
                ao[playerid][i][ao_y],
                ao[playerid][i][ao_z],
                ao[playerid][i][ao_rx],
                ao[playerid][i][ao_ry],
                ao[playerid][i][ao_rz],
                ao[playerid][i][ao_sx],
                ao[playerid][i][ao_sy],
                ao[playerid][i][ao_sz])
				;
				mysql_tquery(g_SQL, query, "KiyafetSQLID", "dd", playerid, i);
		    }
		}
		case DIALOG_KIYAFETD:
		{
		    if(!response) return kiyafetMenu(playerid);
		    if(response)
		    {
		        new i = listitem + 2;
		        if(!IsPlayerAttachedObjectSlotUsed(playerid, i)) return hataMesaji(playerid, "Bu slot boþ, düzenlenemez."), kiyafetMenu(playerid);
				SetPVarInt(playerid, "DuzenlemeID", i);
				kiyafetDuzenle2(playerid);
			}
		}
		case DIALOG_KIYAFETD2:
		{
		    if(!response) return kiyafetMenu(playerid);
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                new i = GetPVarInt(playerid, "DuzenlemeID");
		                SetPVarInt(playerid, "EditMode", 1);
		                EditAttachedObject(playerid, i);
		            }
		        }
		    }
		}
		case DIALOG_KIYAFETS:
		{
		    if(!response) return kiyafetMenu(playerid);
  		    if(response)
		    {
		        new x = listitem + 2, ff, sz[60];
		        if(!IsPlayerAttachedObjectSlotUsed(playerid, x)) return hataMesaji(playerid, "Bu slot boþ, satamazsýnýz."), kiyafetMenu(playerid);
				for(new i = 0; i < sizeof(FullBilgi); i++)
				{
					if(ao[playerid][x][ao_model] == FullBilgi[i][modelidx])
					{
					    ff = FullBilgi[i][fiyatx];
					    break;
					}
				}
				SetPVarInt(playerid, "SilSlot", x);
				SetPVarInt(playerid, "kFi", ff/2);
				format(sz, sizeof(sz), "Bu kýyafeti $%s dolara\nsatmak istiyor musunuz ?", convertNumber(ff/2));
				ShowPlayerDialog(playerid, DIALOG_KIYAFETS2, DIALOG_STYLE_MSGBOX, "Kýyafet Satýlýyor...", sz, "Evet", "Hayýr");
			}
		}
		case DIALOG_KIYAFETS2:
		{
		    if(!response) return SendClientMessage(playerid, -1, "{FEC606}Kýyafeti satmaktan vazgeçtiniz."), kiyafetMenu(playerid);
			if(response)
			{
			    new kucret = GetPVarInt(playerid, "kFi"), i = GetPVarInt(playerid, "SilSlot"), query[60];
			    pParaver(playerid, kucret);
			    RemovePlayerAttachedObject(playerid, i);
			    SendClientMessage(playerid, 0x2CC990FF, "Kýyafeti yarý fiyatýna sattýnýz.");
			    mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `kiyafet` WHERE `kid` = '%d' LIMIT 1", ao[playerid][i][ao_Sqlid]);
                mysql_tquery(g_SQL, query);
				ao[playerid][i][ao_model] = 0;
	  	        ao[playerid][i][ao_bone] = 0;
	  	        ao[playerid][i][ao_x] = 0.0;
	  	        ao[playerid][i][ao_y] = 0.0;
	  	        ao[playerid][i][ao_z] = 0.0;
	  	        ao[playerid][i][ao_rx] = 0.0;
	  	        ao[playerid][i][ao_ry] = 0.0;
	  	        ao[playerid][i][ao_rz] = 0.0;
	  	        ao[playerid][i][ao_sx] = 0.0;
	  	        ao[playerid][i][ao_sy] = 0.0;
	  	        ao[playerid][i][ao_sz] = 0.0;
	  	        ao[playerid][i][ao_Sqlid] = -1;
	  	        kiyafetMenu(playerid);
			}
		}
	    case DIALOG_YETENEK:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
			        case 0:
			        {
			            if(oyuncuData[playerid][YetenekPuan] <= 0) return hataMesaji(playerid, "Maksimum saðlýðýný geliþtirmek için Yetenek Puanýn olmasý lazým.");
						if(oyuncuData[playerid][YetenekCan] >= 25) return hataMesaji(playerid, "Daha fazla Maksimum saðlýðýný geliþtiremezsin.");
		                oyuncuData[playerid][YetenekPuan]--;
						oyuncuData[playerid][YetenekCan]++;
						Canver(playerid, yCan(playerid));
						yetenekMenu(playerid);
					}
					case 1:
					{
						if(oyuncuData[playerid][YetenekPuan] <= 0) return hataMesaji(playerid, "Maksimum zýrhýný geliþtirmek için Yetenek Puanýn olmasý lazým.");
						if(oyuncuData[playerid][YetenekZirh] >= 10) return hataMesaji(playerid, "Daha fazla Maksimum saðlýðýný geliþtiremezsin.");
						oyuncuData[playerid][YetenekPuan]--;
						oyuncuData[playerid][YetenekZirh]++;
						new Float: xxp; GetPlayerArmour(playerid, xxp);
						if(xxp >= 100) Zirhver(playerid, yZirh(playerid));
						yetenekMenu(playerid);
					}
					case 2:
					{
					    if(oyuncuData[playerid][YetenekPuan] <= 0) return hataMesaji(playerid, "Maksimum Soygun Yeteneðini geliþtirmek için Yetenek Puanýn olmasý lazým.");
						if(oyuncuData[playerid][YetenekSoygun] >= 10) return hataMesaji(playerid, "Soygun yeteneðini daha fazla geliþtiremezsin !");
						oyuncuData[playerid][YetenekPuan]--;
						oyuncuData[playerid][YetenekSoygun]++;
						yetenekMenu(playerid);
					}
				}
			}
	    }
		case DIALOG_DKUR:
		{
		    if(!response)
		    {
		        DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
		        DuelloIslem[playerid][dHarita] = 0;
		        DuelloIslem[playerid][dP] = 0;
		        DuelloIslem[playerid][dSilah][0] = 0;
		        DuelloIslem[playerid][dSilah][1] = 0;
		        DuelloSayi[playerid] = 0;
		        DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
		    }
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
                        duelloSetup(playerid);
		            }
		        }
		    }
		}
		case DIALOG_DM:
		{
			if(!response)
		    {
		        DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
		        DuelloIslem[playerid][dHarita] = 0;
		        DuelloIslem[playerid][dP] = 0;
		        DuelloIslem[playerid][dSilah][0] = 0;
		        DuelloIslem[playerid][dSilah][1] = 0;
		        DuelloSayi[playerid] = 0;
		        DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
		    }
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Düello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
					case 1: ShowPlayerDialog(playerid, DIALOG_DM_M, DIALOG_STYLE_LIST, "{FFFFFF}Düello Haritasý", "> Mekan 1\n> Mekan 2\n", "Seç", "Geri");
					case 2: ShowPlayerDialog(playerid, DIALOG_DM_P, DIALOG_STYLE_INPUT, "{FFFFFF}Düello Parasý", "Düello miktarýný ayarlayýn.", "Onayla", "Geri");
					case 3:
					{
						new str[500];
						for(new i = 0; i < sizeof(SilahIsimler); i++)
						{
							format(str, sizeof(str), "%s%s\n", str, SilahIsimler[i][_dsIsim]);
						}
						ShowPlayerDialog(playerid, DIALOG_DM_S1, DIALOG_STYLE_LIST, "Silah Seçin", str, "Seç", "Geri");
					}
					case 4:
					{
						new str[500];
						for(new i = 0; i < sizeof(SilahIsimler); i++)
						{
							format(str, sizeof(str), "%s%s\n", str, SilahIsimler[i][_dsIsim]);
						}
						ShowPlayerDialog(playerid, DIALOG_DM_S2, DIALOG_STYLE_LIST, "Silah Seçin", str, "Seç", "Geri");
					}
					case 5:
					{
					    if(DuelloIslem[playerid][d_ID] == INVALID_PLAYER_ID) return hataMesaji(playerid, "Bir ID girmemiþsiniz."), duelloSetup(playerid);
		        		if(DuelloIslem[playerid][dHarita] == 0) return hataMesaji(playerid, "Bir map seçmemiþsiniz."), duelloSetup(playerid);
		        		if(DuelloIslem[playerid][dP] == 0) return hataMesaji(playerid, "Düello miktarýný girmemiþsiniz."), duelloSetup(playerid);
		        		if(DuelloIslem[playerid][dSilah][0] == 0) return hataMesaji(playerid, "Düello silah 1 ayarlamamýþsýnýz."), duelloSetup(playerid);
		        		if(DuelloIslem[playerid][dSilah][1] == 0) return hataMesaji(playerid, "Düello silah 2 ayarlamamýþsýnýz."), duelloSetup(playerid);
                        DuelloSayi[playerid] = 0;
						new karsi_taraf = DuelloIslem[playerid][d_ID], qq[560];
					    DuelloOyuncusu[karsi_taraf] = playerid;
					    format(qq, sizeof(qq), "{D33257}====================[ {FFFFFF}Düello Teklifi{D33257} ]====================\n\n");
					    format(qq, sizeof(qq), "%s {FFFFFF}- Teklifi Gönderen:\t{71BA51}%s\n", qq, getName(playerid));
					    format(qq, sizeof(qq), "%s {FFFFFF}- Düello Haritasý:\t%s\n", qq, duelloGetName(playerid));
					    format(qq, sizeof(qq), "%s {FFFFFF}- Düello Miktarý:\t{71BA51}%s\n", qq, convertNumber(DuelloIslem[playerid][dP]));
					    format(qq, sizeof(qq), "%s {FFFFFF}- Düello Silah 1:\t%s\n", qq, duelloGetSilah1(playerid));
					    format(qq, sizeof(qq), "%s {FFFFFF}- Düello Silah 2:\t%s\n\n", qq, duelloGetSilah2(playerid));
					    format(qq, sizeof(qq), "%s {FFFFFF}- Bu oyuncuyla düello yapmak istiyor musunuz ?\n", qq, duelloGetSilah2(playerid));
                        format(qq, sizeof(qq), "%s {FFFFFF}- 10 saniye içinde kabul etmezseniz otomatik teklif iptal edilecek.\n\n", qq);
						format(qq, sizeof(qq), "%s{D33257}====================[ {FFFFFF}Düello Teklifi{D33257} ]====================\n", qq);
                        ShowPlayerDialog(karsi_taraf, DIALOG_DONAY, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", qq, "Kabul Et", "Reddet");
						SetPVarInt(playerid, "DuelloDavetEttim", 1);
                        SetPVarInt(playerid, "Duellobekleet2", GetTickCount() + 10 * 1000);
						format(qq, sizeof(qq), "%s tarafýndan size düello teklifi geldi. 10 saniye içinde kabul etmezseniz iptal edilecek.", getName(playerid));
						SendClientMessage(karsi_taraf, 0xEBBD63FF, qq);
						SetPVarInt(karsi_taraf, "DuelloEnterBekle", GetTickCount() + 5500);
						DuelloTimer[playerid] = SetTimerEx("DuelloBekleet", 250, true, "d", playerid);
					}
				}
		    }
		}
  		case DIALOG_DM_ID:
		{
		    if(!response) return duelloSetup(playerid);
		    if(response)
		    {
				new zID = strval(inputtext);
				if(!IsPlayerConnected(zID)) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Bu oyuncu sunucuda deðil.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
                if(playerid == zID) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Kendini seçemezsin.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
                if(AFkMi[zID] == 1) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "AFK oyuncularý seçemezsin.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
				if(Duelloda[zID]) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Bu oyuncu þuan bir düello yapýyor.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
				if(gTeam[zID] >= 2 && gTeam[zID] <= 8) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Devlet memurlarýna gönderemezsin.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
                if(aranmaSeviyesii[zID] >= 1) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Bu oyuncunun aranma seviyesi var. Polisten kaçma ihtimaline karþý gönderemezsiniz.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
				if(oyuncuData[zID][hapisSure] >= 1) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Bu oyuncu hapiste.\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
                if(GetPlayerScore(zID) < 1000) return ShowPlayerDialog(playerid, DIALOG_DM_ID, DIALOG_STYLE_INPUT, "{FFFFFF}Düello ID", "Bu oyuncunun 1000 skoru yok !\n\nDüello yapacaðýnýz oyuncunun ID'sini girin.", "Onayla", "Geri");
				DuelloIslem[playerid][d_ID] = zID;
                duelloSetup(playerid);
			}
		}
		case DIALOG_DM_M:
		{
		    if(!response) return duelloSetup(playerid);
  		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: DuelloIslem[playerid][dHarita] = 1, duelloSetup(playerid);
		            case 1: DuelloIslem[playerid][dHarita] = 2, duelloSetup(playerid);
		        }
			}
		}
		case DIALOG_DM_P:
		{
		    if(!response) return duelloSetup(playerid);
		    if(response)
		    {
				new zID = strval(inputtext), get_ID = DuelloIslem[playerid][d_ID];
				if(zID < 1 || zID > 10000000) return ShowPlayerDialog(playerid, DIALOG_DM_P, DIALOG_STYLE_INPUT, "{FFFFFF}Düello Parasý", "Düello miktarýný en düþük $1 en fazla $10,000,000 dolar girebilirsiniz.\nDüello miktarýný ayarlayýn.", "Onayla", "Geri");
				if(zID > ParaKorumasi[playerid]) return ShowPlayerDialog(playerid, DIALOG_DM_P, DIALOG_STYLE_INPUT, "{FFFFFF}Düello Parasý", "Kendi paranýn üstünde miktar giremezsin.\nDüello miktarýný ayarlayýn.", "Onayla", "Geri");
                if(zID > ParaKorumasi[get_ID]) return ShowPlayerDialog(playerid, DIALOG_DM_P, DIALOG_STYLE_INPUT, "{FFFFFF}Düello Parasý", "Rakibinin parasý yetersiz, düþük miktar girin.\nDüello miktarýný ayarlayýn.", "Onayla", "Geri");
				DuelloIslem[playerid][dP] = zID;
                duelloSetup(playerid);
			}
		}
  		case DIALOG_DM_S1:
		{
		    if(!response) return duelloSetup(playerid);
		    if(response)
		    {
				DuelloIslem[playerid][dSilah][0] = SilahIsimler[listitem][d_silaahh];
                duelloSetup(playerid);
			}
		}
		case DIALOG_DM_S2:
		{
		    if(!response) return duelloSetup(playerid);
		    if(response)
		    {
				DuelloIslem[playerid][dSilah][1] = SilahIsimler[listitem][d_silaahh];
                duelloSetup(playerid);
			}
		}
		case DIALOG_DONAY:
		{
		    if(!response)
		    {
		        new getID = DuelloOyuncusu[playerid];
		        KillTimer(DuelloTimer[getID]);
		        SetPVarInt(getID, "DuelloDavetEttim", 0);
		        Duelloda[getID] = false;
		        DuelloIslem[getID][d_ID] = INVALID_PLAYER_ID;
		        Duelloda[playerid] = false;
		        DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
		        ShowPlayerDialog(getID, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", "{E76B6B}Oyuncu teklifinizi kabul etmedi.", "Kapat", "");
		        SendClientMessage(playerid, -1, "{E76B6B}Düello teklifini kabul etmediniz.");
		    }
			if(response)
			{
			    new getID = DuelloOyuncusu[playerid];
			    if(oyuncuData[playerid][hapisSure] >= 1)
			    {
			        KillTimer(DuelloTimer[getID]);
			        SetPVarInt(getID, "DuelloDavetEttim", 0);
			        Duelloda[getID] = false;
			        DuelloIslem[getID][d_ID] = INVALID_PLAYER_ID;
			        Duelloda[playerid] = false;
			        DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
			        ShowPlayerDialog(getID, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", "{E76B6B}Oyuncu hapiste olduðu için düelloya katýlamaz !", "Kapat", "");
                    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", "{E76B6B}Hapiste olduðun için düelloya katýlamazsýn !", "Kapat", "");
                    SendClientMessage(playerid, -1, "{E76B6B}Hapiste düelloya katýlamazsýn !");
					return 1;
				}
				if(GetPVarInt(playerid, "DuelloEnterBekle") > GetTickCount())
				{
					new qq[560];
					format(qq, sizeof(qq), "{D33257}====================[ {FFFFFF}Düello Teklifi{D33257} ]====================\n\n");
					format(qq, sizeof(qq), "%s {FFFFFF}- Teklifi Gönderen:\t{71BA51}%s\n", qq, getName(getID));
					format(qq, sizeof(qq), "%s {FFFFFF}- Düello Haritasý:\t%s\n", qq, duelloGetName(getID));
					format(qq, sizeof(qq), "%s {FFFFFF}- Düello Miktarý:\t{71BA51}%s\n", qq, convertNumber(DuelloIslem[getID][dP]));
					format(qq, sizeof(qq), "%s {FFFFFF}- Düello Silah 1:\t%s\n", qq, duelloGetSilah1(getID));
					format(qq, sizeof(qq), "%s {FFFFFF}- Düello Silah 2:\t%s\n\n", qq, duelloGetSilah2(getID));
					format(qq, sizeof(qq), "%s {FFFFFF}- Bu oyuncuyla düello yapmak istiyor musunuz ?\n", qq, duelloGetSilah2(getID));
					format(qq, sizeof(qq), "%s {FFFFFF}- 10 saniye içinde kabul etmezseniz otomatik teklif iptal edilecek.\n\n", qq);
					format(qq, sizeof(qq), "%s{D33257}====================[ {FFFFFF} 5.Sn Bekleyin{D33257} ]====================\n", qq);
					ShowPlayerDialog(playerid, DIALOG_DONAY, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", qq, "Kabul Et", "Reddet");
				    return 1;
				}
		        KillTimer(DuelloTimer[getID]);
		        ShowPlayerDialog(getID, -1, DIALOG_STYLE_MSGBOX, "-1", "-1", "-1", "-1");
		        SetPVarInt(getID, "DuelloDavetEttim", 0);
		        SetPVarInt(playerid, "DuelloYasak", 1);
		        SetPVarInt(getID, "DuelloYasak", 1);
		        if(GetPVarInt(playerid, "GodMode") == 1) cmd_adon(playerid, "");
		        if(GetPVarInt(getID, "GodMode") == 1) cmd_adon(getID, "");
		        kumarda[playerid] = false;
		        kumarda[getID] = false;
		        if(DuelloIslem[getID][dHarita] == 1)
		        {
		        	SetPlayerPos(playerid, DuelloMap1[0][0], DuelloMap1[0][1], DuelloMap1[0][2]);
		        	SetPlayerFacingAngle(playerid, DuelloMap1[0][3]);
		        	SetCameraBehindPlayer(playerid);
		        	TogglePlayerControllable(playerid, 0);
					SetPlayerPos(getID, DuelloMap1[1][0], DuelloMap1[1][1], DuelloMap1[1][2]);
		        	SetPlayerFacingAngle(getID, DuelloMap1[1][3]);
		        	SetCameraBehindPlayer(getID);
		        	TogglePlayerControllable(getID, 0);
				}else if(DuelloIslem[getID][dHarita] == 2)
				{
					SetPlayerPos(playerid, DuelloMap2[0][0], DuelloMap2[0][1], DuelloMap2[0][2]);
		        	SetPlayerFacingAngle(playerid, DuelloMap2[0][3]);
		        	SetCameraBehindPlayer(playerid);
		        	TogglePlayerControllable(playerid, 0);
					SetPlayerPos(getID, DuelloMap2[1][0], DuelloMap2[1][1], DuelloMap2[1][2]);
		        	SetPlayerFacingAngle(getID, DuelloMap2[1][3]);
		        	SetCameraBehindPlayer(getID);
		        	TogglePlayerControllable(getID, 0);
				}
				new eVir = random(9876543);
				SetPlayerVirtualWorld(playerid, eVir);
				SetPlayerVirtualWorld(getID, eVir);
				Duelloda[playerid] = true;
		        Duelloda[getID] = true;
		        ResetPlayerWeapons(playerid);
		        ResetPlayerWeapons(getID);
		        Canver(playerid, 100);
          		Canver(getID, 100);
		        Zirhver(playerid, 100);
		        Zirhver(getID, 100);
				Silahver(playerid, DuelloIslem[getID][dSilah][0], 9999999);
				Silahver(playerid, DuelloIslem[getID][dSilah][1], 9999999);
				Silahver(getID, DuelloIslem[getID][dSilah][0], 9999999);
				Silahver(getID, DuelloIslem[getID][dSilah][1], 9999999);
				DuelloSayi[playerid] = 7, DuelloSayi[getID] = 7;
				DuelloTimer[playerid] = SetTimerEx("DuelloBaslat", 1000, true, "d", playerid);
				DuelloTimer[getID] = SetTimerEx("DuelloBaslat", 1000, true, "d", getID);
			}
		}
		case DIALOG_Hastane:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(ParaKorumasi[playerid] < 10000) return hataMesaji(playerid, "Can tazelemek için $10,000 dolarýn olmasý gerekir !");
		                Canver(playerid, yCan(playerid));
		                pParaver(playerid, -10000);
		                SendClientMessage(playerid, 0xE6567AFF, "Hastane tarafýndan canýnýz tazelendi.");
		            }
		            case 1:
		            {
              			if(ParaKorumasi[playerid] < 15000) return hataMesaji(playerid, "Zýrh almak için $15,000 dolarýn olmasý gerekir !");
		                Zirhver(playerid, yZirh(playerid));
		                pParaver(playerid, -15000);
		                SendClientMessage(playerid, 0xE6567AFF, "Hastaneden zýrh satýn aldýnýz.");
		            }
					case 2:
		            {
              			if(ParaKorumasi[playerid] < 20000) return hataMesaji(playerid, "Tedavi olmak için $20,000 dolarýn olmasý gerekir !");
						if(TecavuzV[playerid] == 0) return hataMesaji(playerid, "Sana Tecavüz edilip, virüs bulaþtýrýlmamýþ.");
						TecavuzV[playerid] = 0, SetPVarInt(playerid, "Tecavuz", 0);
						pParaver(playerid, -20000);
		                SendClientMessage(playerid, 0xE6567AFF, "Hastanede tedavi oldunuz.");
		            }
					case 3:
		            {
              			if(ParaKorumasi[playerid] < 45000) return hataMesaji(playerid, "Full saðlýk paketi için $45,000 dolarýn olmasý gerekir !");
                        Canver(playerid, yCan(playerid));
                        Zirhver(playerid, yZirh(playerid));
						TecavuzV[playerid] = 0, SetPVarInt(playerid, "Tecavuz", 0);
						pParaver(playerid, -45000);
		                SendClientMessage(playerid, 0xE6567AFF, "Full saðlýk paketi satýn aldýnýz.");
		            }
		        }
		    }
		}
	    case DIALOG_BOLGELER:
	    {
	        if(response)
	        {
				switch(listitem)
				{
				    case 0: TeleportCam(playerid, 1, -1995.1028, 289.3931, 33.9911, 171.6055);
				    case 1: TeleportCam(playerid, 1, -1544.1675, 926.8902, 7.0391, 179.1002);
				    case 2: TeleportCam(playerid, 1, -2573.0513, 595.2011, 14.4565, 93.3023);
				    case 3: TeleportCam(playerid, 1, -2273.7078, -124.8388, 35.3203, 269.8556);
				    case 4: TeleportCam(playerid, 1, -2600.2170, 1381.7271, 7.1419, 266.6748);
				}
	        }
	    }
	    case UYUSTURUCU_SATICI:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    if(ParaKorumasi[playerid] < 50000) return hataMesaji(playerid, "Eroin satýn almak için $50,000 dolara ihtiyacýn var.");
                        Eroinq[playerid] += 5;
                        SendClientMessage(playerid, -1, "{27AE60}Uyuþturucu Satýcýsý: {FFFFFF}5 Adet eroin satýn alýndý, /EroinIc yazarak kullanabilirsin.");
                        pParaver(playerid, -50000);
					}
	                case 1:
	                {
	                    if(ParaKorumasi[playerid] < 25000) return hataMesaji(playerid, "Ot satýn almak için $25,000 dolara ihtiyacýn var.");
                        Otq[playerid] += 100;
                        pParaver(playerid, -25000);
                        SendClientMessage(playerid, -1, "{27AE60}Uyuþturucu Satýcýsý: {FFFFFF}100 gram ot satýn alýndý, /OtIc yazarak kullanabilirsin.");
					}
	                case 2:
	                {
                        if(ParaKorumasi[playerid] < 100000) return hataMesaji(playerid, "Bonzai satýn almak için $100,000 dolara ihtiyacýn var.");
                        Bonzaiq[playerid] += 5;
                        pParaver(playerid, -100000);
                        SendClientMessage(playerid, -1, "{27AE60}Uyuþturucu Satýcýsý: {FFFFFF}5 Adet bonzai satýn alýndý, /Bonzaiic yazarak kullanabilirsin.");
					}
	            }
	        }
	    }
	    case aPANEL_MENU:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
						if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan özel bir araç satamazýn.");
						if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü olmalýsýn.");
						new vv = GetPlayerVehicleID(playerid);
                        if(oaIslem[vv][oaCheck]) return hataMesaji(playerid, "Özel araçlarýn renklerini deðiþtiremezsin.");
						if(!AraclarIslem[vv][aAktif]) return hataMesaji(playerid, "Bu araçlar sokak aracý, park edemezsin !");
						if(strcmp(AraclarIslem[vv][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
                        if(ParaKorumasi[playerid] < 10000) return hataMesaji(playerid, "$10000 dolarýn olmadan araç renklerini deðiþtiremezsin !");
						new rx[2], query[85];
						rx[0] = random(255);
						rx[1] = random(255);
						format(query, sizeof(query), "Bilgi: {FFFFFF}Aracýnýzýn renkleri ({FF0000}%d - %d{FFFFFF}) olarak deðiþtirildi.", rx[0], rx[1]);
						SendClientMessage(playerid, 0x00FF00FF, query);
						ChangeVehicleColor(vv, rx[0], rx[1]);
						AraclarIslem[vv][a_Renk][0] = rx[0];
						AraclarIslem[vv][a_Renk][1] = rx[1];
						mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aR1` = '%d' WHERE `nid` = '%d' LIMIT 1", rx[0], AraclarIslem[vv][aSQL]);
						mysql_query(g_SQL, query);
						mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aR2` = '%d' WHERE `nid` = '%d' LIMIT 1", rx[1], AraclarIslem[vv][aSQL]);
						mysql_query(g_SQL, query);
						pParaver(playerid, -10000);
	                }
	                case 1:
	                {
						if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan özel bir araç satamazýn.");
						if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü olmalýsýn.");
						new vv = GetPlayerVehicleID(playerid);
						if(AraclarIslem[vv][aAktif])
						{
						    if(strcmp(AraclarIslem[vv][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
						}
						foreach(new i: Player) if(i != playerid) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 1);
                        SendClientMessage(playerid, 0x00FF00FF, "Bilgi: {FFFFFF}Aracýnýz kilitlendi.");
					}
					case 2:
					{
					    new vv = GetPlayerVehicleID(playerid);
						if(AraclarIslem[vv][aAktif])
						{
						    if(strcmp(AraclarIslem[vv][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
						}
						foreach(new i: Player) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 0);
                        SendClientMessage(playerid, 0x00FF00FF, "Bilgi: {FFFFFF}Aracýnýz kilitleri açýldý.");
					}
					case 3:
					{
						if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan plaka deðiþimi yapamazsýn.");
					    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracýn plakasýný deðiþtirmek için sürücü olmalýsýn.");
                        if(ParaKorumasi[playerid] < 100000) return hataMesaji(playerid, "Bu aracýn plakasýný deðiþtirmek $100,000 dolarýn olmasý lazým !");
						new vv = GetPlayerVehicleID(playerid);
                        if(oaIslem[vv][oaCheck]) return hataMesaji(playerid, "Özel araçlarýn plakasýný deðiþtiremezsin.");
						if(CeteArac[vv][ceteAracAktif]) return hataMesaji(playerid, "Çete araçlarýnda bu özelliði kullanamazsýn.");
						if(strcmp(AraclarIslem[vv][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
					    ShowPlayerDialog(playerid, aPANEL_PLAKA, DIALOG_STYLE_INPUT, "{FFFFFF}aPanel -> Plaka", "Kullanmak istediðiniz plakayý girin.\nMax 10 haneli olabilir.", "Deðiþtir", "Geri");
					}
					case 4:
					{
         				if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan bir araç satamazýn.");
					    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü olmalýsýn.");
						new vv = GetPlayerVehicleID(playerid), query[150];
                        if(oaIslem[vv][oaCheck]) return hataMesaji(playerid, "Özel aracýný bu bölümden satamazsýn.");
						if(strcmp(AraclarIslem[vv][a_Sahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu aracýn sahibi siz deðilsiniz.");
                        SetPVarInt(playerid, "bb_x", vv);
						for(new i = 0; i < sizeof(AracListesi); i++)
						{
							if(GetVehicleModel(vv) == AracListesi[i][arac_m])
							{
								format(query, sizeof(query), "{2CC990}%s {FFFFFF}aracýný\n{FD5B03}$%s {FFFFFF}dolara (yarý fiyatýna) satmak istediðinize emin misiniz ?", GetVehicleName(GetVehicleModel(vv)), convertNumber(AracListesi[i][arac_f]/2));
                                SetPVarInt(playerid, "YariNormal", AracListesi[i][arac_f]/2);
								ShowPlayerDialog(playerid, N_ARAC_SATIS, DIALOG_STYLE_MSGBOX, "{FFFFFF}Normal Araç Satýþý", query, "Evet", "Hayýr");
                                SetPVarInt(playerid, "bb_L", listitem);
								break;
							}
						}
					}
					case 5:
					{
						if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde olmadan bir araç satamazýn.");
					    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü olmalýsýn.");
					    new vv = GetPlayerVehicleID(playerid), query[150];
                        if(!oaIslem[vv][oaCheck]) return hataMesaji(playerid, "Bu araç özel bir araç deðil.");
                        if(strcmp(oaIslem[vv][oaSahip], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu araç size ait deðil satamazsýnýz.");
						SetPVarInt(playerid, "bb_o", vv);
						for(new i = 0; i < sizeof(OzelAracFiyat); i++)
						{
							if(GetVehicleModel(vv) == OzelAracFiyat[i][oamodel])
							{
								format(query, sizeof(query), "{2CC990}%s {FFFFFF}aracýný\n{FD5B03}$%s {FFFFFF}dolara (yarý fiyatýna) satmak istediðinize emin misiniz ?", GetVehicleName(GetVehicleModel(vv)), convertNumber(OzelAracFiyat[i][oafiyat]/2));
                                SetPVarInt(playerid, "YariOzel", OzelAracFiyat[i][oafiyat]/2);
								ShowPlayerDialog(playerid, O_ARAC_SATIS, DIALOG_STYLE_MSGBOX, "{FFFFFF}Özel Araç Satýþý", query, "Evet", "Hayýr");
								break;
							}
						}
					}
	            }
	        }
	    }
		case aPANEL_PLAKA:
		{
  			if(!response) return cmd_apanel(playerid);
	        if(response)
	        {
	            new bool: _sonuc = false, vv = GetPlayerVehicleID(playerid), query[80], Float: aposs[4];
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, aPANEL_PLAKA, DIALOG_STYLE_INPUT, "{FFFFFF}aPanel -> Plaka", "Boþluk býrakma !\n\nKullanmak istediðiniz plakayý girin.\nMax 10 haneli olabilir.", "Deðiþtir", "Geri");
				if(strlen(inputtext) < 1 || strlen(inputtext) > 10) return ShowPlayerDialog(playerid, aPANEL_PLAKA, DIALOG_STYLE_INPUT, "{FFFFFF}aPanel -> Plaka", "Kullanmak istediðiniz plakayý girin.\nMax 10 haneli olabilir.", "Deðiþtir", "Geri");
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(inputtext[i] == '%' || inputtext[i] == ''' || inputtext[i] == ',' || inputtext[i] == '\\')
				    {
				        _sonuc = true;
				    }
				}
				if(_sonuc) return ShowPlayerDialog(playerid, aPANEL_PLAKA, DIALOG_STYLE_INPUT, "{FFFFFF}aPanel -> Plaka", "Ýzinli olmayan karakterler bulundu\n\nKullanmak istediðiniz plakayý girin.\nMax 10 haneli olabilir.", "Deðiþtir", "Geri");
    			format(AraclarIslem[vv][n_Plaka], 10, inputtext);
				GetVehiclePos(vv, aposs[0], aposs[1], aposs[2]);
				GetVehicleZAngle(vv, aposs[3]);
				SetVehicleNumberPlate(vv, AraclarIslem[vv][n_Plaka]);
				SetVehicleToRespawn(vv);
				SetVehiclePos(vv, aposs[0], aposs[1], aposs[2]);
				SetVehicleZAngle(vv, aposs[3]);
				PutPlayerInVehicle(playerid, vv, 0);
				pParaver(playerid, -100000);
				SendClientMessage(playerid, -1, "{E74C3C}<!> {FFFFFF}Aracýn plakasý deðiþtirildi, hesabýnýzdan {19B5FE}$100,000 dolar {FFFFFF}kesildi.");
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `Plaka` = '%s' WHERE `nid` = '%d' LIMIT 1", AraclarIslem[vv][n_Plaka], AraclarIslem[vv][aSQL]);
				mysql_query(g_SQL, query);
			}
		}
	    case N_ARAC_SATIS:
	    {
	        if(!response) return cmd_apanel(playerid);
	        if(response)
	        {
	            new vv = GetPVarInt(playerid, "bb_x"), listx = GetPVarInt(playerid, "YariNormal"), query[80], t_mp;
	            pParaver(playerid, listx);
	            format(AraclarIslem[vv][a_Sahip], 24, "");
	            AraclarIslem[vv][aAktif] = false;
	            t_mp = AraclarIslem[vv][aSQL];
	            AraclarIslem[vv][aSQL] = -1;
	            nAracSil(playerid, vv);
	            DestroyVehicle(vv);
 				mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `normalarac` WHERE `nid` = '%d' LIMIT 1", t_mp);
				mysql_query(g_SQL, query);
	            SendClientMessage(playerid, 0x00FF00FF, "Bilgi: {FFFFFF}Aracýnýzý yarý fiyatýna sattýnýz.");
	        }
	    }
	    case O_ARAC_SATIS:
	    {
	        if(!response) return cmd_apanel(playerid);
	        if(response)
	        {
	            new vv = GetPVarInt(playerid, "bb_o"), listx = GetPVarInt(playerid, "YariOzel"), query[80], t_mp;
	            pParaver(playerid, listx);
				for(new i = 0; i < OZEL_ARAC_SLOT; i++)
	    		{
			    	if(OzelAracim[playerid][i] == vv)
					{
					    OzelAracim[playerid][i] = 0;
					    break;
					}
				}
				OzelAracObjeTemizle(vv);
				oaIslem[vv][oaCheck] = false;
				t_mp = oaIslem[vv][sql_id];
			    oaIslem[vv][sql_id] = 0;
			    format(oaIslem[vv][oaSahip], MAX_PLAYER_NAME, "-");
			    oaIslem[vv][oaPos][0] = 0.0;
				oaIslem[vv][oaPos][1] = 0.0;
				oaIslem[vv][oaPos][2] = 0.0;
				oaIslem[vv][oaPos][3] = 0.0;
				DestroyVehicle(vv);
			 	SendClientMessage(playerid, 0x00FF00FF, "Bilgi: {FFFFFF}Özel Aracýnýzý yarý fiyatýna sattýnýz.");
 				mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `ozelarac` WHERE `id` = '%d' LIMIT 1", t_mp);
				mysql_query(g_SQL, query);
	        }
	    }
	    case ARAC_ONAYISTE:
	    {
	        if(response)
	        {
				new listt = GetPVarInt(playerid, "listDDD"), nwArac, query[200], bid;
				pParaver(playerid, -AracListesi[listt][arac_f]);
				nwArac = CreateVehicle(AracListesi[listt][arac_m], -4483.1489, -875.4085, -1.0639, 60.0276, -1, -1, 9999999);
				format(AraclarIslem[nwArac][a_Sahip], MAX_PLAYER_NAME, getName(playerid));
				AraclarIslem[nwArac][a_Pos][0] = -4483.1489;
				AraclarIslem[nwArac][a_Pos][1] = -875.4085;
				AraclarIslem[nwArac][a_Pos][2] = -1.0639;
				AraclarIslem[nwArac][a_Pos][3] = 60.0276;
				AraclarIslem[nwArac][a_Renk][0] = -1;
				AraclarIslem[nwArac][a_Renk][1] = -1;
				AraclarIslem[nwArac][pJob] = 0;
				for(new i = 0; i < 17; i++) AraclarIslem[nwArac][a_mParca][i] = 0;
				AraclarIslem[nwArac][aAktif] = true;
				SetPVarInt(playerid, "aaPid", nwArac);
				mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `normalarac`(`aModel`, `aSahip`, `aX`, `aY`, `aZ`, `aA`, `aR1`, `aR2`) VALUES ('%d', '%e', '-4483.1489', '-875.4085', '-1.0639', '60.0276', '-1', '-1')", AracListesi[listt][arac_m], getName(playerid));
				mysql_tquery(g_SQL, query, "AracSQLID", "d", playerid);
				SendClientMessage(playerid, -1, "{9BEA00}Bilgi: {FFFFFF}Araç satýn alýndý. {F61E1E}/AracGetir {FFFFFF}yazarak arabanýzý getirebilirsiniz.");
				bid = aracKontrolu(playerid);
				aracSlotu[playerid][bid] = nwArac;
			}
		}
	    case ARAC_LISTESI:
	    {
	        if(response)
	        {
				if(ParaKorumasi[playerid] < AracListesi[listitem][arac_f]) return hataMesaji(playerid, "Bu aracý satýn alacak paran yok !");
	            if(evim[playerid] == -1) return hataMesaji(playerid, "Araç satýn almak için bir eviniz olmasý gerekir.");
	            new xxx[200], kontroller = aracKontrolu(playerid);
				if(kontroller == -1) return hataMesaji(playerid, "Araçlarý ev seviyenize göre satýn alabilirsiniz.");
				format(xxx, sizeof(xxx), "{2C82C9}%s {FFFFFF}aracýný {EE543A}$%s {FFFFFF}dolara satýn almak istiyor musun ?", GetVehicleName(AracListesi[listitem][arac_m]), convertNumber(AracListesi[listitem][arac_f]));
				ShowPlayerDialog(playerid, ARAC_ONAYISTE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Araç Satýn Alma", xxx, "Evet", "Hayýr");
				SetPVarInt(playerid, "listDDD", listitem);
			}
	    }
	    case ARAC_GETIR:
	    {
	        if(response)
	        {
	            new cx[500];
				switch(listitem)
				{
					case 0:
					{
             			new id = evim[playerid];
    					if(id == -1) return hataMesaji(playerid, "Öncelikle bir ev satýn alýn !");
					    new xd = 0;
	    				for(new i = 0; i < N_ARAC_KAPASITE; i++)
					    {
					        if(aracSlotu[playerid][i] != 0)
					        {
					            xd++;
					            format(cx, sizeof(cx), "%s{1DABB8}» {FFFFFF}%s\n", cx, GetVehicleName(GetVehicleModel(aracSlotu[playerid][i])));
					        }
					    }
					    if(xd <= 0) return hataMesaji(playerid, "Normal bir araç satýn alýnmamýþ.");
					    ShowPlayerDialog(playerid, NARAC_GETIR, DIALOG_STYLE_LIST, "{FFFFFF}Araç Getirme", cx, "Getir", "Kapat");
					}
					case 1:
					{
					    new skontrol = 0, sz[300];
					    for(new i = 0; i < OZEL_ARAC_SLOT; i++)
					    {
					    	if(OzelAracim[playerid][i] != 0)
							{
								format(sz, sizeof(sz), "%s» %s\n", sz, GetVehicleName(GetVehicleModel(OzelAracim[playerid][i])));
								skontrol++;
							}
						}
						if(!skontrol) return hataMesaji(playerid, "Özel aracýnýz yok.");
						ShowPlayerDialog(playerid, DIALOG_OZEL_GETIR, DIALOG_STYLE_LIST, "{FFFFFF}Özel Araç Getirme", sz, "Getir", "Kapat");
					}
				}
	        }
	    }
	    case DIALOG_OZEL_GETIR:
	    {
	        if(response)
	        {
				if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken araç getiremezsin.");
    			if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken araç getiremezsin.");
	            if(SureYasagi(playerid, "onAYasak", 20)) return 1;
	            new Float:Pos[4], a = OzelAracim[playerid][listitem];
				GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
				GetPlayerFacingAngle(playerid, Pos[3]);
				SetVehiclePos(a, Pos[0], Pos[1], Pos[2]);
				PutPlayerInVehicle(playerid, a, 0);
				SetVehicleZAngle(a, Pos[3]);
             	new id = GetPVarInt(playerid, "_SavasID");
				if(id != -1)
				{
					if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1)
					{
						new vehid = GetPlayerVehicleID(playerid);
						new b = GetVehicleModel(vehid);
						if(aracUyum(b))
						{
		        			SetPVarInt(playerid, "CeteYasakGirdi", 1);
							new Float: _donder[4];
							GetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3] + 180);
							GetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
						    _donder[0] -= _donder[0]; _donder[1] -= _donder[1];
							SetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
							if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 25){
						    SetVehicleSpeed(GetPlayerVehicleID(playerid), -GetVehicleSpeed(GetPlayerVehicleID(playerid)));}
						    else{ SetVehicleSpeed(GetPlayerVehicleID(playerid), -100); }
			                GameTextForPlayer(playerid, "~w~~h~Cete Bolgelerine~n~~w~~h~Bu araclarla~n~~r~~h~~h~Giremezsiniz", 6000, 4);
							return 1;
						}
					}
				}
	        }
	    }
	    case NARAC_GETIR:
	    {
     		if(response)
	        {
				if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken araç getiremezsin.");
    			if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken araç getiremezsin.");
	            if(SureYasagi(playerid, "nAYasak", 60)) return 1;
	            new listFix[N_ARAC_KAPASITE], listC = 0;
	            listFix[0] = 0;listFix[1] = 0;listFix[2] = 0;listFix[3] = 0;listFix[4] = 0;listFix[5] = 0;listFix[6] = 0;listFix[7] = 0;listFix[8] = 0;listFix[9] = 0;
	            for(new i = 0; i < N_ARAC_KAPASITE; i++) if(aracSlotu[playerid][i] != 0) listFix[listC] = aracSlotu[playerid][i], listC++;
    			new Float:Pos[4], a = listFix[listitem];
				GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
				GetPlayerFacingAngle(playerid, Pos[3]);
				SetVehiclePos(a, Pos[0], Pos[1], Pos[2]);
				PutPlayerInVehicle(playerid, a, 0);
				SetVehicleZAngle(a, Pos[3]);
				new id = GetPVarInt(playerid, "_SavasID");
				if(id != -1)
				{
					if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1)
					{
						new vehid = GetPlayerVehicleID(playerid);
						new b = GetVehicleModel(vehid);
						if(aracUyum(b))
						{
		        			SetPVarInt(playerid, "CeteYasakGirdi", 1);
							new Float: _donder[4];
							GetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3]);
							SetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3] + 180);
							GetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
						    _donder[0] -= _donder[0]; _donder[1] -= _donder[1];
							SetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
							if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 25){
						    SetVehicleSpeed(GetPlayerVehicleID(playerid), -GetVehicleSpeed(GetPlayerVehicleID(playerid)));}
						    else{ SetVehicleSpeed(GetPlayerVehicleID(playerid), -100); }
			                GameTextForPlayer(playerid, "~w~~h~Cete Bolgelerine~n~~w~~h~Bu araclarla~n~~r~~h~~h~Giremezsiniz", 6000, 4);
							return 1;
						}
					}
				}
	        }
	    }
		case KEFALET_D:
		{
			if(!response)
			{
			    DeletePVar(playerid, "KefaletMiktar");
			    SendClientMessage(playerid, 0xFF5454FF, "[SISTEM] Kefaleti ödemediniz !");
			    return 1;
			}
			if(response)
			{
			    if(ParaKorumasi[playerid] < GetPVarInt(playerid, "KefaletMiktar"))
			    {
			        hataMesaji(playerid, "Kefaleti ödemek için yeterli paran olmasý lazým !");
			        return 1;
				}
			    new az[114 + 24 + 3];
				format(az, sizeof(az), "~r~~h~~h~-$%s", convertNumber(GetPVarInt(playerid, "KefaletMiktar")));
				GameTextForPlayer(playerid, az, 2100, 4);
			    pParaver(playerid, -GetPVarInt(playerid, "KefaletMiktar"));
				format(az,sizeof(az),"~y~~h~[KEFALET] ~w~~h~Oyuncu ~r~~h~~h~%s(%d) ~w~~h~hapishaneden ~p~~h~$%s ~w~~h~dolar odeyerek serbest birakildi.",getName(playerid), playerid, convertNumber(GetPVarInt(playerid, "KefaletMiktar")));
				textFlood++;
				foreach(new i : Player) TextdrawYazi(i, az);
				if(textFlood == 3){ textFlood = 0; }
		        SendClientMessage(playerid, 0x76E02FFF, "[SISTEM] Kefalet parasýný ödeyerek serbest kaldýnýz !");
				DeletePVar(playerid, "KefaletMiktar");
		     	SetPlayerVirtualWorld(playerid, 0);
				Canver(playerid, yCan(playerid));
				oyuncuData[playerid][hapisSure] = 0;
				oyuncuData[playerid][hSureKayit] = 0;
				SetPVarInt(playerid, "Hapisdeyimm", 0);
				SetPlayerPos(playerid, 222.4663,114.5875,999.0156);
		  		SetPlayerFacingAngle(playerid, 89.0353);
		  		SetCameraBehindPlayer(playerid);
			}
		}
		case RUSVET_D:
		{
			if(!response)
			{
				new asd[85 + MAX_PLAYER_NAME + 3];
				new rusvetVeren = RusvetIslem[playerid][rusvetPlayerID];
				format(asd, sizeof(asd), "{FF5460}[RÜÞVET] {FFFFFF}Devlet memuru %s(%d), teklif ettiðiniz rüþveti reddetti.", getName(playerid), playerid);
				SendClientMessage(rusvetVeren, 0xEBDDD1FF, asd);
				format(asd, sizeof(asd), "{FF5460}[RÜÞVET] {FFFFFF}Suçlu þahýs %s(%d), rüþvet teklifini reddettiniz.", getName(rusvetVeren), rusvetVeren);
				SendClientMessage(playerid, 0xFF5460FF, asd);
				RusvetIslem[rusvetVeren][rusvetPara] = 0;
				RusvetIslem[playerid][rusvetPara] = 0;
				RusvetIslem[playerid][rusvetPlayerID] = INVALID_PLAYER_ID;
				RusvetIslem[playerid][rusvetID] = INVALID_PLAYER_ID;
				RusvetIslem[rusvetVeren][rusvetID] = INVALID_PLAYER_ID;
				RusvetIslem[rusvetVeren][rusvetPlayerID] = INVALID_PLAYER_ID;
			    return 1;
			}
			if(response)
			{
			    new rusvetVeren = RusvetIslem[playerid][rusvetPlayerID];
			    if(GetPlayerDistanceFromPlayer(playerid, rusvetVeren) > 4)
				{
					RusvetIslem[rusvetVeren][rusvetPara] = 0;
					RusvetIslem[playerid][rusvetPara] = 0;
					RusvetIslem[playerid][rusvetPlayerID] = INVALID_PLAYER_ID;
					RusvetIslem[playerid][rusvetID] = INVALID_PLAYER_ID;
					RusvetIslem[rusvetVeren][rusvetID] = INVALID_PLAYER_ID;
					RusvetIslem[rusvetVeren][rusvetPlayerID] = INVALID_PLAYER_ID;
					SendClientMessage(playerid, 0xFF1741FF, "Rüþvet veren þahýs yakýnýnýzda deðil !");
					return 1;
				}
				pParaver(playerid, RusvetIslem[rusvetVeren][rusvetPara]);
				pParaver(rusvetVeren, -RusvetIslem[rusvetVeren][rusvetPara]);
				new asd[80 + MAX_PLAYER_NAME + 3];
				format(asd, sizeof(asd), "{FF5460}[RÜÞVET] {FFFFFF}Devlet memuru %s(%d), rüþvet teklifinizi kabul etti.", getName(playerid), playerid);
				SendClientMessage(rusvetVeren, 0xEBDDD1FF, asd);
				format(asd, sizeof(asd), "{FF5460}[RÜÞVET] {FFFFFF}Suçlu þahýs %s(%d), rüþvetini kabul ettiniz.", getName(rusvetVeren), rusvetVeren);
				SendClientMessage(playerid, 0xFF5460FF, asd);
				format(asd, sizeof(asd), "~g~~h~~h~$%s", convertNumber(RusvetIslem[rusvetVeren][rusvetPara]));
				GameTextForPlayer(playerid, asd, 2500, 4);
				aranmaLeveli(rusvetVeren, 0);
				SetPVarInt(rusvetVeren, "KelepceBlock", GetTickCount());
			   	oIslem[rusvetVeren][kelepce] = 0;
				oIslem[rusvetVeren][kelepceSure] = 0;
			    SetPlayerSpecialAction(rusvetVeren, SPECIAL_ACTION_NONE);
			    RemovePlayerAttachedObject(rusvetVeren, 1);
			    TogglePlayerControllable(rusvetVeren, 1);
				RusvetIslem[rusvetVeren][rusvetPara] = 0;
				RusvetIslem[playerid][rusvetPara] = 0;
				RusvetIslem[playerid][rusvetPlayerID] = INVALID_PLAYER_ID;
				RusvetIslem[playerid][rusvetID] = INVALID_PLAYER_ID;
				RusvetIslem[rusvetVeren][rusvetID] = INVALID_PLAYER_ID;
				RusvetIslem[rusvetVeren][rusvetPlayerID] = INVALID_PLAYER_ID;
			}
		}
	    case DIALOG_EVMENU:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
					{
     					if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
						{
							SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
							SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid, "eoX");
							DeletePVar(playerid, "eoY");
							DeletePVar(playerid, "eoZ");
							DeletePVar(playerid, "eoA");
							DeletePVar(playerid, "EvModu");
							SetPVarInt(playerid, "Evim", -1);
							hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
							return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_EVISMI, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Ismi", "Evinizin yeni ismini girin.", "Deðiþtir", "Geri");
					}
					case 1:
					{
						if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
						{
							SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
							SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid, "eoX");
							DeletePVar(playerid, "eoY");
							DeletePVar(playerid, "eoZ");
							DeletePVar(playerid, "eoA");
							DeletePVar(playerid, "EvModu");
							SetPVarInt(playerid, "Evim", -1);
							hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
							return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_PARAMENU, DIALOG_STYLE_LIST, "{FFFFFF}Para Menüsü", "{1DABB8}» Eve Para Yatýr\t\t{FEC606}Max: 10m\n{1DABB8}» Evden Para Çek\n", "Devam", "Geri");
					}
					case 2:
					{
						if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
						{
							SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
							SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid, "eoX");
							DeletePVar(playerid, "eoY");
							DeletePVar(playerid, "eoZ");
							DeletePVar(playerid, "eoA");
							DeletePVar(playerid, "EvModu");
							SetPVarInt(playerid, "Evim", -1);
							hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
							return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_ESIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Þifresi", "{7CEECE}Bilgi:\n\t{ffffff}Evinizin þifresini oyundaki þifreniz yapamazsýnýz !\n\n{ffffff}Ev þifresini girin:", "Deðiþtir", "ÞifreKaldýr");
					}
					/*
					case 3:
					{
						if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
						{
							SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
							SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid, "eoX");
							DeletePVar(playerid, "eoY");
							DeletePVar(playerid, "eoZ");
							DeletePVar(playerid, "eoA");
							DeletePVar(playerid, "EvModu");
							SetPVarInt(playerid, "Evim", -1);
							hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
							return 1;
						}
						ShowPlayerDialog(playerid, DIALOG_ESYAM, DIALOG_STYLE_LIST, "{FFFFFF}Mobilya Ýþlemleri", "{1DABB8}» Mobilya Satýn Al\n{1DABB8}» Mobilyayý Düzenle\n{1DABB8}» Mobilyayý Sat\t\t{FEC606}[ Yarý Fiyatýna ]", "Devam", "Geri");
					}*/
					case 3:
					{
						if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
						{
							SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
							SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid, "eoX");
							DeletePVar(playerid, "eoY");
							DeletePVar(playerid, "eoZ");
							DeletePVar(playerid, "eoA");
							DeletePVar(playerid, "EvModu");
							SetPVarInt(playerid, "Evim", -1);
							hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
							return 1;
						}
					    ShowPlayerDialog(playerid, DIALOG_SCIKARMA, DIALOG_STYLE_INPUT, "{FFFFFF}Evi Satýlýða Çýkarma", "{FA8072}UYARILAR:\n\t{FFFFFF}- Bir oyuncu evinizi satýn alýrsa eðer oyunda iseniz para hesabýnýza yatýrýlýr\n\t{FFFFFF}- Oyunda deðilseniz para banka hesabýnýza yatýrýlýr\n\t{FFFFFF}- Evinizde mobilya varsa ücretsiz satýn alan kullanýcýnýn olur\n\t- {FFFFFF}Evde para varsa satýn alan kullanýcýnýn olur\n\t- {FFFFFF}Eviniz satýn alýndýktan sonra sahip olduðunuz normal araçlar silinir ve para iadesi yapýlmaz\n\n{FFFFFF}Evi satýlýða çýkartmak istediðiniz miktarý girin\n\nEðer satmaktan vazgeçerseniz Vazgeç butonuna týklayýn", "Çýkar", "Vazgeç");
					}
					case 4:
					{
						if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
						{
							SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
							SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid, "eoX");
							DeletePVar(playerid, "eoY");
							DeletePVar(playerid, "eoZ");
							DeletePVar(playerid, "eoA");
							DeletePVar(playerid, "EvModu");
							SetPVarInt(playerid, "Evim", -1);
							hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
							return 1;
						}
					    new ufdedi[375 + 11], id = GetPVarInt(playerid, "Evim");
					    format(ufdedi, sizeof(ufdedi), "{FA8072}UYARI:\n\t{FFFFFF}- Evinizi satarken Mobilyalarýn ücretleri verilmez. Bu yüzden evinizi satmadan mobilyalarýnýzý satmak isteyebilirsiniz\n\t{FFFFFF}- Evinize koyduðunuz para varsa Bu para da iade edilmez manuel olarak çekmeniz gerekir.\n\t- Araçlarýnýzýn ücretleri verilmez, manuel olarak satmanýz gerekir.\n\n{FFFFFF}Evinizi yarý fiyatýna $%s dolara satmak istediðinizden emin misiniz ?", convertNumber(EvIslem[id][evOrjinalFiyat]/2));
						ShowPlayerDialog(playerid, DIALOG_EVHSAT, DIALOG_STYLE_MSGBOX, "{FFFFFF}Hýzlý Satýþ", ufdedi, "Sat", "Vazgeç");
					}
				}
			}
		}
		case DIALOG_EVHSAT:
		{
			if(!response) return SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evi satmaktan vazgeçtiniz"), evPreloader(playerid);
			if(response)
			{

			    new id = GetPVarInt(playerid, "Evim"), query[100];
				if(strcmp(EvIslem[id][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
			    pParaver(playerid, EvIslem[id][evOrjinalFiyat]/2);
			    ParaLogu(playerid, 8, "", EvIslem[id][evOrjinalFiyat]/2);
				format(EvIslem[id][EvIsmi], MAX_EV_ISMI, "-");
				format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, "-");
				EvIslem[id][evFiyat] = EvIslem[id][evOrjinalFiyat];
				EvIslem[id][evDurumu] = 0;
				format(EvIslem[id][evSifresi], MAX_PLAYER_NAME, "-");
				EvIslem[id][evPara] = 0;

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvIsmi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvSahibi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", EvIslem[id][evFiyat], id);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evDurumu` = '0' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evSifresi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evPara` = '0' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `evid` = '-1' WHERE `id` = '%d' LIMIT 1", oyuncuData[playerid][xID]);
				mysql_tquery(g_SQL, query);

				for(new i = 0; i < N_ARAC_KAPASITE; i++)
				{
                    if(aracSlotu[playerid][i] != 0)
					{
					    new aPid = aracSlotu[playerid][i];
					    format(AraclarIslem[aPid][a_Sahip], 24, "");
					    AraclarIslem[aPid][aAktif] = false;
						mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `normalarac` WHERE `nid` = '%d' LIMIT 1", AraclarIslem[aPid][aSQL]);
						mysql_tquery(g_SQL, query);
					    AraclarIslem[aPid][aSQL] = -1;
						DestroyVehicle(aPid);
					}
                    aracSlotu[playerid][i] = 0;
				}

				SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
				SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "eoX");
				DeletePVar(playerid, "eoY");
				DeletePVar(playerid, "eoZ");
				DeletePVar(playerid, "eoA");
				DeletePVar(playerid, "EvModu");
				SetPVarInt(playerid, "Evim", -1);
				EvLabelGuncelle(playerid, id);
				SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evinizi yarý fiyatýna sattýnýz.");
				evim[playerid] = -1;
				foreach(new i : Player)
				{
				    if(GetPVarInt(i, "EvSifreDeneme") == id)
				    {
				        SetPVarInt(i, "EvSifreDeneme", -1);
				        SendClientMessage(i, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Ev sahibi tarafýndan bu ev satýldý.");
						SetPlayerPos(i, GetPVarFloat(i,"gX"), GetPVarFloat(i,"gY"), GetPVarFloat(i,"gZ"));
						SetPlayerFacingAngle(i, GetPVarFloat(i,"gA"));
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i, 0);
						SetCameraBehindPlayer(i);
						DeletePVar(i, "gX");
						DeletePVar(i, "gY");
						DeletePVar(i, "gZ");
						DeletePVar(i, "eoA");
						DeletePVar(i, "gA");
					}
				}
			}
		}
		case DIALOG_SCIKARMA:
		{
		    if(!response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		        new id = GetPVarInt(playerid, "Evim"), query[75];
		        EvIslem[id][evDurumu] = 1;
		        EvIslem[id][evFiyat] = 0;
		        EvLabelGuncelle(playerid, id);
		        SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evi satýlýk modundan çýkardýnýz.");
  				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvFiyat` = '0' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evDurumu` = '1' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);
				evPreloader(playerid);
		    }
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		        new ePar = strval(inputtext), id = GetPVarInt(playerid, "Evim"), query[65 + 11];
		        if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_SCIKARMA, DIALOG_STYLE_INPUT, "{FFFFFF}Evi Satýlýða Çýkarma", "Ekraný boþ býrakmayýn\n\nEvi satýlýða çýkartmak istediðiniz miktarý girin\n\nEðer satmaktan vazgeçerseniz Vazgeç butonuna týklayýn", "Çýkar", "Vazgeç");
		        if(!(1 <= strlen(inputtext) <= 11)) return ShowPlayerDialog(playerid, DIALOG_SCIKARMA, DIALOG_STYLE_INPUT, "{FFFFFF}Evi Satýlýða Çýkarma", "Ekraný boþ býrakmayýn\n\nEvi satýlýða çýkartmak istediðiniz miktarý girin\n\nEðer satmaktan vazgeçerseniz Vazgeç butonuna týklayýn", "Çýkar", "Vazgeç");
				if(ePar <= 0) return ShowPlayerDialog(playerid, DIALOG_SCIKARMA, DIALOG_STYLE_INPUT, "{FFFFFF}Evi Satýlýða Çýkarma", "Para deðerini 0 veya daha düþük bir miktar giremezsiniz\n\nEvi satýlýða çýkartmak istediðiniz miktarý girin\n\nEðer satmaktan vazgeçerseniz Vazgeç butonuna týklayýn", "Çýkar", "Vazgeç");
				if(ePar > 1000000000) return ShowPlayerDialog(playerid, DIALOG_SCIKARMA, DIALOG_STYLE_INPUT, "{FFFFFF}Evi Satýlýða Çýkarma", "Parayý en fazla $1,000,000,000 dolar girebilirsiniz\n\nEvi satýlýða çýkartmak istediðiniz miktarý girin\n\nEðer satmaktan vazgeçerseniz Vazgeç butonuna týklayýn", "Çýkar", "Vazgeç");
                EvIslem[id][evFiyat] = ePar;
    			EvIslem[id][evDurumu] = 2;
		        EvLabelGuncelle(playerid, id);
		        SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evinizi satýlýða çýkarttýnýz.");
                evPreloader(playerid);
   				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", ePar, id);
				mysql_tquery(g_SQL, query);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evDurumu` = '2' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);
			}
		}
		case DIALOG_ESYAM:
		{
		    if(!response) return evPreloader(playerid);
			if(response)
			{
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid, DIALOG_ESYALAR, DIALOG_STYLE_LIST, "{FFFFFF}Mobilya Seçin", "{1DABB8}» Masalar\n{1DABB8}» Sandalyeler\n{1DABB8}» Yataklar\n{1DABB8}» Koltuklar\n{1DABB8}» Aksesuarlar\n{1DABB8}» Elektronikler", "Ýncele", "Geri");
					case 1: SetPVarInt(playerid, "MobilyaDuzenleme", 1), SetPVarInt(playerid, "MobilyaDuzenlemeP", 1), SelectObject(playerid), SendClientMessage(playerid, 0x1DABB8FF, "=> Mobilya Bilgi: {FFFFFF}Düzenlemek istediðiniz mobilyanýn üstüne týklayýn.");
					case 2: SetPVarInt(playerid, "MobilyaDuzenleme", 2), SelectObject(playerid), SendClientMessage(playerid, 0x1DABB8FF, "=> Mobilya Bilgi: {FFFFFF}Satmak istediðiniz mobilyanýn üstüne týklayýn.");
			    }
			}
		}
		case DIALOG_ESYALAR:
		{
		    if(!response) return ShowPlayerDialog(playerid, DIALOG_ESYAM, DIALOG_STYLE_LIST, "{FFFFFF}Mobilya Ýþlemleri", "{1DABB8}» Mobilya Satýn Al\n{1DABB8}» Mobilyayý Düzenle\n{1DABB8}» Mobilyayý Sat\t\t{FEC606}[ Yarý Fiyatýna ]", "Devam", "Geri");
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
			}
		}
		case DIALOG_ESAT:
		{
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		    }
		}
		case DIALOG_ESATINO:
		{
		    if(!response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		    }
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		    }
		}
		case DIALOG_EVISMI:
		{
		    if(!response) return evPreloader(playerid);
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		        new id = GetPVarInt(playerid, "Evim"), query[126];
		        if(!(1 <= strlen(inputtext) <= MAX_EV_ISMI))
				{
					ShowPlayerDialog(playerid, DIALOG_EVISMI, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Ismi", "En düþük 1, en fazla 48 karakterli ev ismi girebilirsin !\n\nEvinizin ismini deðiþtirirken küfürlü isimler kullanýrsanýz Eviniz ve Hesabýnýz kalýcý yasaklanýr !", "Deðiþtir", "Iptal Et");
					return 1;
				}
				if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EVISMI, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Ismi", "En düþük 1, en fazla 48 karakterli ev ismi girebilirsin !\n\nEvinizin ismini deðiþtirirken küfürlü isimler kullanýrsanýz Eviniz ve Hesabýnýz kalýcý yasaklanýr !", "Deðiþtir", "Iptal Et");
				format(EvIslem[id][EvIsmi], MAX_EV_ISMI, inputtext);
				EvLabelGuncelle(playerid, id);
				SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evinizin ismi deðiþtirildi.");
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvIsmi` = '%s' WHERE `eid` = '%d' LIMIT 1", inputtext, id);
				mysql_tquery(g_SQL, query);
				evPreloader(playerid);
			}
		}
		case DIALOG_PARAMENU:
		{
		    if(!response) return evPreloader(playerid);
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
				switch(listitem)
				{
				    case 0: ShowPlayerDialog(playerid, DIALOG_EPARAY, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Yatýrma", "Evinize yatýracaðýnýz miktarý girin", "Yatýr", "Geri");
				    case 1: ShowPlayerDialog(playerid, DIALOG_EPARAC, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Çekme", "Evinizden çekeceðiniz miktarý girin", "Çek", "Geri");
				}
		    }
		}
		case DIALOG_EPARAY:
		{
			if(!response)
			{
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
			    ShowPlayerDialog(playerid, DIALOG_PARAMENU, DIALOG_STYLE_LIST, "{FFFFFF}Para Menüsü", "{1DABB8}» Eve Para Yatýr\t\t{FEC606}Max: 10m\n{1DABB8}» Evden Para Çek\n", "Devam", "Geri");
			}
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
			    new id = GetPVarInt(playerid, "Evim"), ePa = strval(inputtext), query[110], paraFazlamk = 0;
			    if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EPARAY, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Yatýrma", "Ekraný boþ býrakmayýn\n\nEvinize yatýracaðýnýz miktarý girin", "Yatýr", "Geri");
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EPARAY, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Yatýrma", "Ekraný boþ býrakmayýn\n\nEvinize yatýracaðýnýz miktarý girin", "Yatýr", "Geri");
			    if(EvIslem[id][evPara] > 10000000) return ShowPlayerDialog(playerid, DIALOG_EPARAY, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Yatýrma", "Evinize maksimum $10,000,000 dolar yatýrabilirsiniz\n\nEvinize yatýracaðýnýz miktarý girin", "Yatýr", "Geri");
			    if(ePa <= 0) return ShowPlayerDialog(playerid, DIALOG_EPARAY, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Yatýrma", "Hata: $0 dolar veya daha düþük bir miktar girdiniz\n\nEvinize yatýracaðýnýz miktarý girin", "Yatýr", "Geri");
				if(ePa > ParaKorumasi[playerid]) return ShowPlayerDialog(playerid, DIALOG_EPARAY, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Yatýrma", "Hata: Üstünüzde bu miktarda para yok\n\nEvinize yatýracaðýnýz miktarý girin", "Yatýr", "Geri");
				EvIslem[id][evPara] += ePa;
				ParaLogu(playerid, 4, "", ePa);
				if(EvIslem[id][evPara] > 10000000)
				{
					paraFazlamk = EvIslem[id][evPara]-10000000;
					EvIslem[id][evPara] = 10000000;
					pParaver(playerid, paraFazlamk);
				}
				pParaver(playerid, -ePa);
				SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evinize parayý yatýrdýnýz.");
				evPreloader(playerid);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evPara` = '%d' WHERE `eid` = '%d' LIMIT 1", EvIslem[id][evPara], id);
				mysql_tquery(g_SQL, query);
			}
		}
		case DIALOG_EPARAC:
		{
		    if(!response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		        ShowPlayerDialog(playerid, DIALOG_PARAMENU, DIALOG_STYLE_LIST, "{FFFFFF}Para Menüsü", "{1DABB8}» Eve Para Yatýr\t\t{FEC606}Max: 10m\n{1DABB8}» Evden Para Çek\n", "Devam", "Geri");
		    }
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		    	new id = GetPVarInt(playerid, "Evim"), ePa = strval(inputtext), query[110];
		    	if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EPARAC, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Çekme", "Evinizden çekeceðiniz miktarý girin", "Çek", "Geri");
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EPARAC, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Çekme", "Evinizden çekeceðiniz miktarý girin", "Çek", "Geri");
                if(ePa <= 0) return ShowPlayerDialog(playerid, DIALOG_EPARAC, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Çekme", "Hata: $0 dolar veya daha düþük bir miktar girdiniz\n\nEvinizden çekeceðiniz para miktarýný girin", "Çek", "Geri");
				if(EvIslem[id][evPara] <= 0) return ShowPlayerDialog(playerid, DIALOG_EPARAC, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Çekme", "Hata: Evinizde para kalmamýþ !", "Çek", "Geri");
			    if(ePa > EvIslem[id][evPara]) return ShowPlayerDialog(playerid, DIALOG_EPARAC, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Para Çekme", "Hata: Evinizde bu kadar para mevcut deðil\n\nDaha düþük miktarda para deðeri girin", "Çek", "Geri");
				EvIslem[id][evPara] -= ePa;
				ParaLogu(playerid, 5, "", ePa);
				pParaver(playerid, ePa);
				SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evinizden para çektiniz.");
				evPreloader(playerid);
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evPara` = '%d' WHERE `eid` = '%d' LIMIT 1", EvIslem[id][evPara], id);
				mysql_tquery(g_SQL, query);
		    }
		}
		case DIALOG_ESIFRE:
		{
		    if(!response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		        new id = GetPVarInt(playerid, "Evim"), query[110];
		        format(EvIslem[id][evSifresi], MAX_PLAYER_NAME, "-");
		        SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Ev þifresi kaldýrýldý. Artýk herkes evinize giriþ yapabilir.");
          		mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evSifresi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_tquery(g_SQL, query);
				evPreloader(playerid);
		    }
		    if(response)
		    {
				if(strcmp(EvIslem[GetPVarInt(playerid, "Evim")][EvSahibi], getName(playerid), false) != 0)
				{
					SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
					SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid, "eoX");
					DeletePVar(playerid, "eoY");
					DeletePVar(playerid, "eoZ");
					DeletePVar(playerid, "eoA");
					DeletePVar(playerid, "EvModu");
					SetPVarInt(playerid, "Evim", -1);
					hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
					return 1;
				}
		        if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ESIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Þifresi", "{F04903}Hata:\n\t{ffffff}Ev þifresi en düþük 4 en fazla 24 harf veya rakam içermelidir.\n\n{ffffff}Ev þifresini girin:", "Deðiþtir", "ÞifreKaldýr");
		        if(!(4 <= strlen(inputtext) <= MAX_PLAYER_NAME))
				{
					ShowPlayerDialog(playerid, DIALOG_ESIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Þifresi", "{F04903}Hata:\n\t{ffffff}Ev þifresi en düþük 4 en fazla 24 harf veya rakam içermelidir.\n\n{ffffff}Ev þifresini girin:", "Deðiþtir", "ÞifreKaldýr");
					return 1;
				}
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(inputtext[i] == ' ')
				    {
				        ShowPlayerDialog(playerid, DIALOG_ESIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Eve Þifresi", "{F04903}Hata:\n\t{ffffff}Ev þifresinde boþluk kullanamazsýn.\n\n{ffffff}Ev þifresini girin:", "Deðiþtir", "ÞifreKaldýr");
				        return 1;
					}
				}
		    	new hashed_pass[65];
				SHA256_PassHash(inputtext, oyuncuData[playerid][SaltSifre], hashed_pass, 65);
				if(strcmp(hashed_pass, oyuncuData[playerid][Sifre]) == 0)
				{
				    ShowPlayerDialog(playerid, DIALOG_ESIFRE, DIALOG_STYLE_INPUT, "{FFFFFF}Ev Þifresi", "{F04903}Hata:\n\t{ffffff}Oyunda kullandýðýnýz þifreyi giremezsiniz.\n\n{ffffff}Ev þifresini girin:", "Deðiþtir", "ÞifreKaldýr");
				    return 1;
				}
		        new id = GetPVarInt(playerid, "Evim"), query[110];
		        format(EvIslem[id][evSifresi], MAX_PLAYER_NAME, inputtext);
        		mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evSifresi` = '%s' WHERE `eid` = '%d' LIMIT 1", EvIslem[id][evSifresi], id);
				mysql_tquery(g_SQL, query);
		        SendClientMessage(playerid, 0x1DABB8FF, "=> Ev Bilgi: {FFFFFF}Evinizin þifresi deðiþtirildi.");
		        evPreloader(playerid);
		    }
		}
		case DIALOG_ESIFREG:
		{
		    if(!response) return DeletePVar(playerid, "EvSifreDeneme");
		    if(response)
		    {
		        new id = GetPVarInt(playerid, "EvSifreDeneme"), sss[114 + 24 + 1];
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ESIFREG, DIALOG_STYLE_INPUT, "{FFFFFF}Eve Giriþ", "Ekraný boþ býrakmayýn !\n\nBu eve girmek için lütfen þifreyi girin", "Gir", "Kapat");
				if(strcmp(EvIslem[id][evSifresi], inputtext, false) != 0)
		        {
		            ShowPlayerDialog(playerid, DIALOG_ESIFREG, DIALOG_STYLE_INPUT, "{FFFFFF}Eve Giriþ", "Hatalý þifre girdiniz\n\nBu eve girmek için lütfen þifreyi girin", "Gir", "Kapat");
					return 1;
				}
				new evSz = EvIslem[id][evSeviyesi] - 1;
				new Float: ksyx[4];
				GetPlayerPos(playerid, ksyx[0], ksyx[1], ksyx[2]);
				GetPlayerFacingAngle(playerid, ksyx[3]);
				SetPVarFloat(playerid, "gX", ksyx[0]);
				SetPVarFloat(playerid, "gY", ksyx[1]);
				SetPVarFloat(playerid, "gZ", ksyx[2]);
				SetPVarFloat(playerid, "gA", ksyx[3]);
				SetPlayerPos(playerid, EvPozisyonlari[evSz][ev_Pozisyon][0], EvPozisyonlari[evSz][ev_Pozisyon][1], EvPozisyonlari[evSz][ev_Pozisyon][2]);
				SetPlayerFacingAngle(playerid, EvPozisyonlari[evSz][ev_Pozisyon][3]);
				SetPlayerInterior(playerid, EvPozisyonlari[evSz][evInterior]);
				SetPlayerVirtualWorld(playerid, EvIslem[id][evVirtual]);
				SetCameraBehindPlayer(playerid);
				SetPVarInt(playerid, "EvModu", 0);
				//DeletePVar(playerid, "EvSifreDeneme");
				format(sss, sizeof(sss), "=> Ev Bilgisi: {FFFFFF}Þuan %s evine giriþ yaptýnýz. Uyarý: {D33257}/EvMenu {FFFFFF}komutlarýný kullanamazsýnýz !", EvIslem[id][EvSahibi]);
				SendClientMessage(playerid, 0x3D8EB9FF, sss);
		    }
		}
	    case DIALOG_SO:
	    {
	        if(!response)
	        {
	            if(SoygunOIslem[playerid][sDurum])
	            {
	                soOlusturucu(playerid);
   		        	SendClientMessage(playerid, -1, "Önce Soygun Mekanýný Bitir !");
	            }
			}
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
                     	new _icerik[43] = "{EB9532}#\t{EB9532}(?)\n", ba[280 + 5], p_[50];
                     	if(strcmp("-", SoygunOIslem[playerid][soygunIsim], false) == 0)
                     	{
                     	    p_ = "-";
						}
						else
						{
						    p_ = SoygunOIslem[playerid][soygunIsim];
						}
						format(ba, sizeof(ba), "%s{2CC990}» Soygun Ismi:\t\n{2CC990}» Soygun Giriþ CP:\t-\n{2CC990}» Interior Seç:\t-\n{2CC990}» Soygun Giriþ Pozisyon:\t-\n{2CC990}» Soygun CP:\t-\n{2CC990}» Soygun Çýkýþ CP:\t-\n{2CC990}» Soygun Dýþarý Pozisyon:\t-\n{2CC990}» Soygun Mekan Iconu:\t%d\n{2CC990}» Soygunu Oluþtur:\n", _icerik, SoygunOIslem[playerid][soyIcon]);
						ShowPlayerDialog(playerid, DIALOG_SO2, DIALOG_STYLE_TABLIST_HEADERS, ""dialogIsim": Soygun Oluþturucu", ba, "Seç", "Iptal");
	                }
	                case 1: soOlusturucu2(playerid);
	            }
	        }
	    }
	    case DIALOG_SO3:
	    {
	        if(!response)
	        {
	            if(SoygunOIslem[playerid][sDurum])
	            {
	                soOlusturucu2(playerid);
   		        	SendClientMessage(playerid, -1, "Önce Soygun Mekanýný Bitir !");
	            }
			}
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        SetPVarInt(playerid, "sInteriorsuz", 1);
				        ShowPlayerDialog(playerid, DIALOG_SOYGUNISIM, DIALOG_STYLE_INPUT, ""dialogIsim": Soygun Ismi", "Soygun Mekanýnýn Ýsmini Girin", "Gir", "Geri");
				    }
				    case 1: SendClientMessage(playerid, -1, "F tuþu ile soygun pozisyonunu ayarlayýn."), SetPVarInt(playerid, "InteriorsuzCP", 1);
				    case 2:
					{
						SetPVarInt(playerid, "InteriorsuzIcon", 1);
                        TextModu[playerid] = 1;
						for(new i = 0; i < 56; i++) TextDrawShowForPlayer(playerid, sOlusturucuIcon[i]);
					 	SelectTextDraw(playerid, 0x422E39FF);
					 	SendClientMessage(playerid, -1, "Soygun Iconunu ayarlayýn.");
					}
				    case 3:
				    {
				        new query[250], id = Iter_Free(Soygunlar);

						mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `soygunlar`(`sid`, `soygunIsim`) VALUES ('%d', '%s')", id, SoygunOIslem[playerid][soygunIsim]);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sCpX` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYulacakCP][0], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sCpY` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYulacakCP][1], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sCpZ` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYulacakCP][2], id);
						mysql_tquery(g_SQL, query);

      					mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `iDurum` = '1' WHERE `sid` = '%d' LIMIT 1", id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sIcon` = '%d' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyIcon], id);
						mysql_tquery(g_SQL, query);

      					format(SoygunIslem[id][soygunIsmi], MAX_SOYGUN_ISIM, SoygunOIslem[playerid][soygunIsim]);

						SoygunIslem[id][soygunCP_][0] = SoygunOIslem[playerid][soYulacakCP][0];
						SoygunIslem[id][soygunCP_][1] = SoygunOIslem[playerid][soYulacakCP][1];
						SoygunIslem[id][soygunCP_][2] = SoygunOIslem[playerid][soYulacakCP][2];

						SoygunIslem[id][soygunInterior] = 0;
						SoygunIslem[id][soygunVirtualWorld] = 0;
						SoygunIslem[id][sIcon] = SoygunOIslem[playerid][soyIcon];

						SoygunIslem[id][soygunSure] = 0;
						SoygunIslem[id][iDurum] = 1;
						format(query, sizeof(query), "[DEBUG] Þuanda %d id'li soygun oluþturuldu.", id);
						SendClientMessage(playerid, -1, query);

						format(query, sizeof(query), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulabilir", SoygunOIslem[playerid][soygunIsim], id);

						SoygunIslem[id][soyLabel] = CreateDynamic3DTextLabel(query, 0xFFFF00AA, SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);

						SoygunIslem[id][soygunCP] = CreateDynamicCP(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 1.5, 0, 0);

                        SoygunIslem[id][soygunIcon] = CreateDynamicMapIcon(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], SoygunOIslem[playerid][soyIcon], -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);

						Iter_Add(Soygunlar, id);

						SoygunOIslem[playerid][sDurum] = false;
				    }
				}
			}
	    }
	    case DIALOG_SO2:
	    {
         	if(!response)
	        {
	            if(SoygunOIslem[playerid][sDurum])
	            {
	                soOlusturucu(playerid);
   		        	SendClientMessage(playerid, -1, "Önce Soygun Mekanýný Bitir !");
	            }
			}
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: ShowPlayerDialog(playerid, DIALOG_SOYGUNISIM, DIALOG_STYLE_INPUT, ""dialogIsim": Soygun Ismi", "Soygun Mekanýnýn Ýsmini Girin", "Gir", "Geri");
                 	case 1: SetPVarInt(playerid, "SoyGirisCP", 1), SendClientMessage(playerid, -1, "F tuþu ile Soygun Giriþ Kýsmýný Ayarlayabilirsiniz");
					case 2:
					{
					    new Float:zz[4];
						GetPlayerPos(playerid, zz[0], zz[1], zz[2]);
						GetPlayerFacingAngle(playerid, zz[3]);
						SetPVarFloat(playerid, "s_x", zz[0]);
					    SetPVarFloat(playerid, "s_y", zz[1]);
					    SetPVarFloat(playerid, "s_z", zz[2]);
					    SetPVarFloat(playerid, "s_a", zz[0]);
					    SetPVarInt(playerid, "s_i", GetPlayerInterior(playerid));
					    SetPVarInt(playerid, "s_w", GetPlayerVirtualWorld(playerid));
					    interiorYukle(playerid);
					    SetPVarInt(playerid, "SoyGirisCP", 2), SendClientMessage(playerid, -1, "F tuþu ile Soygun Mekanýnýn Giriþini Ayarlayabilirsiniz");
					}
					case 3: SetPVarInt(playerid, "SoyGirisCP", 2), SendClientMessage(playerid, -1, "F tuþu ile Soygun Mekanýnýn Giriþini Ayarlayabilirsiniz");
	                case 4: SetPVarInt(playerid, "SoyGirisCP", 3), SendClientMessage(playerid, -1, "F tuþu ile Soyulacak yeri Ayarlayabilirsiniz");
	                case 5: SetPVarInt(playerid, "SoyGirisCP", 4), SendClientMessage(playerid, -1, "F tuþu ile Soygun Çýkýþ CP Ayarlayabilirsiniz");
	                case 6: SetPVarInt(playerid, "SoyGirisCP", 5), SendClientMessage(playerid, -1, "F tuþu ile Dýþarý Pozisyonu Ayarlayabilirsiniz");
	                case 7:	for(new i = 0; i < 56; i++) TextDrawShowForPlayer(playerid, sOlusturucuIcon[i]), SelectTextDraw(playerid, 0x422E39FF);
	                case 8:
	                {
	                    new query[250], id = Iter_Free(Soygunlar);

	                   	mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `soygunlar`(`sid`, `soygunIsim`) VALUES ('%d', '%s')", id, SoygunOIslem[playerid][soygunIsim]);
						mysql_tquery(g_SQL, query, "","");

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `gCpX` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYgirisCP][0], id);
						mysql_tquery(g_SQL, query);

	  					mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `gCpY` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYgirisCP][1], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `gCpZ` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYgirisCP][2], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `GirisPosX` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyIceri][0], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `GirisPosY` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyIceri][1], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `GirisPosZ` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyIceri][2], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `GirisPosA` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyIceri][3], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `cCpX` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYCikisCP][0], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `cCpY` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYCikisCP][1], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `cCpZ` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYCikisCP][2], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `CikisPosX` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYDisari][0], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `CikisPosY` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYDisari][1], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `CikisPosZ` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYDisari][2], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `CikisPosA` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYDisari][3], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sCpX` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYulacakCP][0], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sCpY` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYulacakCP][1], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sCpZ` = '%f' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soYulacakCP][2], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sInterior` = '%d' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyInterior], id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sVW` = '%d' WHERE `sid` = '%d' LIMIT 1", id+1, id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `soygunSure` = '0' WHERE `sid` = '%d' LIMIT 1", id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `iDurum` = '0' WHERE `sid` = '%d' LIMIT 1", id);
						mysql_tquery(g_SQL, query);

						mysql_format(g_SQL, query, sizeof(query), "UPDATE `soygunlar` SET `sIcon` = '%d' WHERE `sid` = '%d' LIMIT 1", SoygunOIslem[playerid][soyIcon], id);
						mysql_tquery(g_SQL, query);

	      				format(SoygunIslem[id][soygunIsmi], MAX_SOYGUN_ISIM, SoygunOIslem[playerid][soygunIsim]);

						SoygunIslem[id][girisCP][0] = SoygunOIslem[playerid][soYgirisCP][0];
						SoygunIslem[id][girisCP][1] = SoygunOIslem[playerid][soYgirisCP][1];
						SoygunIslem[id][girisCP][2] = SoygunOIslem[playerid][soYgirisCP][2];

						SoygunIslem[id][girisPoss][0] = SoygunOIslem[playerid][soyIceri][0];
						SoygunIslem[id][girisPoss][1] = SoygunOIslem[playerid][soyIceri][1];
						SoygunIslem[id][girisPoss][2] = SoygunOIslem[playerid][soyIceri][2];
						SoygunIslem[id][girisPoss][3] = SoygunOIslem[playerid][soyIceri][3];

	     				SoygunIslem[id][cikisCP][0] = SoygunOIslem[playerid][soYCikisCP][0];
						SoygunIslem[id][cikisCP][1] = SoygunOIslem[playerid][soYCikisCP][1];
						SoygunIslem[id][cikisCP][2] = SoygunOIslem[playerid][soYCikisCP][2];

						SoygunIslem[id][cikisPoss][0] = SoygunOIslem[playerid][soYDisari][0];
						SoygunIslem[id][cikisPoss][1] = SoygunOIslem[playerid][soYDisari][1];
						SoygunIslem[id][cikisPoss][2] = SoygunOIslem[playerid][soYDisari][2];
						SoygunIslem[id][cikisPoss][3] = SoygunOIslem[playerid][soYDisari][3];

						SoygunIslem[id][soygunCP_][0] = SoygunOIslem[playerid][soYulacakCP][0];
						SoygunIslem[id][soygunCP_][1] = SoygunOIslem[playerid][soYulacakCP][1];
						SoygunIslem[id][soygunCP_][2] = SoygunOIslem[playerid][soYulacakCP][2];

						SoygunIslem[id][soygunInterior] = SoygunOIslem[playerid][soyInterior];
						SoygunIslem[id][soygunVirtualWorld] = id+1;
						SoygunIslem[id][sIcon] = SoygunOIslem[playerid][soyIcon];

						SoygunIslem[id][soygunSure] = 0;
						SoygunIslem[id][iDurum] = 0;
						format(query, sizeof(query), "[DEBUG] Þuanda %d id'li soygun oluþturuldu.", id);
						SendClientMessage(playerid, -1, query);

						SoygunIslem[id][soyGirisCP] = CreateDynamicCP(SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2], 1.0, -1, -1, -1);

						SoygunIslem[id][soyCikisCP] = CreateDynamicCP(SoygunIslem[id][cikisCP][0], SoygunIslem[id][cikisCP][1], SoygunIslem[id][cikisCP][2], 1.0, id+1, SoygunIslem[id][soygunInterior]);

						format(query, sizeof(query), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulabilir", SoygunOIslem[playerid][soygunIsim], id);

						SoygunIslem[id][soyLabel] = CreateDynamic3DTextLabel(query, 0xFFFF00AA, SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, id+1, SoygunIslem[id][soygunInterior]);

						SoygunIslem[id][soygunCP] = CreateDynamicCP(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 1.5, id+1, SoygunIslem[id][soygunInterior]);

						format(query, sizeof(query), "{5CB3FF}Mekan: {FFFFFF}%s", SoygunOIslem[playerid][soygunIsim]);

						SoygunIslem[id][girisLabel] = CreateDynamic3DTextLabel(query, 0xFFFF00AA, SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);

						SoygunIslem[id][cikisLabel] = CreateDynamic3DTextLabel("{FFFFFF}[ Çýkýþ ]", 0xFFFF00AA, SoygunIslem[id][cikisCP][0], SoygunIslem[id][cikisCP][1], SoygunIslem[id][cikisCP][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, id+1, SoygunIslem[id][soygunInterior]);

                        SoygunIslem[id][soygunIcon] = CreateDynamicMapIcon(SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2], SoygunIslem[id][sIcon], -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);

						Iter_Add(Soygunlar, id);

						SoygunOIslem[playerid][sDurum] = false;
	                }
	            }
	        }
	    }
	    case DIALOG_SO4:
	    {
	        if(!response)
	        {
	            if(SoygunOIslem[playerid][sDurum])
	            {
					interiorYukle(playerid);
	        	}
			}
			if(response)
			{
			    //interiorYukle(playerid);
			    switch(listitem)
			    {
		   		    case 0:
				    {
				        SetPlayerPos(playerid, -25.884498,-185.868988,1003.546875);
				        SetPlayerInterior(playerid, 17);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}24/7 1");
					    return 1;
				    }
				    case 1:
				    {
				        SetPlayerPos(playerid, 6.091179,-29.271898,1003.549438);
				        SetPlayerInterior(playerid, 10);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}24/7 2");
					    return 1;
				    }
				    case 2:
				    {
				        SetPlayerPos(playerid, -30.946699,-89.609596,1003.546875);
				        SetPlayerInterior(playerid, 18);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}24/7 3");
					    return 1;
				    }
				    case 3:
				    {
				        SetPlayerPos(playerid, -25.132598,-139.066986,1003.546875);
				        SetPlayerInterior(playerid, 16);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}24/7 4");
					    return 1;
				    }
				    case 4:
				    {
				        SetPlayerPos(playerid, -27.312299,-29.277599,1003.557250);
				        SetPlayerInterior(playerid, 4);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}24/7 5");
					    return 1;
				    }
				    case 5:
				    {
				        SetPlayerPos(playerid, -26.691598,-55.714897,1003.546875);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}24/7 6");
					    return 1;
				    }
				    case 6:
				    {
				        SetPlayerPos(playerid, -1827.147338,7.207417,1061.143554);
				        SetPlayerInterior(playerid, 14);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Airoport Ticket Desk");
					    return 1;
				    }
				    case 7:
				    {
				        SetPlayerPos(playerid, -1861.936889,54.908092,1061.143554);
				        SetPlayerInterior(playerid, 14);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Airoport Baggage Reclaim");
					    return 1;
				    }
				    case 8:
				    {
				        SetPlayerPos(playerid, 1.808619,32.384357,1199.593750);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Shamal");
					    return 1;
				    }
				    case 9:
				    {
				        SetPlayerPos(playerid, 315.745086,984.969299,1958.919067);
				        SetPlayerInterior(playerid, 9);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Andromada");
					    return 1;
				    }
				    case 10:
				    {
				        SetPlayerPos(playerid, 286.148986,-40.644397,1001.515625);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation 1");
					    return 1;
				    }
				    case 11:
				    {
				        SetPlayerPos(playerid, 286.800994,-82.547599,1001.515625);
				        SetPlayerInterior(playerid, 4);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation 2");
					    return 1;
				    }
				    case 12:
				    {
				        SetPlayerPos(playerid, 296.919982,-108.071998,1001.515625);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation 3");
					    return 1;
				    }
				    case 13:
				    {
				        SetPlayerPos(playerid, 314.820983,-141.431991,999.601562);
				        SetPlayerInterior(playerid, 7);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation 4");
					    return 1;
				    }
				    case 14:
				    {
				        SetPlayerPos(playerid, 316.524993,-167.706985,999.593750);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation 5");
					    return 1;
				    }
				    case 15:
				    {
				        SetPlayerPos(playerid, 302.292877,-143.139099,1004.062500);
				        SetPlayerInterior(playerid, 7);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation Booths");
					    return 1;
				    }
				    case 16:
				    {
				        SetPlayerPos(playerid, 298.507934,-141.647048,1004.054748);
				        SetPlayerInterior(playerid, 7);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ammunation Range");
					    return 1;
				    }
				    case 17:
				    {
				        SetPlayerPos(playerid, 1038.531372,0.111030,1001.284484);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Blastin Fools Hallway");
					    return 1;
				    }
				    case 18:
				    {
				        SetPlayerPos(playerid, 444.646911,508.239044,1001.419494);
				        SetPlayerInterior(playerid, 12);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Budget Inn Motel Room");
					    return 1;
				    }
				    case 19:
				    {
				        SetPlayerPos(playerid, 2215.454833,-1147.475585,1025.796875);
				        SetPlayerInterior(playerid, 14);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Jefferson Motel");
					    return 1;
				    }
				    case 20:
				    {
				        SetPlayerPos(playerid, 833.269775,10.588416,1004.179687);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Off Track Betting Shop");
					    return 1;
				    }
				    case 21:
				    {
				        SetPlayerPos(playerid, -103.559165,-24.225606,1000.718750);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Sex Shop");
					    return 1;
				    }
				    case 22:
				    {
				        SetPlayerPos(playerid, 963.418762,2108.292480,1011.030273);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Meat Factory");
					    return 1;
				    }
				    case 23:
				    {
				        SetPlayerPos(playerid, -2240.468505,137.060440,1035.414062);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Zero's RC Shop");
					    return 1;
				    }
				    case 24:
				    {
				        SetPlayerPos(playerid, 663.836242,-575.605407,16.343263);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Dillmore Gas Station");
					    return 1;
				    }
				    case 25:
				    {
				        SetPlayerPos(playerid, 2169.461181,1618.798339,999.976562);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Catigula's Basement");
					    return 1;
				    }
					case 26:
				    {
				        SetPlayerPos(playerid, 1889.953369,1017.438293,31.882812);
				        SetPlayerInterior(playerid, 10);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}FDC Janitors Room");
					    return 1;
				    }
				    case 27:
				    {
				        SetPlayerPos(playerid, -2159.122802,641.517517,1052.381713);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Woozie's Office");
					    return 1;
				    }
				    case 28:
				    {
				        SetPlayerPos(playerid, 207.737991,-109.019996,1005.132812);
				        SetPlayerInterior(playerid, 15);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Binco");
					    return 1;
				    }
				    case 29:
				    {
				        SetPlayerPos(playerid, 204.332992,-166.694992,1000.523437);
				        SetPlayerInterior(playerid, 14);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Didier Sachs");
					    return 1;
				    }
				    case 30:
				    {
				        SetPlayerPos(playerid, 207.054992,-138.804992,1003.507812);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Prolaps");
					    return 1;
				    }
				    case 31:
				    {
				        SetPlayerPos(playerid, 203.777999,-48.492397,1001.804687);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Suburban");
					    return 1;
				    }
				    case 32:
				    {
				        SetPlayerPos(playerid, 226.293991,-7.431529,1002.210937);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Victim");
					    return 1;
				    }
				    case 33:
				    {
				        SetPlayerPos(playerid, 161.391006,-93.159156,1001.804687);
				        SetPlayerInterior(playerid, 18);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}ZIP");
					    return 1;
				    }
				    case 34:
				    {
				        SetPlayerPos(playerid, 493.390991,-22.722799,1000.679687);
				        SetPlayerInterior(playerid, 17);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Alhambra");
					    return 1;
				    }
				    case 35:
				    {
				        SetPlayerPos(playerid, 501.980987,-69.150199,998.757812);
				        SetPlayerInterior(playerid, 11);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ten Green Bottles");
					    return 1;
				    }
				    case 36:
				    {
				        SetPlayerPos(playerid, -227.027999,1401.229980,27.765625);
				        SetPlayerInterior(playerid, 18);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Lil' Probe Inn");
					    return 1;
				    }
				    case 37:
				    {
				        SetPlayerPos(playerid, 457.304748,-88.428497,999.554687);
				        SetPlayerInterior(playerid, 4);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Jay's Dinner");
					    return 1;
				    }
				    case 38:
				    {
				        SetPlayerPos(playerid, 454.973937,-110.104995,1000.077209);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Gant Bridge Dinner");
					    return 1;
				    }
				    case 39:
				    {
				        SetPlayerPos(playerid, 435.271331,-80.958938,999.554687);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Secret Valley Dinner");
					    return 1;
				    }
				    case 40:
				    {
				        SetPlayerPos(playerid, 452.489990,-18.179698,1001.132812);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}World of Coq");
					    return 1;
				    }
				    case 41:
				    {
				        SetPlayerPos(playerid, 681.557861,-455.680053,-25.609874);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Welcome Pump");
					    return 1;
				    }
				    case 42:
				    {
				        SetPlayerPos(playerid, 375.962463,-65.816848,1001.507812);
				        SetPlayerInterior(playerid, 10);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Burger Shot");
					    return 1;
				    }
				    case 43:
				    {
				        SetPlayerPos(playerid, 369.579528,-4.487294,1001.858886);
				        SetPlayerInterior(playerid, 9);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Cluckin' Bell");
					    return 1;
				    }
				    case 44:
				    {
				        SetPlayerPos(playerid, 373.825653,-117.270904,1001.499511);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Well Stacked Pizza");
					    return 1;
				    }
				    case 45:
				    {
				        SetPlayerPos(playerid, 381.169189,-188.803024,1000.632812);
				        SetPlayerInterior(playerid, 17);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Jimmy's Sticky Ring");
					    return 1;
				    }
				    case 46:
				    {
				        SetPlayerPos(playerid, 244.411987,305.032989,999.148437);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Denise Room");
					    return 1;
				    }
				    case 47:
				    {
				        SetPlayerPos(playerid, 271.884979,306.631988,999.148437);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Katie Room");
					    return 1;
				    }
				    case 48:
				    {
				        SetPlayerPos(playerid, 291.282989,310.031982,999.148437);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Helena Room");
					    return 1;
				    }
				    case 49:
				    {
				        SetPlayerPos(playerid, 302.180999,300.722991,999.148437);
				        SetPlayerInterior(playerid, 4);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Michelle Room");
					    return 1;
				    }
				    case 50:
				    {
				        SetPlayerPos(playerid, 322.197998,302.497985,999.148437);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Barbara Room");
					    return 1;
				    }
				    case 51:
				    {
				        SetPlayerPos(playerid, 346.870025,309.259033,999.155700);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Millie Room");
					    return 1;
				    }
				    case 52:
				    {
				        SetPlayerPos(playerid, -959.564392,1848.576782,9.000000);
				        SetPlayerInterior(playerid, 17);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Sherman Dam");
					    return 1;
				    }
				    case 53:
				    {
				        SetPlayerPos(playerid, 384.808624,173.804992,1008.382812);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Planning Dept.");
					    return 1;
				    }
				    case 54:
				    {
				        SetPlayerPos(playerid, 223.431976,1872.400268,13.734375);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Area 51");
					    return 1;
				    }
				    case 55:
				    {
				        SetPlayerPos(playerid, 772.111999,-3.898649,1000.728820);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LS Gym");
					    return 1;
				    }
				    case 56:
				    {
				        SetPlayerPos(playerid, 774.213989,-48.924297,1000.585937);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}SF Gym");
					    return 1;
				    }
				    case 57:
				    {
				        SetPlayerPos(playerid, 773.579956,-77.096694,1000.655029);
				        SetPlayerInterior(playerid, 7);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LV Gym");
					    return 1;
				    }
				    case 58:
				    {
				        SetPlayerPos(playerid, 1527.229980,-11.574499,1002.097106);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}B Dup's House");
					    return 1;
				    }
				    case 59:
				    {
				        SetPlayerPos(playerid, 1523.509887,-47.821197,1002.130981);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}B Dup's Crack Pad");
					    return 1;
				    }
				    case 60:
				    {
				        SetPlayerPos(playerid, 2496.049804,-1695.238159,1014.742187);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}CJ's House");
					    return 1;
				    }
				    case 61:
				    {
				        SetPlayerPos(playerid, 1267.663208,-781.323242,1091.906250);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Madd Dogg's Mansion");
					    return 1;
				    }
				    case 62:
				    {
				        SetPlayerPos(playerid, 513.882507,-11.269994,1001.565307);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}OG Loc's House");
					    return 1;
				    }
				    case 63:
				    {
				        SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Ryder's House");
					    return 1;
				    }
				    case 64:
				    {
				        SetPlayerPos(playerid, 2527.654052,-1679.388305,1015.498596);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Sweet's House");
					    return 1;
				    }
				    case 65:
				    {
				        SetPlayerPos(playerid, 2543.462646,-1308.379882,1026.728393);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Crack Factory");
					    return 1;
				    }
				    case 66:
				    {
				        SetPlayerPos(playerid, 1212.019897,-28.663099,1000.953125);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Big Spread Ranch");
					    return 1;
				    }
				    case 67:
				    {
				        SetPlayerPos(playerid, 761.412963,1440.191650,1102.703125);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Fanny Batters");
					    return 1;
				    }
				    case 68:
				    {
				        SetPlayerPos(playerid, 1204.809936,-11.586799,1000.921875);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Strip Club");
					    return 1;
				    }
				    case 69:
				    {
				        SetPlayerPos(playerid, 1204.809936,13.897239,1000.921875);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Strip Club Private Room");
					    return 1;
				    }
				    case 70:
				    {
				        SetPlayerPos(playerid, 942.171997,-16.542755,1000.929687);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Unnamed Brothel");
					    return 1;
				    }
				    case 71:
				    {
				        SetPlayerPos(playerid, 964.106994,-53.205497,1001.124572);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Tiger Skin Brothel");
					    return 1;
				    }
				    case 72:
				    {
				        SetPlayerPos(playerid, -2640.762939,1406.682006,906.460937);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Pleasure Domes");
					    return 1;
				    }
				    case 73:
				    {
				        SetPlayerPos(playerid, -729.276000,503.086944,1371.971801);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Liberty City Outside");
					    return 1;
				    }
				    case 74:
				    {
				        SetPlayerPos(playerid, -794.806396,497.738037,1376.195312);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Liberty City Inside");
					    return 1;
				    }
				    case 75:
				    {
				        SetPlayerPos(playerid, 	2350.339843,-1181.649902,1027.976562);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Gang House");
					    return 1;
				    }
				    case 76:
				    {
				        SetPlayerPos(playerid, 2807.619873,-1171.899902,1025.570312);
				        SetPlayerInterior(playerid, 8);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Colonel Furhberger's House");
					    return 1;
				    }
				    case 77:
				    {
				        SetPlayerPos(playerid, 18.564971,1118.209960,1083.882812);
				        SetPlayerInterior(playerid, 5);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Crack Den");
					    return 1;
				    }
				    case 78:
				    {
				        SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Warehouse 1");
					    return 1;
				    }
				    case 79:
				    {
				        SetPlayerPos(playerid, 1302.519897,-1.787510,1001.028259);
				        SetPlayerInterior(playerid, 18);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Warehouse 2");
					    return 1;
				    }
				    case 80:
				    {
				        SetPlayerPos(playerid, 2522.000000,-1673.383911,14.866223);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Sweet's Garage");
					    return 1;
				    }
				    case 81:
				    {
				        SetPlayerPos(playerid, -221.059051,1408.984008,27.773437);
				        SetPlayerInterior(playerid, 18);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Lil' Probe Inn Toilet");
					    return 1;
				    }
				    case 82:
				    {
				        SetPlayerPos(playerid, 2324.419921,-1145.568359,1050.710083);
				        SetPlayerInterior(playerid, 12);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Unused Safe House");
					    return 1;
				    }
				    case 83:
				    {
				        SetPlayerPos(playerid, -975.975708,1060.983032,1345.671875);
				        SetPlayerInterior(playerid, 10);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}RC Battlefield");
					    return 1;
				    }
				    case 84:
				    {
				        SetPlayerPos(playerid, 411.625976,-21.433298,1001.804687);
				        SetPlayerInterior(playerid, 2);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Barber 1");
					    return 1;
				    }
				    case 85:
				    {
				        SetPlayerPos(playerid, 418.652984,-82.639793,1001.804687);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Barber 2");
					    return 1;
				    }
				    case 86:
				    {
				        SetPlayerPos(playerid, 412.021972,-52.649898,1001.898437);
				        SetPlayerInterior(playerid, 12);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Barber 3");
					    return 1;
				    }
				    case 87:
				    {
				        SetPlayerPos(playerid, -204.439987,-26.453998,1002.273437);
				        SetPlayerInterior(playerid, 16);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Tatoo Parlour 1");
					    return 1;
				    }
				    case 88:
				    {
				        SetPlayerPos(playerid, -204.439987,-8.469599,1002.273437);
				        SetPlayerInterior(playerid, 17);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Tatoo Parlour 2");
					    return 1;
				    }
				    case 89:
				    {
				        SetPlayerPos(playerid, -204.439987,-43.652496,1002.273437);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Tatoo Parlour 3");
					    return 1;
				    }
				    case 90:
				    {
				        SetPlayerPos(playerid, 246.783996,63.900199,1003.640625);
				        SetPlayerInterior(playerid, 6);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LS Police HQ");
					    return 1;
				    }
				    case 91:
				    {
				        SetPlayerPos(playerid, 246.375991,109.245994,1003.218750);
				        SetPlayerInterior(playerid, 10);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}SF police HQ");
					    return 1;
				    }
				    case 92:
				    {
				        SetPlayerPos(playerid, 288.745971,169.350997,1007.171875);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LV police HQ");
					    return 1;
				    }
				    case 93:
				    {
				        SetPlayerPos(playerid, -2029.798339,-106.675910,1035.171875);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Car School");
					    return 1;
				    }
				    case 94:
				    {
				        SetPlayerPos(playerid, -1398.065307,-217.028900,1051.115844);
				        SetPlayerInterior(playerid, 7);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}8-Track");
					    return 1;
				    }
				    case 95:
				    {
				        SetPlayerPos(playerid, -1398.103515,937.631164,1036.479125);
				        SetPlayerInterior(playerid, 15);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Bloodbowl");
					    return 1;
				    }
				    case 96:
				    {
				        SetPlayerPos(playerid, -1444.645507,-664.526000,1053.572998);
				        SetPlayerInterior(playerid, 4);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Dirt Track");
					    return 1;
				    }
				    case 97:
				    {
				        SetPlayerPos(playerid, -1465.268676,1557.868286,1052.531250);
				        SetPlayerInterior(playerid, 14);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Kickstart");
					    return 1;
				    }
				    case 98:
				    {
				        SetPlayerPos(playerid, -1401.829956,107.051300,1032.273437);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Vice Stadium");
					    return 1;
				    }
				    case 99:
				    {
				        SetPlayerPos(playerid, -1790.378295,1436.949829,7.187500);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}SF Garage");
					    return 1;
				    }
				    case 100:
				    {
				        SetPlayerPos(playerid, 1643.839843,-1514.819580,13.566620);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LS Garage");
					    return 1;
				    }
				    case 101:
				    {
				        SetPlayerPos(playerid, -1685.636474,1035.476196,45.210937);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}SF Bomb Shop");
					    return 1;
				    }
				    case 102:
				    {
				        SetPlayerPos(playerid, 76.632553,-301.156829,1.578125);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Blueberry Warehouse");
					    return 1;
				    }
				    case 103:
				    {
				        SetPlayerPos(playerid, 1059.895996,2081.685791,10.820312);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LV Warehouse 1");
					    return 1;
				    }
				    case 104:
				    {
				        SetPlayerPos(playerid, 1059.180175,2148.938720,10.820312);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LV Warehouse 2");
					    return 1;
				    }
				    case 105:
				    {
				        SetPlayerPos(playerid, 2131.507812,1600.818481,1008.359375);
				        SetPlayerInterior(playerid, 1);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Catigula's Hidden Room");
					    return 1;
				    }
				    case 106:
				    {
				        SetPlayerPos(playerid, 2315.952880,-1.618174,26.742187);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Bank");
					    return 1;
				    }
				    case 107:
				    {
				        SetPlayerPos(playerid, 2319.714843,-14.838361,26.749565);
				        SetPlayerInterior(playerid, 0);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Bank - Behind Desk");
					    return 1;
				    }
				    case 108:
				    {
				        SetPlayerPos(playerid, 1710.433715,-1669.379272,20.225049);
				        SetPlayerInterior(playerid, 18);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}LS Atruim");
					    return 1;
				    }
				    case 109:
				    {
				        SetPlayerPos(playerid, 1494.325195,1304.942871,1093.289062);
				        SetPlayerInterior(playerid, 3);
				        //SendClientMessage(playerid, 0xFF0000FF, "Or{FFFFFF}Teles: {B4B5B7}You have been teleported to {0099FF}Bike School");
					    return 1;
				    }
				    case 110:
				    {
				        soOlusturucu(playerid);
				        SetPlayerPos(playerid, GetPVarFloat(playerid, "s_x"), GetPVarFloat(playerid, "s_y"), GetPVarFloat(playerid, "s_z"));
				        SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "s_a"));
				        SetPlayerInterior(playerid, GetPVarInt(playerid, "s_i"));
				        SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "s_w"));
				        SetCameraBehindPlayer(playerid);
				    }
				}
			}
	    }
		case DIALOG_SOYGUNISIM:
		{
		    if(!response)
			{
			    if(GetPVarInt(playerid, "sInteriorsuz") == 1)
			    {
			        soOlusturucu2(playerid);
			        DeletePVar(playerid, "sInteriorsuz");
			        return 1;
				}
				soOlusturucu(playerid);
			}
		    if(response)
		    {
		        if(GetPVarInt(playerid, "sInteriorsuz") == 1)
		        {
         			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_SOYGUNISIM, DIALOG_STYLE_INPUT, ""dialogIsim": Soygun Ismi", "Ekraný boþ býrakma !\n\nSoygun Mekanýnýn Ýsmini Girin", "Gir", "Geri");
			        format(SoygunOIslem[playerid][soygunIsim], MAX_SOYGUN_ISIM, inputtext);
			        SendClientMessage(playerid, -1, "Soygun Ismi Ayarlandý.");
					soOlusturucu2(playerid);
					SoygunOIslem[playerid][sDurum] = true;
					DeletePVar(playerid, "sInteriorsuz");
		            return 1;
				}
      			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_SOYGUNISIM, DIALOG_STYLE_INPUT, ""dialogIsim": Soygun Ismi", "Ekraný boþ býrakma !\n\nSoygun Mekanýnýn Ýsmini Girin", "Gir", "Geri");
		        format(SoygunOIslem[playerid][soygunIsim], MAX_SOYGUN_ISIM, inputtext);
		        SendClientMessage(playerid, -1, "Soygun Ismi Ayarlandý.");
				soOlusturucu(playerid);
				SoygunOIslem[playerid][sDurum] = true;
		    }
		}
	    case DIALOG_BANKA:
	    {
	        if(response)
	        {
				switch(listitem)
				{
				    case 0: bankaReloaded(playerid);
				    case 1: bankaReloaded(playerid);
				    case 2: ShowPlayerDialog(playerid, DIALOG_PYATIR, DIALOG_STYLE_INPUT, "Banka -> Para Yatýrma", "Bankaya yatýracaðýnýz para miktarýný girin.", "Yatýr", "Geri");
				    case 3: ShowPlayerDialog(playerid, DIALOG_PCEK, DIALOG_STYLE_INPUT, "Banka -> Para Çekme", "Bankadan çekeceðiniz para miktarýný girin.", "Çek", "Geri");
				    case 4: ShowPlayerDialog(playerid, DIALOG_B_PGONDER, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Para göndereceðiniz oyuncunun ID numarasýný girin.", "Devam", "Geri");
				    case 5: ShowPlayerDialog(playerid, DIALOG_B_OPGONDER, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Para göndereceðiniz oyuncunun ismini girin.", "Devam", "Geri");
				}
	        }
	    }
	    case DIALOG_B_OPGONDER:
	    {
	        if(!response) return bankaReloaded(playerid);
	        if(response)
	        {
	            new nTemp[24], query[80], Cache: Verii;
	            format(nTemp, MAX_PLAYER_NAME, getName(playerid));
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Ekraný boþ býrakmayýn !\n\nPara göndereceðiniz oyuncunun ismini girin.", "Devam", "Geri");
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    inputtext[i] = tolower(inputtext[i]);
				    if(i < strlen(nTemp))
				    {
                    	nTemp[i] = tolower(nTemp[i]);
					}
				}
				if(strcmp(inputtext, nTemp, false) == 0) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Kendini seçemezsin !\n\nPara göndereceðiniz oyuncunun ismini girin.", "Devam", "Geri");
                if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Oyuncu isminde izinli olmayan karakter bulundu !\n\nPara göndereceðiniz oyuncunun ismini girin.", "Devam", "Geri");
				mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", inputtext);
				Verii = mysql_query(g_SQL, query);
			   	new rows = cache_num_rows();
				if(rows)
				{
				    new id;
				    cache_get_value_name_int(0, "id", id);
				    SetPVarInt(playerid, "offlineBankaID", id);
				    ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Oyuncuya göndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				}
				if(!rows)
				{
				    ShowPlayerDialog(playerid, DIALOG_B_OPGONDER, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Böyle bir oyuncu yok !\n\nPara göndereceðiniz oyuncunun ismini girin.", "Devam", "Geri");
				}
				cache_delete(Verii);
			}
	    }
	    case DIALOG_B_OPGONDER2:
	    {
	        if(!response) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Para göndereceðiniz oyuncunun ismini girin.", "Devam", "Geri");
	        if(response)
	        {
	            new bool: gSonuc = false, query[135], id = GetPVarInt(playerid, "offlineBankaID"), bMsj[106], Cache: Verii;
         		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Ekraný boþ býrakmayýn !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				for(new i = 0; i < strlen(inputtext); i++)
				{
				    if(inputtext[i] == '+' || inputtext[i] == '-' || inputtext[i] == '*' || inputtext[i] == '/' || inputtext[i] == '%')
				    {
				        gSonuc = true;
				        break;
				    }
				}
				if(gSonuc == true) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Para miktarýnda geçerli olmayan karakterler bulundu !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
 				if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Para miktarýnda geçerli olmayan karakterler bulundu !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				new _para = strval(inputtext);
                if(strlen(inputtext) < 1 || strlen(inputtext) > 7) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Para yatýrma uzunluðu 1, 7 arasý olabilir.\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				if(_para <= 0) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Geçersiz para miktarý girdiniz !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				if(_para > ParaKorumasi[playerid]) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Üstünüzdeki para girdiðiniz miktarý karþýlamýyor !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				if(_para > 1000000) return ShowPlayerDialog(playerid, DIALOG_B_OPGONDER2, DIALOG_STYLE_INPUT, "Banka -> Offline Para Gönder", "Göndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Yatýr", "Geri");
				pParaver(playerid, -_para);
    			mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `id` = '%d' LIMIT 1", id);
				Verii = mysql_query(g_SQL, query);
			   	new rows = cache_num_rows();
				if(rows)
				{
				    new IsimCheck[24];
				    cache_get_value_name(0, "isim", IsimCheck);
					mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `BankaPara` = BankaPara + %d WHERE `id` = '%d' LIMIT 1", _para, id);
					mysql_query(g_SQL, query);
					format(bMsj, sizeof(bMsj), "Banka: {ffffff}%s adlý oyuncuya offline $%s dolar havale yaptýnýz.", IsimCheck, convertNumber(_para));
                    SendClientMessage(playerid, 0x3498DBFF, bMsj);
				}
				cache_delete(Verii);
	        }
	    }
	    case DIALOG_B_PGONDER:
	    {
	        if(!response) return bankaReloaded(playerid);
	        if(response)
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Ekraný boþ býrakmayýn !\n\nPara göndereceðiniz oyuncunun ID numarasýný girin.", "Devam", "Geri");
				new id = strval(inputtext);
				if(!IsPlayerConnected(id)) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Böyle bir ID yok !\n\nPara göndereceðiniz oyuncunun ID numarasýný girin.", "Devam", "Geri");
				if(playerid == id) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Kendini seçemezsin\n\nPara göndereceðiniz oyuncunun ID numarasýný girin.", "Devam", "Geri");
                if(KarakterEkraninda[id]) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Bu oyuncu hesabýna giriþ yapmamýþ !\n\nPara göndereceðiniz oyuncunun ID numarasýný girin.", "Devam", "Geri");
				SetPVarInt(playerid, "BankaParaID", id);
				ShowPlayerDialog(playerid, DIALOG_B_PGONDER2, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Göndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Gönder", "Geri");
	        }
	    }
		case DIALOG_B_PGONDER2:
	    {
	        if(!response) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Para göndereceðiniz oyuncunun ID numarasýný girin.", "Devam", "Geri");
	        if(response)
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER2, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Ekraný boþ býrakmayýn !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Devam", "Geri");
				new _para = strval(inputtext), id = GetPVarInt(playerid, "BankaParaID");
				if(!IsPlayerConnected(id)) return hataMesaji(playerid, "Para göndereceðiniz oyuncu sunucudan çýkmýþ !"), SetPVarInt(playerid, "BankaParaID", INVALID_PLAYER_ID);
                if(strlen(inputtext) < 1 || strlen(inputtext) > 7) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER2, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Para yatýrma uzunluðu en düþük 1 en fazla 7 olabilir !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Devam", "Geri");
				if(_para <= 0) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER2, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Geçersiz para miktarý girdiniz !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Devam", "Geri");
				if(_para > ParaKorumasi[playerid]) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER2, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Üstünüzdeki para girdiðiniz miktarý karþýlamýyor !\n\nGöndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Devam", "Geri");
				if(_para > 1000000) return ShowPlayerDialog(playerid, DIALOG_B_PGONDER2, DIALOG_STYLE_INPUT, "Banka -> Para Gönder", "Göndereceðiniz miktarý girin.\nMaksimum: $1,000,000 dolar gönderebilirsin.", "Devam", "Geri");
				pParaver(playerid, -_para);
                pParaver(id, _para);
                new b_ver[95 + 11 + 24 + 3];
				format(b_ver, sizeof(b_ver), "{3498db}Banka: {ffffff}%s(%d), adlý oyuncuya $%s dolar para gönderdiniz.", getName(id), id, convertNumber(_para));
                SendClientMessage(playerid, -1, b_ver);
                format(b_ver, sizeof(b_ver), "{3498db}Transfer: {ffffff}%s(%d), adlý oyuncu banka üzerinden size $%s dolar para gönderdi.", getName(playerid), playerid, convertNumber(_para));
                SendClientMessage(id, -1, b_ver);
                SetPVarInt(playerid, "BankaParaID", INVALID_PLAYER_ID);
			}
	    }
	    case DIALOG_PYATIR:
	    {
	        if(!response) return bankaReloaded(playerid);
	        if(response)
	        {
	            if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_PYATIR, DIALOG_STYLE_INPUT, "Banka -> Para Yatýrma", "Ekraný boþ býrakmayýn.\nBankaya yatýracaðýnýz para miktarýný girin.", "Yatýr", "Geri");
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_PYATIR, DIALOG_STYLE_INPUT, "Banka -> Para Yatýrma", "Ekraný boþ býrakmayýn.\nBankaya yatýracaðýnýz para miktarýný girin.", "Yatýr", "Geri");
                if(strlen(inputtext) < 1 || strlen(inputtext) > 11) return ShowPlayerDialog(playerid, DIALOG_PYATIR, DIALOG_STYLE_INPUT, "Banka -> Para Yatýrma", "Uzunluk aralýðý en düþük 1 en fazla 7 olabilir.\nBankaya yatýracaðýnýz para miktarýný girin.", "Yatýr", "Geri");
				new np = strval(inputtext);
				if(np <= 0) return ShowPlayerDialog(playerid, DIALOG_PYATIR, DIALOG_STYLE_INPUT, "Banka -> Para Yatýrma", "0 veya daha eksik bir deðer girdiniz.\nBankaya yatýracaðýnýz para miktarýný girin.", "Yatýr", "Geri");
				if(np > ParaKorumasi[playerid]) return ShowPlayerDialog(playerid, DIALOG_PYATIR, DIALOG_STYLE_INPUT, "Banka -> Para Yatýrma", "Paranýn üstünde bir miktar girdin.\nBankaya yatýracaðýnýz para miktarýný girin.", "Yatýr", "Geri");
				oyuncuData[playerid][pBankaPara] += np;
				pParaver(playerid, -np);
				new query[75 + 24 + 11];
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `BankaPara` = '%d' WHERE `id` = '%d' LIMIT 1", oyuncuData[playerid][pBankaPara], oyuncuData[playerid][xID]);
				mysql_tquery(g_SQL, query);
				ParaLogu(playerid, 2, "", np);
				format(query, sizeof(query), "[BANKA] {FFFFFF}Hesabýnýza $%s dolar yatýrdýnýz.", convertNumber(np));
				SendClientMessage(playerid, 0xF62459FF, query);
				bankaReloaded(playerid);
	        }
	    }
		case DIALOG_PCEK:
		{
		    if(!response) return bankaReloaded(playerid);
      		if(response)
	        {
	            if(AntiInject(inputtext)) return ShowPlayerDialog(playerid, DIALOG_PCEK, DIALOG_STYLE_INPUT, "Banka -> Para Çekme", "Ekraný boþ býrakmayýn.\nBankadan çekeceðiniz para miktarýný girin.", "Çek", "Geri");
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_PCEK, DIALOG_STYLE_INPUT, "Banka -> Para Çekme", "Ekraný boþ býrakmayýn.\nBankadan çekeceðiniz para miktarýný girin.", "Çek", "Geri");
                if(strlen(inputtext) < 1 || strlen(inputtext) > 11) return ShowPlayerDialog(playerid, DIALOG_PCEK, DIALOG_STYLE_INPUT, "Banka -> Para Çekme", "Uzunluk aralýðý en düþük 1 en fazla 7 olabilir.\nBankadan çekeceðiniz para miktarýný girin.", "Çek", "Geri");
				new np = strval(inputtext);
				if(np <= 0) return ShowPlayerDialog(playerid, DIALOG_PCEK, DIALOG_STYLE_INPUT, "Banka -> Para Çekme", "0 veya daha eksik bir deðer girdiniz.\nBankadan çekeceðiniz para miktarýný girin.", "Çek", "Geri");
				if(np > oyuncuData[playerid][pBankaPara]) return ShowPlayerDialog(playerid, DIALOG_PCEK, DIALOG_STYLE_INPUT, "Banka -> Para Çekme", "Bankanýzda bu kadar para yok.\nBankadan çekeceðiniz para miktarýný girin.", "Çek", "Geri");
				oyuncuData[playerid][pBankaPara] -= np;
				pParaver(playerid, np);
				new query[75 + 24 + 11];
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `BankaPara` = '%d' WHERE `id` = '%d' LIMIT 1", oyuncuData[playerid][pBankaPara], oyuncuData[playerid][xID]);
				mysql_tquery(g_SQL, query);
				ParaLogu(playerid, 1, "", np);
				format(query, sizeof(query), "[BANKA] {FFFFFF}Hesabýnýzdan $%s dolar çektiniz.", convertNumber(np));
				SendClientMessage(playerid, 0xF62459FF, query);
				bankaReloaded(playerid);
	        }
		}
	    case DIALOG_BOMBA:
	    {
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(ParaKorumasi[playerid] < 20000) return hataMesaji(playerid, "Bu bomba paketini almak için $20,000 dolarýn olmasý lazým.");
				        Bombam[playerid] += 5;
						pParaver(playerid, -20000);
						SendClientMessage(playerid, -1, "{FF2457}Bombacý: -> {FFFFFF}Bomba paketi satýn alýndý. Hesabýnýzdan $-20,000 dolar kesildi. Öldüðün zaman bombalarýn gider, unutma !");
				    }
				    case 1:
				    {
        				if(ParaKorumasi[playerid] < 40000) return hataMesaji(playerid, "Bu bomba paketini almak için $40,000 dolarýn olmasý lazým.");
				        Bombam[playerid] += 10;
						pParaver(playerid, -40000);
						SendClientMessage(playerid, -1, "{FF2457}Bombacý: -> {FFFFFF}Bomba paketi satýn alýndý. Hesabýnýzdan $-40,000 dolar kesildi. Öldüðün zaman bombalarýn gider, unutma !");
				    }
				    case 2:
				    {
    					if(ParaKorumasi[playerid] < 60000) return hataMesaji(playerid, "Bu bomba paketini almak için $60,000 dolarýn olmasý lazým.");
				        Bombam[playerid] += 15;
						pParaver(playerid, -60000);
						SendClientMessage(playerid, -1, "{FF2457}Bombacý: -> {FFFFFF}Bomba paketi satýn alýndý. Hesabýnýzdan $-60,000 dolar kesildi. Öldüðün zaman bombalarýn gider, unutma !");
				    }
				    case 3:
				    {
       					if(ParaKorumasi[playerid] < 80000) return hataMesaji(playerid, "Bu bomba paketini almak için $80,000 dolarýn olmasý lazým. Öldüðün zaman bombalarýn gider, unutma !");
				        Bombam[playerid] += 20;
						pParaver(playerid, -80000);
						SendClientMessage(playerid, -1, "{FF2457}Bombacý: -> {FFFFFF}Bomba paketi satýn alýndý. Hesabýnýzdan $-80,000 dolar kesildi. Öldüðün zaman bombalarýn gider, unutma !");
				    }
				}
			}
	    }
	    case DIALOG_POLIS:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	            	case 0:
	            	{
						if(gTeam[playerid] == POLIS) return hataMesaji(playerid, "Zaten Polis mesleðindesin, ayrýlmak istiyorsan dialogdan polis mesleðinden ayrýl seç !");
						new ba[75];format(ba, sizeof(ba), "Polis mesleðine katýlmak için %d skora ihtiyacýn var.", Polis_Skor);
						if(GetPlayerScore(playerid) < Polis_Skor) return hataMesaji(playerid, ba);
						if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Polis mesleðine katýlmak için aranma seviyen olmamasý lazým.");
      					if(BasariIslem[playerid][ilkPolis] == 0){
						BasariIslem[playerid][ilkPolis] = 1;
						basariKilidi(playerid, "ilkPolis", "Ýlk Polis", 5000, 100, 1);
						}
						if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
						gTeam[playerid] = POLIS;
						SetPVarInt(playerid, "Secim_", 1);
						SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðindesiniz, çýkan ekranda karakterinizi seçiniz.");
						SetTimerEx("PolisSkinReload", GetPlayerPing(playerid) + 20, false, "d", playerid);
						SetPlayerColor(playerid, POLIS_RENK);
						ResetPlayerWeapons(playerid);
						Silahver(playerid, 3, 1000);
						Silahver(playerid, 24, 1000);
						Silahver(playerid, 25, 1000);
						Silahver(playerid, 29, 1000);
						Silahver(playerid, 31, 1000);
						K_omutlar(playerid);
						SetPlayerTeam(playerid, UST_MESLEK);
	            	}
	            	case 1: // karakter deðiþtir
	            	{
	            	    if(gTeam[playerid] != POLIS) return hataMesaji(playerid, "Polis mesleðinde deðilsiniz. Önce polis olun !");
                        SetPVarInt(playerid, "Secim_", 1);
						SetTimerEx("PolisSkinReload", GetPlayerPing(playerid) + 20, false, "d", playerid);
	            	}
	            	case 2: // meslekten ayrýl
	            	{
	            	    if(gTeam[playerid] == SIVIL) return hataMesaji(playerid, "Zaten meslekten ayrýlmýþssýn.");
	            	    if(e_oIslem[playerid][e_Id] != -1) { cmd_eayril(playerid, ""); }
	                    gTeam[playerid] = SIVIL;
	                    SetPlayerColor(playerid, SIVIL_RENK);
	                    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
	                    ResetPlayerWeapons(playerid);
	                    SetPlayerTeam(playerid, NO_TEAM);
						switch(gTeam[playerid])
						{
						    case POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
							case CEVIK_KUVVET: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_HAREKAT_TIMI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case SIVIL_POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_KUVVET_B: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case TURK_H_KUVVETLERI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðinde çalýþmýyorsunuz.");
						}
					    BarikatDuzenle[playerid] = false;
						for(new i = 0; i < MAX_BARIKAT; i++)
						{
						    if(BarikatIslem[i][barikatDurum] == 0) continue;
						    if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
						    {
						        BarikatIslem[i][barikatDurum] = 0;
						        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
								BarikatIslem[i][barikatPoss][0] = 0.0;
					            BarikatIslem[i][barikatPoss][1] = 0.0;
					            BarikatIslem[i][barikatPoss][2] = 0.0;
					            BarikatIslem[i][barikatPoss][3] = 0.0;
					            BarikatIslem[i][barikatPoss][4] = 0.0;
					            BarikatIslem[i][barikatPoss][5] = 0.0;
					            BarikatIslem[i][barikatSure] = 0;
						        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
						        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
						        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
						        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
						        Iter_Remove(Barikatlar, i);
						    }
						}
						barikatSayi[playerid] = 0;
	            	}
				}
	        }
	    }
	    case DIALOG_SIVILPOLIS:
	    {
	        if(response)
	        {
				switch(listitem)
				{
				    case 0:
				    {
  						if(gTeam[playerid] == SIVIL_POLIS) return hataMesaji(playerid, "Zaten Sivil Polis mesleðindesin.");
                        new ba[75];format(ba, sizeof(ba), "Sivil Polis katýlmak için %d skora ihtiyacýn var.", SivilPolis_Skor);
						if(GetPlayerScore(playerid) < SivilPolis_Skor) return hataMesaji(playerid, ba);
						if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Sivil Polis mesleðine katýlmak için aranma seviyen olmamasý lazým.");
      					if(BasariIslem[playerid][ilksPolis] == 0){
						BasariIslem[playerid][ilksPolis] = 1;
						basariKilidi(playerid, "ilksPolis", "Ýlk Sivil Polis", 5000, 1500, 1);
						}
						if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
						SetPVarInt(playerid, "Secim_", 2);
						gTeam[playerid] = SIVIL_POLIS;
						SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðindesiniz, çýkan ekranda karakterinizi seçiniz.");
						SetTimerEx("PolisSkinReload", GetPlayerPing(playerid) + 20, false, "d", playerid);
						SetPlayerColor(playerid, SIVIL_RENK);
						ResetPlayerWeapons(playerid);
						Silahver(playerid, 3, 1000);
						Silahver(playerid, 24, 1000);
						Silahver(playerid, 25, 1000);
						Silahver(playerid, 29, 1000);
						Silahver(playerid, 31, 1000);
						K_omutlar(playerid);
						SetPlayerTeam(playerid, UST_MESLEK);
				    }
				    case 1:
				    {
   	    				if(gTeam[playerid] != SIVIL_POLIS) return hataMesaji(playerid, "Sivil Polis mesleðinde deðilsiniz. Önce sivil polis olun !");
                        SetPVarInt(playerid, "Secim_", 2);
						SetTimerEx("PolisSkinReload", GetPlayerPing(playerid) + 20, false, "d", playerid);
				    }
				    case 2:
				    {
   	    				if(gTeam[playerid] == SIVIL) return hataMesaji(playerid, "Zaten meslekten ayrýlmýþssýn.");
   	    				if(e_oIslem[playerid][e_Id] != -1) { cmd_eayril(playerid, ""); }
	                    gTeam[playerid] = SIVIL;
	                    SetPlayerColor(playerid, SIVIL_RENK);
	                    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
	                    ResetPlayerWeapons(playerid);
	                    SetPlayerTeam(playerid, NO_TEAM);
						switch(gTeam[playerid])
						{
						    case POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
							case CEVIK_KUVVET: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_HAREKAT_TIMI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case SIVIL_POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_KUVVET_B: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case TURK_H_KUVVETLERI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðinde çalýþmýyorsunuz.");
						}
					    BarikatDuzenle[playerid] = false;
						for(new i = 0; i < MAX_BARIKAT; i++)
						{
						    if(BarikatIslem[i][barikatDurum] == 0) continue;
						    if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
						    {
						        BarikatIslem[i][barikatDurum] = 0;
						        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
								BarikatIslem[i][barikatPoss][0] = 0.0;
					            BarikatIslem[i][barikatPoss][1] = 0.0;
					            BarikatIslem[i][barikatPoss][2] = 0.0;
					            BarikatIslem[i][barikatPoss][3] = 0.0;
					            BarikatIslem[i][barikatPoss][4] = 0.0;
					            BarikatIslem[i][barikatPoss][5] = 0.0;
					            BarikatIslem[i][barikatSure] = 0;
						        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
						        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
						        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
						        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
						        Iter_Remove(Barikatlar, i);
						    }
						}
						barikatSayi[playerid] = 0;
				    }
				}
	        }
	    }
	    case DIALOG_cevikKUVVET:
	    {
     		if(response)
	        {
	        	switch(listitem)
	            {
	            	case 0:
	            	{
						if(gTeam[playerid] == CEVIK_KUVVET) return hataMesaji(playerid, "Zaten Çevik Kuvvet mesleðindesin, ayrýlmak istiyorsan dialogdan mesleðinden ayrýl seç !");
						new ba[75];format(ba, sizeof(ba), "Çevik Kuvvet katýlmak için %d skora ihtiyacýn var.", CevikKuvvet_Skor);
						if(GetPlayerScore(playerid) < CevikKuvvet_Skor) return hataMesaji(playerid, ba);
						if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Çevik Kuvvet mesleðine katýlmak için aranma seviyen olmamasý lazým.");
      					if(BasariIslem[playerid][ilkCevikKuvvet] == 0){
						BasariIslem[playerid][ilkCevikKuvvet] = 1;
						basariKilidi(playerid, "ilkCevikKuvvet", "Ýlk Cevik Kuvvet", 5000, 250, 1);
						}
						if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
						gTeam[playerid] = CEVIK_KUVVET;
						SetPlayerSkin(playerid, 286);
						SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðindesiniz.");
						SetPlayerColor(playerid, POLIS_RENK);
						ResetPlayerWeapons(playerid);
						Silahver(playerid, 3, 1000);
						Silahver(playerid, 24, 1000);
						Silahver(playerid, 25, 1000);
						Silahver(playerid, 29, 1000);
						Silahver(playerid, 31, 1000);
						K_omutlar(playerid);
						SetPlayerTeam(playerid, UST_MESLEK);
	            	}
	            	case 1:
	            	{
						if(gTeam[playerid] == SIVIL) return hataMesaji(playerid, "Zaten meslekten ayrýlmýþssýn.");
						if(e_oIslem[playerid][e_Id] != -1) { cmd_eayril(playerid, ""); }
	                    gTeam[playerid] = SIVIL;
	                    SetPlayerColor(playerid, SIVIL_RENK);
	                    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
	                    ResetPlayerWeapons(playerid);
	                    SetPlayerTeam(playerid, NO_TEAM);
						switch(gTeam[playerid])
						{
						    case POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
							case CEVIK_KUVVET: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_HAREKAT_TIMI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case SIVIL_POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_KUVVET_B: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case TURK_H_KUVVETLERI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðinde çalýþmýyorsunuz.");
						}
					    BarikatDuzenle[playerid] = false;
						for(new i = 0; i < MAX_BARIKAT; i++)
						{
						    if(BarikatIslem[i][barikatDurum] == 0) continue;
						    if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
						    {
						        BarikatIslem[i][barikatDurum] = 0;
						        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
								BarikatIslem[i][barikatPoss][0] = 0.0;
					            BarikatIslem[i][barikatPoss][1] = 0.0;
					            BarikatIslem[i][barikatPoss][2] = 0.0;
					            BarikatIslem[i][barikatPoss][3] = 0.0;
					            BarikatIslem[i][barikatPoss][4] = 0.0;
					            BarikatIslem[i][barikatPoss][5] = 0.0;
					            BarikatIslem[i][barikatSure] = 0;
						        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
						        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
						        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
						        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
						        Iter_Remove(Barikatlar, i);
						    }
						}
						barikatSayi[playerid] = 0;
	            	}
				}
	        }
	    }
	    case DIALOG_OKB:
	    {
     		if(response)
	        {
	        	switch(listitem)
	            {
	            	case 0:
	            	{
						if(gTeam[playerid] == OZEL_KUVVET_B) return hataMesaji(playerid, "Zaten Özel Kuvvet Birliði mesleðindesin, ayrýlmak istiyorsan dialogdan mesleðinden ayrýl seç !");
                        new ba[75];format(ba, sizeof(ba), "Özel Kuvvet katýlmak için %d skora ihtiyacýn var.", OKB_Skor);
						if(GetPlayerScore(playerid) < OKB_Skor) return hataMesaji(playerid, ba);
						if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Özel Kuvvet Birliði mesleðine katýlmak için aranma seviyen olmamasý lazým.");
						if(BasariIslem[playerid][ilkozelK] == 0){
						BasariIslem[playerid][ilkozelK] = 1;
						basariKilidi(playerid, "ilkozelK", "Ýlk Özel Kuvvet", 5000, 2000, 1);
						}
						if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
						gTeam[playerid] = OZEL_KUVVET_B;
						SetPlayerSkin(playerid, 287);
						ResetPlayerWeapons(playerid);
						Silahver(playerid, 3, 1000);
						Silahver(playerid, 24, 1000);
						Silahver(playerid, 26, 1000);
						Silahver(playerid, 28, 1000);
						Silahver(playerid, 31, 1000);
						Silahver(playerid, 34, 1000);
						K_omutlar(playerid);
						SetPlayerTeam(playerid, UST_MESLEK);
						SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðindesiniz.");
	            	}
	            	case 1:
	            	{
						if(gTeam[playerid] == SIVIL) return hataMesaji(playerid, "Zaten meslekten ayrýlmýþssýn.");
						if(e_oIslem[playerid][e_Id] != -1) { cmd_eayril(playerid, ""); }
	                    gTeam[playerid] = SIVIL;
	                    SetPlayerColor(playerid, SIVIL_RENK);
	                    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
	                    ResetPlayerWeapons(playerid);
	                    SetPlayerTeam(playerid, NO_TEAM);
						switch(gTeam[playerid])
						{
						    case POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
							case CEVIK_KUVVET: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_HAREKAT_TIMI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case SIVIL_POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_KUVVET_B: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case TURK_H_KUVVETLERI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðinde çalýþmýyorsunuz.");
						}
					    BarikatDuzenle[playerid] = false;
						for(new i = 0; i < MAX_BARIKAT; i++)
						{
						    if(BarikatIslem[i][barikatDurum] == 0) continue;
						    if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
						    {
						        BarikatIslem[i][barikatDurum] = 0;
						        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
								BarikatIslem[i][barikatPoss][0] = 0.0;
					            BarikatIslem[i][barikatPoss][1] = 0.0;
					            BarikatIslem[i][barikatPoss][2] = 0.0;
					            BarikatIslem[i][barikatPoss][3] = 0.0;
					            BarikatIslem[i][barikatPoss][4] = 0.0;
					            BarikatIslem[i][barikatPoss][5] = 0.0;
					            BarikatIslem[i][barikatSure] = 0;
						        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
						        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
						        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
						        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
						        Iter_Remove(Barikatlar, i);
						    }
						}
						barikatSayi[playerid] = 0;
	            	}
				}
	        }
	    }
	    case DIALOG_OHAREKAT:
	    {
			if(response)
	        {
	        	switch(listitem)
	            {
	            	case 0:
	            	{
						if(gTeam[playerid] == OZEL_HAREKAT_TIMI) return hataMesaji(playerid, "Zaten Özel Harekat mesleðindesin, ayrýlmak istiyorsan dialogdan mesleðinden ayrýl seç !");
                        new ba[75];format(ba, sizeof(ba), "Özel Harekat katýlmak için %d skora ihtiyacýn var.", OHAREKAT_Skor);
						if(GetPlayerScore(playerid) < OHAREKAT_Skor) return hataMesaji(playerid, ba);
						if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Özel Harekat mesleðine katýlmak için aranma seviyen olmamasý lazým.");
      					if(BasariIslem[playerid][ilkOzelHarekat] == 0){
						BasariIslem[playerid][ilkOzelHarekat] = 1;
						basariKilidi(playerid, "ilkOzelHarekat", "Ýlk Özel Harekat", 5000, 500, 1);
						}
						if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
						gTeam[playerid] = OZEL_HAREKAT_TIMI;
						SetPlayerSkin(playerid, 285);
						SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðindesiniz.");
      					SetPVarInt(playerid, "MitKomut", 1);
						ResetPlayerWeapons(playerid);
						Silahver(playerid, 3, 1000);
						Silahver(playerid, 24, 1000);
						Silahver(playerid, 25, 1000);
						Silahver(playerid, 32, 1000);
						Silahver(playerid, 30, 1000);
						K_omutlar(playerid);
						SetPlayerTeam(playerid, UST_MESLEK);
						SendClientMessage(playerid, -1, "{FD5B03}Özel harekat bölgesindesiniz. Þehire daha kolay ulaþmak için {7CEECE}/Bolgeler {FD5B03}komutunu kullanabilirsiniz.");
	            	}
	            	case 1:
	            	{
						if(gTeam[playerid] == SIVIL) return hataMesaji(playerid, "Zaten meslekten ayrýlmýþssýn.");
						if(e_oIslem[playerid][e_Id] != -1) { cmd_eayril(playerid, ""); }
	                    gTeam[playerid] = SIVIL;
	                    SetPlayerColor(playerid, SIVIL_RENK);
	                    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
	                    ResetPlayerWeapons(playerid);
	                    SetPlayerTeam(playerid, NO_TEAM);
						switch(gTeam[playerid])
						{
						    case POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
							case CEVIK_KUVVET: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_HAREKAT_TIMI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case SIVIL_POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_KUVVET_B: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case TURK_H_KUVVETLERI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðinde çalýþmýyorsunuz.");
						}
						BarikatDuzenle[playerid] = false;
						for(new i = 0; i < MAX_BARIKAT; i++)
						{
							if(BarikatIslem[i][barikatDurum] == 0) continue;
							if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
							{
							    BarikatIslem[i][barikatDurum] = 0;
							    format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
								BarikatIslem[i][barikatPoss][0] = 0.0;
							    BarikatIslem[i][barikatPoss][1] = 0.0;
							    BarikatIslem[i][barikatPoss][2] = 0.0;
							    BarikatIslem[i][barikatPoss][3] = 0.0;
							    BarikatIslem[i][barikatPoss][4] = 0.0;
							    BarikatIslem[i][barikatPoss][5] = 0.0;
							    BarikatIslem[i][barikatSure] = 0;
							    DestroyDynamicObject(BarikatIslem[i][b_objeId]);
							    BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
							    DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
							    BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
							    Iter_Remove(Barikatlar, i);
							}
						}
						barikatSayi[playerid] = 0;
	            	}
				}
	        }
	    }
	    case DIALOG_HAVAKUVVET:
	    {
			if(response)
	        {
	        	switch(listitem)
	            {
	            	case 0:
	            	{
						if(gTeam[playerid] == TURK_H_KUVVETLERI) return hataMesaji(playerid, "Zaten Hava Kuvvetleri mesleðindesin, ayrýlmak istiyorsan dialogdan mesleðinden ayrýl seç !");
                        new ba[75];format(ba, sizeof(ba), "Hava Kuvvetlerine katýlmak için %d skora ihtiyacýn var.", HAVAKUVVET_Skor);
						if(GetPlayerScore(playerid) < HAVAKUVVET_Skor) return hataMesaji(playerid, ba);
						if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Hava Kuvvetleri mesleðine katýlmak için aranma seviyen olmamasý lazým.");
      					if(BasariIslem[playerid][ilkHavaKuvvet] == 0){
						BasariIslem[playerid][ilkHavaKuvvet] = 1;
						basariKilidi(playerid, "ilkHavaKuvvet", "Ýlk Hava Kuvvet", 250000, 3000, 1);
						}
						if(g_oIslem[playerid][g_Id] != -1) { cmd_gayril(playerid, ""); }
						gTeam[playerid] = TURK_H_KUVVETLERI;
						SetPlayerSkin(playerid, 61);
						ResetPlayerWeapons(playerid);
						Silahver(playerid, 3, 1000);
						Silahver(playerid, 24, 1000);
						Silahver(playerid, 26, 1000);
						Silahver(playerid, 28, 1000);
						Silahver(playerid, 31, 1000);
						Silahver(playerid, 34, 1000);
						K_omutlar(playerid);
						SetPlayerTeam(playerid, UST_MESLEK);
						SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðindesiniz.");
	            	}
	            	case 1:
	            	{
						if(gTeam[playerid] == SIVIL) return hataMesaji(playerid, "Zaten meslekten ayrýlmýþssýn.");
						if(e_oIslem[playerid][e_Id] != -1) { cmd_eayril(playerid, ""); }
	                    gTeam[playerid] = SIVIL;
	                    SetPlayerColor(playerid, SIVIL_RENK);
	                    SetPlayerSkin(playerid, GetPVarInt(playerid, "AnaKarakter"));
	                    ResetPlayerWeapons(playerid);
	                    SetPlayerTeam(playerid, NO_TEAM);
						switch(gTeam[playerid])
						{
						    case POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
							case CEVIK_KUVVET: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Çevik Kuvvet {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_HAREKAT_TIMI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Harekat {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case SIVIL_POLIS: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Sivil Polis {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case OZEL_KUVVET_B: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Özel Kuvvet Birliði {FFFFFF}mesleðinde çalýþmýyorsunuz.");
                            case TURK_H_KUVVETLERI: SendClientMessage(playerid, -1, "{E74C3C}Bilgi: {FFFFFF}Artýk {3498DB}Hava Kuvvetleri {FFFFFF}mesleðinde çalýþmýyorsunuz.");
						}
					    BarikatDuzenle[playerid] = false;
						for(new i = 0; i < MAX_BARIKAT; i++)
						{
						    if(BarikatIslem[i][barikatDurum] == 0) continue;
						    if(strcmp(BarikatIslem[i][barikatOlusturan], getName(playerid)) == 0)
						    {
						        BarikatIslem[i][barikatDurum] = 0;
						        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
								BarikatIslem[i][barikatPoss][0] = 0.0;
					            BarikatIslem[i][barikatPoss][1] = 0.0;
					            BarikatIslem[i][barikatPoss][2] = 0.0;
					            BarikatIslem[i][barikatPoss][3] = 0.0;
					            BarikatIslem[i][barikatPoss][4] = 0.0;
					            BarikatIslem[i][barikatPoss][5] = 0.0;
					            BarikatIslem[i][barikatSure] = 0;
						        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
						        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
						        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
						        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
						        Iter_Remove(Barikatlar, i);
						    }
						}
						barikatSayi[playerid] = 0;
	            	}
	            	case 2:
	            	{
	            	    if(gTeam[playerid] != TURK_H_KUVVETLERI) return hataMesaji(playerid, "Hava Kuvvetleri mesleðinde olmadan ýþýnlanamazsýn !");
	            	    TeleportCam(playerid, 1, -1857.585571, 1749.994140, 17.816062, 89.888992);
	            	}
				}
	        }
	    }
	    case DIALOG_OYLAMA:
	    {
	        if(!response)
			{
			    if(!VoteIslem[voteAktiflik]) return SendClientMessage(playerid, -1, "{BDC3C7}» Oylama: {FFFFFF}Oylama bitmiþ.");
				SendClientMessage(playerid, -1, "{BDC3C7}» Oylama: {FFFFFF}Oyunuzu hayýr yönünde kullandýnýz.");
				VoteIslem[oyEksi]++;
			}
			if(response)
			{
			    if(!VoteIslem[voteAktiflik]) return SendClientMessage(playerid, -1, "{BDC3C7}» Oylama: {FFFFFF}Oylama bitmiþ.");
				SendClientMessage(playerid, -1, "{BDC3C7}» Oylama: {FFFFFF}Oyunuzu evet yönünde kullandýnýz.");
				VoteIslem[oyArti]++;
			}
		}
	    case DIALOG_KAYIT:
	    {
	        if (!response) return kayitMenu(playerid, 0);
			if(!(MINIMUM_SIFRE <= strlen(inputtext) <= 20)) return kayitMenu(playerid, 0);
			if(AntiInject(inputtext)) return kayitMenu(playerid, 0);
			for(new i = 0; i < strlen(inputtext); i++)
			{
			    if(inputtext[i] == 'ý' || inputtext[i] == 'ð' || inputtext[i] == 'Ð' || inputtext[i] == 'ü' ||
			    inputtext[i] == 'Ü' || inputtext[i] == 'þ' || inputtext[i] == 'Þ' || inputtext[i] == 'Ý' ||
			    inputtext[i] == 'ö' || inputtext[i] == 'Ö' || inputtext[i] == 'ç' || inputtext[i] == 'Ç')
			    {
			        hataMesaji(playerid, "Þifrenizde ý, ð, Ð, ü, Ü, þ, Þ, Ý, ö, Ö, ç, Ç, gibi harfler kullanmayýn.");
			        kayitMenu(playerid, 0);
			        return 1;
			    }
			}
			for (new i = 0; i < 16; i++) oyuncuData[playerid][SaltSifre][i] = random(94) + 33;
			SHA256_PassHash(inputtext, oyuncuData[playerid][SaltSifre], oyuncuData[playerid][Sifre], 65);
			new fuckYou = gettime(), pro[200];
			oyuncuData[playerid][kayitT] = fuckYou;
			SetPVarInt(playerid, "Spawn_Time_Check", 0);
			SetPVarInt(playerid, "KayitNo", 0);
			new query[650], gIp[16];
			GetPlayerIp(playerid, gIp, sizeof(gIp));
			mysql_format(g_SQL, query, sizeof query, "INSERT INTO `oyuncuveri` (`isim`, `sifre`, `saltsifre`, `orjSifre`, `IpKayit`, `ceteid`, `evid`, `KayitTarih`, `SonGiris`, `forumnick`) VALUES ('%e', '%s', '%e', '%s', '%s', '-1', '-1', '%d', '%d', '%e')", getName(playerid), oyuncuData[playerid][Sifre], oyuncuData[playerid][SaltSifre], inputtext, gIp, fuckYou, fuckYou, getName(playerid));
			mysql_tquery(g_SQL, query, "OnPlayerRegister", "d", playerid);
			mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `basarilar`(`bSahip`) VALUES ('%e')", getName(playerid));
			mysql_tquery(g_SQL, query, "BasariIDim", "d", playerid);
			for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, GirisText[i]);
			for(new i = 0; i < 30; i++) SendClientMessage(playerid, -1, " ");
			format(pro, sizeof(pro), "** Server::Þifre » {FFFFFF}Sunucuya baþarýyla kayýt oldunuz, þifreniz: {FBA746}%s", inputtext);
			SendClientMessage(playerid, 0x6A65D8FF, pro);
	    }
	    case DIALOG_GIRIS:
	    {
     		if (!response) return girisMenu(playerid, 0);
     		if(response)
     		{
     		    if(!(MINIMUM_SIFRE <= strlen(inputtext) <= 30)) return girisMenu(playerid, 0);
				new hashed_pass[65];
				SHA256_PassHash(inputtext, oyuncuData[playerid][SaltSifre], hashed_pass, 65);
				if (strcmp(hashed_pass, oyuncuData[playerid][Sifre]) == 0)
				{
				    if(BotCheck[playerid] == 1)
				    {
						new ba[150];
						format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bot Yazýlýmý kullandýðý için sunucudan kalýcý yasaklandý.", getName(playerid), playerid);
						SendClientMessageToAll(0xE74C3CFF, ba);
						format(ba, sizeof(ba), "%s - Bot Hack", getName(playerid));
						oBanEx(playerid, ba);
				        return 1;
				    }
				    SetPVarInt(playerid, "Spawn_Time_Check", 0);
				    GenelLog(playerid, 13, "", inputtext, 0, 0, 0);
					oyuncuData[playerid][GirisKontrol] = true;
					SendClientMessage(playerid, 0xFFAD1FFF, "Bilgi: {FFFFFF}Hesap verileriniz yüklendi, iyi oyunlar.");
					new query[63 + 24 + 16], gIp[16];
					GetPlayerIp(playerid, gIp, sizeof(gIp));
					mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `IpKayit` = '%s' WHERE `isim` = '%e' LIMIT 1", gIp, getName(playerid));
					mysql_tquery(g_SQL, query);
					new Timestamp = gettime();
					mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `SonGiris` = '%d' WHERE `isim` = '%e' LIMIT 1", Timestamp, getName(playerid));
					mysql_tquery(g_SQL, query);

					mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `basarilar` WHERE `bSahip` = '%e'", getName(playerid));
					mysql_tquery(g_SQL, query, "BasarilarYukle", "ds", playerid, getName(playerid));

					SetPVarInt(playerid, "GirisOnline", 1);
					mysql_format(g_SQL, query, sizeof query, "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", getName(playerid));
					mysql_tquery(g_SQL, query, "OnPlayerDataLoaded", "dd", playerid, g_MysqlRaceCheck[playerid]);

					for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, GirisText[i]);

					//InterpolateCameraPos(playerid, -2145.435058, -1692.756713, 509.305480, -2318.510253, -1633.820678, 488.917694, 2000);
					//InterpolateCameraLookAt(playerid, -2150.381835, -1692.608276, 508.593078, -2322.669433, -1631.049072, 488.777099, 2000);

					//girisEkran[playerid] = 1;
					/*
					if(oyuncuData[playerid][guvenlikSifresi] == 0)
					{
						SetPVarInt(playerid, "GuvenlikSifre", GetTickCount() + GUVENLIKSURE * 1000);
						GuvenlikSiffre(playerid);
					}*/
				}
				else
				{
					oyuncuData[playerid][GirisDenemesi]++;
					if(oyuncuData[playerid][GirisDenemesi] >= 3)
					{
					    for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, GirisText[i]);
						ShowPlayerDialog(playerid, DIALOG_BOS, DIALOG_STYLE_MSGBOX, "Giriþ", "{FFFFFF}Üzgünüz, þifrenizi hatýrlamýyorsanýz lütfen yeni bir hesap açýn.\n", "Kapat", "");
						oKick(playerid);
					}
					else girisMenu(playerid, 1);
				}
			}
	    }
	    default: return 0;
	}
	return 1;
}

forward OnPlayerDataLoaded(playerid, race_check);
public OnPlayerDataLoaded(playerid, race_check)
{
	if (race_check != g_MysqlRaceCheck[playerid]) return Kick(playerid);
	if(cache_num_rows() > 0)
	{
	    if(GetPVarInt(playerid, "GirisOnline") == 1)
	    {
            ResetPlayerMoney(playerid);
            oyuncuData[playerid][pAranma] = 0;
            aranmaSeviyesii[playerid] = 0;
			AssignPlayerData(playerid);
	   		pParaver(playerid, oyuncuData[playerid][pPara]);
			Skorver(playerid, oyuncuData[playerid][pSkor]);
            aranmaLeveli(playerid, oyuncuData[playerid][pAranma]);
            new query[55 + 24];
			mysql_format(g_SQL, query, sizeof query, "SELECT * FROM `ozelarac` WHERE `Sahip` = '%e'", getName(playerid));
			mysql_tquery(g_SQL, query, "OzelAracYukle", "d", playerid);
	        return 1;
		}
		cache_get_value(0, "sifre", oyuncuData[playerid][Sifre], 65);
		cache_get_value(0, "saltsifre", oyuncuData[playerid][SaltSifre], 17);
		
		//new xxxx[7], xss;
        //cache_get_value_name(0, "GSPass", xxxx);
		//cache_get_value_int(0, "GuvenlikLog", xss);
		
		//SetPVarString(playerid, "GuvenlikPass", xxxx);
		//format(oyuncuData[playerid][guvenlikSifresi], MAX_GSifre, xxxx);
		//SetPVarInt(playerid, "KayitYapiyor", 1);
		//oyuncuData[playerid][guvenlikSifresi] = xss;
		
		/*
		new IPKontrol[16];
		cache_get_value(0, "IpKayit", IPKontrol, 16);
		if(oyuncuData[playerid][guvenlikSifresi] == 1)
		{
			if(strcmp(goIP(playerid), IPKontrol, false) != 0)
			{
       		    SetPVarInt(playerid, "Spawn_Time_Login", GetTickCount() + 30 * 1000);
		    	SetPVarInt(playerid, "Spawn_Time_Check", 1);
				GuvenliKontrol[playerid] = true;
				GuveenlikGiriss(playerid);
				return 1;
			}
		}
		*/
		
		if(GetPVarInt(playerid, "BanYemis") == 0)
		{
		    SetPVarInt(playerid, "KayitNo", 0);
		    SetPVarInt(playerid, "Spawn_Time_Login", GetTickCount() + 60 * 1000);
		    SetPVarInt(playerid, "Spawn_Time_Check", 1);
			girisMenu(playerid, 0);
		}
	}
	else
	{
		if(BotCheck[playerid] == 1)
	    {
			new ba[150];
			format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bot Yazýlýmý kullandýðý için sunucudan kalýcý yasaklandý.", getName(playerid), playerid);
			SendClientMessageToAll(0xE74C3CFF, ba);
			format(ba, sizeof(ba), "%s - Bot Hack", getName(playerid));
			oBanEx(playerid, ba);
	        return 1;
	    }
		kayitMenu(playerid, 0);
	}
	return 1;
}

function BasariIDim(playerid)
{
    BasariIslem[playerid][basariSQL] = cache_insert_id();
	return 1;
}

forward BasarilarYukle(playerid, isim[]);
public BasarilarYukle(playerid, isim[])
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
  	    cache_get_value_int(0, "baid", BasariIslem[playerid][basariSQL]);
	   	cache_get_value_int(0, "BasariSayisi", BasariIslem[playerid][BasariSayisi]);
		cache_get_value_int(0, "ilkGiris", BasariIslem[playerid][ilkGiris]);
		cache_get_value_int(0, "ilkMesaj", BasariIslem[playerid][ilkMesaj]);
		cache_get_value_int(0, "ilkOldurme", BasariIslem[playerid][ilkOldurme]);
		cache_get_value_int(0, "ilkSoygun", BasariIslem[playerid][ilkSoygun]);
		cache_get_value_int(0, "ilkPolis", BasariIslem[playerid][ilkPolis]);
		cache_get_value_int(0, "ilkCevikKuvvet", BasariIslem[playerid][ilkCevikKuvvet]);
		cache_get_value_int(0, "ilkOzelHarekat", BasariIslem[playerid][ilkOzelHarekat]);
		cache_get_value_int(0, "ilksPolis", BasariIslem[playerid][ilksPolis]);
		cache_get_value_int(0, "ilkozelK", BasariIslem[playerid][ilkozelK]);
		cache_get_value_int(0, "ilkHavaKuvvet", BasariIslem[playerid][ilkHavaKuvvet]);
		cache_get_value_int(0, "ilkSucluYa", BasariIslem[playerid][ilkSucluYa]);
		cache_get_value_int(0, "ilkEv", BasariIslem[playerid][ilkEv]);
		cache_get_value_int(0, "ilkSafir", BasariIslem[playerid][ilkSafir]);
		cache_get_value_int(0, "ilkYakut", BasariIslem[playerid][ilkYakut]);
		cache_get_value_int(0, "ilkZumrut", BasariIslem[playerid][ilkZumrut]);
		cache_get_value_int(0, "ilkElmas", BasariIslem[playerid][ilkElmas]);
		cache_get_value_int(0, "ilkoYuz", BasariIslem[playerid][ilkoYuz]);
		cache_get_value_int(0, "ilkoBesyuz", BasariIslem[playerid][ilkoBesyuz]);
		cache_get_value_int(0, "ilkoBin", BasariIslem[playerid][ilkoBin]);
		cache_get_value_int(0, "ilkoBesBin", BasariIslem[playerid][ilkoBesBin]);
		cache_get_value_int(0, "ilkoOnBin", BasariIslem[playerid][ilkoOnBin]);
		cache_get_value_int(0, "ilkYuzSoygun", BasariIslem[playerid][ilkYuzSoygun]);
		cache_get_value_int(0, "ilkikiyuzElli", BasariIslem[playerid][ilkikiyuzElli]);
		cache_get_value_int(0, "ilksBesyuz", BasariIslem[playerid][ilksBesyuz]);
		cache_get_value_int(0, "ilksBesbin", BasariIslem[playerid][ilksBesbin]);
		cache_get_value_int(0, "ilksOnBin", BasariIslem[playerid][ilksOnBin]);
		cache_get_value_int(0, "ilkYirmiBinSkor", BasariIslem[playerid][ilkYirmiBinSkor]);
		cache_get_value_int(0, "ilkOtuzBinSkor", BasariIslem[playerid][ilkOtuzBinSkor]);
		cache_get_value_int(0, "ilkDortBinSkor", BasariIslem[playerid][ilkDortBinSkor]);
		cache_get_value_int(0, "ilkElliBinSkor", BasariIslem[playerid][ilkElliBinSkor]);
  	}
	return 1;
}

forward OnPlayerRegister(playerid);
public OnPlayerRegister(playerid)
{
	oyuncuData[playerid][xID] = cache_insert_id();
	SendClientMessage(playerid, 0xFFAD1FFF, "Bilgi: {FFFFFF}Hesabýnýz veritabanýna baþarýyla kayýt edildi, iyi oyunlar.");
	oyuncuData[playerid][GirisKontrol] = true;
	oyuncuData[playerid][_LevelCount] = 1;
	PlayerCete[playerid] = -1;
	//InterpolateCameraPos(playerid, -2145.435058, -1692.756713, 509.305480, -2318.510253, -1633.820678, 488.917694, 2000);
	//InterpolateCameraLookAt(playerid, -2150.381835, -1692.608276, 508.593078, -2322.669433, -1631.049072, 488.777099, 2000);
	//girisEkran[playerid] = 1;
	
	//SetPVarInt(playerid, "GuvenlikSifre", GetTickCount() + GUVENLIKSURE * 1000);
	//GuvenlikSiffre(playerid);
	return 1;
}

AssignPlayerData(playerid)
{
	cache_get_value_int(0, "id", oyuncuData[playerid][xID]);
	cache_get_value_int(0, "oldurme", oyuncuData[playerid][Oldurme]);
	cache_get_value_int(0, "olum", oyuncuData[playerid][Olum]);
	cache_get_value_int(0, "aLevel", oyuncuData[playerid][pAdmin]);
	cache_get_value_int(0, "AdminSure", oyuncuData[playerid][pAdminSure]);
	cache_get_value_int(0, "rLevel", oyuncuData[playerid][pRehber]);
	cache_get_value_int(0, "dLevel", oyuncuData[playerid][pDj]);
	cache_get_value_int(0, "Para", oyuncuData[playerid][pPara]);
	cache_get_value_int(0, "Skor", oyuncuData[playerid][pSkor]);
	cache_get_value_int(0, "AranmaS", oyuncuData[playerid][pAranma]);
	cache_get_value_int(0, "VipL", oyuncuData[playerid][pVip]);
	cache_get_value_int(0, "VipSure", oyuncuData[playerid][pVipSure]);
	cache_get_value_int(0, "BankaPara", oyuncuData[playerid][pBankaPara]);
	cache_get_value_int(0, "BankaPara", oyuncuData[playerid][pBankaPara]);
	cache_get_value_int(0, "HapisSure", oyuncuData[playerid][hapisSure]);
	cache_get_value_int(0, "HapisSureK", oyuncuData[playerid][hSureKayit]);
	cache_get_value_int(0, "KayitTarih", oyuncuData[playerid][kayitT]);
	cache_get_value_int(0, "SoygunS", oyuncuData[playerid][soygunS]);
	cache_get_value_int(0, "OnlineSure", oyuncuData[playerid][onlineSure]);
	cache_get_value_int(0, "ExpLevel", oyuncuData[playerid][_LevelCount]);

 	cache_get_value_int(0, "YetenekPuan", oyuncuData[playerid][YetenekPuan]);
	cache_get_value_int(0, "YetenekCan", oyuncuData[playerid][YetenekCan]);
	cache_get_value_int(0, "YetenekZirh", oyuncuData[playerid][YetenekZirh]);
	cache_get_value_int(0, "YetenekSoygun", oyuncuData[playerid][YetenekSoygun]);
	cache_get_value_int(0, "kiyafetDurum", oyuncuData[playerid][kiyafetDurum]);
	cache_get_value_int(0, "ceteid", PlayerCete[playerid]);
	cache_get_value(0, "CeteRutbe", PlayerCeteRutbe[playerid], 21);
	cache_get_value_int(0, "pmGorme", oyuncuData[playerid][pmGorme]);
	cache_get_value_int(0, "LocalGorme", oyuncuData[playerid][LocalGorme]);
	cache_get_value_int(0, "ArGorme", oyuncuData[playerid][ArGorme]);
	cache_get_value_int(0, "GrupGorme", oyuncuData[playerid][GrupGorme]);
	cache_get_value_int(0, "EkipGorme", oyuncuData[playerid][EkipGorme]);
	cache_get_value_int(0, "ceteGorme", oyuncuData[playerid][ceteGorme]);
	cache_get_value_int(0, "realSaat", oyuncuData[playerid][realSaat]);
	cache_get_value_int(0, "duzenliOyuncu", oyuncuData[playerid][duzenliOyuncu]);
	cache_get_value_int(0, "KralTag", oyuncuData[playerid][kral_TAG]);
	cache_get_value_int(0, "KonusmaYasagi", oyuncuData[playerid][sureKayit]);
	cache_get_value_int(0, "textAyar", oyuncuData[playerid][textAyar]);
	cache_get_value_int(0, "bonzai", oyuncuData[playerid][_bonzai]);
	cache_get_value_int(0, "eroin", oyuncuData[playerid][_eroin]);
	cache_get_value_int(0, "ot", oyuncuData[playerid][_ot]);
	cache_get_value_int(0, "bomba", oyuncuData[playerid][_bomba]);
	cache_get_value_int(0, "yakalama", oyuncuData[playerid][_yakalama]);
	cache_get_value_int(0, "yakalanma", oyuncuData[playerid][_yakalanma]);
	cache_get_value_int(0, "kelepceleme", oyuncuData[playerid][_kelepceleme]);
	cache_get_value_int(0, "kelepcelenme", oyuncuData[playerid][_kelepcelenme]);
	
	cache_get_value_int(0, "Bakiye", oyuncuData[playerid][_Bakiye]);
	cache_get_value_int(0, "BakiyeS1", oyuncuData[playerid][_bsure][0]);
	cache_get_value_int(0, "BakiyeS2", oyuncuData[playerid][_bsure][1]);
	cache_get_value_int(0, "BakiyeS3", oyuncuData[playerid][_bsure][2]);
	cache_get_value_int(0, "BakiyeS4", oyuncuData[playerid][_bsure][3]);
	cache_get_value_int(0, "BakiyeS5", oyuncuData[playerid][_bsure][4]);
	
	cache_get_value_int(0, "adonline", oyuncuData[playerid][gunlukonline]);
	cache_get_value_int(0, "adafkonline", oyuncuData[playerid][gunlukonlineafk]);
	cache_get_value_int(0, "akomuts", oyuncuData[playerid][adminkomuts]);
	cache_get_value_int(0, "yanits", oyuncuData[playerid][yanits]);
	cache_get_value_int(0, "dsarki", oyuncuData[playerid][dsarki]);
	cache_get_value_int(0, "dmkapat", oyuncuData[playerid][dmkapat]);
	
	cache_get_value_int(0, "etkyetki", oyuncuData[playerid][etkyetki]);
	
	cache_get_value_int(0, "cskinlan", oyuncuData[playerid][skinmode]);
	cache_get_value_int(0, "kefaletmod", oyuncuData[playerid][kefaletmod]);
	
	
	if(oyuncuData[playerid][_LevelCount] == 0) oyuncuData[playerid][_LevelCount] = 1;
	if(oyuncuData[playerid][_LevelCount] >= 51) oyuncuData[playerid][_LevelCount] = 50;
	cache_get_value_int(0, "ExpPuan", oyuncuData[playerid][ExpPuan]);
	if(PlayerCete[playerid] != -1)
	{
	    new c = PlayerCete[playerid];
	    foreach(new i : Player)
	    {
	        if(playerid != i && PlayerCete[i] == c)
	        {
	            new bilgi[100];
	            format(bilgi, sizeof(bilgi), "{9B59B6}<!> Çete üyesi {3EDC81}%s {9B59B6}sunucuya giriþ yaptý.", getName(playerid));
	            SendClientMessage(i, -1, bilgi);
	        }
	    }
	}
	if(oyuncuData[playerid][_LevelCount] >= 50)
	{
		if(oyuncuData[playerid][ExpPuan] > 50000)
		{
		    oyuncuData[playerid][_LevelCount] = 50;
			oyuncuData[playerid][ExpPuan] = 50000;
			ExpGuncelle(playerid);
		}
	}
	return 1;
}

stock oKick(playerid, sure = 150)
{
	new PingKick = GetPlayerPing(playerid) + sure;
	SetTimerEx("GuleGule", PingKick, false, "d", playerid);
}

stock oKick5(playerid, sure = 150)
{
	new PingKick = GetPlayerPing(playerid) + sure;
	SetTimerEx("GuleGule5", PingKick, false, "d", playerid);
}

stock oBan(playerid, sure = 150)
{
	SetPVarInt(playerid, "Bann", 1);
	new PingKick = GetPlayerPing(playerid) + sure;
	SetTimerEx("GuleGule", PingKick, false, "d", playerid);
}

stock oBanEx(playerid, banExx[], sure = 150)
{
	new PingKick = GetPlayerPing(playerid) + sure;
	SetTimerEx("GuleGule2", PingKick, false, "ds", playerid, banExx);
}

forward GuleGule2(playerid, assd[]);
public GuleGule2(playerid, assd[])
{
	BanEx(playerid, assd);
	return 1;
}

forward GuleGule5(playerid, assd[]);
public GuleGule5(playerid, assd[])
{
	Kick(playerid);
	return 1;
}


stock PolisIslemleri(playerid, guncelleDeger, _tabloNe[], _pDeger)
{
	switch(guncelleDeger)
	{
	    case 1: oyuncuData[playerid][_yakalama] += _pDeger;
	    case 2: oyuncuData[playerid][_yakalanma] += _pDeger;
	    case 3: oyuncuData[playerid][_kelepceleme] += _pDeger;
	    case 4: oyuncuData[playerid][_kelepcelenme] += _pDeger;
	}
	new query[136];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `%s` = %s + %d WHERE `id` = '%d' LIMIT 1", _tabloNe, _tabloNe, _pDeger, oyuncuData[playerid][xID]);
	mysql_query(g_SQL, query);
	return 1;
}

forward GuleGule(playerid);
public GuleGule(playerid)
{
    if(GetPVarInt(playerid, "Bann") == 1)
    {
		DeletePVar(playerid, "Bann");
		Ban(playerid);
	    return 1;
	}
	Kick(playerid);
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(GetPVarInt(playerid, "KayitNo") == 1) return kayitMenu(playerid, 0);
	bilgileerrim(clickedplayerid, playerid);
	return 1;
}

stock getName(playerid)
{
	new oIsim[MAX_PLAYER_NAME];
	GetPlayerName(playerid, oIsim, sizeof(oIsim));
	return oIsim;
}

CMD:evfiyat(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Ev Fiyatlarý",
	"{92F22A}Ev Seviyesi\t{92F22A}Para\n\
	 {4d69ff}1\t{FFFFFF}$5,000,000\n\
	 {4d69ff}2\t{FFFFFF}$10,000,000\n\
	 {4d69ff}3\t{FFFFFF}$20,000,000\n\
	 {4d69ff}4\t{FFFFFF}$30,000,000\n\
	 {4d69ff}5\t{FFFFFF}$40,000,000\n\
	 {4d69ff}6\t{FFFFFF}$50,000,000\n\
	 {4d69ff}7\t{FFFFFF}$60,000,000\n\
	 {4d69ff}8\t{FFFFFF}$70,000,000\n\
	 {4d69ff}9\t{FFFFFF}$80,000,000\n\
	 {4d69ff}10\t{FFFFFF}$100,000,000\n\
	 ", "Kapat", "");
	return 1;
}

CMD:meslekskor(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Meslek Skorlarý",
	"{92F22A}Meslek\t{92F22A}Gereken Skor\n\
	 {4d69ff}Polis\t{FFFFFF}100\n\
	 {4d69ff}Sivil Polis\t{FFFFFF}5,000\n\
	 {4d69ff}Çevik Kuvvet\t{FFFFFF}1,500\n\
	 {4d69ff}Özel Kuvvet Birliði\t{FFFFFF}9,000\n\
	 {4d69ff}Özel Harekat\t{FFFFFF}3,000\n\
	 {4d69ff}Hava Kuvvetleri\t{FFFFFF}10,000\n\
	 ", "Kapat", "");
	return 1;
}

CMD:gps(playerid)
{
    if(GPSOyuncu[playerid][gpsAktif] == true) return hataMesaji(playerid, "GPS açýkken etkinliðe gidemezsin.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "GPS kullanmak için sürücü olmalýsýn.");
	new ba[750];
	for(new i = 0; i < sizeof(GPSYukle); i++)
	{
	    format(ba, sizeof(ba), "%s%s\n", ba, GPSYukle[i][gpsIsim]);
	}
	ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS", ba, "Seç", "Kapat");
	return 1;
}

// Çete komutu

CMD:ceteolustur380102(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ sahip olmalýsýn.");
	new cid = Iter_Free(Ceteler), cIsmi[MAX_CETE_ISIM], cGe[4], _sID;
	if(cid == -1) return hataMesaji(playerid, "Maksimum çete oluþturma kapasitesi dolmuþ !");
	if(sscanf(params, "iiiius[24]", cGe[0], cGe[1], cGe[2], cGe[3], _sID, cIsmi)) return aBilgi(playerid, "/CeteOlustur [X] [Y] [RX] [RY] [Sahip ID] [Çete Ismi]");
	if(!IsPlayerConnected(_sID)) return hataMesaji(playerid, "Bu oyuncu sunucuda yok !");
    if(CeteIsimKontrol(cIsmi)) return hataMesaji(playerid, "Bu çete ismi kullanýlýyor !");
	if(strlen(cIsmi) <= 0 || strlen(cIsmi) >= MAX_CETE_ISIM+1) return hataMesaji(playerid, "Çete ismi 0 ile 24 karakter olmalý.");
	if(PlayerCete[_sID] != -1) return hataMesaji(playerid, "Bu oyuncu baþka bir çete üye.");
	foreach(new c : Ceteler)
	{
		if(strcmp(CeteIslem[c][cSahip1], getName(_sID), false) == 0 || strcmp(CeteIslem[c][cSahip2], getName(_sID), false) == 0 || strcmp(CeteIslem[c][cSahip3], getName(_sID), false) == 0 || strcmp(CeteIslem[c][cSahip4], getName(_sID), false) == 0)
		{
			hataMesaji(playerid, "Bu oyuncu baþka bir çete de sahip.");
			return 1;
		}
	}
	CeteOlustur(playerid, cid, cGe[0], cGe[1], cGe[2], cGe[3], _sID, cIsmi, 2);
	kafaTextUp(_sID);
	return 1;
}

CMD:ceteolustur(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    ShowPlayerDialog(playerid, DIALOG_BELES_CETE, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Oluþturucu",
	"{92F22A}#\t{92F22A}Özellik\t{92F22A}Gerekenler\n\
	{FFFFFF}Çete\t{FFFFFF}Ücretsiz\t{FFFFFF}250m + 3000 Skor\n\
	{4d69ff}Özel Çete\t{FFFFFF}Ücretli\t{FFFFFF}50 TL\n\
	", "Oluþtur", "Kapat");
	return 1;
}

CMD:cetekomutlari(playerid) return cmd_cetekomut(playerid);
CMD:ccmds(playerid) return cmd_cetekomut(playerid);
CMD:ckomutlari(playerid) return cmd_cetekomut(playerid);
CMD:ckomut(playerid) return cmd_cetekomut(playerid);
CMD:cetekomut(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Komutlarý",
	"{92F22A}Komut\t{92F22A}Ýþlevi\n\
	{4d69ff}/CeteRank\t{FFFFFF}Çetelerin rank seviyesini gösterir\n\
	{4d69ff}/CeteOlustur\t{FFFFFF}Çete oluþturmanýzý saðlar\n\
	{4d69ff}/Ceteler\t{FFFFFF}Açýlmýþ çeteleri gösterir\n\
 	{4d69ff}/CetePanel\t{FFFFFF}Çete menüsünü gösterir\n\
	{4d69ff}/CeteKabul\t{FFFFFF}Çetenize istek atmýþ oyuncuyu çeteye alýr\n\
 	{4d69ff}/CeteDavet\t{FFFFFF}Çetenize oyuncu davet edersiniz\n\
	{4d69ff}/CeteOnay\t{FFFFFF}Çetenize gelmek isteyen oyuncuyu onaylar\n\
 	{4d69ff}/CeteAt\t{FFFFFF}Oyuncuyu çetenizden atar\n\
 	{4d69ff}/oCeteAt\t{FFFFFF}Oyuncuyu offline olarak çeteden atar\n\
	{4d69ff}/CeteAyril\t{FFFFFF}Katýlmýþ olduðunuz çeteden ayrýlýrsýnýz\n\
	{4d69ff}/cArac\t{FFFFFF}Çetenizde araçlarý yanýnýza çekersiniz\n\
	{4d69ff}/RutbeVer\t{FFFFFF}Çete sohbetlerinin rütbesini ayarlarsýnýz\n\
 	{4d69ff}/C\t{FFFFFF}Çete içi sohbet yapabilirsiniz\n\
	{4d69ff}/CeteMekan\t{FFFFFF}Çete mekanýna ýþýnlanabilirsiniz\n\
 	{4d69ff}/cSilah\t{FFFFFF}Çete silahlarýný alabilirsiniz\n\
	{4d69ff}/cPark\t{FFFFFF}Çete araçlarýný park edebilirsiniz\n\
 	{4d69ff}/cAracSat\t{FFFFFF}Çete araçlarýný satabilirsiniz\n\
	", "Kapat", "");
	return 1;
}

CMD:ceterank(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Ranklarý",
	"{92F22A}Seviye\t{92F22A}Rank\n\
	{4d69ff}0\t{FFFFFF}Ayak Takýmý\n\
    {4d69ff}1..4\t{FFFFFF}Çete\n\
    {4d69ff}5..9\t{FFFFFF}2. Seviye Çete\n\
    {4d69ff}10..14\t{FFFFFF}3. Seviye Çete\n\
    {4d69ff}15..20\t{FFFFFF}Efsanevi Çete\n\
    {4d69ff}21..26\t{FFFFFF}Teþkilat\n\
    {4d69ff}27..32\t{FFFFFF}2. Seviye Teþkilat\n\
    {4d69ff}33..39\t{FFFFFF}3. Seviye Teþkilat\n\
    {4d69ff}40..46\t{FFFFFF}Örgüt\n\
    {4d69ff}47..53\t{FFFFFF}2. Seviye Örgüt\n\
    {4d69ff}54..60\t{FFFFFF}3. Seviye Örgüt\n\
    {4d69ff}61..68\t{FFFFFF}Ölümcül Örgüt\n\
    {4d69ff}69..76\t{FFFFFF}Mafya\n\
    {4d69ff}77..84\t{FFFFFF}2. Seviye Mafya\n\
    {4d69ff}85..92\t{FFFFFF}3. Seviye Mafya\n\
    {4d69ff}93..99\t{FFFFFF}Destansý Mafya\n\
    {4d69ff}100...\t{FFFFFF}Krallýk\n\
	", "Kapat", "");
	return 1;
}

CMD:cetesil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ sahip olmalýsýn.");
	new cid, sx[11], hex, query[156];
	if(sscanf(params, "i", cid)) return aBilgi(playerid, "/CeteSil [Çete ID]");
	if(!Iter_Contains(Ceteler, cid)) return hataMesaji(playerid, "Bu ID`de çete oluþturulmamýþ.");
	CeteSil(cid);
 	foreach(new id: CeteSavaslar)
    {
        if(CeteSavasMekan[id][ceteMekanSahip] == cid)
        {
			mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '-1' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, query);
			
   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '000000' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, query);
        
			mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, query);
			
   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, query);
        
            CeteSavasMekan[id][ceteMekanSahip] = -1;
            CeteSavasMekan[id][ceteBolgeSure] = 0;
            CeteSavasMekan[id][ceteTip] = 0;
            CeteSavasMekan[id][eleGecirenCete] = -1;
            format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}Yok\n{C938FF}/SavasAc\n", CeteSavasMekan[id][ceteMekanIsmi], id);
            UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, query);
            GangZoneDestroy(CeteSavasMekan[id][cbZone]);
			CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
			format(CeteSavasMekan[id][ceteMekanRenk], 7, "000000");
			format(sx, sizeof(sx), "0x%s99", CeteSavasMekan[id][ceteMekanRenk]);
			sscanf(sx, "x", hex);
			foreach(new i: Player) GangZoneShowForPlayer(i, CeteSavasMekan[id][cbZone], hex);
        }
    }
	SendClientMessage(playerid, 0x00B0FFFF, "« ÇETE » {FFFFFF}Çete silindi.");
	return 1;
}

CMD:ceteler(playerid)
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new sz[1500], xzc = 0, xzsc[11];
	format(sz, sizeof(sz), "{7A8AFF}Çete ID\t{7A8AFF}Çete Ismi\t{7A8AFF}Üye Sayýsý\t{7A8AFF}Rank\n");
	foreach(new c: Ceteler)
	{
	    format(xzsc, sizeof(xzsc), "Cete_%d", xzc);
	    SetPVarInt(playerid, xzsc, c);
	    xzc++;
	    format(sz, sizeof(sz), "%s%d\t%s\t%d\t%s\n", sz, c, CeteIslem[c][ceteIsmi], CeteIslem[c][ceteCountL]/*CeteUyesi(c)*/, ceteRankCek(c)); // CeteKD(c)
	}
	if(xzc == 0) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete", "Aktif bir çete yok !", "Kapat", "");
	if(xzc != 0) return ShowPlayerDialog(playerid, DIALOG_CETELER, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çeteler", sz, "Detay", "Kapat");
	return 1;
}

CMD:cetemenu(playerid) return cmd_cetepanel(playerid, "");
CMD:cpanel(playerid) return cmd_cetepanel(playerid, "");
CMD:cetepanel(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid], cSz[1024], maxUyee = 0, _cetePlaaka[10];
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
    format(cSz, sizeof(cSz), "#\tSonuç\n");
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Ýsmi:{A9A9A9}\t%s\n", cSz, CeteIslem[c][ceteIsmi]);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Sahip Ekle\t-\n", cSz);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Dost Çete Ekle\t-\n", cSz);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Kasasý:\t{528CCB}$%s\n", cSz, convertNumber(CeteIslem[c][ceteKasasi]));
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Rengi:\t{%s}%s\n", cSz, CeteIslem[c][ceteRengi], CeteIslem[c][ceteRengi]);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Tagý:\t{528CCB}%s\n", cSz, CeteIslem[c][ceteTagi]);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Seviyesi:\t{528CCB}%d\n", cSz, CeteIslem[c][ceteSeviye]);
    if(CeteIslem[c][ceteDeger] == 1) { maxUyee = MAX_BELES_UYE; } else { maxUyee = cKapasite(c); }
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Üye Sayýsý:\t{528CCB}%d/%d\n", cSz, CeteIslem[c][ceteCountL], maxUyee);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Skini:\t{528CCB}%d\n", cSz, CeteIslem[c][ceteSkin]);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Araçlarý:\t{528CCB}%d/%d\n", cSz, caGet(c), caKapasite2(c));
	format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Araç Renk:\t{528CCB}%d:%d\n", cSz, CeteIslem[c][ceteAracRenk][0], CeteIslem[c][ceteAracRenk][1]);
	if(!strlen(CeteIslem[c][cetePlaka]))
	{
		format(_cetePlaaka, 10, "Yok");
	}
	else
	{
	    format(_cetePlaaka, 10, CeteIslem[c][cetePlaka]);
	}
	format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Araç Plaka:\t{528CCB}%s\n", cSz, _cetePlaaka);
	format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Araçlarýný Respawnla\t\n", cSz);
	format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Puaný:\t{528CCB}%d\n", cSz, CeteIslem[c][cetePuan]);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Ýçi Hasar:\t{528CCB}%s\n", cSz, (CeteIslem[c][ceteGod] == 0) ? ("Kapalý") : ("Açýk"));
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Dost Çete Hasarý:\t{528CCB}%s\n", cSz, (CeteIslem[c][dostGode] == 0) ? ("Kapalý") : ("Açýk"));
	format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çeteye Baðýþ Yapanlar:\t{528CCB}-\n", cSz);
    format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çeteyi Sil:\t{A9A9A9}Bu iþlem geri alýnamaz\n", cSz);
	ShowPlayerDialog(playerid, DIALOG_CPANEL, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Panel", cSz, "Seç", "Kapat");
	return 1;
}

// çete içi hasarýn üstü
//format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Toplam Ölüm:\t{528CCB}%d\n", cSz, CeteIslem[c][ceteOlum]);
//format(cSz, sizeof(cSz), "%s{FF0073}» {FFFFFF}Çete Toplam Öldürme:\t{528CCB}%d\n", cSz, CeteIslem[c][CeteOldurme]);

CMD:cdkabul(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid], ID;
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Gelen dost çete tekliflerini kabul etmek için bu çetenin sahibi olmalýsýnýz !");
	    return 1;
	}
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/cdKabul [ID]");
	if(!Iter_Contains(Ceteler, ID)) return hataMesaji(playerid, "Böyle bir çete oluþturulmamýþ !");
    if(Iterator_Bul(DostCete[c], ID)) return hataMesaji(playerid, "Bu çete zaten dost listenizde !");
    if(CeteIslem[c][ceteDostTemp] == -1) return hataMesaji(playerid, "Bu çeteden size dost isteði gelmemiþ !");
    if(CeteIslem[c][ceteDostTemp] != ID) return hataMesaji(playerid, "Bu çeteden size dost isteði gelmemiþ !");

	new id = CeteIslem[c][ceteDostTemp];
	
	Iterator_Ekle(DostCete[c], id);
    Iterator_Ekle(DostCete[id], c);
    
    CeteIslem[c][ceteDostTemp] = -1;
    CeteIslem[id][ceteDostTemp] = -1;
    
    foreach(new i : Player)
	{
		if(PlayerCete[i] == c)
		{
			SCM_Ex(i, 0xFBC531FF, "[!] {FFFFFF}%s çetesiyle artýk dost çetesiniz.", CeteIslem[id][ceteIsmi]);
		}
  		if(PlayerCete[i] == id)
		{
			SCM_Ex(i, 0xFBC531FF, "[!] {FFFFFF}%s çetesiyle artýk dost çetesiniz.", CeteIslem[c][ceteIsmi]);
		}
	}
	
	new query[60 + 120];
    new sz[120];
	Iterator_For(DostCete[c], i)
	{
	    new idlan = Iterator_Getir(DostCete[c], i);
	    format(sz, sizeof(sz), "%s%d ", sz, idlan);
	}
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `dostCete` = '%s' WHERE `cid` = '%d'", sz, c);
	mysql_tquery(g_SQL, query);
	
 	Iterator_For(DostCete[id], i)
	{
	    new idlan = Iterator_Getir(DostCete[id], i);
	    format(sz, sizeof(sz), "%s%d ", sz, idlan);
	}
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `dostCete` = '%s' WHERE `cid` = '%d'", sz, id);
	mysql_tquery(g_SQL, query);
	return 1;
}

CMD:cetekabul(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID, c = PlayerCete[playerid], xzz[82+24+24+1];
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
 	new maxUye = CeteIslem[c][ceteCountL], getKapasite = cKapasite(c);
	if(CeteIslem[c][ceteDeger] == 1 && maxUye > MAX_BELES_UYE-1) return hataMesaji(playerid, "Ücretsiz çeteler Max 10 üye alabilir.");
	if(maxUye == getKapasite) return hataMesaji(playerid, "Çetenizin kapasitesi dolmuþ. Daha fazla oyuncu alamazsýnýz.");
	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Gelen çete tekliflerini kabul etmek için bu çetenin sahibi olmalýsýnýz !");
	    return 1;
	}
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/CeteKabul [ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu ID sunucuda yok !");
	if(playerid == ID) return hataMesaji(playerid, "Zaten bu çetedesin. Kendini kabul edemezsin.");
	if(PlayerCete[ID] != -1) return hataMesaji(playerid, "Bu oyuncu baþka bir çeteye kabul edilmiþ.");
	if(TeklifAttigim[ID] == -1) return hataMesaji(playerid, "Bu oyuncu daha önce hiç bir çeteye baþvuru yapmamýþ.");
	if(TeklifAttigim[ID] != c) return hataMesaji(playerid, "Bu oyuncu baþka bir çeteye baþvuru yapmýþ.");
	TeklifAttigim[ID] = c;
	PlayerCete[ID] = c;
	format(PlayerCeteRutbe[ID], 21, "");
	kafaTextUp(ID);
	CeteIslem[c][ceteCountL] += 1;
	AnlikUpdate(c);
	format(xzz, sizeof(xzz), "{00FF00}« ÇETE » {FFFFFF}Oyuncu %s artýk {EEE657}%s {FFFFFF}çetesinin yeni üyesi !", getName(ID), CeteIslem[c][ceteIsmi]);
	foreach(new i : Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, xzz);
 	mysql_format(g_SQL, xzz, sizeof(xzz), "UPDATE `oyuncuveri` SET `ceteid` = '%d' WHERE `isim` = '%e' LIMIT 1", c, getName(ID));
	mysql_tquery(g_SQL, xzz);
  	mysql_format(g_SQL, xzz, sizeof(xzz), "UPDATE `oyuncuveri` SET `CeteRutbe` = '' WHERE `isim` = '%e' LIMIT 1", getName(ID));
	mysql_tquery(g_SQL, xzz);
	return 1;
}

CMD:cetedavet(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID, c = PlayerCete[playerid], blax[116+24+24];
 	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
 	new maxUye = CeteIslem[c][ceteCountL], getKapasite = cKapasite(c);
 	if(CeteIslem[c][ceteDeger] == 1 && maxUye > MAX_BELES_UYE-1) return hataMesaji(playerid, "Ücretsiz çeteler Max 10 üye alabilir.");
	if(maxUye == getKapasite) return hataMesaji(playerid, "Çetenizin kapasitesi dolmuþ. Daha fazla oyuncu davet edemezsiniz.");
	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Çete daveti göndermek için cete sahiplerinden biri olmalýsýnýz.");
	    return 1;
	}
 	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/CeteDavet [ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu ID sunucuda yok !");
	if(playerid == ID) return hataMesaji(playerid, "Zaten bu çetedesin. Kendini davet edemezsin.");
	if(PlayerCete[ID] != -1) return hataMesaji(playerid, "Bu oyuncu baþka bir çeteye kabul edilmiþ.");
	if(OnayTeklif[ID] == c) return hataMesaji(playerid, "Bu oyuncuya daha önce davet teklifi atmýþsýnýz.");
	OnayTeklif[ID] = c;
	format(blax, sizeof(blax), "{FF0073}« ÇETE » {FFFFFF}Oyuncu %s sizi {00FF00}%s {FFFFFF}çetesine davet ediyor. Katýlmak için /CeteOnay %d yazýn.", getName(playerid), CeteIslem[c][ceteIsmi], c);
	SendClientMessage(ID, -1, blax);
 	format(blax, sizeof(blax), "{FF0073}« ÇETE » {FFFFFF}Oyuncu %s çetenize davet ettiniz.", getName(ID));
	SendClientMessage(playerid, -1, blax);
	return 1;
}

CMD:ceteonay(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID, c = PlayerCete[playerid], tID = OnayTeklif[playerid], xzz[82+24+24+1];
	if(c != -1) return hataMesaji(playerid, "Sizin bir çeteniz bulunuyor zaten !");
	new maxUye = CeteIslem[tID][ceteCountL], getKapasite = cKapasite(tID);
	if(maxUye == getKapasite) return hataMesaji(playerid, "Bu çetenin üye kapasitesi dolmuþ.");
    if(sscanf(params, "i", ID)) return aBilgi(playerid, "/CeteOnay [ID]");
    if(!Iter_Contains(Ceteler, ID)) return hataMesaji(playerid, "Bu ID`de çete yok.");
    if(tID == ID)
    {
        if(CeteIslem[tID][ceteDeger] == 1 && maxUye > MAX_BELES_UYE-1) return hataMesaji(playerid, "Ücretsiz çeteler Max 10 üye alabilir.");
		CeteIslem[tID][ceteCountL] += 1;
		AnlikUpdate(tID);
		TeklifAttigim[playerid] = c;
        PlayerCete[playerid] = tID;
        OnayTeklif[playerid] = -1;
        format(PlayerCeteRutbe[playerid], 21, "");
    	format(xzz, sizeof(xzz), "{00FF00}« ÇETE » {FFFFFF}Oyuncu %s artýk {EEE657}%s {FFFFFF}çetesinin yeni üyesi !", getName(playerid), CeteIslem[tID][ceteIsmi]);
		foreach(new i : Player) if(PlayerCete[i] == tID) SendClientMessage(i, -1, xzz);
	 	mysql_format(g_SQL, xzz, sizeof(xzz), "UPDATE `oyuncuveri` SET `ceteid` = '%d' WHERE `isim` = '%e' LIMIT 1", tID, getName(playerid));
		mysql_tquery(g_SQL, xzz);
    	mysql_format(g_SQL, xzz, sizeof(xzz), "UPDATE `oyuncuveri` SET `CeteRutbe` = '' WHERE `isim` = '%e' LIMIT 1", getName(playerid));
		mysql_tquery(g_SQL, xzz);
		kafaTextUp(playerid);
    }
    else
    {
        hataMesaji(playerid, "Bu çeteden size teklif gelmemiþ !");
    }
	return 1;
}

CMD:ceteat(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid], ID, query[77+24+24];
	if(c == -1) return hataMesaji(playerid, "Sizin zaten bir çeteniz yok !");
 	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Bir oyuncuyu çeteden atmak için çete sahiplerinden biri olmalýsýn.");
	    return 1;
	}
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/CeteAt [ID]");
 	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu ID sunucuda yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendini çeteden atamazsýn. Asýl sahip deðilsen /CeteAyril yaz.");
	if(PlayerCete[ID] == -1) return hataMesaji(playerid, "Bu oyuncu herhangi bir çeteye katýlmamýþ !");
	if(PlayerCete[ID] != c) return hataMesaji(playerid, "Bu oyuncu sizin çetenizde deðil !");
	if(strcmp(CeteIslem[c][cSahip1], getName(ID), false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	if(strcmp(CeteIslem[c][cSahip2], getName(ID), false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	if(strcmp(CeteIslem[c][cSahip3], getName(ID), false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	if(strcmp(CeteIslem[c][cSahip4], getName(ID), false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
  	format(query, sizeof(query), "{00FF00}« ÇETE » {FFFFFF}Oyuncu %s çete sahibi %s tarafýndan çeteden atýldý.", getName(ID), getName(playerid));
	foreach(new i : Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, query);
	CeteIslem[c][ceteCountL] -= 1;
	AnlikUpdate(c);
 	TeklifAttigim[ID] = -1;
	PlayerCete[ID] = -1;
	OnayTeklif[ID] = -1;
	format(PlayerCeteRutbe[ID], 21, "");
	kafaTextUp(ID);
 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `ceteid` = '-1' WHERE `isim` = '%e' LIMIT 1", getName(ID));
	mysql_tquery(g_SQL, query);
   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `CeteRutbe` = '' WHERE `isim` = '%e' LIMIT 1", getName(ID));
	mysql_tquery(g_SQL, query);
 	new Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	 	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(ID));
		mysql_tquery(g_SQL, query);
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:oceteat(playerid, params[])
{
	new
		c = PlayerCete[playerid],
		query[110],
		Cache:VeriCek,
		iK,
		bool: varyok = false,
		idBul = -1,
		x[125],
		tmp_pr[25],
		tmp_s1[24],
		tmp_s2[24],
		tmp_s3[24],
		tmp_s4[24]
	;
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
 	if(c == -1) return hataMesaji(playerid, "Sizin zaten bir çeteniz yok !");
 	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Bir oyuncuyu offline çeteden atmak için çete sahiplerinden biri olmalýsýn.");
	    return 1;
	}
	if(isnull(params)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/oCeteAt (Nick)");
	if(strlen(params) > 24) return hataMesaji(playerid, "Bir oyuncunun nicki maksimum 24 harfden oluþabilir !");
	format(tmp_pr, 25, params);
	format(tmp_s1, 24, CeteIslem[c][cSahip1]);
	format(tmp_s2, 24, CeteIslem[c][cSahip2]);
	format(tmp_s3, 24, CeteIslem[c][cSahip3]);
	format(tmp_s4, 24, CeteIslem[c][cSahip4]);
	for(new i = 0; i < strlen(params); i++) params[i] = tolower(params[i]);
	for(new i = 0; i < strlen(tmp_s1); i++) tmp_s1[i] = tolower(tmp_s1[i]);
	for(new i = 0; i < strlen(tmp_s2); i++) tmp_s2[i] = tolower(tmp_s2[i]);
	for(new i = 0; i < strlen(tmp_s3); i++) tmp_s3[i] = tolower(tmp_s3[i]);
	for(new i = 0; i < strlen(tmp_s4); i++) tmp_s4[i] = tolower(tmp_s4[i]);
	if(strcmp(params, tmp_s1, false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	if(strcmp(params, tmp_s2, false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	if(strcmp(params, tmp_s3, false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	if(strcmp(params, tmp_s4, false) == 0) return hataMesaji(playerid, "Çete sahiplerini atamazsýn.");
	iK = GetPlayerID(params);
	if(iK != INVALID_PLAYER_ID) return hataMesaji(playerid, "Bu kiþi oyunda /CeteAt komutunu kullanýn.");
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", params);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    varyok = true;
	    cache_get_value_name_int(0, "ceteid", idBul);
	}
	if(!rows)
	{
	    varyok = false;
	}
	cache_delete(VeriCek);
	if(!varyok) return hataMesaji(playerid, "Veritabanýnda böyle bir oyuncu yok !");
 	if(idBul == -1) return hataMesaji(playerid, "Bu oyuncu herhangi bir çeteye katýlmamýþ !");
	if(idBul != c) return hataMesaji(playerid, "Bu oyuncu sizin çetenizde deðil !");
	CeteIslem[c][ceteCountL] -= 1;
	AnlikUpdate(c);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `ceteid` = '-1' WHERE `isim` = '%e' LIMIT 1", params);
	mysql_query(g_SQL, query);
   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `CeteRutbe` = '' WHERE `isim` = '%e' LIMIT 1", params);
	mysql_query(g_SQL, query);
 	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", params);
	mysql_query(g_SQL, query);
   	format(x, sizeof(x), "{00FF00}« ÇETE » {FFFFFF}Oyuncu %s offline olarak %s çeteden attý.", getName(playerid), params);
	foreach(new i : Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, x);
	return 1;
}


CMD:cayril(playerid) return cmd_ceteayril(playerid);
CMD:ceteayril(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid], query[92];
	if(c == -1) return hataMesaji(playerid, "Sizin zaten bir çeteniz yok !");
   	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) == 0)
	{
	    hataMesaji(playerid, "Kendi çetenizden ayrýlamazsýnýz.");
		return 1;
	}
	if(strcmp(CeteIslem[c][cSahip2], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip3], getName(playerid), false) == 0 || strcmp(CeteIslem[c][cSahip4], getName(playerid), false) == 0)
	{
		hataMesaji(playerid, "Bu çetenin sahiplerindensiniz. Önce Sahipler kýsmýndan kendinizi kaldýrýn.");
		return 1;
	}
 	format(query, sizeof(query), "{00FF00}« ÇETE » {FFFFFF}Oyuncu %s çeteden kendi isteðiyle ayrýldý.", getName(playerid));
	foreach(new i : Player) if(PlayerCete[i] == c) SendClientMessage(i, -1, query);
	CeteIslem[c][ceteCountL] -= 1;
	AnlikUpdate(c);
	TeklifAttigim[playerid] = -1;
	PlayerCete[playerid] = -1;
	OnayTeklif[playerid] = -1;
	format(PlayerCeteRutbe[playerid], 21, "");
	kafaTextUp(playerid);
 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `ceteid` = '-1' WHERE `isim` = '%e' LIMIT 1", getName(playerid));
	mysql_tquery(g_SQL, query);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `CeteRutbe` = '' WHERE `isim` = '%e' LIMIT 1", getName(playerid));
	mysql_tquery(g_SQL, query);
	new Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(playerid));
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	 	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(playerid));
		mysql_tquery(g_SQL, query);
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:c(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new c = PlayerCete[playerid], cMsj[156], xfz[156], asd[200];
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
	if(sscanf(params, "s[156]", cMsj)) return aBilgi(playerid, "/C [Mesaj]");
	if(GetPVarInt(playerid, "CeteFloodKorumasi") > GetTickCount())
	{
	    hataMesaji(playerid, "Flood yapmayý kesin.");
	    SetPVarInt(playerid, "CeteFloodKorumasi", GetTickCount() + 500);
	    return 1;
	}
	if(!strlen(PlayerCeteRutbe[playerid]))
	{
		format(xfz, sizeof(xfz), "[Çete Sohbet] {FFFFFF}%s(%d): {17B9FF}%s", getName(playerid), playerid, cMsj);
	}
	else
	{
	    format(xfz, sizeof(xfz), "[Çete Sohbet] {%s}[%s] {FFFFFF}%s(%d): {17B9FF}%s", CeteIslem[c][ceteRengi], PlayerCeteRutbe[playerid], getName(playerid), playerid, cMsj);
	}
	foreach(new i : Player)
	{
		if(oyuncuData[i][ceteGorme] == 1)
		{
			format(asd, sizeof(asd), "** |Çete - ID|: (%d) - %s(%d) >> %s.", c, getName(playerid), playerid, cMsj);
			if(i != playerid)
			{
				SendClientMessage(i, 0xA19C69FF, asd);
			}
		}
	}
	SetPVarInt(playerid, "CeteFloodKorumasi", GetTickCount() + 500);
	foreach(new i: Player) if(PlayerCete[i] == c) SendClientMessage(i, 0xC71FFFFF, xfz);
	return 1;
}

CMD:cetemekan(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid];
    if(CeteIslem[c][ceteDeger] == 1) return hataMesaji(playerid, "Ücretsiz çetelerin mekanlarý olmadýðý için çete mekanlarýna gidemez.");
	if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Aranma seviyeniz varken çete mekanýna gidemezsiniz.");
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
    if(SureYasagi(playerid, "CeteMekanYasak", 30)) return 1;
	SetPlayerPos(playerid, CeteIslem[c][ceteSpawnPos][0], CeteIslem[c][ceteSpawnPos][1], CeteIslem[c][ceteSpawnPos][2]);
	SetCameraBehindPlayer(playerid);
    TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid, "Bankada", 1);
	SetPVarInt(playerid, "BankaTextureLoad", GetTickCount() + 1250);
    SendClientMessage(playerid, 0x00B0FFFF, "« ÇETE » {FFFFFF}Çete mekanýna ýþýnlandýnýz, objelerin yüklenmesini bekleyiniz.");
	return 1;
}

CMD:csilah(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid];
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
    if(SureYasagi(playerid, "csilah", 60)) return 1;
	Silahver(playerid, 26, 76);
	Silahver(playerid, 31, 250);
	Silahver(playerid, 32, 250);
	Silahver(playerid, 34, 250);
	Silahver(playerid, 24, 250);
	SendClientMessage(playerid, 0x00B0FFFF, "« ÇETE » {FFFFFF}Çete silahlarýný aldýnýz.");
	return 1;
}

CMD:carac(playerid, params[])
{
    if(kumarda[playerid]) return hataMesaji(playerid, "Kumarhanede bu komutu kullanamazsýn.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
   	if(oIslem[playerid][dondurulmus] == 1) return hataMesaji(playerid, "Dondurulmuþken araç getiremezsin.");
    if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken araç getiremezsin.");
    if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken araç getiremezsin.");
    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçtan inmelisin.");
    if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return hataMesaji(playerid, "Bir interior veya farklý bir bölüm içinde olduðunuz için araç getiremezsiniz.");
    if(GetPVarInt(playerid, "BankaGirdi") == 1) return hataMesaji(playerid, "Bankaya araç park edemezsin !");
    new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý olan bölgelerde araç getirilemez !");
	return 1;}}
    new c = PlayerCete[playerid], x = 0, str[350], xxcz[11];
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
	format(str, sizeof(str), "Araç Ýsmi\tDurum\n");
    for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
	    if(CeteArac[i][ceteAracAktif] == true)
	    {
	        if(CeteArac[i][ceteIDsi] == c)
	        {
				format(xxcz, sizeof(xxcz), "CeteArr_%d", x);
	    		SetPVarInt(playerid, xxcz, i);
				x++;
				format(str, sizeof(str), "%s%s\t%s\n", str, GetVehicleName(GetVehicleModel(i)), (SurucuKontrol(i) ? ("{A9A9A9}Çekilemez") : ("{1976D2}Çekilebilir")));
	        }
		}
	}
	if(x == 0) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete Aracý", "Çetenizin bir aracý yok !", "Kapat", "");
	if(x != 0) return ShowPlayerDialog(playerid, DIALOG_CETEARAC_G, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Aracý", str, "Getir", "Kapat");
	return 1;
}


CMD:cpark(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
 	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Çete aracýný satmak için sürücü olmalýsýn.");
    if(GetPVarInt(playerid, "BankaOnunde") == 1) return hataMesaji(playerid, "Banka yakýnlarýna araç park edemezsin !");
	new c = PlayerCete[playerid], carac = GetPlayerVehicleID(playerid);
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
 	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Çete araçlarýný park etmek için çete sahiplerinden biri olmalýsýnýz !");
	    return 1;
	}
	if(c != CeteArac[carac][ceteIDsi]) return hataMesaji(playerid, "Bu araç sizin çetenize ait deðil.");
	if(!CeteArac[carac][ceteAracAktif]) return hataMesaji(playerid, "Bu araç çete aracý deðil, park edemezsin.");
	new tmp_id = GetPVarInt(playerid, "GirilenCeteMekan");
	if(tmp_id == -1) return hataMesaji(playerid, "Artýk çete araçlarýný çete bölgenizin dýþýna park edemezsin.");
	if(c != tmp_id) return hataMesaji(playerid, "Kendi çete bölge komutunuzda deðilsiniz.");
	new
	    nwarac,
		caModel,
		Float: tmpPos[4],
		tmp_paint,
		tmp_ceteAracSQL,
		tmp_parca[17],
		query[85]
	;
	caModel = GetVehicleModel(carac);
	GetVehiclePos(carac, tmpPos[0], tmpPos[1], tmpPos[2]);
	GetVehicleZAngle(carac, tmpPos[3]);
	tmp_ceteAracSQL = CeteArac[carac][ceteAracSQL];
	tmp_paint = CeteArac[carac][c_pJob];
	CeteArac[carac][ceteIDsi] = -1;
	CeteArac[carac][ceteAracSQL] = -1;
	CeteArac[carac][ceteAracAktif] = false;
	CeteArac[carac][c_pJob] = 0;
    for(new i = 0; i < 17; i++) tmp_parca[i] = CeteArac[carac][c_mParca][i];
	DestroyVehicle(carac);
    nwarac = CreateVehicle(caModel, tmpPos[0], tmpPos[1], tmpPos[2], tmpPos[3], CeteIslem[c][ceteAracRenk][0], CeteIslem[c][ceteAracRenk][1], 999999);
	if(strlen(CeteIslem[c][cetePlaka]) >= 1)
	{
	    SetVehicleNumberPlate(carac, CeteIslem[c][cetePlaka]);
	}
	for(new i = 0; i < 17; i++) CeteArac[nwarac][c_mParca][i] = tmp_parca[i];
	CeteArac[nwarac][ceteIDsi] = c;
	CeteArac[nwarac][ceteAracPos][0] = tmpPos[0];
	CeteArac[nwarac][ceteAracPos][1] = tmpPos[1];
	CeteArac[nwarac][ceteAracPos][2] = tmpPos[2];
	CeteArac[nwarac][ceteAracPos][3] = tmpPos[3];
	CeteArac[nwarac][ceteAracR][0] = CeteIslem[c][ceteAracRenk][0];
	CeteArac[nwarac][ceteAracR][1] = CeteIslem[c][ceteAracRenk][1];
	CeteArac[nwarac][ceteAracSQL] = tmp_ceteAracSQL;
	CeteArac[nwarac][c_pJob] = tmp_paint;
	if(CeteArac[nwarac][c_pJob] != 0) ChangeVehiclePaintjob(nwarac, CeteArac[nwarac][c_pJob] - 1);
	for(new i = 0; i < 17; ++i) if(CeteArac[nwarac][c_mParca][i] != 0) AddVehicleComponent(nwarac, CeteArac[nwarac][c_mParca][i]);
	CeteArac[nwarac][ceteAracAktif] = true;
	PutPlayerInVehicle(playerid, nwarac, 0);
	SendClientMessage(playerid, 0x00B0FFFF, "« ÇETE » {FFFFFF}Çete aracýnýz park edildi.");
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetearaclari` SET `CeteaPosX` = '%f' WHERE `caid` = '%d' LIMIT 1", tmpPos[0], tmp_ceteAracSQL);
	mysql_tquery(g_SQL, query);
 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetearaclari` SET `CeteaPosY` = '%f' WHERE `caid` = '%d' LIMIT 1", tmpPos[1], tmp_ceteAracSQL);
	mysql_tquery(g_SQL, query);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetearaclari` SET `CeteaPosZ` = '%f' WHERE `caid` = '%d' LIMIT 1", tmpPos[2], tmp_ceteAracSQL);
	mysql_tquery(g_SQL, query);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetearaclari` SET `CeteaPosA` = '%f' WHERE `caid` = '%d' LIMIT 1", tmpPos[3], tmp_ceteAracSQL);
	mysql_tquery(g_SQL, query);
	return 1;
}

CMD:caracsat(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
 	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Çete aracýný satmak için sürücü olmalýsýn.");
	new c = PlayerCete[playerid], carac = GetPlayerVehicleID(playerid), xa[81+11], x = 0;
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
 	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Çete araçlarýný satmak için çete sahiplerinden biri olmalýsýnýz !");
	    return 1;
	}
	if(c != CeteArac[carac][ceteIDsi]) return hataMesaji(playerid, "Bu araç sizin çetenize ait deðil.");
	if(!CeteArac[carac][ceteAracAktif]) return hataMesaji(playerid, "Bu araç çete aracý deðil, park edemezsin.");
	SetPVarInt(playerid, "Satiyorum.", carac);
	for(new i = 0; i < sizeof(CeteAracIslem); i++)
	{
	    if(GetVehicleModel(carac) == CeteAracIslem[i][ceteeAid])
	    {
	        x = i;
	        SetPVarInt(playerid, "SatiyorumList.", x);
	        break;
	    }
	}
	format(xa, sizeof(xa), "Bu çete aracýný yarý fiyatýna\n$%s dolara satmak istediðinizden\nemin misiniz ?", convertNumber(CeteAracIslem[x][ceteeFiyat]/2));
	ShowPlayerDialog(playerid, DIALOG_CASATIYOR, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete Detayý", xa, "Evet", "Hayýr");
	return 1;
}

CMD:rutbever(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new c = PlayerCete[playerid], ID, rutbeName[21], sx[71+24+20+10], v = 0;
	if(c == -1) return hataMesaji(playerid, "Sizin bir çeteniz yok !");
 	if(strcmp(CeteIslem[c][cSahip1], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip2], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip3], getName(playerid), false) != 0 && strcmp(CeteIslem[c][cSahip4], getName(playerid), false) != 0)
	{
        hataMesaji(playerid, "Çete Rütbesi vermek için çete sahiplerinden biri olmalýsýn.");
	    return 1;
	}
 	if(sscanf(params, "us[21]", ID, rutbeName)) return aBilgi(playerid, "/RutbeVer [ID] [Rütbe Ismi]");
 	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu ID sunucuda yok !");
    if(PlayerCete[ID] == -1) return hataMesaji(playerid, "Bu oyuncunun çetesi yok !");
    if(PlayerCete[ID] != c) return hataMesaji(playerid, "Bu oyuncu sizin çetenizde deðil !");
    if(strlen(rutbeName) > 20) return hataMesaji(playerid, "Rütbe isimleri en fazla 21 karakterden oluþabilir !");
	for(new i = 0; i < strlen(rutbeName); i++)
	{
	    if(
			rutbeName[i] == '*' ||
			rutbeName[i] == '/' ||
			rutbeName[i] == '\\' ||
			rutbeName[i] == ''' ||
			rutbeName[i] == '%' ||
			rutbeName[i] == '`' ||
			rutbeName[i] == ',' ||
			rutbeName[i] == '#' ||
			rutbeName[i] == ';' ||
			rutbeName[i] == '{' ||
			rutbeName[i] == '}' ||
			rutbeName[i] == '&' ||
			rutbeName[i] == '£')
	    {
	        v = 1;
			break;
	    }
	}
    if(v == 1) return hataMesaji(playerid, "Rütbe isimlerinde geçersiz karakter tespit edildi.");
    format(PlayerCeteRutbe[ID], 21, rutbeName);
    format(sx, sizeof(sx), "« ÇETE » {FFFFFF}%s rütbesini deðiþtirdiniz.", getName(ID));
    SendClientMessage(playerid, 0xD33257FF, sx);
	format(sx, sizeof(sx), "« ÇETE » {FFFFFF}%s sizin rütbenizi deðiþtirdiniz.", getName(playerid));
    SendClientMessage(ID, 0xD33257FF, sx);
   	mysql_format(g_SQL, sx, sizeof(sx), "UPDATE `oyuncuveri` SET `CeteRutbe` = '%s' WHERE `isim` = '%e' LIMIT 1", PlayerCeteRutbe[ID], getName(ID));
	mysql_query(g_SQL, sx);
	return 1;
}

// Bölge komutu

CMD:bolgeolustur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pAdmin] < 9 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için GM+ levele sahip olmalýsýn.");
	new id = Iter_Free(Bolgeler), i[MAX_bIsim], gelir, skor, Float: pos[3];
	if(id == -1) return SendClientMessage(playerid, 0xE74C3CFF, "[UYARI] Bölge oluþturma limitine geldiniz, bölge silin veya Slotu'nu yükseltin.");
	if(sscanf(params, "iis[25]", gelir, skor, i)) return SendClientMessage(playerid, 0xE74C3CFF, "Kullanýmý: /BolgeOlustur [Bölge Geliri] [Bölge Skoru] [Bolge Ismi]");
	if(strlen(i) > 25) return SendClientMessage(playerid, 0xE74C3CFF, "[UYARI] Bölge ismi max 25 harf'den oluþabilir.");
	if(gelir < 1000 || gelir > 10000) return SendClientMessage(playerid, 0xE74C3CFF, "[UYARI] Bölge geliri en düþük 1,000 en fazla 10,000 olabilir.");
    if(skor < 3 || skor > 7) return SendClientMessage(playerid, 0xE74C3CFF, "[UYARI] Bölge skoru en düþük 3 en fazla 7 olabilir.");
   	format(BolgeIslem[id][bolgeIsim], MAX_bIsim, i);
	format(BolgeIslem[id][bolgeSahip], MAX_PLAYER_NAME, "-");
	BolgeIslem[id][bolgeGelir] = gelir;
	BolgeIslem[id][bolgeSkor] = skor;
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    BolgeIslem[id][labelPos][0] = pos[0];
    BolgeIslem[id][labelPos][1] = pos[1];
    BolgeIslem[id][labelPos][2] = pos[2];
    BolgeIslem[id][bolgePos][0] = pos[0]-Genislik;
    BolgeIslem[id][bolgePos][1] = pos[1]-Genislik;
    BolgeIslem[id][bolgePos][2] = pos[0]+Genislik;
    BolgeIslem[id][bolgePos][3] = pos[1]+Genislik;
    BolgeIslem[id][bolgedurum] = false;
    BolgeIslem[id][zoneID] = GangZoneCreate(pos[0]-Genislik, pos[1]-Genislik, pos[0]+Genislik, pos[1]+Genislik);
    BolgeIslem[id][arenaID] = CreateDynamicRectangle(pos[0]-Genislik, pos[1]-Genislik, pos[0]+Genislik, pos[1]+Genislik, -1, -1, -1);
	foreach(new x: Player) GangZoneShowForPlayer(x, BolgeIslem[id][zoneID], 0xEDD83488);

	new query[250];

	mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `bolgeler`(`bid`, `bolgeSahip`) VALUES ('%d', '-')", id);
	mysql_tquery(g_SQL, query, "","");

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `bIsim` = '%s' WHERE `bid` = '%d' LIMIT 1", i, id);
	mysql_tquery(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `bolgeGelir` = '%d' WHERE `bid` = '%d' LIMIT 1", gelir, id);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `bolgeSkor` = '%d' WHERE `bid` = '%d' LIMIT 1", skor, id);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `fX` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][bolgePos][0], id);
	mysql_tquery(g_SQL, query);

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `fY` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][bolgePos][1], id);
	mysql_tquery(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `fZ` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][bolgePos][2], id);
	mysql_tquery(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `fA` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][bolgePos][3], id);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `LposX` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][labelPos][0], id);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `LposY` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][labelPos][1], id);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `bolgeler` SET `LposZ` = '%f' WHERE `bid` = '%d' LIMIT 1", BolgeIslem[id][labelPos][2], id);
	mysql_tquery(g_SQL, query);

	Iter_Add(Bolgeler, id);

	format(query, sizeof(query), "{20F587}[ BÖLGE ]\n{FCDC5B}%s(%d)\n{FF4242}Sahip: {FFFFFF}Yok\n{FF4242}Gelir: {FFFFFF}$%s\n{52C5FF}/EleGecir", i, id, convertNumber(gelir));
	BolgeIslem[id][bolgeLabel] = CreateDynamic3DTextLabel(query, 0xFFFFFFFF, pos[0], pos[1], pos[2], 45.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 45.0);

	format(query, sizeof(query), "[BILGI] {FFFFFF}%s isimli bölge oluþturuldu. ID: %d", i, id);
	SendClientMessage(playerid, 0xFFBF00FF, query);
	return 1;
}

CMD:bolgesil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pAdmin] < 9 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için GM+ levele sahip olmalýsýn.");
	new id;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, 0xE74C3CFF, "Kullan: /BolgeSil [ID]");
	if(!Iter_Contains(Bolgeler, id)) return SendClientMessage(playerid, 0xE74C3CFF, "Bu id de bölge yok !");
	format(BolgeIslem[id][bolgeIsim], MAX_bIsim, "");
	format(BolgeIslem[id][bolgeSahip], MAX_PLAYER_NAME, "");
 	BolgeIslem[id][bolgeGelir] = 0;
	BolgeIslem[id][bolgeSkor] = 0;
    BolgeIslem[id][bolgePos][0] = 0.0;
    BolgeIslem[id][bolgePos][1] = 0.0;
    BolgeIslem[id][bolgePos][2] = 0.0;
    BolgeIslem[id][bolgePos][3] = 0.0;
    BolgeIslem[id][bolgedurum] = false;
    DestroyDynamicArea(BolgeIslem[id][arenaID]);
    DestroyDynamic3DTextLabel(BolgeIslem[id][bolgeLabel]);
    BolgeIslem[id][bolgeLabel] = Text3D: INVALID_3DTEXT_ID;
    GangZoneDestroy(BolgeIslem[id][zoneID]);
   	new query[64];
	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM bolgeler WHERE bid=%d", id);
	mysql_tquery(g_SQL, query, "", "");
	format(query, sizeof(query), "{FF7D7D}[BOLGE] {FFFFFF}%d ID'li bölge silindi.", id);
	SendClientMessage(playerid, -1, query);
	Iter_Remove(Bolgeler, id);
	return 1;
}

CMD:elegecir(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz !");
	new b = BolgeBul(playerid), g = g_oIslem[playerid][g_Id], msj[103 + 16 + 25 + 5 + 10];
	if(b == -1) return hataMesaji(playerid, "Bir bölgede deðilsin !");
    if(g == -1) return hataMesaji(playerid, "Bölge ele geçirmek için bir grupta olmalýsýn.");
    if(strcmp(grupIslem[g][g_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu grubun kurucusu deðilsin !");
	if(BolgeIslem[b][bolgedurum]) return hataMesaji(playerid, "Bu bölge zaten ele geçiriliyor.");
	if(oyuncuData[playerid][hapisSure] >= 1) return SendClientMessage(playerid, 0xFF1741FF, "Hapisteyken bir bölgeyi ele geçiremezsin !");
	if(oIslem[playerid][dondurulmus] == 1) return SendClientMessage(playerid, 0xFF1741FF, "Dondurulmuþken bölge ele geçiremezsin !");
	if(oIslem[playerid][kelepce] == 1) return SendClientMessage(playerid, 0xFF1741FF, "Kelepçeliyken bölge ele geçiremezsin !.");
	if(oIslem[playerid][kacirilma] == 1) return SendClientMessage(playerid, 0xFF1741FF, "Kaçýrýlmýþken bölge ele geçiremezsin.");
	if(GetPlayerScore(playerid) < 50) return SendClientMessage(playerid, 0xFF1741FF, "Bölgeyi ele geçirmek için 50 skora ihtiyacýn var");
    if(strcmp(BolgeIslem[b][bolgeSahip], getName(playerid), false) == 0) return SendClientMessage(playerid, 0xFF1741FF, "Bu bölge zaten sizin tarafýnýzdan ele geçirilmiþ.");
	format(msj, sizeof(msj), "{92F22A}« BÖLGE » {FF6600}%s {FFFFFF}isimli grup tarafýndan {6FA6F2}%s {FFFFFF}adlý bölge ele geçiriliyor...", grupIslem[g][g_Ismi], BolgeIslem[b][bolgeIsim]);
	SendClientMessageToAll(0xF2E76DFF, msj);
	aranmaLeveli(playerid, 8);
	BolgeIslem[b][bolgeSure] = BOLGE_SURE;
	BolgeIslem[b][bolgeAlindi] = 0;
	BolgeIslem[b][bolgedurum] = true;
	SetPVarInt(playerid, "TempBolge", b);
	if(BolgeTimerDurum[playerid] == 0)
	{
		BolgeTimer[playerid] = SetTimerEx("BolgeKontrol", 1000, true, "d", playerid);
		BolgeTimerDurum[playerid] = 1;
	}
	return 1;
}

// Genel Komutlar

CMD:aracrenkgoster(playerid,params[]){return cmd_aracrenkleri(playerid,"");}
CMD:aracrenkleri(playerid,params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new BigString[3098];
	for(new i = 0; i < sizeof(ColorList); i++) format(BigString, sizeof(BigString), "%s%s", BigString, ColorList[i]);
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Araç Renkleri", BigString, "Kapat","");
	return 1;
}

CMD:arenk(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new r_1, r_2, a = GetPlayerVehicleID(playerid), query[120];
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
	if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý rengini deðiþtirmek için sürücü olmalýsýn.");
	if(ParaKorumasi[playerid] < 10000) return hataMesaji(playerid, "$10000 dolarýn olmadan araç renklerini deðiþtiremezsin !");
	if(sscanf(params, "dd", r_1, r_2)) return aBilgi(playerid, "/aRenk [Renk 1] [Renk 2]");
	if(r_1 < 0 || r_1 > 255) return hataMesaji(playerid, "Renk 1 deðerleri 0 ile 255 arasý olmalýdýr !");
    if(r_2 < 0 || r_2 > 255) return hataMesaji(playerid, "Renk 2 deðerleri 0 ile 255 arasý olmalýdýr !");
	if(AraclarIslem[a][aAktif])
 	{
		if(strcmp(AraclarIslem[a][a_Sahip], getName(playerid), false) != 0)
	    {
    		new aylinim[85 + 24], Float:pX, Float:pY, Float:pZ;
	    	format(aylinim, sizeof(aylinim), "Araç: {FFFFFF}Bu araç oyuncu {FD5B03}%s {FFFFFF}aittir. Renk deðiþtiremezsin !", AraclarIslem[a][a_Sahip]);
	    	SendClientMessage(playerid, 0x71BA51FF, aylinim);
			GetPlayerPos(playerid,pX, pY, pZ);
			SetPlayerPos(playerid,pX, pY+2, pZ);
	        return 1;
	    }
	    ChangeVehicleColor(a, r_1, r_2);
	  	AraclarIslem[a][a_Renk][0] = r_1;
		AraclarIslem[a][a_Renk][1] = r_2;
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aR1` = '%d' WHERE `nid` = '%d' LIMIT 1", r_1, AraclarIslem[a][aSQL]);
		mysql_query(g_SQL, query);
	 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `normalarac` SET `aR2` = '%d' WHERE `nid` = '%d' LIMIT 1", r_2, AraclarIslem[a][aSQL]);
		mysql_query(g_SQL, query);
 	}
    if(CeteArac[a][ceteAracAktif])
    {
        if(PlayerCete[playerid] != CeteArac[a][ceteIDsi])
        {
    		new Float:pXos[3], ba[80+24];
			GetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
			SetPlayerPos(playerid, pXos[0], pXos[1], pXos[2]);
			format(ba, sizeof(ba), "{B8B6A6}Bu araç {EC555C}%s {B8B6A6}çetesine ait. Renk deðiþimi yapýlamaz !", CeteIslem[CeteArac[a][ceteIDsi]][ceteIsmi]);
			SendClientMessage(playerid, -1, ba);
			return 1;
        }
    }
    ChangeVehicleColor(a, r_1, r_2);
	SendClientMessage(playerid, 0x00FF00FF, "Renk deðiþtirildi.");
	pParaver(playerid, -10000);
	return 1;
}

CMD:songiris(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(isnull(params)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/SonGiris (Nick)");
	if(strlen(params) > 24) return hataMesaji(playerid, "Bir oyuncunun nicki maksimum 24 harfden oluþabilir !");
	new query[116 + 24], Cache:VeriCek, list[200+66], tarih, _xx[65], _xx2[15];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%s' LIMIT 1", params);
	VeriCek = mysql_query(g_SQL, query);
   	new rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "SonGiris", tarih);
		TimeStampTamTarih(tarih, _xx);
		TimeStampSaat(tarih, _xx2);
		format(list,sizeof(list),"{FAA009}%s {ffffff}isimli oyuncun servere en son giriþ yaptýðý tarih ve saati:\n\n{3FA6AE}Tarih: {FFFFFF}%s\n{3FA6AE}Saat: {FFFFFF} %s", params, _xx, _xx2);
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Son Giriþ", list, "Kapat", "");
	}
	else
	{
	    hataMesaji(playerid, "Bu oyuncu veritabanýnda kayýtlý deðil.");
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:paraver(playerid,params[])
{
	if(GetPVarInt(playerid, "ParaBlock") > gettime()) return hataMesaji(playerid, "Paralarý 3 saniye de bir gönderebilirsiniz. Artýk istediðiniz miktarý yollayabilirsiniz.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID, para, str[45 + MAX_PLAYER_NAME + 3 + 9];
	if(sscanf(params, "ui", ID, para)) return SendClientMessage(playerid, 0xD324FFFF, "{D324FF}Kullaným: {FFFFFF}/Paraver [ID] [Istediðiniz Miktar]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendine para veremezsin !");
    if(GetPlayerDistanceFromPlayer(playerid, ID) > 4) return hataMesaji(playerid, "Para vermek istediðin oyuncu uzaðýnda !");
	if(ParaKorumasi[playerid] < para) return hataMesaji(playerid, "Yeterli paran yok !");
	if(para <= 0) return hataMesaji(playerid, "En düþük $1 dolar verebilirsin.");
	SetPVarInt(playerid, "ParaBlock", gettime() + 3);
	//if(para > 1000000) return hataMesaji(playerid, "Maksimum $1,000,000 dolar verebilirsin.");
	pParaver(playerid, -para);
	pParaver(ID, para);
	format(str,sizeof(str),"[PARA] Oyuncu %s, size $%s dolar para verdi.", getName(playerid), convertNumber(para));
	SendClientMessage(ID, 0xFAA009FF, str);
	format(str,sizeof(str),"[PARA] Oyuncu %s, $%s dolar para verdiniz.", getName(ID), convertNumber(para));
	SendClientMessage(playerid, 0xFAA009FF, str);
	ParaLogu(playerid, 3, getName(ID), para);
	return 1;
}

CMD:mkapat(playerid,params[])
{
	StopAudioStreamForPlayer(playerid);
	SendClientMessage(playerid, 0xFAA009FF, "Bilgi: {FFFFFF}Aktif olan þarkýyý durdurdunuz.");
	return 1;
}

CMD:zirh(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 10000) return hataMesaji(playerid, "Zirh almak için $10,000 dolarýn olmasý lazým.");
	if(SureYasagi(playerid, "ZirhYasagi", 60)) return 1;
	Zirhver(playerid, yZirh(playerid));
	pParaver(playerid, -10000);
	SendClientMessage(playerid, 0xFAA009FF, "Zýrh satýn alýndý.");
	return 1;
}

CMD:knife(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 5000) return hataMesaji(playerid, "Knife almak için $5,000 dolarýn olmasý lazým.");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý olan bölgelerde araç getirilemez !");
	return 1;}}
	Silahver(playerid, 4, 1);
	pParaver(playerid, -5000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Knife satýn alýndý.");
	return 1;
}

CMD:deagle(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 25000) return hataMesaji(playerid, "Deagle almak için $25,000 dolarýn olmasý lazým.");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý olan bölgelerde araç getirilemez !");
	return 1;}}
	Silahver(playerid, 24, 100);
	pParaver(playerid, -25000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Deagle satýn alýndý.");
	return 1;
}

CMD:sawn(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 50000) return hataMesaji(playerid, "Sawnoff Shotgun almak için $50,000 dolarýn olmasý lazým.");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý olan bölgelerde araç getirilemez !");
	return 1;}}
	Silahver(playerid, 26, 100);
	pParaver(playerid, -50000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Sawnoff Shotgun satýn alýndý.");
	return 1;
}

CMD:mp5(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 15000) return hataMesaji(playerid, "MP5 almak için $15,000 dolarýn olmasý lazým.");
	Silahver(playerid, 29, 250);
	pParaver(playerid, -15000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}MP5 satýn alýndý.");
	return 1;
}

CMD:ak47(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 10000) return hataMesaji(playerid, "AK-47 almak için $10,000 dolarýn olmasý lazým.");
	Silahver(playerid, 30, 150);
	pParaver(playerid, -10000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}AK-47 satýn alýndý.");
	return 1;
}

CMD:m4(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 25000) return hataMesaji(playerid, "M4 almak için $25,000 dolarýn olmasý lazým.");
	Silahver(playerid, 31, 150);
	pParaver(playerid, -25000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}M4 satýn alýndý.");
	return 1;
}

CMD:tec9(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 15000) return hataMesaji(playerid, "Tec9 almak için $15,000 dolarýn olmasý lazým.");
	Silahver(playerid, 32, 250);
	pParaver(playerid, -15000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Tec9 satýn alýndý.");
	return 1;
}

CMD:uzi(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 30000) return hataMesaji(playerid, "Uzi almak için $30,000 dolarýn olmasý lazým.");
	Silahver(playerid, 28, 500);
	pParaver(playerid, -30000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Uzi satýn alýndý.");
	return 1;
}

CMD:combat(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 30000) return hataMesaji(playerid, "Combat Shotgun almak için $30,000 dolarýn olmasý lazým.");
	Silahver(playerid, 27, 100);
	pParaver(playerid, -30000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Combat Shotgun satýn alýndý.");
	return 1;
}

CMD:sniper(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 50000) return hataMesaji(playerid, "Sniper almak için $50,000 dolarýn olmasý lazým.");
	Silahver(playerid, 34, 50);
	pParaver(playerid, -50000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Sniper satýn alýndý.");
	return 1;
}

CMD:9mm(playerid,params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(ParaKorumasi[playerid] < 10000) return hataMesaji(playerid, "9mm almak için $10,000 dolarýn olmasý lazým.");
	Silahver(playerid, 23, 100);
	pParaver(playerid, -10000);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}9mm satýn alýndý.");
	return 1;
}

CMD:pmengelle(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID;
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/PmEngelle (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendini engelleyemezsin.");
	if(Iterator_Bul(PMEngel{playerid}, ID)) return hataMesaji(playerid, "Bu oyuncuyu zaten engellediniz.");
	Iterator_Ekle(PMEngel{playerid}, ID);
    SCM_Ex(playerid, 0x6AB04CFF, "[!] Oyuncu %s(%d), artýk size pm atamayacak. Kaldýrmak için /PmEngelKaldir komutunu kullanýn.", getName(ID), ID);
	return 1;
}

CMD:pmengelkaldir(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID;
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/PmEngelKaldir (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
	if(playerid == ID) return hataMesaji(playerid, "Bu komutu kendi üstünde kullanamazsýn.");
	if(!Iterator_Bul(PMEngel{playerid}, ID)) return hataMesaji(playerid, "Bu oyuncuyu engel listenizde yer almýyor.");
	Iterator_Sil(PMEngel{playerid}, ID);
    SCM_Ex(playerid, 0x6AB04CFF, "[!] Oyuncu %s(%d), artýk size pm atabilir. Tüm engelleri kaldýrmak için /PmEngelTemizle", getName(ID), ID);
	return 1;
}

CMD:pmengeltemizle(playerid)
{
    Iterator_Temizle(PMEngel{playerid});
    SCM_Ex(playerid, 0x6AB04CFF, "[!] Artýk tüm oyuncular size Pm atabilir.");
	return 1;
}

CMD:pmac(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new durum = GetPVarInt(playerid, "PmDurum");
	if(durum <= 0) return hataMesaji(playerid, "Zaten pm'niz aktif.");
	SetPVarInt(playerid, "PmDurum", 0);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Pm'niz aktif edildi.");
	return 1;
}

CMD:pmkapat(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new durum = GetPVarInt(playerid, "PmDurum");
	if(durum == 1) return hataMesaji(playerid, "Zaten pm'niz kapalý.");
	SetPVarInt(playerid, "PmDurum", 1);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Pm'niz kapatýldý.");
	return 1;
}

CMD:pm(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(GetPlayerScore(playerid) < 10) return hataMesaji(playerid, "Bir oyuncuya PM atmanýz için 10 veya daha fazla skorunuz olmasý gerekir.");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
 	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	new ID, msj[148], m[148];
	if(sscanf(params, "us[148]", ID, msj)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Pm (Oyuncu ID) (Mesaj)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendine Pm atamazsýn !");
	if(Iterator_Bul(PMEngel{ID}, playerid)) return hataMesaji(playerid, "Bu oyuncu sizden pm almayý engellemiþ.");
 	if(stringContainsIP(msj))
	{
		hataMesaji(playerid, "Ip reklamý yapýp ne yapacaksýn ahbap ?");
		return 1;
	}
    if(GetPVarInt(ID, "SpawnOldum") == 0) return hataMesaji(playerid, "Bu oyuncu daha spawn olmamýþ !");
	new durum = GetPVarInt(ID, "PmDurum");
	if(durum == 1) return hataMesaji(playerid, "Bu oyuncunun Pm'si kapalý.");
	if(AFkMi[ID] == 1) hataMesaji(playerid, "Bu oyuncu AFK, mesajýnýza yanýt veremeyebilir.");
   	if(GetPVarInt(playerid, "PmFloodKorumasi") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "PmFloodKorumasi", GetTickCount() + 500);
	    return 1;
	}
	format(m, sizeof(m), "<< PM: - %s(%d): %s", getName(ID), ID, msj);
	printf(m);
	SendClientMessage(playerid, 0xfff176ff, m);
	format(m, sizeof(m), ">> PM: - %s(%d): %s", getName(playerid), playerid, msj);
    printf(m);
	SendClientMessage(ID, 0x0288d1ff, m);
	SetPVarInt(playerid, "PmFloodKorumasi", GetTickCount() + 500);
	format(m, sizeof(m), "** |PM|: %s(%d) >> %s(%d): %s", getName(playerid), playerid, getName(ID), ID, msj);
	foreach(new i : Player) if(oyuncuData[i][pmGorme] == 1) if(i != playerid) SendClientMessage(i, 0xA19C69FF, m);
	return 1;
}

CMD:local(playerid, params[]) return cmd_l(playerid, "");
CMD:l(playerid, params[])
{
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(GetPlayerScore(playerid) < 10) return hataMesaji(playerid, "Yakýnýndaki oyunculara mesaj atmak için 10 veya daha fazla skorunuz olmasý gerekir.");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
    new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure), 0;
    if(etkLocal[playerid] == 1) return hataMesaji(playerid, "Etkinlikte local kullanýmý kapatýlmýþ.");
	new msj[148], m[148], Float: _Pos[3];
	if(sscanf(params, "s[148]", msj)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/(L)ocal (Mesaj)");
	if(stringContainsIP(msj))
	{
		hataMesaji(playerid, "Ip reklamý yapýp ne yapacaksýn ahbap ?");
		return 1;
	}
	GetPlayerPos(playerid, _Pos[0], _Pos[1], _Pos[2]);
	if(GetPVarInt(playerid, "LocalFloodKorumasi") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "LocalFloodKorumasi", GetTickCount() + 150);
	    return 1;
	}
	foreach(new i: Player)
	{
		if(IsPlayerInRangeOfPoint(i, 50.0, _Pos[0], _Pos[1], _Pos[2]))
		{
 			format(m, sizeof(m), "{E01931}« LOCAL »  {00B5B5}%s(%d): %s", getName(playerid), playerid, msj);
			SendClientMessage(i, 0x8858EFFF, m);
		}
	  	format(m, sizeof(m), "** |Local|: %s(%d): %s", getName(playerid), playerid, msj);
		if(oyuncuData[i][LocalGorme] == 1) if(i != playerid) SendClientMessage(i, 0xA19C69FF, m);
	}
	SetPVarInt(playerid, "LocalFloodKorumasi", GetTickCount() + 150);
	return 1;
}

CMD:akilitle(playerid,params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için bir araçta olmalýsýn.");
	if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý kilitlemek için sürücü olmalýsýn.");
	foreach(new i: Player) if(i != playerid) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 1);
	SendClientMessage(playerid, 0x00FF00FF, "[BILGI] {FFFFFF}Araç kapýlarý kilitlendi.");
	return 1;
}

CMD:akilitac(playerid,params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için bir araçta olmalýsýn.");
	if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracýn kilitlerini açmak için sürücü olmalýsýn.");
	foreach(new i: Player) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 0);
	SendClientMessage(playerid, 0x00FF00FF, "[BILGI] {FFFFFF}Araç kapýlarýnýn kilitleri açýldý.");
	return 1;
}

CMD:acikar(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araç içinde olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Araçtan birini çýkarmak için sürücü olmalýsýn.");
    new id, str[70], Float: xx[3];
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/aCikar (ID)");
    if(playerid == id) return hataMesaji(playerid, "Kendi aracýndan kendini mi çýkaracaksýn ?");
    if(GetPlayerState(id) != 3) return hataMesaji(playerid, "Bu oyuncu araba koltuðunda deðil.");
    if(GetPlayerDistanceFromPlayer(playerid, id) > 4) return hataMesaji(playerid, "Kiþi yakýnýnýzda deðil.");
	GetPlayerPos(id, xx[0], xx[1], xx[2]);
	SetPlayerPos(id, xx[0] - 1.5, xx[1] - 1.5, xx[2] + 1.0);
    format(str, sizeof(str), "[BILGI] {FFFFFF}Oyuncu %s(%d), sizi araçtan çýkarttý !", getName(playerid), playerid);
    SendClientMessage(id, 0xC390D4FF, str);
    SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Oyuncuyu araçtan çýkardýnýz.");
	return 1;
}

CMD:ar(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(GetPlayerScore(playerid) < 10) return hataMesaji(playerid, "Araç içinde oyunculara mesaj atmak için 10 veya daha fazla skorunuz olmasý gerekir.");
    if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araç içinde olmalýsýn.");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
    new msj[148], m[148];
	if(sscanf(params, "s[148]", msj)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Ar (Mesaj)");
	if(stringContainsIP(msj))
	{
		hataMesaji(playerid, "Ip reklamý yapýp ne yapacaksýn ahbap ?");
		return 1;
	}
	new aracid = GetPlayerVehicleID(playerid);
	foreach(new i: Player)
	{
		if(GetPlayerVehicleID(i) == aracid)
		{
			format(m, sizeof(m), "{00B5B5}« Araç Ýçi »  {e84e40}%s(%d): %s", getName(playerid), playerid, msj);
			SendClientMessage(i, -1, m);
		}
  		if(oyuncuData[i][ArGorme] == 1)
    	{
    		format(m, sizeof(m), "** |Araç Ýçi|: Araç ID: (%d) - %s(%d) >> %s.", aracid, getName(playerid), playerid, msj);
			if(i != playerid)
			{
				SendClientMessage(i, 0xA19C69FF, m);
			}
   		}
	}
	return 1;
}

CMD:animdurdur(playerid, params[])
{
    if(PlayerBanka[playerid][bankaSoyuyor] == 1 || PlayerBanka[playerid][bankaSoyuyor] == 2) return hataMesaji(playerid, "Önce animasyonlarýn bitmesini bekleyin !");
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bu komutu kullanamazsýn !");
	if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Elleriniz kelepçeliyken bu komutu kullanamazsýnýz !");
    ClearAnimations(playerid);
    SendClientMessage(playerid,-1,"{FF0000}Animasyon: {ffffff}Þuanda {00ff00}animasyonu {ffffff}durdurdunuz.");
	return 1;
}

CMD:toppara(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    new query[200];
    foreach(new i: Player)
	{
	    if(oyuncuData[i][GirisKontrol] == true)
	    {
  			new mxx = ParaKorumasi[i];
	  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Para` = %d WHERE `id` = %d LIMIT 1", mxx, oyuncuData[i][xID]);
			mysql_query(g_SQL, query);
		}
	}
	new Cache:VeriCek65;
    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` ORDER BY `Para` DESC, `isim` LIMIT 0, 10;");
	VeriCek65 = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new list[1024], IsimCek[24], count = 1, paraxx;
		format(list, sizeof(list), "{7A8AFF}#\t{7A8AFF}Isim\t{7A8AFF}Para\n");
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "isim", IsimCek);
			cache_get_value_name_int(i, "Para", paraxx);
			format(list, sizeof(list), "%s{FFFFFF}%d.\t{FFFFFF}%s\t{00FF00}$%s\n", list, count, IsimCek, convertNumber(paraxx));
			count++;
		}
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top 10 - Para", list, "Kapat", "");
	}
	cache_delete(VeriCek65);
	return 1;
}

CMD:topskor(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    new query[200];
    foreach(new i: Player)
	{
	    if(oyuncuData[i][GirisKontrol] == true)
	    {
	  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Skor` = %d WHERE `id` = %d LIMIT 1", GetPlayerScore(i), oyuncuData[i][xID]);
			mysql_query(g_SQL, query);
		}
	}
	new Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` ORDER BY `Skor` DESC, `isim` LIMIT 0, 10;");
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new list[1024], IsimCek[24],count = 1,skorrr;
		format(list, sizeof(list), "{7A8AFF}#\t{7A8AFF}Isim\t{7A8AFF}Skor\n");
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "isim", IsimCek);
			cache_get_value_name_int(i, "Skor", skorrr);
			format(list,sizeof(list),"%s{FFFFFF}%d.\t{FFFFFF}%s\t{00FF00}%s\n", list, count, IsimCek, convertNumber(skorrr));
			count++;
		}
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top 10 - Skor", list, "Kapat", "");
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:toponline(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    new query[200];
    foreach(new i: Player)
	{
	    if(oyuncuData[i][GirisKontrol] == true)
	    {
	  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `OnlineSure` = %d WHERE `id` = %d LIMIT 1", oyuncuData[i][onlineSure], oyuncuData[i][xID]);
			mysql_query(g_SQL, query);
		}
	}
	new Cache:VeriCek54;
	mysql_format(g_SQL, query, sizeof(query), "SELECT `OnlineSure`, `isim` FROM `oyuncuveri` ORDER BY `OnlineSure` DESC LIMIT 10");
	VeriCek54 = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new list[1024], IsimCek[24], count = 1, oSurre;
		format(list, sizeof(list), "{7A8AFF}#\t{7A8AFF}Isim\t{7A8AFF}Online Süre\n");
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "isim", IsimCek);
			cache_get_value_name_int(i, "OnlineSure", oSurre);
			new year, month, day, hour, minute, second;
			SureCek(oSurre, year, month, day, hour, minute, second);
			format(list, sizeof(list), "%s{FFFFFF}%d.\t{FFFFFF}%s\t{4d69ff}%d yýl | %d ay | %d gün | %d saat | %d dakika | %d saniye\n", list, count, IsimCek, year, month, day, hour, minute, second);
			count++;
		}
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top 10 - Online Süre", list, "Kapat", "");
	}
	cache_delete(VeriCek54);
	return 1;
}

stock SureCek(_cSure, &yil, &ay, &gun, &saat, &dakika, &saniye)
{
	// new diff_secs = ( GetPVarInt(playerid, "VIPTime") - gettime() );
	yil = ( _cSure / (60 * 60 * 24 * 365) );
    _cSure -= yil * 60 * 60 * 24 * 365;

    ay = ( _cSure / (60 * 60 * 24 * 30) );
    _cSure -= ay * 60 * 60 * 24 * 30;

	gun = ( _cSure / (60 * 60 * 24) );
    _cSure -= gun * 60 * 60 * 24;

	saat = ( _cSure / (60 * 60) );
    _cSure -= saat * 60 * 60;

	dakika = ( _cSure / 60 );
    _cSure -= dakika * 60;

    saniye = _cSure;
}

CMD:topbanka(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    new query[200];
    foreach(new i: Player)
	{
	    if(oyuncuData[i][GirisKontrol] == true)
	    {
	  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BankaPara` = %d WHERE `id` = %d LIMIT 1", oyuncuData[i][pBankaPara], oyuncuData[i][xID]);
			mysql_query(g_SQL, query);
		}
	}
	new Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` ORDER BY `BankaPara` DESC, `isim` LIMIT 0, 10;");
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new list[1024], IsimCek[24],count = 1,xxBanka;
		format(list, sizeof(list), "{7A8AFF}#\t{7A8AFF}Isim\t{7A8AFF}Banka Parasý\n");
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "isim", IsimCek);
			cache_get_value_name_int(i, "BankaPara", xxBanka);
			format(list,sizeof(list),"%s{FFFFFF}%d.\t{FFFFFF}%s\t{00FF00}$%s\n", list, count, IsimCek, convertNumber(xxBanka));
			count++;
		}
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top 10 - Banka", list, "Kapat", "");
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:banlistesi(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][pAdmin] < 2) return hataMesaji(playerid, "Bu komutu kullanmak için 2 level ve üstüne sahip olmalýsýn.");
    banSayfasi[playerid] = 0;
    new Cache:VeriCek, query[85];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` ORDER BY banid DESC LIMIT %d, 15;", banSayfasi[playerid] * 15);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new
			list[1500],
			_banlayan[24],
			_banlanan[24],
			_tarih,
			_sebep[128],
			_xx[65]
		;
		format(list, sizeof(list), "Banlayan\tBanlanan\tTarih\tSebep\n");
		format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Sonraki Sayfa\t\t\t\n", list);
		format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Önceki Sayfa\t\t\t\n", list);
		format(list, sizeof(list), "%s\t\t\t\n", list);
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "Banlayan", _banlayan);
			cache_get_value_name(i, "Banlanan", _banlanan);
			cache_get_value_name_int(i, "YGA", _tarih);
			cache_get_value_name(i, "Sebep", _sebep);
			textfloodkontrol(_sebep);
			TimeStampTamTarih(_tarih, _xx);
			format(list, sizeof(list), "%s%s\t%s\t%s\t%s\n", list, _banlayan, _banlanan, _xx, _sebep);
		}
		ShowPlayerDialog(playerid, DIALOG_BANSAYFASI, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Ban Listesi > Sayfa: (1)", list, "Tamam", "Kapat");
	}
	if(!rows)
	{
	    SendClientMessage(playerid, 0xFF0000F, "Ban Listesi: {FFFFFF}Daha önce kimse banlanmamýþ.");
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:sorusor(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	new s[100], id, m[108];
	if(sscanf(params, "s[100]", s)) return SendClientMessage(playerid, 0xD324FFFF, "{D324FF}Kullaným: {FFFFFF}/SoruSor (Sorunuz)");
	if(SureYasagi(playerid, "SoruYasak", 60)) return 1;
	id = soru_bosID();
	Sorular[id][sonuclanmisMi] = 1;
    Sorular[id][gonderen] = playerid;
    format(Sorular[id][sorusu], 148, s);
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Sorunuz yetkili kiþilere ulaþtýrýldý.");
	foreach(new i: Player)
	{
	    format(m,sizeof(m),"[Soru] Oyuncu %s(%d) bir soru sordu, /Sorular yazarak yanýtlayabilirsiniz.", getName(playerid), playerid);
		if(oyuncuData[i][pRehber] >= 1) SendClientMessage(i, 0xCEA0E4FF, m);
		if(oyuncuData[i][pDj] >= 1) SendClientMessage(i, 0xCEA0E4FF, m);
		if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, 0xCEA0E4FF, m);
	}
	return 1;
}

CMD:sorular(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için Dj, Rehber ve 1 level admin olmalýsýn.");
    new sz[1024], xzc = 0, xzsc[15];
    format(sz, sizeof(sz), "{7A8AFF}#\t{7A8AFF}Gönderen\t{7A8AFF}Sorusu\n");
	for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(Sorular[i][sonuclanmisMi] == 0) continue;
	    format(xzsc, sizeof(xzsc), "SoruID_%d", xzc);
	    SetPVarInt(playerid, xzsc, i);
	    xzc++;
	    format(sz, sizeof(sz), "%s%d\t%s\t%s\n", sz, xzc, getName(Sorular[i][gonderen]), Sorular[i][sorusu]);
    }
	if(xzc == 0) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sorular", "Hiç kimse soru sormamýþ", "Kapat", "");
	if(xzc != 0) return ShowPlayerDialog(playerid, SORULAR, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Sorular", sz, "Yanýtla", "Kapat");
	return 1;
}

CMD:istek(playerid, params[]) return cmd_isteksarki(playerid, params);
CMD:isteksarki(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	new s[100], id, m[145];
	if(sscanf(params, "s[100]", s)) return SendClientMessage(playerid, -1, "{D324FF}Kullaným: {FFFFFF}/IstekSarki (Isteðiniz)");
	if(SureYasagi(playerid, "IstekYasak", 180)) return 1;
	id = istek_bosID();
	Sarkilar[id][acildiMi] = 1;
    Sarkilar[id][sGonderen] = playerid;
    format(Sarkilar[id][_url], 148, s);
	foreach(new i: Player)
	{
	    format(m,sizeof(m),"[Ýstek Þarký] Oyuncu %s(%d) yeni bir istek þarkýda bulundu. /Sarkilar komutuyla bu þarkýyý açabilirsiniz.", getName(playerid), playerid);
		if(oyuncuData[i][pRehber] >= 1) SendClientMessage(i, 0x2ECC71FF, m);
		if(oyuncuData[i][pDj] >= 1) SendClientMessage(i, 0x2ECC71FF, m);
		if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, 0x2ECC71FF, m);
	}
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Isteðiniz yetkili kiþilere ulaþtýrýldý.");
	return 1;
}

CMD:sarkilar(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için Dj, Rehber ve 1 level admin olmalýsýn.");
	new sz[1024], xzc = 0, xzsc[15];
    format(sz, sizeof(sz), "{7A8AFF}#\t{7A8AFF}Gönderen\t{7A8AFF}Ýstediði Þarký\n");
	for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(Sarkilar[i][acildiMi] == 0) continue;
	    format(xzsc, sizeof(xzsc), "sarkiID_%d", xzc);
	    SetPVarInt(playerid, xzsc, i);
	    xzc++;
	    format(sz, sizeof(sz), "%s%d\t%s\t%s\n", sz, xzc, getName(Sarkilar[i][sGonderen]), Sarkilar[i][_url]);
    }
	if(xzc == 0) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Ýstek Þarkýlar", "Hiç kimse istek þarkýda bulunmamýþ.", "Kapat", "");
	if(xzc != 0) return ShowPlayerDialog(playerid, SARKILAR, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Ýstek Þarkýlar", sz, "Ýþlem Yap", "Kapat");
	return 1;
}

CMD:report(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	new s[100], m[148], id;
	if(sscanf(params, "us[100]", id, s)) return SendClientMessage(playerid, 0xD324FFFF, "{D324FF}Kullaným: {FFFFFF}/Report (ID) (Þikayetiniz)");
    if(!IsPlayerConnected(id)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(playerid == id) return hataMesaji(playerid, "Kendini mi þikayet edeceksin ?");
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	if(SureYasagi(playerid, "ReportYasak", 30)) return 1;
	foreach(new i: Player)
	{
	    format(m,sizeof(m),"========================================================================");
	    if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, 0xEDD980FF, m);
	    format(m,sizeof(m),"[REPORT] Þikayetci: %s(%d) - Þikayet Edilen Oyuncu: %s(%d)", getName(playerid), playerid, getName(id), id);
	    if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, 0xEDD980FF, m);
	    format(m,sizeof(m),"Þikayeti: %s", s);
	    if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, 0xEDD980FF, m);
	}
	SendClientMessage(playerid, 0xC390D4FF, "[BILGI] {FFFFFF}Þikayetiniz yetkili adminlere ulaþtýrýldý.");
	return 1;
}


// Ev Sistemi

CMD:evolustur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new id = Iter_Free(Evler);
	if(id == -1) return hataMesaji(playerid, "Ev oluþturma limitine geldiniz, Ev Slotu'nu yükseltin veya baþka bir ev silin.");
	new eFiyat, eSeviye, query[250], Float:k0num[3], eVir = random(9876543);
	if(sscanf(params, "ii", eFiyat, eSeviye)) return SendClientMessage(playerid, -1, "{8870FF}Bilgi: {FFFFFF}/EvOlustur [Fiyat] [Ev Seviyesi]");
	if(eFiyat < 1 || eFiyat > 1000000000) return hataMesaji(playerid, "Ev fiyatýný minumum $1, maksimum $1,000,000,000 dolar girebilirsin.");
	if(eSeviye < 1 || eSeviye > 10) return hataMesaji(playerid, "Ev seviyeini en düþük 1, en fazla 10 girebilirsin.");
	GetPlayerPos(playerid, k0num[0], k0num[1], k0num[2]);
	format(EvIslem[id][EvIsmi], MAX_EV_ISMI, "-");
	format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, "-");
	EvIslem[id][EvPos][0] = k0num[0];
	EvIslem[id][EvPos][1] = k0num[1];
	EvIslem[id][EvPos][2] = k0num[2];
	EvIslem[id][evFiyat] = eFiyat;
	EvIslem[id][evOrjinalFiyat] = eFiyat;
	EvIslem[id][evDurumu] = 0;
	EvIslem[id][evSeviyesi] = eSeviye;
	format(EvIslem[id][evSifresi], MAX_PLAYER_NAME, "-");
	EvIslem[id][evVirtual] = eVir;
	EvIslem[id][evPara] = 0;
	mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `evler`(`eid`, `EvIsmi`) VALUES ('%d', '-')", id);
	mysql_tquery(g_SQL, query);
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvSahibi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
	mysql_tquery(g_SQL, query);
 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvX` = '%f' WHERE `eid` = '%d' LIMIT 1", k0num[0], id);
	mysql_tquery(g_SQL, query);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvY` = '%f' WHERE `eid` = '%d' LIMIT 1", k0num[1], id);
	mysql_tquery(g_SQL, query);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvZ` = '%f' WHERE `eid` = '%d' LIMIT 1", k0num[2], id);
	mysql_tquery(g_SQL, query);
   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", eFiyat, id);
	mysql_tquery(g_SQL, query);
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evOrjinalFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", eFiyat, id);
	mysql_tquery(g_SQL, query);
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evDurumu` = '0' WHERE `eid` = '%d' LIMIT 1", id);
	mysql_tquery(g_SQL, query);
 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evSeviyesi` = '%d' WHERE `eid` = '%d' LIMIT 1", eSeviye, id);
	mysql_tquery(g_SQL, query);
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evSifresi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
	mysql_tquery(g_SQL, query);
   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evVirtual` = '%d' WHERE `eid` = '%d' LIMIT 1", eVir, id);
	mysql_tquery(g_SQL, query);
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evPara` = '0' WHERE `eid` = '%d' LIMIT 1", id);
	mysql_tquery(g_SQL, query);
    format(query, sizeof(query), "{F31D2F}Satýlýk Ev (%d)\n{FD5B03}Ev Fiyatý: {FFFFFF}$%s\n{FD5B03}Ev Seviyesi: {FFFFFF}%d\n{597DF7}Evi Görmek Ýçin {F9B32A}F {597DF7}Tuþunu Kullanýn\n{597DF7}Satýn Almak Ýçin {F9B32A}/SatinAl {597DF7}Yazýn", id, convertNumber(eFiyat), eSeviye);
	EvIslem[id][evLabel] = CreateDynamic3DTextLabel(query, 0xFFFFFFFF, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2]+0.50, EV_LABEL_STREAM, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
	EvIslem[id][evPickup] = CreateDynamicPickup(1273, 1, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 0, 0, -1, EV_PICKUP_STREAM);
	EvIslem[id][evIcon] = CreateDynamicMapIcon(EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 31, -1, -1, -1, -1, EV_MAP_ICON_STREAM, 1);
	Iter_Add(Evler, id);
 	format(query,sizeof(query),"{88F159}=> Ev: {FFFFFF}Yeni bir satýlýk ev oluþturdunuz. Ev ID`si: %d", id);
	SendClientMessage(playerid, -1, query);
	return 1;
}

CMD:evsil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ sahip olmalýsýn.");
	new id, query[100], tmp_Isim[MAX_PLAYER_NAME];
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, -1, "{8870FF}Bilgi: {FFFFFF}/EvSil [Ev ID]");
	if(!Iter_Contains(Evler, id)) return hataMesaji(playerid, "Bu ID`de ev oluþturulmamýþ.");
 	format(EvIslem[id][EvIsmi], MAX_EV_ISMI, "-");
 	format(tmp_Isim, MAX_PLAYER_NAME, EvIslem[id][EvSahibi]);
	format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, "-");
	EvIslem[id][EvPos][0] = 0.0;
	EvIslem[id][EvPos][1] = 0.0;
	EvIslem[id][EvPos][2] = 0.0;
	EvIslem[id][evFiyat] = 0;
	EvIslem[id][evOrjinalFiyat] = 0;
	EvIslem[id][evDurumu] = 0;
	EvIslem[id][evSeviyesi] = 0;
	format(EvIslem[id][evSifresi], MAX_PLAYER_NAME, "-");
	EvIslem[id][evVirtual] = 0;
	EvIslem[id][evPara] = 0;
 	DestroyDynamic3DTextLabel(EvIslem[id][evLabel]);
	DestroyDynamicPickup(EvIslem[id][evPickup]);
	DestroyDynamicMapIcon(EvIslem[id][evIcon]);
 	EvIslem[id][evLabel] = Text3D: INVALID_3DTEXT_ID;
	EvIslem[id][evPickup] = EvIslem[id][evIcon] = -1;
	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `evler` WHERE `eid` = '%d' LIMIT 1", id);
	mysql_tquery(g_SQL, query);

	new oID = GetPlayerID(tmp_Isim), var_yok = 0;
	if(oID != INVALID_PLAYER_ID)
	{
		SetPVarInt(oID, "Evim", -1);
		evim[oID] = -1;
	    var_yok = 1;
	}else { var_yok = 0; }

	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
	    if(AraclarIslem[i][aAktif] == true)
	    {
	        if(strcmp(tmp_Isim, AraclarIslem[i][a_Sahip], false) == 0)
	        {
                format(AraclarIslem[i][a_Sahip], 24, "");
			    AraclarIslem[i][aAktif] = false;
			    AraclarIslem[i][aSQL] = -1;
			    if(var_yok == 1)
				{
					nAracSil(oID, i);
				}
			    DestroyVehicle(i);
	        }
	    }
	}

	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `normalarac` WHERE `aSahip` = '%e'", tmp_Isim);
	mysql_query(g_SQL, query);

	Iter_Remove(Evler, id);
 	format(query, sizeof(query), "{88F159}=> Ev: {FFFFFF}Þuanda %d ID`li evi sildiniz.", id);
	SendClientMessage(playerid, -1, query);
	return 1;
}

CMD:evfiyatguncelle(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new id, fiyatt, query[165], ticck = 0;
	if(sscanf(params, "dd", id, fiyatt)) return SendClientMessage(playerid, -1, "{8870FF}Bilgi: {FFFFFF}/EvFiyatGuncelle [Ev Seviyesi] [Yeni Fiyat]");
	if(id <= 0 || id > 10) return hataMesaji(playerid, "Ev seviyeleri 1 ile 10 arasýnda olmalý !");
	if(fiyatt < 1000000 || fiyatt > 500000000) return hataMesaji(playerid, "Ev fiyatý 1m ile 150m arasýnda olabilir.");
	foreach(new e: Evler)
	{
	    if(EvIslem[e][evSeviyesi] == id)
	    {
            ticck++;
            if(ticck >= 1)
            {
				EvIslem[e][evFiyat] = fiyatt;
				EvIslem[e][evOrjinalFiyat] = fiyatt;

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", fiyatt, e);
				mysql_tquery(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evOrjinalFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", fiyatt, e);
				mysql_tquery(g_SQL, query);

				EvLabelGuncelle2(e);
			}
		}
	}
	if(ticck == 0) hataMesaji(playerid, "Bu seviye de ev yok !");
	if(ticck != 0)
	{
	    format(query, sizeof(query), "[EV] Yetkili %s(%d), tarafýndan %d seviyeli evlerin fiyatý $%s olarak deðiþtirildi.", getName(playerid), playerid, id, convertNumber(fiyatt));
		SendClientMessageToAll(0x00FF00FF, query);
	}
	return 1;
}

CMD:evtemizle(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
    new gun, silinenEv = 0, query[155];
    if(sscanf(params, "d", gun)) return SendClientMessage(playerid, -1, "{8870FF}Bilgi: {FFFFFF}/EvTemizle [Gün]");
    if(gun < 1) return hataMesaji(playerid, "Günü en düþük 1 girebilirsiniz.");
    foreach(new i : Evler)
    {
        if(EvIslem[i][evDurumu] != 0)
        {
            new
				sureCek = 0
			;
			sureCek = evSureCek(EvIslem[i][EvSahibi]);
			sureCek += gun * 86400;
			if(sureCek < gettime())
			{
			    silinenEv++;
				new id = i, toplamPara = 0;
				toplamPara += EvIslem[id][evOrjinalFiyat];
				EvIslem[id][evFiyat] = EvIslem[id][evOrjinalFiyat];
				EvIslem[id][evDurumu] = 0;
				format(EvIslem[id][evSifresi], MAX_PLAYER_NAME, "-");
				EvIslem[id][evPara] = 0;

				mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `evid` = '-1' WHERE `isim` = '%e' LIMIT 1", EvIslem[id][EvSahibi]);
				mysql_query(g_SQL, query);
				
				format(EvIslem[id][EvIsmi], MAX_EV_ISMI, "-");
				format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, "-");

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvIsmi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvSahibi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `EvFiyat` = '%d' WHERE `eid` = '%d' LIMIT 1", EvIslem[id][evFiyat], id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evDurumu` = '0' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evSifresi` = '-' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `evler` SET `evPara` = '0' WHERE `eid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `BankaPara` = BankaPara + %d WHERE `isim` = '%e' LIMIT 1", toplamPara, EvIslem[i][EvSahibi]);
				mysql_query(g_SQL, query);

				new eLabel[250];
				format(eLabel, sizeof(eLabel), "{F31D2F}Satýlýk Ev (%d)\n{FD5B03}Ev Fiyatý: {FFFFFF}$%s\n{FD5B03}Ev Seviyesi: {FFFFFF}%d\n{597DF7}Evi Görmek Ýçin {F9B32A}F {597DF7}Tuþunu Kullanýn\n{597DF7}Satýn Almak Ýçin {F9B32A}/SatinAl {597DF7}Yazýn", id, convertNumber(EvIslem[id][evOrjinalFiyat]), EvIslem[id][evSeviyesi]);
				UpdateDynamic3DTextLabelText(EvIslem[id][evLabel], 0xFFFFFFFF, eLabel);
				Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[id][evPickup], E_STREAMER_MODEL_ID, 1273);
				Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[id][evIcon], E_STREAMER_TYPE, 31);

				new xray[80];
		  		mysql_format(g_SQL, xray, sizeof(xray), "SELECT * FROM `normalarac` WHERE `aSahip` = '%e' LIMIT 1", EvIslem[i][EvSahibi]);
				mysql_tquery(g_SQL, xray, "AracKontrollll", "s", EvIslem[i][EvSahibi]);
			}
        }
    }
    if(silinenEv == 0)
    {
        hataMesaji(playerid, "Temizlenecek evlerin süresi dolmamýþ !");
    }
    else
    {
		format(query, sizeof(query), "[TEMIZLIK] Yetkili %s(%d), son %d gün içerisinde girmeyen oyuncularýn evlerini temizledi. Toplam silinen ev sayýsý: %d", getName(playerid), playerid, gun, silinenEv);
		SendClientMessageToAll(0x2ECC71FF, query);
    }
	return 1;
}

stock evSureCek(_isim[])
{
	new
		query[80],
		xx = 0,
		Cache:VeriCek
	;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", _isim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "SonGiris", xx);
	}
	cache_delete(VeriCek);
	return xx;
}


function AracKontrollll(sahipIsmi[])
{
 	new rows = cache_num_rows();
	if(rows)
	{
	    new model_id = 0, tmp_Para = 0, pidd = 0;
		for(new i = 0; i < rows; ++i)
		{
		    pidd++;
		    cache_get_value_name_int(i, "aModel", model_id);
		    for(new x = 0; x < sizeof(AracListesi); x++)
		    {
		        if(AracListesi[x][arac_m] == model_id)
		        {
		            tmp_Para += AracListesi[x][arac_f];
		        }
		    }
		}
		new query[135];
	  	if(pidd >= 1){
		mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `normalarac` WHERE `aSahip` = '%e'", sahipIsmi);
		mysql_query(g_SQL, query);}
  		mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `BankaPara` = BankaPara + %d WHERE `isim` = '%e' LIMIT 1", tmp_Para, sahipIsmi);
		mysql_query(g_SQL, query);
	}
}

CMD:satinal(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new id = EvKontrol(playerid), uf[73 + 11 + 24 + 35];
	if(id == -1) return hataMesaji(playerid, "Bir ev satýn almak için yeþil ev iconlarýnýn üstünde olmalýsýn.");
	if(GetPlayerInterior(playerid) != 0) return hataMesaji(playerid, "Bir evi incelerken ev satýn alma iþlemi gerçekleþtiremezsin.");
    if(evim[playerid] != -1) return hataMesaji(playerid, "Sizin bir eviniz var zaten, önce satýn.");
	if(EvIslem[id][evDurumu] == 2)
	{
		if(BasariIslem[playerid][ilkEv] == 0){
		BasariIslem[playerid][ilkEv] = 1;
		basariKilidi(playerid, "ilkEv", "Ýlk Ev Satýn Alma", 25000, 250, 1);
		}
	    foreach(new e: Evler) if(strcmp(EvIslem[e][EvSahibi], getName(playerid), false) == 0) return hataMesaji(playerid, "Mevcut bir eviniz var. Önce evinizi satýn !");
 		new cek = GetPlayerID(EvIslem[id][EvSahibi]);
		if(ParaKorumasi[playerid] < EvIslem[id][evFiyat])
		{
		    format(uf, sizeof(uf), "{EF4836}=> Ev: {FFFFFF}Bu evi satýn almak için $%s dolara ihtiyacýn var.", convertNumber(EvIslem[id][evFiyat]-ParaKorumasi[playerid]));
			SendClientMessage(playerid, -1, uf);
			return 1;
		}
   		if(cek != INVALID_PLAYER_ID)
     	{
     	    pParaver(playerid, -EvIslem[id][evFiyat]);
     	    pParaver(cek, EvIslem[id][evFiyat]);
     	    format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, getName(playerid));
     	    EvIslem[id][evDurumu] = 1;
     	    EvIslem[id][evFiyat] = 0;
          	mysql_format(g_SQL, uf, sizeof uf, "UPDATE `oyuncuveri` SET `evid` = '%d' WHERE `id` = '%d' LIMIT 1", id, oyuncuData[playerid][xID]);
			mysql_query(g_SQL, uf);
			mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvSahibi` = '%s' WHERE `eid` = '%d' LIMIT 1", getName(playerid), id);
			mysql_query(g_SQL, uf);
   			mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `evDurumu` = '1' WHERE `eid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, uf);
			mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvFiyat` = '0' WHERE `eid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, uf);
			mysql_format(g_SQL, uf, sizeof uf, "UPDATE `oyuncuveri` SET `evid` = '-1' WHERE `id` = '%d' LIMIT 1", oyuncuData[cek][xID]);
			mysql_query(g_SQL, uf);
			format(uf, sizeof(uf), "=> Ev Bilgi: {FFFFFF}Oyuncu %s evini satýn aldýnýz.", getName(cek));
			SendClientMessage(playerid, 0x1DABB8FF, uf);
   			format(uf, sizeof(uf), "=> Ev Bilgi: {FFFFFF}Oyuncu %s evinizi satýn aldý.", getName(playerid));
			SendClientMessage(cek, 0x1DABB8FF, uf);
			EvLabelGuncelle(playerid, id);
			evim[playerid] = id;
			evim[cek] = -1;
			for(new i = 0; i < N_ARAC_KAPASITE; i++)
			{
                if(aracSlotu[cek][i] != 0)
				{
				    new aPid = aracSlotu[cek][i];
				    format(AraclarIslem[aPid][a_Sahip], 24, "");
				    AraclarIslem[aPid][aAktif] = false;
					mysql_format(g_SQL, uf, sizeof(uf), "DELETE FROM `normalarac` WHERE `nid` = '%d' LIMIT 1", AraclarIslem[aPid][aSQL]);
					mysql_tquery(g_SQL, uf);
				    AraclarIslem[aPid][aSQL] = -1;
					DestroyVehicle(aPid);
				}
                aracSlotu[cek][i] = 0;
			}
     	}
     	else
     	{
      		new Cache:VeriCekxx;
			mysql_format(g_SQL, uf, sizeof(uf), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e'", EvIslem[id][EvSahibi]);
			VeriCekxx = mysql_query(g_SQL, uf);
			if(cache_num_rows())
			{
   				mysql_format(g_SQL, uf, sizeof uf, "UPDATE `oyuncuveri` SET `evid` = '-1' WHERE `isim` = '%e' LIMIT 1", EvIslem[id][EvSahibi]);
				mysql_query(g_SQL, uf);

				mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `oyuncuveri` SET `BankaPara` = BankaPara + %d WHERE `isim` = '%e' LIMIT 1", EvIslem[id][evFiyat], EvIslem[id][EvSahibi]);
				mysql_tquery(g_SQL, uf);
			}
			cache_delete(VeriCekxx);

			mysql_format(g_SQL, uf, sizeof(uf), "DELETE FROM `normalarac` WHERE `aSahip` = '%e'", EvIslem[id][EvSahibi]);
			mysql_tquery(g_SQL, uf);

	   		if(BasariIslem[playerid][ilkEv] == 0){
			BasariIslem[playerid][ilkEv] = 1;
			basariKilidi(playerid, "ilkEv", "Ýlk Ev Satýn Alma", 25000, 250, 1);
			}

			pParaver(playerid, -EvIslem[id][evFiyat]);
   			format(uf, sizeof(uf), "=> Ev Bilgi: {FFFFFF}Oyuncu %s evini satýn aldýnýz.", EvIslem[id][EvSahibi]);
			SendClientMessage(playerid, 0x1DABB8FF, uf);
   			format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, getName(playerid));
     	    EvIslem[id][evDurumu] = 1;
     	    EvIslem[id][evFiyat] = 0;
			mysql_format(g_SQL, uf, sizeof uf, "UPDATE `oyuncuveri` SET `evid` = '%d' WHERE `id` = '%d' LIMIT 1", id, oyuncuData[playerid][xID]);
			mysql_query(g_SQL, uf);
   			mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvSahibi` = '%s' WHERE `eid` = '%d' LIMIT 1", getName(playerid), id);
			mysql_query(g_SQL, uf);
   			mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `evDurumu` = '1' WHERE `eid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, uf);
			mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvFiyat` = '0' WHERE `eid` = '%d' LIMIT 1", id);
			mysql_query(g_SQL, uf);
			EvLabelGuncelle(playerid, id);
			evim[playerid] = id;
     	}
	    return 1;
	}
    if(strcmp(EvIslem[id][EvSahibi], getName(playerid), false) == 0) return hataMesaji(playerid, "Bu ev zaten size ait.");
	if(strcmp(EvIslem[id][EvSahibi], "-", false) == 0)
	{
		if(ParaKorumasi[playerid] < EvIslem[id][evOrjinalFiyat])
		{
		    format(uf, sizeof(uf), "{EF4836}=> Ev: {FFFFFF}Bu evi satýn almak için $%s dolara ihtiyacýn var.", convertNumber(EvIslem[id][evOrjinalFiyat]-ParaKorumasi[playerid]));
			SendClientMessage(playerid, -1, uf);
			return 1;
		}
	  	mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvIsmi` = '%s Evi' WHERE `eid` = '%d' LIMIT 1", getName(playerid), id);
		mysql_tquery(g_SQL, uf);

	 	mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvSahibi` = '%s' WHERE `eid` = '%d' LIMIT 1", getName(playerid), id);
		mysql_tquery(g_SQL, uf);

		mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `evDurumu` = '1' WHERE `eid` = '%d' LIMIT 1", id);
		mysql_tquery(g_SQL, uf);

	 	mysql_format(g_SQL, uf, sizeof(uf), "UPDATE `evler` SET `EvFiyat` = '0' WHERE `eid` = '%d' LIMIT 1", id);
		mysql_tquery(g_SQL, uf);
		pParaver(playerid, -EvIslem[id][evOrjinalFiyat]);
		format(uf, sizeof(uf), "%s` Evi", getName(playerid));
	  	format(EvIslem[id][EvIsmi], MAX_EV_ISMI, uf);
		format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, getName(playerid));
		EvIslem[id][evFiyat] = 0;
		EvIslem[id][evDurumu] = 1;
		EvLabelGuncelle(playerid, id);
	  	format(uf, sizeof(uf), "{88F159}=> Ev: {FFFFFF}Þuan %d ID`li evi satýn aldýnýz. /Giris yazarak eve girebilirsiniz.", id);
		SendClientMessage(playerid, -1, uf);
		mysql_format(g_SQL, uf, sizeof uf, "UPDATE `oyuncuveri` SET `evid` = '%d' WHERE `id` = '%d' LIMIT 1", id, oyuncuData[playerid][xID]);
		mysql_query(g_SQL, uf);
		evim[playerid] = id;
  		if(BasariIslem[playerid][ilkEv] == 0){
		BasariIslem[playerid][ilkEv] = 1;
		basariKilidi(playerid, "ilkEv", "Ýlk Ev Satýn Alma", 25000, 250, 1);
		}
	}
	else
	{
	    hataMesaji(playerid, "Bu ev baþka bir oyuncuya ait. Satýn alamazsýn.");
	}
	return 1;
}

CMD:giris(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new id = EvKontrol(playerid);
	if(id == -1) return hataMesaji(playerid, "Satýn aldýðýnýz bir ev varsa aldýðýnýz evin üstünde durup bu komutu tekrar girin.");
    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bir eve araçla giremezsin.");
    if(EvIslem[id][evDurumu] == 0) return hataMesaji(playerid, "Satýlýk evlere girmek için F tuþunu kullanýn.");
    if(GetPlayerInterior(playerid) != 0) return hataMesaji(playerid, "Þuan farklý bir interiordasýn. Eve girmek için interiordan ayrýlman gerekir.");
    if(strcmp(EvIslem[id][EvSahibi], getName(playerid), false) == 0)
    {
		new evSz = EvIslem[id][evSeviyesi] - 1;
		new Float: ksyx[4];
		SetPVarInt(playerid, "EvModu", 1);
	    SetPVarInt(playerid, "Evim", id);
		GetPlayerPos(playerid, ksyx[0], ksyx[1], ksyx[2]);
		GetPlayerFacingAngle(playerid, ksyx[3]);
		SetPVarFloat(playerid, "eoX", ksyx[0]);
		SetPVarFloat(playerid, "eoY", ksyx[1]);
		SetPVarFloat(playerid, "eoZ", ksyx[2]);
		SetPVarFloat(playerid, "eoA", ksyx[3]);
		SetPlayerPos(playerid, EvPozisyonlari[evSz][ev_Pozisyon][0], EvPozisyonlari[evSz][ev_Pozisyon][1], EvPozisyonlari[evSz][ev_Pozisyon][2]);
	    SetPlayerFacingAngle(playerid, EvPozisyonlari[evSz][ev_Pozisyon][3]);
	    SetPlayerInterior(playerid, EvPozisyonlari[evSz][evInterior]);
	    SetPlayerVirtualWorld(playerid, EvIslem[id][evVirtual]);
		SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid, -1, "{3D8EB9}=> Ev Bilgisi: {FFFFFF}Þuan evinize girdiniz. /EvMenu komutuyla evinizle ilgili iþlemleri yapabilirsiniz.");
		return 1;
	}
    if(strcmp(EvIslem[id][evSifresi], "-", false) == 0)
    {
        new evSz = EvIslem[id][evSeviyesi] - 1;
		new Float: ksyx[4], sss[114 + 24 + 1];
		GetPlayerPos(playerid, ksyx[0], ksyx[1], ksyx[2]);
		GetPlayerFacingAngle(playerid, ksyx[3]);
		SetPVarFloat(playerid, "gX", ksyx[0]);
		SetPVarFloat(playerid, "gY", ksyx[1]);
		SetPVarFloat(playerid, "gZ", ksyx[2]);
		SetPVarFloat(playerid, "gA", ksyx[3]);
		SetPlayerPos(playerid, EvPozisyonlari[evSz][ev_Pozisyon][0], EvPozisyonlari[evSz][ev_Pozisyon][1], EvPozisyonlari[evSz][ev_Pozisyon][2]);
		SetPlayerFacingAngle(playerid, EvPozisyonlari[evSz][ev_Pozisyon][3]);
		SetPlayerInterior(playerid, EvPozisyonlari[evSz][evInterior]);
		SetPlayerVirtualWorld(playerid, EvIslem[id][evVirtual]);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "EvModu", 0);
		DeletePVar(playerid, "EvSifreDeneme");
		format(sss, sizeof(sss), "=> Ev Bilgisi: {FFFFFF}Þuan %s evine giriþ yaptýnýz. Uyarý: {D33257}/EvMenu {FFFFFF}komutlarýný kullanamazsýnýz !", EvIslem[id][EvSahibi]);
		SendClientMessage(playerid, 0x3D8EB9FF, sss);
	}
	else
	{
		SetPVarInt(playerid, "EvSifreDeneme", id);
    	ShowPlayerDialog(playerid, DIALOG_ESIFREG, DIALOG_STYLE_INPUT, "{FFFFFF}Eve Giriþ", "Bu eve girmek için lütfen þifreyi girin", "Gir", "Kapat");
	}
	return 1;
}

CMD:evmenu(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	evPreloader(playerid);
	return 1;
}

CMD:evegit(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    new id = evim[playerid];
    if(id == -1) return hataMesaji(playerid, "Satýn almýþ olduðunuz bir ev yok !");
    if(aranmaSeviyesii[playerid] >= 1) return hataMesaji(playerid, "Aranma seviyen varken evine gidemezsin !");
    if(SureYasagi(playerid, "EvYasak", 60)) return 1;
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
	new arac = GetPlayerVehicleID(playerid);
	foreach(new i : Player)
	{
		if(GetPlayerVehicleID(i) == arac && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			SetPVarInt(playerid, "TrollKorumasi", 1);
		}
	}
	SetPlayerPos(playerid, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2]);
	SetVehiclePos(arac, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2]);
	PutPlayerInVehicle(playerid, arac, 0);
	SetCameraBehindPlayer(playerid);
	SendClientMessage(playerid, -1, "{A0F601}=> Ev Bilgisi: {FFFFFF}Evinize hoþgeldiniz.");
	return 1;
}

stock EvLabelGuncelle(playerid, eid)
{
	new eLabel[250];
	switch(EvIslem[eid][evDurumu])
	{
	    case 0:
	    {
			format(eLabel, sizeof(eLabel), "{F31D2F}Satýlýk Ev (%d)\n{FD5B03}Ev Fiyatý: {FFFFFF}$%s\n{FD5B03}Ev Seviyesi: {FFFFFF}%d\n{597DF7}Evi Görmek Ýçin {F9B32A}F {597DF7}Tuþunu Kullanýn\n{597DF7}Satýn Almak Ýçin {F9B32A}/SatinAl {597DF7}Yazýn", eid, convertNumber(EvIslem[eid][evOrjinalFiyat]), EvIslem[eid][evSeviyesi]);
			UpdateDynamic3DTextLabelText(EvIslem[eid][evLabel], 0xFFFFFFFF, eLabel);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[eid][evPickup], E_STREAMER_MODEL_ID, 1273);
			Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[eid][evIcon], E_STREAMER_TYPE, 31);
	    }
	    case 1:
	    {
			format(eLabel, sizeof(eLabel), "{72F274}%s (%d)\n{2DCC70}Sahip: {FFFFFF}%s\n{F7D00D}Ev Seviyesi: {FFFFFF}%d\n{688D9B}/Giris", EvIslem[eid][EvIsmi], eid, getName(playerid), EvIslem[eid][evSeviyesi]);
			UpdateDynamic3DTextLabelText(EvIslem[eid][evLabel], 0xFFFFFFFF, eLabel);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[eid][evPickup], E_STREAMER_MODEL_ID, 19522);
			Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[eid][evIcon], E_STREAMER_TYPE, 32);
	    }
	    case 2:
	    {
	        format(eLabel, sizeof(eLabel), "{28F73D}%s (%d)\n{FFF836}Satýcý: {FFFFFF}%s\n{FF3503}Satýþ Fiyatý: {FFFFFF}$%s\n{A7B2BA}Ev Seviyesi: {FFFFFF}%d\n{D5FFE4}/SatinAl", EvIslem[eid][EvIsmi], eid, getName(playerid), convertNumber(EvIslem[eid][evFiyat]), EvIslem[eid][evSeviyesi]);
            UpdateDynamic3DTextLabelText(EvIslem[eid][evLabel], 0xFFFFFFFF, eLabel);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[eid][evPickup], E_STREAMER_MODEL_ID, 1272);
			Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[eid][evIcon], E_STREAMER_TYPE, 31);
	    }
	}
	return 1;
}

stock EvLabelGuncelle2(eid)
{
	new eLabel[250];
	switch(EvIslem[eid][evDurumu])
	{
	    case 0:
	    {
			format(eLabel, sizeof(eLabel), "{F31D2F}Satýlýk Ev (%d)\n{FD5B03}Ev Fiyatý: {FFFFFF}$%s\n{FD5B03}Ev Seviyesi: {FFFFFF}%d\n{597DF7}Evi Görmek Ýçin {F9B32A}F {597DF7}Tuþunu Kullanýn\n{597DF7}Satýn Almak Ýçin {F9B32A}/SatinAl {597DF7}Yazýn", eid, convertNumber(EvIslem[eid][evOrjinalFiyat]), EvIslem[eid][evSeviyesi]);
			UpdateDynamic3DTextLabelText(EvIslem[eid][evLabel], 0xFFFFFFFF, eLabel);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[eid][evPickup], E_STREAMER_MODEL_ID, 1273);
			Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[eid][evIcon], E_STREAMER_TYPE, 31);
	    }
	    case 1:
	    {
			format(eLabel, sizeof(eLabel), "{72F274}%s (%d)\n{2DCC70}Sahip: {FFFFFF}%s\n{F7D00D}Ev Seviyesi: {FFFFFF}%d\n{688D9B}/Giris", EvIslem[eid][EvIsmi], eid, EvIslem[eid][EvSahibi], EvIslem[eid][evSeviyesi]);
			UpdateDynamic3DTextLabelText(EvIslem[eid][evLabel], 0xFFFFFFFF, eLabel);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[eid][evPickup], E_STREAMER_MODEL_ID, 19522);
			Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[eid][evIcon], E_STREAMER_TYPE, 32);
	    }
	    case 2:
	    {
	        format(eLabel, sizeof(eLabel), "{28F73D}%s (%d)\n{FFF836}Satýcý: {FFFFFF}%s\n{FF3503}Satýþ Fiyatý: {FFFFFF}$%s\n{A7B2BA}Ev Seviyesi: {FFFFFF}%d\n{D5FFE4}/SatinAl", EvIslem[eid][EvIsmi], eid, EvIslem[eid][EvSahibi], convertNumber(EvIslem[eid][evFiyat]), EvIslem[eid][evSeviyesi]);
            UpdateDynamic3DTextLabelText(EvIslem[eid][evLabel], 0xFFFFFFFF, eLabel);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, EvIslem[eid][evPickup], E_STREAMER_MODEL_ID, 1272);
			Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, EvIslem[eid][evIcon], E_STREAMER_TYPE, 31);
	    }
	}
	return 1;
}

// Soygun Oluþturucu

CMD:sinterior(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
    if(SoygunOIslem[playerid][sDurum]){
    interiorYukle(playerid);}
	return 1;
}

CMD:smenu(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
    if(SoygunOIslem[playerid][sDurum]){
    soOlusturucu2(playerid);}
	return 1;
}

CMD:soygunolustur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new id = Iter_Free(Soygunlar);
	if(id == -1) return hataMesaji(playerid, "Soygun oluþturma limitine geldiniz. Daha fazla soygun yeri oluþturmak için MAX_SOYGUN_YERI'ni yükseltin.");
    if(SoygunOIslem[playerid][sDurum]) return hataMesaji(playerid, "Þuanda bir soygun oluþturuyorsun zaten.");
	ShowPlayerDialog(playerid, DIALOG_SO, DIALOG_STYLE_LIST, ""dialogIsim": Soygun Oluþturucu", "Interiorlu Soygun Oluþtur\nInteriorsuz Soygun Oluþtur", "Devam", "Iptal");
	return 1;
}

function SoygunReslee()
{
	new label[80];
	foreach(new s: Soygunlar)
	{
        SoygunIslem[s][soygunSure] = 0;
        format(label, sizeof(label), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulabilir", SoygunIslem[s][soygunIsmi], s);
 		UpdateDynamic3DTextLabelText(SoygunIslem[s][soyLabel], 0xFFFF00AA, label);
	}
	SendClientMessageToAll(-1, "{CF4DFF}[SoygunRes]: Bütün soygun mekanlarý soyulabilir hale getirildi.");
	return 1;
}

/*
CMD:soygunres(playerid, params[])
{
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için Mapper ve üstü bir levele sahip olmalýsýn.");
	new suresi, bb[100 + 24 + 4];
	if(sscanf(params, "d", suresi)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/SoygunRes (Süre)");
	format(bb, sizeof(bb), "{CF4DFF}[SoygunRes]: {FFFFFF}Yetkili %s tarafýndan soygun mekanlarý %d saniye sonra resetlenecek.", getName(playerid), suresi);
	SendClientMessageToAll(-1, bb);
	KillTimer(soygunResTimer);
	soygunResTimer = SetTimer("SoygunReslee", suresi * 1000, false);
	return 1;
}
*/

CMD:soygunsil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	new id;
	if(sscanf(params, "i", id)) return aBilgi(playerid, "/SoygunSil [Soygun ID]");
	if(!Iter_Contains(Soygunlar, id)) return hataMesaji(playerid, "Böyle bir soygun id'si yok !");
	format(SoygunIslem[id][soygunIsmi], MAX_SOYGUN_ISIM, "");
	SoygunIslem[id][girisCP][0] = 0.0;
	SoygunIslem[id][girisCP][1] = 0.0;
	SoygunIslem[id][girisCP][2] = 0.0;
	SoygunIslem[id][girisPoss][0] = 0.0;
	SoygunIslem[id][girisPoss][1] = 0.0;
	SoygunIslem[id][girisPoss][2] = 0.0;
	SoygunIslem[id][girisPoss][3] = 0.0;
	SoygunIslem[id][cikisCP][0] = 0.0;
	SoygunIslem[id][cikisCP][1] = 0.0;
	SoygunIslem[id][cikisCP][2] = 0.0;
	SoygunIslem[id][cikisPoss][0] = 0.0;
	SoygunIslem[id][cikisPoss][1] = 0.0;
	SoygunIslem[id][cikisPoss][2] = 0.0;
	SoygunIslem[id][cikisPoss][3] = 0.0;
	SoygunIslem[id][soygunCP_][0] = 0.0;
	SoygunIslem[id][soygunCP_][1] = 0.0;
	SoygunIslem[id][soygunCP_][2] = 0.0;
	SoygunIslem[id][soygunInterior] = -1;
	SoygunIslem[id][soygunVirtualWorld] = -1;
	SoygunIslem[id][soygunSure] = 0;
	if(SoygunIslem[id][iDurum] == 0)
	{
		DestroyDynamicCP(SoygunIslem[id][soyGirisCP]);
    	DestroyDynamicCP(SoygunIslem[id][soyCikisCP]);
 		DestroyDynamicCP(SoygunIslem[id][soygunCP]);
 		DestroyDynamic3DTextLabel(SoygunIslem[id][soyLabel]);
		DestroyDynamic3DTextLabel(SoygunIslem[id][girisLabel]);
		DestroyDynamic3DTextLabel(SoygunIslem[id][cikisLabel]);
	}
	else
	{
	    DestroyDynamic3DTextLabel(SoygunIslem[id][soyLabel]);
	    DestroyDynamicCP(SoygunIslem[id][soygunCP]);
	}
	DestroyDynamicMapIcon(SoygunIslem[id][soygunIcon]);
	SoygunIslem[id][iDurum] = 0;
	Iter_Remove(Soygunlar, id);
	new query[70 + 1];
	format(query, sizeof(query), "{E01931}=> Soygun: {FFFFFF}Þuanda %d id'li soygun mekanýný sildiniz.", id);
	SendClientMessage(playerid, -1, query);
	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `soygunlar` WHERE `sid` = '%d' LIMIT 1", id);
	mysql_tquery(g_SQL, query, "", "");
	return 1;
}


// Meslek Komutlarý

CMD:barikat(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(GetPVarInt(playerid, "BankaGirdi") == 1) return hataMesaji(playerid, "Bankanýn içinde barikat ekleyemezsin.");
    if(GetPlayerInterior(playerid) != 0) return hataMesaji(playerid, "Bir interiora barikat ekleyemezsin.");
    if(GetPlayerVirtualWorld(playerid) != 0) return hataMesaji(playerid, "Dünya deðeriniz deðiþmiþ, barikat ekleyemezsin.");
    if(oyuncuData[playerid][duzenliOyuncu] == 0) return hataMesaji(playerid, "Bu komutu düzenli oyuncular kullanabilir.");
	new ID, idx = Iter_Free(Barikatlar);
	if(barikatSayi[playerid] >= 3) return hataMesaji(playerid, "En fazla 3 barikat kurabilirsiniz.");
	if(idx == -1) return hataMesaji(playerid, "Barikat limiti dolmuþ, daha fazla eklenemez. (200 slot)");
	if(sscanf(params, "d", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Barikat [1 - 2]");
	if(ID < 1 || ID > 2) return hataMesaji(playerid, "Barikat ID`si hatalý !");
	switch(ID)
	{
		case 1: barikatOlustur(playerid, 1);
		case 2: barikatOlustur(playerid, 2);
	}
	return 1;
}

CMD:barikatsil(playerid, params[])
{
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(oyuncuData[playerid][duzenliOyuncu] == 0) return hataMesaji(playerid, "Bu komutu düzenli oyuncular kullanabilir.");
	new ID;
	if(sscanf(params, "d", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/BarikatSil [ID]");
    if(!Iter_Contains(Barikatlar, ID)) return hataMesaji(playerid, "Bu ID`de barikat oluþturulmamýþ.");
    if(strcmp(BarikatIslem[ID][barikatOlusturan], getName(playerid)) != 0) return hataMesaji(playerid, "Bu barikatý siz oluþturmamýþsýnýz.");
    barikatSayi[playerid]--;
	BarikatIslem[ID][barikatDurum] = 0;
    format(BarikatIslem[ID][barikatOlusturan], MAX_PLAYER_NAME, "");
	BarikatIslem[ID][barikatPoss][0] = 0.0;
    BarikatIslem[ID][barikatPoss][1] = 0.0;
    BarikatIslem[ID][barikatPoss][2] = 0.0;
    BarikatIslem[ID][barikatPoss][3] = 0.0;
    BarikatIslem[ID][barikatPoss][4] = 0.0;
    BarikatIslem[ID][barikatPoss][5] = 0.0;
    BarikatIslem[ID][barikatSure] = 0;
    DestroyDynamicObject(BarikatIslem[ID][b_objeId]);
    BarikatIslem[ID][b_objeId] = INVALID_OBJECT_ID;
    DestroyDynamic3DTextLabel(BarikatIslem[ID][barikatLabel]);
    BarikatIslem[ID][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
    Iter_Remove(Barikatlar, ID);
    SendClientMessage(playerid, -1, "{3498DB}Barikat: {FFFFFF}Oluþturduðunuz barikat kaldýrýldý.");
	return 1;
}

CMD:barikattemizle(playerid, params[])
{
    if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için 4 level ve üstü Admin yetkisine sahip olmalýsýn.");
	new x = 0;
	for(new i = 0; i < MAX_BARIKAT; i++)
	{
	    if(BarikatIslem[i][barikatDurum] == 0) continue;
	    BarikatIslem[i][barikatDurum] = 0;
	    format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
		BarikatIslem[i][barikatPoss][0] = 0.0;
	    BarikatIslem[i][barikatPoss][1] = 0.0;
	    BarikatIslem[i][barikatPoss][2] = 0.0;
	    BarikatIslem[i][barikatPoss][3] = 0.0;
	    BarikatIslem[i][barikatPoss][4] = 0.0;
	    BarikatIslem[i][barikatPoss][5] = 0.0;
	    BarikatIslem[i][barikatSure] = 0;
	    if(IsValidDynamicObject(BarikatIslem[i][b_objeId]))
	    {
	    	DestroyDynamicObject(BarikatIslem[i][b_objeId]);
		}
	    BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
	    DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
	    BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
	    Iter_Remove(Barikatlar, i);
	    x++;
	}
	if(x != 0)
	{
	    foreach(new i: Player)
	    {
	        barikatSayi[i] = 0;
	    }
	    new sz[115 + 24];
	    format(sz, sizeof(sz), "{FFAE00}[BARIKAT] {FFFFFF}Yetkili {00FF00}%s(%d){FFFFFF}, sunucudaki tüm {FF0073}barikatlarý {FFFFFF}temizledi.", getName(playerid), playerid);
	    SendClientMessageToAll(-1, sz);
	}
	if(x == 0) hataMesaji(playerid, "Oluþturulmuþ barikat yok !");
	return 1;
}

CMD:ke(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new ID, str[98 + MAX_PLAYER_NAME + 3];
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Ke (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendini kelepçeleyemezsin !");
	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Kelepçelemek istediðin oyuncu uzaðýnda !");
	if(aranmaSeviyesii[ID] <= 3) return hataMesaji(playerid, "Kelepçelemek istediðin oyuncunun aranma seviyesi 4 ve üstü olmalý.");
	if(oIslem[ID][dondurulmus] == 1) return hataMesaji(playerid, "Bu oyuncu admin tarafýndan dondurulmuþ, kelepçeleyemezsin.");
	if(oIslem[ID][kelepce] == 1) return hataMesaji(playerid, "Kelepçelemek istediðin oyuncu zaten kelepçelenmiþ.");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde birini kelepçeleyemezsin.");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Kelepçelemek istediðin oyuncu araç içinde !");
	if(gTeam[ID] >= 2 && gTeam[ID] <= 8) return hataMesaji(playerid, "Devlet memurlarýný kelepçeleyemezsin.");
	if(kumarda[ID]) return hataMesaji(playerid, "Kumarhanede bir kiþiyi tutuklayamazsýn.");

    KeybindIslem[playerid][keybind_Sure][0] = GetTickCount();
    KeybindIslem[playerid][keybind_Sure][1] = GetTickCount() + 3000;
    KeybindIslem[playerid][keybind_ID] = ID;

	format(str,sizeof(str),"[KELEPÇE] %s(%d) adlý suçluyu kelepçelediniz.", getName(ID), ID);
    SendClientMessage(playerid, 0x4BE0EBFF, str);
    format(str,sizeof(str),"[KELEPÇE] %s(%d), adlý devlet memuru sizi kelepçeledi.", getName(playerid), playerid);
	SendClientMessage(ID, 0x4BE0EBFF ,str);
    SetPlayerAttachedObject(ID, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
    SetPlayerSpecialAction(ID, SPECIAL_ACTION_CUFFED);
    SetPVarInt(ID, "KelepceBlock", GetTickCount() + 30 * 1000);
    oIslem[ID][kelepce] = 1;
	oIslem[ID][kelepceSure] = 30;
 	PolisIslemleri(playerid, 3, "kelepceleme", 1);
    PolisIslemleri(ID, 4, "kelepcelenme", 1);
	return 1;
}

CMD:kecikar(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new ID, str[128];
 	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Ke (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Kelepçesini çýkarmak istediðin oyuncu yakýnýnda deðil.");
	if(oIslem[ID][kelepce] == 0) return hataMesaji(playerid, "Bu oyuncu kelepçelenmemiþ.");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde birinin kelepçesini çýkaramazsýn.");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Oyuncu araç içindeyken kelepçesini çýkaramazsýn !");
	format(str,sizeof(str),"[KELEPÇE] %s(%d) adlý þahsýn kelepçelerini çýkardýnýz.", getName(ID), ID);
    SendClientMessage(playerid, 0xF7D434F, str);
    format(str,sizeof(str),"[KELEPÇE] %s(%d), adlý devlet memuru kelepçelerinizi çýkardý.", getName(playerid), playerid);
	SendClientMessage(ID, 0xF7D434FF ,str);
 	oIslem[ID][kelepce] = 0;
 	SetPVarInt(ID, "KelepceBlock", GetTickCount());
	oIslem[ID][kelepceSure] = 0;
    SetPlayerSpecialAction(ID, SPECIAL_ACTION_NONE);
    RemovePlayerAttachedObject(ID, 1);
    TogglePlayerControllable(ID, 1);
	return 1;
}

/*
CMD:aracaat(playerid, params[])
{if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
 	new ID, str[111 + 24 + 3 + 24 + 3];
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/AracaAt (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendini araca atamazsýn !");
	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Arabaya atmak istediðin oyuncu uzaðýnda !");
    if(AFkMi[ID] == 1) return hataMesaji(playerid, "Bu oyuncu AFK, araca atamazsýn.");
	if(aranmaSeviyesii[ID] <= 3) return hataMesaji(playerid, "Arabaya atmak istediðin oyuncunun aranma seviyesi 4 ve üstü olmalý.");
	if(oIslem[ID][dondurulmus] == 1) return hataMesaji(playerid, "Bu oyuncu admin tarafýndan dondurulmuþ, araca atamazsýn !");
	if(oIslem[ID][kelepce] == 0) return hataMesaji(playerid, "Suçluyu kelepçelemeden aracýna atamazsýn !");
	if(oIslem[playerid][kacirilma] == 1) return hataMesaji(playerid, "Kaçýrýlmýþken bir oyuncuyu araca atamazsýn !");
    if(oIslem[playerid][sonArac] == 0) return hataMesaji(playerid, "Birini aracýna atmak için önce bir araca bin !");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde oyuncuyu araca atamazsýn !");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Oyuncu araç içindeyken araca atamazsýn !");
	oIslem[ID][kelepceSure] = 300;
	PutPlayerInVehicle(ID, oIslem[playerid][sonArac], 1);
	TogglePlayerControllable(ID, 0);
	format(str, sizeof(str), "[GOZ ALTI] Devlet memuru %s(%d), sizi göz altýna aldý !", getName(playerid), playerid);
	SendClientMessage(ID, 0x69B9FFFF, str);
	format(str, sizeof(str), "[GOZ ALTI] Suçlu þahýs %s(%d), göz altýna aldýnýz.", getName(ID), ID);
	SendClientMessage(playerid, 0x69B9FFFF, str);
 	format(str,sizeof(str),"~b~~h~[GOZ ALTI] ~w~~h~Devlet memuru ~b~~h~~h~%s(%d), ~w~~h~suclu sahis ~r~~h~~h~%s(%d) ~w~~h~goz altina aldi.",getName(playerid), playerid, getName(ID), ID);
	TextdrawYazi(str);
	new tplm_Para = random(5678 - 3456) + 3456;
	format(str, sizeof(str), "~g~~h~~h~$%s", convertNumber(tplm_Para));
	GameTextForPlayer(playerid, str, 2500, 4);
	pParaver(playerid, tplm_Para);
	SetPVarInt(ID, "Aracbloock_", 1);
	SetPVarInt(ID, "Aracbloock", GetTickCount() + 90 * 1000);
	return 1;
}
*/

CMD:ya(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new ID, ss[104 + 24 + 24 + 6];
 	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Ya (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendini hapise atamazsýn.");
	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Hapise atmak istediðin oyuncu yakýnýnda deðil");
    if(AFkMi[ID] == 1) return hataMesaji(playerid, "Bu oyuncu AFK hapse atamazsýn.");
	if(oIslem[playerid][kacirilma] == 1) return hataMesaji(playerid, "Kaçýrýlmýþken oyuncuyu hapise atamazsýn.");
	if(oIslem[ID][kelepce] == 0) return hataMesaji(playerid, "Hapise atmak istediðin oyuncu kelepçelenmemiþ.");
	if(oIslem[ID][dondurulmus] == 1) return hataMesaji(playerid, "Bu oyuncu admin tarafýndan dondurulmuþ, hapise atamazsýn.");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde birini hapise atamazsýn.");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Oyuncu araç içindeyken hapise atamazsýn.");
    if(aranmaSeviyesii[ID] <= 3) return hataMesaji(playerid, "Hapise atmak istediðin oyuncunun aranma seviyesi 4 ve üstü olmalý.");
	if(GetTickCount()-KeybindIslem[playerid][keybind_Sure][0] < 425)
	{
	    HileKick(playerid, 23);
		KeybindIslem[playerid][keybind_Sure][0] = 0;
		KeybindIslem[playerid][keybind_Sure][1] = 0;
        KeybindIslem[playerid][keybind_ID] = INVALID_PLAYER_ID;
        
        oyuncuData[ID][kefaletmod] = 0;
        SetPVarInt(ID, "BankaGirdi", 0);
        ResetPlayerWeapons(ID);
	    SetPlayerInterior(ID,10);
	    SetPlayerPos(ID, 223.4927,110.8868,999.0156);
	    SetPlayerFacingAngle(ID, 3.1811);
	    SetCameraBehindPlayer(ID);
	    oyuncuData[ID][hapisSure] = 1, oyuncuData[ID][hSureKayit] = 1;
	    return 1;
	}
	KeybindIslem[playerid][keybind_Sure][0] = 0;
	KeybindIslem[playerid][keybind_Sure][1] = 0;
	KeybindIslem[playerid][keybind_ID] = INVALID_PLAYER_ID;
	SetPlayerInterior(ID, 0);
 	SetPlayerVirtualWorld(ID, 0);
	DeletePVar(ID, "BankaGirdi");
	new expp = random(150 - 100) + 100, bx[10];
	oyuncuData[playerid][ExpPuan] += expp;
	format(bx, sizeof(bx), "+%d_Exp", expp);
	PlayerTextDrawSetString(playerid, ParaLevel[playerid][1], bx);
    if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, ParaLevel[playerid][1]);}
	SetPVarInt(playerid, "YaziMode", 1);
	SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
	ExpGuncelle(playerid);
	if(oyuncuData[playerid][_LevelCount] >= 50)
	{
		if(oyuncuData[playerid][ExpPuan] > 50000)
		{
		    oyuncuData[playerid][_LevelCount] = 50;
			oyuncuData[playerid][ExpPuan] = 50000;
			ExpGuncelle(playerid);
		}
	}
	PolisIslemleri(playerid, 1, "yakalama", 1);
    PolisIslemleri(ID, 2, "yakalanma", 1);
	SetPVarInt(ID, "KelepceBlock", GetTickCount());
    oIslem[ID][kelepce] = 0;
	oIslem[ID][kelepceSure] = 0;
	SetPVarInt(ID, "soklandi", 0);
    ClearAnimations(ID);
    KillTimer(tazerTimer[ID]);
	SetPlayerSpecialAction(ID, SPECIAL_ACTION_NONE);
    RemovePlayerAttachedObject(ID, 1);
    SetCameraBehindPlayer(ID);
    TogglePlayerControllable(ID, 1);
 	ResetPlayerWeapons(ID);
    SetPlayerInterior(ID,10);
    SetPlayerPos(ID, 223.4927,110.8868,999.0156);
    SetPlayerFacingAngle(ID, 3.1811);
    SetCameraBehindPlayer(ID);
    SetPVarInt(ID, "Hapisdeyimm", 1);
    switch(aranmaSeviyesii[ID])
    {
        case 4..35: { oyuncuData[ID][hapisSure] = 60; oyuncuData[ID][hSureKayit] = 60; }
        case 36..75: { oyuncuData[ID][hapisSure] = 120; oyuncuData[ID][hSureKayit] = 120; }
        default: { oyuncuData[ID][hapisSure] = 180; oyuncuData[ID][hSureKayit] = 180; }
    }
    format(ss, sizeof(ss), "Devlet Memuru %s sizi tutuklayýp hapse attý !", getName(playerid));
    SendClientMessage(ID, 0x64DDBBFF, ss);
    format(ss, sizeof(ss), "Suçlu Þahýs %s tutuklayýp hapse attýnýz !", getName(ID));
    SendClientMessage(playerid, 0x64DDBBFF, ss);
    format(ss, sizeof(ss), "~b~~h~[HAPIS] ~w~~h~Devlet memuru ~b~~h~~h~%s(%d), ~w~~h~suclu sahis ~r~~h~~h~%s(%d) ~w~~h~hapise atti.", getName(playerid), playerid, getName(ID), ID);
    textFlood++;
	foreach(new i : Player) TextdrawYazi(i, ss);
	if(textFlood == 3){ textFlood = 0; }
    new occc = 0;
	switch(aranmaSeviyesii[ID])
    {
        case 4..35: occc = 50000;
        case 36..75: occc = 75000;
        default: occc = 100000;
    }
	aranmaLeveli(ID, 0);
	pParaver(playerid, occc);
    if(oyuncuData[playerid][pVip] <= 0)
	{
		if(gTeam[playerid] == OZEL_KUVVET_B)
		{
			Skorver(playerid, 5);
		}
		else
		{
    		Skorver(playerid, 4);
		}
	}
	else
	{
		if(gTeam[playerid] == OZEL_KUVVET_B)
		{
			Skorver(playerid, 6);
		}
		else
		{
		 	Skorver(playerid, 5);
		}
 	}
 	foreach(new i: Player)
 	{
	 	if(e_oIslem[i][e_Id] != -1)
	 	{
	 		if(e_oIslem[i][e_Id] == e_oIslem[playerid][e_Id])
		 	{
		 		if(i != playerid)
			 	{
				 	if(AFkMi[i] == 0)
				 	{
						format(ss, sizeof(ss), "[EKÝP] Oyuncu %s(%d), bir suçlu þahýs yakalayarak ekibe $%s dolar ve +1 skor kazandýrdý.", getName(playerid), playerid, convertNumber(occc));
						SendClientMessage(i, 0x587FFCFF, ss);
						pParaver(i, occc);
						Skorver(i, 1);
					}
				}
			}
		}
	}
	format(ss, sizeof(ss), "~g~~h~~h~$%s~n~+4 skor", convertNumber(occc));
	GameTextForPlayer(playerid, ss, 2500, 4);
	if(BasariIslem[playerid][ilkSucluYa] == 0)
	{
		BasariIslem[playerid][ilkSucluYa] = 1;
		basariKilidi(playerid, "ilkSucluYa", "Ýlk Suçlu Yakalama", 5000, 100, 1);
	}
 	if(oyuncuData[playerid][pVip] >= 1)
    {
        if(oyuncuData[playerid][pAdmin] <= 0)
        {
            new ax[112+24];
        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her suçlu yakalamasýnda +1 skor kazanýyor.", getName(playerid), playerid);
			SendClientMessageToAll(-1, ax);
		}
	}
	return 1;
}

CMD:telsiz(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new str[128], msj[128];
 	if(sscanf(params, "s[128]", msj)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Telsiz (Mesaj)");
   	if(GetPVarInt(playerid, "TelsizKoruma") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "TelsizKoruma", GetTickCount() + 500);
	    return 1;
	}
	SetPVarInt(playerid, "TelsizKoruma", GetTickCount() + 500);
	foreach(new i : Player)
 	{
		if(gTeam[i] >= 2 && gTeam[i] <= 8)
		{
	        if(oyuncuData[i][GirisKontrol])
	        {
		    	format(str, sizeof(str), "[Polis Telsizi] %s(%d), %s tamam.", getName(playerid), playerid, msj);
            	SendClientMessage(i, 0x9791FFFF, str);
			}
		}
	}
	return 1;
}

CMD:tazer(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	switch(GetPVarInt(playerid, "soktabancasi"))
	{
		case 0:
		{
			SetPVarInt(playerid, "soktabancasi", 1);
			new silah, mermi;
			GetPlayerWeaponData(playerid, 2, silah, mermi);
			SetPVarInt(playerid, "oncekiSilah", silah);
			SetPVarInt(playerid, "oncekiMermi", mermi);
			SetPlayerAmmo(playerid, 2, 0);
			Silahver(playerid, 23, 500);
			SendClientMessage(playerid, 0xA4F041FF, "Tazer silahý {ffffff}aktif edildi.");
		}
		case 1:
		{
		    RemovePlayerAttachedObject(playerid, 0);
			SetPlayerAmmo(playerid, 2, 0);
			SetPVarInt(playerid, "soktabancasi", 0);
			Silahver(playerid, GetPVarInt(playerid, "oncekiSilah"), GetPVarInt(playerid, "oncekiMermi"));
			SendClientMessage(playerid, 0xFF4D4DFF, "Tazer silahý {ffffff}kapatýldý.");
		}
	}
	return 1;
}

CMD:rusvet(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
  	new ID, str[200 + MAX_PLAYER_NAME + 3], para;
	if(sscanf(params, "ui", ID, para)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/Rusvet (Oyuncu ID) (Para Miktar)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
	if(playerid == ID) return hataMesaji(playerid, "Kendine rüþvet veremezsin !");
	if(GetPlayerDistanceFromPlayer(playerid,ID) > 4) return hataMesaji(playerid, "Rüþvet vermek istediðin devlet memuru yakýnýnda olmalý !");
    if(gTeam[ID] >= 9 && gTeam[ID] <= 15) return hataMesaji(playerid, "Sivil vatandaþlara rüþvet veremezsin !");
	if(oIslem[playerid][kelepce] == 0) return hataMesaji(playerid, "Kelepçeli deðilken devlet memurlarýna rüþvet veremezsin !");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde rüþvet veremezsin !");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Rüþvet vereceðiniz devlet memuru araçtan inmesi lazým !");
	if(para < 5000 || para > 100000) return hataMesaji(playerid, "Rüþveti en düþük $5,000 en fazla $100,000 girebilirsin.");
    if(para > ParaKorumasi[playerid]) return hataMesaji(playerid, "Bu miktarý vermeniz için yeterli paranýz bulunmuyor.");
    if(SureYasagi(playerid, "rusVetSure", 30)) return 1;
	RusvetIslem[playerid][rusvetPara] = para;
	RusvetIslem[playerid][rusvetID] = ID;
	RusvetIslem[ID][rusvetPlayerID] = playerid;
	format(str, sizeof(str), "{FF5460}[RÜÞVET] {FFFFFF}Devlet memuru %s(%d), rüþvette bulundunuz.", getName(ID), ID);
	SendClientMessage(playerid, 0xFF5460FF, str);
	format(str, sizeof(str), "{FF5460}Suçlu þahýs {ACED6B}%s(%d){FF5460}, size rüþvet teklif ederek serbest býrakmanýzý istiyor.\n{FF5460}Teklif ettiði miktar: {B6FF8C}$%s\n\n{FF5460}Bu teklifi kabul ediyor musunuz ?", getName(playerid), playerid, convertNumber(para));
    ShowPlayerDialog(ID, RUSVET_D, DIALOG_STYLE_MSGBOX, "{FFFFFF}Rüþvet", str, "Kabul Et", "Reddet");
	return 1;
}

CMD:gkur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
    if(g_oIslem[playerid][g_Id] != -1) return hataMesaji(playerid, "Bir grubun var. Önce /gAyril komutunu kullan.");
    new id = Iter_Free(_Gruplar);
    if(id == -1) return hataMesaji(playerid, "Grup oluþturma limitine ulaþýlmýþ, bir grup silinince yeni bir grup kurabilirsiniz.");
   	if(isnull(params)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/gKur (Grup Ismi)");
	if(strlen(params) > MAX_G_ISIM - 1) return hataMesaji(playerid, "Grup ismi en fazla 16 karakter uzunluðunda olabilir !");
	if(GrupIsmiDenetle(params)) return hataMesaji(playerid, "Bu Grup ismi kullanýlýyor !");
 	new bilgi_msj[91 + 16 + 3];
	//___________________________________________________________________________
	g_oIslem[playerid][g_Id] = id;
	g_oIslem[playerid][g_Davet] = id;
	g_oIslem[playerid][g_Katilim] = id;
	//___________________________________________________________________________
	format(grupIslem[id][g_Ismi], MAX_G_ISIM, params);
	grupIslem[id][g_Aktiflik] = 1;
 	format(grupIslem[id][g_Kurucu], MAX_PLAYER_NAME, getName(playerid));
 	grupIslem[id][g_kID] = playerid;
 	grupIslem[id][g_limit] = 0;
	//___________________________________________________________________________
	format(bilgi_msj, sizeof(bilgi_msj), "[SISTEM] {FFFFFF}Þuanda {FCA32D}%s {FFFFFF}isimli grubu oluþturdunuz. Grup ID: {FCA32D}%d", params, id);
 	SendClientMessage(playerid, 0x47C2FFFF, bilgi_msj);
    Iter_Add(_Gruplar, id);
	return 1;
}

CMD:gayril(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
    if(g_oIslem[playerid][g_Id] == -1) return hataMesaji(playerid, "Bir grubun yok !");
	new grupID = g_oIslem[playerid][g_Id], bilgi_msj[78 + 24 + 24 + 5 + 1];
	grupIslem[grupID][g_limit]--;
	foreach(new i: Player)
	{
		if(g_oIslem[i][g_Id] == grupID)
		{
		    format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] %s(%d), adlý oyuncu gruptan ayrýldý. Sebep: Kendi isteði.", getName(playerid), playerid);
			SendClientMessage(i, 0xF59E25FF, bilgi_msj);
		}
	}
 	g_oIslem[playerid][g_Id] = -1;
	g_oIslem[playerid][g_Davet] = -1;
	g_oIslem[playerid][g_Katilim] = -1;

	new g_slotAra = GrupSlotKontrol(grupID);
	if(g_slotAra <= 0)
	{
		format(grupIslem[grupID][g_Ismi], MAX_G_ISIM, "");
		format(grupIslem[grupID][g_Kurucu], MAX_PLAYER_NAME, "");
		grupIslem[grupID][g_kID] = INVALID_PLAYER_ID;
		grupIslem[grupID][g_Aktiflik] = 0;
		Iter_Remove(_Gruplar, grupID);
	}
	else
	{
		if(strcmp(grupIslem[grupID][g_Kurucu], getName(playerid), false) == 0)
		{
		    new oCount[MAX_PLAYERS], arttirr = 0, _pid = INVALID_PLAYER_ID;
		    foreach(new i : Player) if(g_oIslem[i][g_Id] == grupID) oCount[arttirr] = i, arttirr++;
		    _pid = oCount[random(arttirr)];
			format(grupIslem[grupID][g_Kurucu], MAX_PLAYER_NAME, getName(_pid)), grupIslem[grupID][g_kID] = _pid;
   		    format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] Lider %s(%d) gruptan ayrýldýðý için yeni Lider %s(%d) olarak ayarlandý.", getName(playerid), playerid, getName(_pid), _pid);
		    foreach(new i : Player) if(g_oIslem[i][g_Id] == grupID) SendClientMessage(i, 0xF59E25FF, bilgi_msj);
			_pid = INVALID_PLAYER_ID;
			for(new i = 0; i < arttirr; i++) oCount[i] = INVALID_PLAYER_ID;
		}
	}
	GrupFix();
	BolgeFix();
	return 1;
}

CMD:gdavet(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	new grupID = g_oIslem[playerid][g_Id], ID, bilgi_msj[94 + MAX_PLAYER_NAME + 3 + 16 + 3];
    if(strcmp(grupIslem[grupID][g_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu grup kurucusu deðilsin !");
    if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/gDavet (Oyuncu ID)");
    if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID yok !");
    if(g_oIslem[ID][g_Id] == g_oIslem[playerid][g_Id]) return hataMesaji(playerid, "Bu oyuncu grubunuzda.");
    if(g_oIslem[ID][g_Davet] == g_oIslem[playerid][g_Id]) return hataMesaji(playerid, "Bu oyuncu grubunuza davet edilmiþ.");
    if(grupIslem[grupID][g_limit] >= MAX_GRUP_LIMIT - 1) return hataMesaji(playerid, "Bu grubun limiti dolmuþ !");
	if(g_oIslem[ID][g_Katilim] == grupID)
    {
        grupIslem[grupID][g_limit]++;
        g_oIslem[ID][g_Id] = grupID, g_oIslem[ID][g_Davet] = -1, g_oIslem[ID][g_Katilim] = -1;
        format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] Oyuncu %s(%d), artýk %s adlý grupta !", getName(ID), ID, grupIslem[grupID][g_Ismi]);
		foreach(new i: Player) if(g_oIslem[i][g_Id] == grupID) SendClientMessage(i, 0x47FF7EFF, bilgi_msj);
        return 1;
	}
	g_oIslem[ID][g_Davet] = grupID;
	format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] Oyuncu %s(%d), sizi %s(%d) adlý gruba davet ediyor. katýlmak için /gKatil %d yazýn.", getName(playerid), playerid, grupIslem[grupID][g_Ismi], grupID, grupID);
	SendClientMessage(ID, 0xe8e240ff, bilgi_msj);
	format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] Oyuncu %s(%d) grubunuza davet ettiniz !", getName(ID), ID);
	SendClientMessage(playerid, 0xe8e240ff, bilgi_msj);
	return 1;
}

CMD:gkatil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	new ID, string[86 + MAX_PLAYER_NAME + 6];
    if(g_oIslem[playerid][g_Id] != -1) return hataMesaji(playerid, "Bir grubun mevcut, /gAyril komutunu kullanarak gruptan ayrýl !");
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/gKatil (Grup ID)");
	if(!Iter_Contains(_Gruplar, ID)) return hataMesaji(playerid, "Grup ID'si geçersiz !");
	if(grupIslem[ID][g_limit] >= MAX_GRUP_LIMIT - 1) return hataMesaji(playerid, "Bu grubun limiti dolmuþ !");
 	if(g_oIslem[playerid][g_Davet] == ID)
	{
	    grupIslem[ID][g_limit]++;
   		g_oIslem[playerid][g_Id] = ID, g_oIslem[playerid][g_Davet] = -1, g_oIslem[playerid][g_Katilim] = -1;
        format(string, sizeof(string), "[GRUP] Oyuncu %s(%d), artýk %s adlý grupta !", getName(playerid), playerid, grupIslem[ID][g_Ismi]);
		foreach(new i: Player) if(g_oIslem[i][g_Id] == ID) SendClientMessage(i, 0x47FF7EFF, string);
	    return 1;
	}
	if(SureYasagi(playerid, "gKatildim", 30)) return 1;
	g_oIslem[playerid][g_Katilim] = ID;
	format(string, sizeof(string), "[GRUP] %s(%d) adlý gruba katýlma isteðiniz gönderildi !", grupIslem[ID][g_Ismi], ID);
	SendClientMessage(playerid, 0xFFE947FF, string);
	format(string, sizeof(string), "[GRUP] Oyuncu %s(%d) grubunuza katýlmak istiyor, kabul etmek için /gDavet %d yazýn.", getName(playerid), playerid, playerid);
	new cek = GetPlayerID(grupIslem[ID][g_Kurucu]);
    if(cek != INVALID_PLAYER_ID)
    {
        SendClientMessage(cek, 0xFFE947FF, string);
    }
	return 1;
}

CMD:glider(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
    if(g_oIslem[playerid][g_Id] == -1) return hataMesaji(playerid, "Bir grubun yok !");
	new grupID = g_oIslem[playerid][g_Id], ID, bilgi_msj[100];
	if(strcmp(grupIslem[grupID][g_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Grup lideri deðilsin !");
    if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/gLider (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID yok !");
	if(playerid == ID)  return hataMesaji(playerid, "Zaten bu grubun liderisiniz !");
    if(g_oIslem[ID][g_Id] != grupID) return hataMesaji(playerid, "Bu oyuncu grubunuzda deðil !");
	format(grupIslem[grupID][g_Kurucu], MAX_PLAYER_NAME, getName(ID));
	g_oIslem[playerid][g_Davet] = -1;
	g_oIslem[playerid][g_Katilim] = -1;
	grupIslem[grupID][g_kID] = ID;
	format(bilgi_msj, sizeof(bilgi_msj), "[GRUP] Lider deðiþikliði yapýldý, artýk yeni grup lideri %s(%d)", getName(ID), ID);
	foreach(new i : Player) if(g_oIslem[i][g_Id] == grupID) SendClientMessage(i, 0x61FF4FFF, bilgi_msj);
	return 1;
}

CMD:gat(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
    if(g_oIslem[playerid][g_Id] == -1) return hataMesaji(playerid, "Bir grubun yok !");
    new grupID = g_oIslem[playerid][g_Id], ID;
    if(strcmp(grupIslem[grupID][g_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Grup lideri deðilsin !");
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/gAt (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID yok !");
    if(playerid == ID)  return hataMesaji(playerid, "Kendini gruptan atamazsýn, /eAyril kullan !");
    if(g_oIslem[ID][g_Id] != grupID) return hataMesaji(playerid, "Bu oyuncu grubunuzda deðil !");
    grupIslem[grupID][g_limit]--;
   	foreach(new i : Player)
	{
		if(g_oIslem[i][g_Id] == grupID)
		{
	    	new str[65 + MAX_PLAYER_NAME + 3 ];
	    	format(str, sizeof(str), "[GRUP] Oyuncu %s(%d), lideri tarafýndan gruptan atýldý !", getName(ID), ID);
	    	SendClientMessage(i, 0x61FF4FFF, str);
		}
	}
	g_oIslem[ID][g_Id] = -1;
	g_oIslem[ID][g_Katilim] = -1;
	g_oIslem[ID][g_Davet] = -1;
	return 1;
}

CMD:g(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
    if(g_oIslem[playerid][g_Id] == -1) return hataMesaji(playerid, "Bir grubun yok !");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
    if(isnull(params)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/G (Msj)");
    new str[156], aMsj[156];
   	if(stringContainsIP(params))
	{
		hataMesaji(playerid, "Ip reklamý yapýp ne yapacaksýn ahbap ?");
		return 1;
	}
    format(str, sizeof(str), "[Grup] {76ff65}%s(%d), %s.", getName(playerid), playerid, params);
    foreach(new i : Player)
    {
        if(g_oIslem[i][g_Id] == g_oIslem[playerid][g_Id])
        {
            SendClientMessage(i, 0xea2e2eff, str);
        }
  		if(oyuncuData[i][GrupGorme] == 1)
    	{
    		format(aMsj, sizeof(aMsj), "** |Grup|: Grup ID: (%d) - %s(%d) >> %s.", g_oIslem[playerid][g_Id], getName(playerid), playerid, params);
			if(i != playerid)
			{
				SendClientMessage(i, 0xA19C69FF, aMsj);
			}
   		}
    }
	return 1;
}

CMD:guyeler(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	new ID, proStr[1024], kurucuSorgu[MAX_PLAYER_NAME + 22];
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/gUyeler (Grup ID)");
	if(!Iter_Contains(_Gruplar, ID)) return hataMesaji(playerid, "Bu id de grup yok !");
    proStr = "{7A8AFF}Üyeler\t{7A8AFF}ID\t{7A8AFF}?\n";
	foreach(new i : Player)
	{
		if(g_oIslem[i][g_Id] == ID)
		{
		    if(strcmp(grupIslem[ID][g_Kurucu], getName(i), false) == 0)
		    {
		        kurucuSorgu = "{8AFF7A}Grup Kurucusu";
			}
			else
			{
			    kurucuSorgu = "";
			}
			format(proStr, sizeof(proStr), "%s{FFFFFF}%s\t%d\t%s\n", proStr, getName(i), i, kurucuSorgu);
		}
	}
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Gruptaki Üyeler", proStr, "Kapat", "");
	return 1;
}

CMD:gruplar(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	new proStr[1024], saydir = 0;
	format(proStr, sizeof(proStr), "{7A8AFF}Grup Ismi\t{7A8AFF}Grup ID\t{7A8AFF}Kurucu\t{7A8AFF}Üye Sayýsý\n");
	foreach(new e: _Gruplar)
	{
		format(proStr, sizeof(proStr), "%s%s\t%d\t%s\t%d\n", proStr, grupIslem[e][g_Ismi], e, grupIslem[e][g_Kurucu], GrupSlotKontrol(e));
		saydir++;
	}
	if(!saydir) { ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aktif Gruplar", "Henüz grup kurulmamýþ !", "Kapat", ""); }
	if(saydir != 0) { ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Aktif Gruplar", proStr, "Kapat", ""); }
	return 1;
}

CMD:ekur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(e_oIslem[playerid][e_Id] != -1) return hataMesaji(playerid, "Bir ekibin var. Önce /eAyril komutunu kullan.");
    new id = Iter_Free(_Ekipler);
    if(id == -1) return hataMesaji(playerid, "Ekip oluþturma limitine ulaþýlmýþ, bir ekip silinince yeni bir ekip kurabilirsiniz.");
   	if(isnull(params)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/eKur (Ekip Ismi)");
	if(strlen(params) > MAX_E_ISIM - 1) return hataMesaji(playerid, "Ekip ismi en fazla 16 karakter uzunluðunda olabilir !");
	if(EkipIsmiDenetle(params)) return hataMesaji(playerid, "Bu ekip ismi kullanýlýyor !");
 	new bilgi_msj[91 + 16 + 3];
	//___________________________________________________________________________
	e_oIslem[playerid][e_Id] = id;
	e_oIslem[playerid][e_Davet] = id;
	e_oIslem[playerid][e_Katilim] = id;
	//___________________________________________________________________________
	format(ekipIslem[id][e_Ismi], MAX_E_ISIM, params);
	ekipIslem[id][e_Aktiflik] = 1;
 	format(ekipIslem[id][e_Kurucu], MAX_PLAYER_NAME, getName(playerid));
 	ekipIslem[id][e_kID] = playerid;
 	ekipIslem[id][e_limit] = 0;
	//___________________________________________________________________________
	format(bilgi_msj, sizeof(bilgi_msj), "[SISTEM] {FFFFFF}Þuanda {FCA32D}%s {FFFFFF}isimli ekibi oluþturdunuz. Ekip ID: {FCA32D}%d", params, id);
 	SendClientMessage(playerid, 0x47C2FFFF, bilgi_msj);
    Iter_Add(_Ekipler, id);
	return 1;
}

CMD:eayril(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(e_oIslem[playerid][e_Id] == -1) return hataMesaji(playerid, "Bir ekibin yok !");
	new ekipID = e_oIslem[playerid][e_Id], bilgi_msj[78 + 24 + 24 + 5 + 1];
    ekipIslem[ekipID][e_limit]--;
	foreach(new i: Player)
	{
		if(e_oIslem[i][e_Id] == ekipID)
		{
		    format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] %s(%d), adlý oyuncu ekibinden ayrýldý. Sebep: Kendi isteði.", getName(playerid), playerid);
			SendClientMessage(i, 0xF59E25FF, bilgi_msj);
		}
	}
 	e_oIslem[playerid][e_Id] = -1;
	e_oIslem[playerid][e_Davet] = -1;
	e_oIslem[playerid][e_Katilim] = -1;

	new slotAra = EkipSlotKontrol(ekipID);
	if(slotAra <= 0)
	{
		format(ekipIslem[ekipID][e_Ismi], MAX_E_ISIM, "");
		format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, "");
		ekipIslem[ekipID][e_kID] = INVALID_PLAYER_ID;
		ekipIslem[ekipID][e_Aktiflik] = 0;
		Iter_Remove(_Ekipler, ekipID);
	}
	else
	{
		if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) == 0)
		{
		    new oCount[MAX_PLAYERS], arttirr = 0, _pid = INVALID_PLAYER_ID;
		    foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) oCount[arttirr] = i, arttirr++;
		    _pid = oCount[random(arttirr)];
			format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, getName(_pid)), ekipIslem[ekipID][e_kID] = _pid;
   		    format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Lider %s(%d) ekipten ayrýldýðý için yeni Lider %s(%d) olarak ayarlandý.", getName(playerid), playerid, getName(_pid), _pid);
		    foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) SendClientMessage(i, 0xF59E25FF, bilgi_msj);
			_pid = INVALID_PLAYER_ID;
			for(new i = 0; i < arttirr; i++) oCount[i] = INVALID_PLAYER_ID;
		}
	}
	EkipFix();
	return 1;
}

CMD:edavet(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new ekipID = e_oIslem[playerid][e_Id], ID, bilgi_msj[94 + MAX_PLAYER_NAME + 3 + 16 + 3];
    if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu ekibin kurucusu deðilsin !");
    if(ekipIslem[ID][e_limit] >= MAX_EKIP_LIMIT - 1) return hataMesaji(playerid, "Bu ekibin limiti dolmuþ !");
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/eDavet (Oyuncu ID)");
    if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID yok !");
    if(e_oIslem[ID][e_Id] == e_oIslem[playerid][e_Id]) return hataMesaji(playerid, "Bu oyuncu ekibinizde.");
    if(e_oIslem[ID][e_Davet] == e_oIslem[playerid][e_Id]) return hataMesaji(playerid, "Bu oyuncu ekibinize davet edilmiþ.");
    if(e_oIslem[ID][e_Katilim] == ekipID)
    {
        ekipIslem[ID][e_limit]++;
        e_oIslem[ID][e_Id] = ekipID, e_oIslem[ID][e_Davet] = -1, e_oIslem[ID][e_Katilim] = -1;
        format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Oyuncu %s(%d), artýk %s adlý ekipte !", getName(ID), ID, ekipIslem[ekipID][e_Ismi]);
		foreach(new i: Player) if(e_oIslem[i][e_Id] == ekipID) SendClientMessage(i, 0x47FF7EFF, bilgi_msj);
        return 1;
	}
	e_oIslem[ID][e_Davet] = ekipID;
	format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Oyuncu %s(%d), sizi %s(%d) adlý ekibe davet ediyor. katýlmak için /eKatil %d yazýn.", getName(playerid), playerid, ekipIslem[ekipID][e_Ismi], ekipID, ekipID);
	SendClientMessage(ID, 0xFFE947FF, bilgi_msj);
	format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Oyuncu %s(%d) ekibinize davet ettiniz !", getName(ID), ID);
	SendClientMessage(playerid, 0xFFE947FF, bilgi_msj);
	return 1;
}

CMD:ekatil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] == SIVIL || gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new ID, string[86 + MAX_PLAYER_NAME + 6];
    if(e_oIslem[playerid][e_Id] != -1) return hataMesaji(playerid, "Bir ekibin mevcut, /eAyril komutunu kullanarak ekipten ayrýl !");
    if(ekipIslem[ID][e_limit] >= MAX_EKIP_LIMIT - 1) return hataMesaji(playerid, "Bu ekibin limiti dolmuþ !");
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/eKatil (Ekip ID)");
	if(!Iter_Contains(_Ekipler, ID)) return hataMesaji(playerid, "Ekip ID'si geçersiz !");
	if(e_oIslem[playerid][e_Davet] == ID)
	{
	    ekipIslem[ID][e_limit]++;
 		e_oIslem[playerid][e_Id] = ID, e_oIslem[playerid][e_Davet] = -1, e_oIslem[playerid][e_Katilim] = -1;
        format(string, sizeof(string), "[EKÝP] Oyuncu %s(%d), artýk %s adlý ekipte !", getName(playerid), playerid, ekipIslem[ID][e_Ismi]);
		foreach(new i: Player) if(e_oIslem[i][e_Id] == ID) SendClientMessage(i, 0x47FF7EFF, string);
	    return 1;
	}
	if(SureYasagi(playerid, "eKatildim", 30)) return 1;
	e_oIslem[playerid][e_Katilim] = ID;
	format(string, sizeof(string), "[EKÝP] %s(%d) adlý ekibe katýlma isteðiniz gönderildi !", ekipIslem[ID][e_Ismi], ID);
	SendClientMessage(playerid, 0xFFE947FF, string);
	format(string, sizeof(string), "[EKÝP] Oyuncu %s(%d) ekibinize katýlmak istiyor, kabul etmek için /eDavet %d yazýn.", getName(playerid), playerid, playerid);
	foreach(new i: Player) if(e_oIslem[i][e_Id] == ID) if(strcmp(ekipIslem[i][e_Kurucu], getName(i), false) == 0) SendClientMessage(i, 0xFFE947FF, string);
	return 1;
}

CMD:elider(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(e_oIslem[playerid][e_Id] == -1) return hataMesaji(playerid, "Bir ekibin yok !");
	new ekipID = e_oIslem[playerid][e_Id], ID, bilgi_msj[100];
	if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Ekip lideri deðilsin !");
    if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/eLider (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID yok !");
	if(playerid == ID)  return hataMesaji(playerid, "Zaten bu ekibin liderisiniz !");
    if(e_oIslem[ID][e_Id] != ekipID) return hataMesaji(playerid, "Bu oyuncu ekibinizde deðil !");
	format(ekipIslem[ekipID][e_Kurucu], MAX_PLAYER_NAME, getName(ID));
	e_oIslem[playerid][e_Davet] = -1;
	e_oIslem[playerid][e_Katilim] = -1;
	ekipIslem[ekipID][e_kID] = ID;
	format(bilgi_msj, sizeof(bilgi_msj), "[EKÝP] Ekip lider deðiþikliði yapýldý, artýk yeni ekip lideri %s(%d)", getName(ID), ID);
	foreach(new i : Player) if(e_oIslem[i][e_Id] == ekipID) SendClientMessage(i, 0x61FF4FFF, bilgi_msj);
	return 1;
}

CMD:ekipat(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(e_oIslem[playerid][e_Id] == -1) return hataMesaji(playerid, "Bir ekibin yok !");
    new ekipID = e_oIslem[playerid][e_Id], ID;
    if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(playerid), false) != 0) return hataMesaji(playerid, "Ekip lideri deðilsin !");
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/EkipAt (Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Böyle bir ID yok !");
    if(playerid == ID)  return hataMesaji(playerid, "Kendini ekipten atamazsýn, /eAyril kullan !");
    if(e_oIslem[ID][e_Id] != ekipID) return hataMesaji(playerid, "Bu oyuncu ekibinizde deðil !");
    ekipIslem[ekipID][e_limit]--;
 	foreach(new i : Player)
	{
		if(e_oIslem[i][e_Id] == ekipID)
		{
	    	new str[65 + MAX_PLAYER_NAME + 3 ];
	    	format(str, sizeof(str), "[EKÝP] Oyuncu %s(%d), ekip lideri tarafýndan ekipten atýldý !", getName(ID), ID);
	    	SendClientMessage(i, 0x61FF4FFF, str);
		}
	}
	e_oIslem[ID][e_Id] = -1;
	e_oIslem[ID][e_Katilim] = -1;
	e_oIslem[ID][e_Davet] = -1;
	return 1;
}

CMD:e(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	if(e_oIslem[playerid][e_Id] == -1) return hataMesaji(playerid, "Bir ekibin yok !");
    if(isnull(params)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/E (Msj)");
    new str[156], aStr[156];
   	if(stringContainsIP(params))
	{
		hataMesaji(playerid, "Ip reklamý yapýp ne yapacaksýn ahbap ?");
		return 1;
	}
    format(str, sizeof(str), "[EKÝP] %s(%d), %s.", getName(playerid), playerid, params);
    foreach(new i : Player)
    {
        if(e_oIslem[i][e_Id] == e_oIslem[playerid][e_Id])
        {
            SendClientMessage(i, 0x7A8AFFFF, str);
        }
  		if(oyuncuData[i][EkipGorme] == 1)
    	{
    		format(aStr, sizeof(aStr), "** |Ekip|: Ekip ID: (%d) - %s(%d) >> %s.", e_oIslem[playerid][e_Id], getName(playerid), playerid, params);
			if(i != playerid)
			{
				SendClientMessage(i, 0xA19C69FF, aStr);
			}
   		}
    }
	return 1;
}

CMD:euyeler(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new ID, proStr[1024], kurucuSorgu[MAX_PLAYER_NAME + 22];
	if(sscanf(params, "u", ID)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/eUyeler (Ekip ID)");
	if(!Iter_Contains(_Ekipler, ID)) return hataMesaji(playerid, "Bu id de ekip yok !");
    proStr = "{7A8AFF}Üyeler\t{7A8AFF}ID\t{7A8AFF}?\n";
	foreach(new i : Player)
	{
		if(e_oIslem[i][e_Id] == ID)
		{
		    if(strcmp(ekipIslem[ID][e_Kurucu], getName(i), false) == 0)
		    {
		        kurucuSorgu = "{8AFF7A}Ekip Kurucusu";
			}
			else
			{
			    kurucuSorgu = "";
			}
			format(proStr, sizeof(proStr), "%s{FFFFFF}%s\t%d\t%s\n", proStr, getName(i), i, kurucuSorgu);
		}
	}
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Ekipteki Üyeler", proStr, "Kapat", "");
	return 1;
}

CMD:ekipler(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16) return hataMesaji(playerid, "Bu komutu sivil oyuncular kullanamaz.");
	new proStr[1024], saydir = 0;
	format(proStr, sizeof(proStr), "{7A8AFF}Ekip Ismi\t{7A8AFF}Ekip ID\t{7A8AFF}Kurucu\t{7A8AFF}Üye Sayýsý\n");
	foreach(new e: _Ekipler)
	{
		format(proStr, sizeof(proStr), "%s%s\t%d\t%s\t%d\n", proStr, ekipIslem[e][e_Ismi], e, ekipIslem[e][e_Kurucu], EkipSlotKontrol(e));
		saydir++;
	}
	if(!saydir) { ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aktif Ekipler", "Henüz ekip kurulmamýþ !", "Kapat", ""); }
	if(saydir != 0) { ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Aktif Ekipler", proStr, "Kapat", ""); }
	return 1;
}

CMD:tecavuz(playerid, params[])
{
    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new ID, xa = random(100), ax[113 + MAX_PLAYER_NAME];
	if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(gTeam[playerid] != TECAVUZCU) return hataMesaji(playerid, "Bu komutu kullanmak için Tecavüzcü olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/Tecavuz [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
    if(playerid == ID) return hataMesaji(playerid, "Kendini tecavüz edemezsin !");
	if(IzlemeModu[playerid][izlemeModu]) return hataMesaji(playerid, "Ýzleme modundayken birisini tecavüz edemezsin.");
	if(GetPlayerDistanceFromPlayer(playerid, ID) > 4) return hataMesaji(playerid, "Tecavuz etmek istediðin oyuncu yakýnýnda deðil !");
    if(aDondurma[ID] == 1) return hataMesaji(playerid, "Tecavuz etmek istediðin oyuncu admin tarafýndan dondurulmuþ !");
    if(oIslem[ID][kelepce] == 1) return hataMesaji(playerid, "Kelepçelenmiþ oyuncularý tecavüz edemezsin !");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde birini tecavuz edemezsin !");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Tecavuz etmek istediðin oyuncu araç içinde !");
    if(GetPVarInt(ID, "soklandi") == 1) return hataMesaji(playerid, "Tazerlenmiþ oyuncularý tecavüz edemezsin !");
    if(TecavuzV[ID] == 1) return hataMesaji(playerid, "Bu kiþi daha önce tecavuze maruz kalmýþ !");
    if(GetPVarInt(ID, "SpawnOldum") == 0) return hataMesaji(playerid, "Bu oyuncu Spawn olmadan tecavüz edemezsin.");
    if(GetPVarInt(ID, "GodMode") == 1) return hataMesaji(playerid, "Admin modunda olan birini tecavuz edemezsin.");
   	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý bölgesinde bu komutu kullanamazsýn.");
	return 1;}}
	if(SureYasagi(playerid, "TecavuzYasak", 120)) return 1;
	if(xa <= 10)
    {
        if(SureYasagi(playerid, "TecavuzYasak", 30)) return 1;
        hataMesaji(playerid, "Tecavuz giriþimi baþarýsýz oldu. 30 saniye sonra tekrar dene !");
        return 1;
	}
	if(TecavuzV[ID] == 0)
	{
	    TecavuzV[ID] = 1;
	    format(ax, sizeof(ax), "[TECAVUZ] Oyuncu %s(%d), sizi tecavüz ederek virüs bulaþtýrdý. Tedavi olmazsan öleceksin.", getName(playerid), playerid);
	    SendClientMessage(ID, 0xFFC71FFF, ax);

	    format(ax, sizeof(ax), "[TECAVUZ] Oyuncu %s(%d) > %s(%d) adlý oyuncuyu tecavüz ederek virüs bulaþtýrdý.", getName(playerid), playerid, getName(ID), ID);
	    SendClientMessageToAll(0xFFC71FFF, ax);
	}
	aranmaLeveli(playerid, 4);
	Skorver(playerid, 2);
  	format(ax, sizeof(ax), "~g~~h~~h~+2 Skor");
	GameTextForPlayer(playerid, ax, 2500, 4);
    if(oyuncuData[playerid][pVip] >= 1)
    {
        Skorver(playerid, 1);
        if(oyuncuData[playerid][pAdmin] <= 0)
        {
        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her tecavüz etmede +1 skor kazanýyor.", getName(playerid), playerid);
			SendClientMessageToAll(-1, ax);
		}
	}
	return 1;
}


CMD:asoy(playerid, params[])
{
    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(gTeam[playerid] != GASPCI) return hataMesaji(playerid, "Bu komutu kullanmak için gaspçý olmalýsýn.");
	new ID, str[70 + MAX_PLAYER_NAME + 3];
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/aSoy [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Sunucuda böyle bir ID yok !");
    if(playerid == ID) return hataMesaji(playerid, "Kendini soyamazsýn !");
    if(GetPlayerDistanceFromPlayer(playerid, ID) > 4) return hataMesaji(playerid, "Parasýný çalmak istediðin oyuncu yakýnýnda deðil !");
    if(GetPVarInt(ID, "GodMode") == 1) return hataMesaji(playerid, "Admin modunda olan birini soyamazsýn.");
    if(AFkMi[ID] == 1) return hataMesaji(playerid, "Bu oyuncu AFK, soyamazsýn.");
    if(oyuncuData[ID][hapisSure] >= 1) return hataMesaji(playerid, "Bu oyuncu hapiste soyamazsýn.");
	if(aDondurma[ID] == 1) return hataMesaji(playerid, "Tecavuz etmek istediðin oyuncu admin tarafýndan dondurulmuþ !");
    if(oIslem[ID][kelepce] == 1) return hataMesaji(playerid, "Kelepçelenmiþ oyuncularý soyamazsýn !");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Araç içinde birisini soyamazsýn !");
	if(GetPlayerState(ID) == PLAYER_STATE_DRIVER || GetPlayerState(ID) == PLAYER_STATE_PASSENGER) return hataMesaji(playerid, "Soymak istediðin oyuncu araç içinde !");
	new para = ParaKorumasi[ID], soyBakalim = random(49);
	switch(soyBakalim)
	{
	    case 0..25:
	    {
	        hataMesaji(playerid, "Soymak istediðin oyuncuyu soyamadýn. 1 dakika sonra tekrar dene !");
            if(SureYasagi(playerid, "aSoyYasak", 60)) return 1;
	        return 1;
		}
		case 26..49:
		{
		    if(para <= 0) return hataMesaji(playerid, "Bu oyuncunun parasý yok !");
		    if(para < 100000) return hataMesaji(playerid, "Bu oyuncunun yeterli parasý yok !");
            if(SureYasagi(playerid, "aSoyYasak", 300)) return 1;
            new p = para/10;
            new p2 = p/2;
			format(str, sizeof(str), "[GASP] Oyuncu %s(%d), soyarak $%s dolar çaldýn ve 1 skor kazandýn.", getName(ID), ID, convertNumber(p2));
			SendClientMessage(playerid, 0xF39C12FF, str);
			format(str, sizeof(str), "[GASP] Oyuncu %s(%d), seni soyarak senden $%s dolar çaldý !", getName(playerid), playerid, convertNumber(p2));
			SendClientMessage(ID, 0xF39C12FF, str);
			aranmaLeveli(playerid, 4);
			pParaver(playerid, p2);
			Skorver(playerid, 1);
			pParaver(ID, -p2);
		}
	}
	if(oyuncuData[playerid][pVip] >= 1)
    {
        Skorver(playerid, 1);
        if(oyuncuData[playerid][pAdmin] <= 0)
        {
            new ax[112+24];
        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her gaspdan +1 skor kazanýyor.", getName(playerid), playerid);
			SendClientMessageToAll(-1, ax);
		}
	}
	return 1;
}

CMD:atamir(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(gTeam[playerid] != TAMIRCI) return hataMesaji(playerid, "Bu komutu kullanmak için tamirci olmalýsýn.");
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý tamir etmek için sürücü olmalýsýn.");
	if(SureYasagi(playerid, "aTamir", 90)) return 1;
    RepairVehicle(GetPlayerVehicleID(playerid));
    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0xE291FFFF, "Araç tamir edildi.");
	return 1;
}

CMD:bombakur(playerid, params[])
{
    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(gTeam[playerid] != BOMBACI) return hataMesaji(playerid, "Bu komutu kullanmak için bombacý olmalýsýn.");
	if(Bombam[playerid] <= 0) return hataMesaji(playerid, "Elinde hiç bomba yok, Tamircinin yakýnlarýnda ki bombacýdan bomba alabilirsin.");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete savaþý bölgesinde bu komutu kullanamazsýn.");
	return 1;}}
	new bSure;
	if(sscanf(params, "i", bSure)) return aBilgi(playerid, "/BombaKur [Patlayacaðý Süre]");
	if(bSure < 5 || bSure > 20) return hataMesaji(playerid, "Bomba süresini en az 5 en fazla 20 girebilirsin.");
	if(SureYasagi(playerid, "bombaYasak", 120)) return 1;
	if(IsPlayerInAnyVehicle(playerid))
	{
	    SetPVarInt(playerid, "BombaModu", 1);
	    SetPVarInt(playerid, "BombaliArac", GetPlayerVehicleID(playerid));
	}
	else
	{
	    new Float:BombaPosz[3];
	    GetPlayerPos(playerid, BombaPosz[0], BombaPosz[1], BombaPosz[2]);
	    SetPVarInt(playerid, "BombaModu", 2);
	    BombaIslem[playerid][bombaPos][0] = BombaPosz[0];
	    BombaIslem[playerid][bombaPos][1] = BombaPosz[1];
	    BombaIslem[playerid][bombaPos][2] = BombaPosz[2];
	}
	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	Bombam[playerid]--;
	SetPVarInt(playerid, "BombaSure", GetTickCount() + bSure * 1000);
	SendClientMessage(playerid, 0x50FF4AFF, "Bomba kuruldu. Belirlediðiniz süre içerisinde bomba patlayacak.");
	aranmaLeveli(playerid, 4);
	return 1;
}

CMD:aracsat(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(gTeam[playerid] != ARAC_HIRSIZI) return hataMesaji(playerid, "Bu komutu kullanmak için araç hýrsýzý olmalýsýn.");
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç satmak için bir araçta olmalýsýn.");
	if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü modunda olmalýsýn.");
	if(!IsPlayerInDynamicCP(playerid, CP_AHIRSIZ)) return hataMesaji(playerid, "Bu aracý satmak için limandaki araç satma yerinde olmalýsýn.");
    if(oaIslem[GetPlayerVehicleID(playerid)][oaCheck]) return hataMesaji(playerid, "Özel araçlarý satamazsýnýz.");
    if(AraclarIslem[GetPlayerVehicleID(playerid)][aAktif]) return hataMesaji(playerid, "Satýn alýnmýþ aracý satamazsýn.");
    if(CeteArac[GetPlayerVehicleID(playerid)][ceteAracAktif]) return hataMesaji(playerid, "Çete araçlarýný satamazsýn.");
	if(SureYasagi(playerid, "aracSatma", 180)) return 1;
	new
		str[77 + 7],
		aModel = GetVehicleModel(GetPlayerVehicleID(playerid)),
		para = aModel * 45,
		randPara = random(2345),
		toplamMoney = para + randPara
	;
	format(str, sizeof(str), "{3D8EB9}Araç Hýrsýzý »» {FFFFFF}Sokaktan çaldýðýn aracý $%s dolara sattýnýz.", convertNumber(toplamMoney));
	SendClientMessage(playerid, -1, str);
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	aranmaLeveli(playerid, 4);
	pParaver(playerid, toplamMoney);
 	if(oyuncuData[playerid][pVip] >= 1)
    {
        Skorver(playerid, 1);
        if(oyuncuData[playerid][pAdmin] <= 0)
        {
            new ax[112+24];
        	format(ax, sizeof(ax), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan her araç satmadan +1 skor kazanýyor.", getName(playerid), playerid);
			SendClientMessageToAll(-1, ax);
		}
	}
	return 1;
}

CMD:hlistesi(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(gTeam[playerid] >= 2 && gTeam[playerid] <= 8) return hataMesaji(playerid, "Bu komutu devlet memurlarý kullanamaz.");
	if(gTeam[playerid] != SUIKASTCI) return hataMesaji(playerid, "Bu komutu kullanmak için suikastcý olmalýsýn.");
	if(SuikastDurum == 0) return hataMesaji(playerid, "Sistem henüz öldürülecek oyuncularý belirlemedi. Her 20 dakika da bir yeni liste oluþturulur.");
	new str[400], pid = 0;
	foreach(new i : Player)
	{
	    if(sMaruzOyuncu[i] >= 1)
	    {
	        pid++;
	        format(str, sizeof(str), "%s{2ECC71}Oyuncu: {FFFFFF}%s(%d)\t-\t{2ECC71}Ödül: {FFFFFF}$%s\n", str, getName(i), i, convertNumber(sOdulOyuncu[i]));
	    }
	}
	if(pid <= 0) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Hedeflenen Oyuncular", "Hedeflenen oyuncular henüz belirlenmemiþ.", "Kapat", "");
	if(pid != 0) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Hedeflenen Oyuncular", str, "Kapat", "");
	return 1;
}
// Vip komutalarý

CMD:vcan(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 1 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler ve krallar kullanabilir.");
	if(SureYasagi(playerid, "vCan", 60)) return 1;
    Canver(playerid, yCan(playerid));
	SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Canýnýz fullendi.");
	return 1;
}

CMD:vsilah(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler kullanabilir.");
	new str[500];
	for(new i = 0; i < sizeof(SilahIsimler); i++)
	{
	    if(i == 24 || i == 25) continue;
		format(str, sizeof(str), "%s%s\n", str, SilahIsimler[i][_dsIsim]);
	}
	ShowPlayerDialog(playerid, DIALOG_VSILAH, DIALOG_STYLE_LIST, "Silah Seçin", str, "Seç", "Kapat");
	return 1;
}

CMD:vtamir(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 1 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler ve krallar kullanabilir.");
    if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý tamir etmek için sürücü olmalýsýn.");
	if(SureYasagi(playerid, "vTamir", 60)) return 1;
    RepairVehicle(GetPlayerVehicleID(playerid));
    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Aracýnýz {FF5757}tamir {A9A9A9}edildi..");
	return 1;
}

CMD:vzirh(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 1 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler ve krallar kullanabilir.");
	if(SureYasagi(playerid, "vZirh", 60)) return 1;
    Zirhver(playerid, yZirh(playerid));
	SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Zýrhýnýz fullendi.");
	return 1;
}

CMD:vskin(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 1 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler ve krallar kullanabilir.");
    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araçta vSkin komutunu kullanamazsýn.");
	new id;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/vSkin (Skin ID)");
	SetPlayerSkin(playerid, id);
	return 1;
}

CMD:v(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	if(oyuncuData[playerid][pVip] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler kullanabilir.");
    new msj[100], s[148];
	if(sscanf(params, "s[100]", msj)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/V (Mesaj)");
	format(s, sizeof(s), "[VIP-CHAT] %s(%d), %s.", getName(playerid), playerid, msj);
	foreach(new i : Player)
	{
		if(oyuncuData[i][pVip] >= 1)
		{
			SendClientMessage(i, 0x42FF51FF, s);
		}
	}
	return 1;
}

CMD:vdovustil(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	new ID;
    if(oyuncuData[playerid][pVip] < 1) return hataMesaji(playerid, "Bu komutu 2 level ve üstü vipler kullanabilir.");
	if(sscanf(params, "d", ID)) return SendClientMessage(playerid, 0x3EC9F7FF, "/vDovuStil [Dövüþ ID]  {FFFFFF}[0 = Elbow | 1 = Boxing | 2 = Kungfu | 3 = Kneehead | 4 = Grabkick]");
	switch(ID)
	{
	    case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW), SendClientMessage(playerid,1,"{3EC9F7}Bilgi: {FFFFFF}Dövüþ tarzýnýz 'Elbow' olarak deðiþtirildi. Sað týk + F tuþu ile kullanabilirsiniz.");
        case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING), SendClientMessage(playerid,1,"{3EC9F7}Bilgi: {FFFFFF}Dövüþ tarzýnýz 'Boxing' olarak deðiþtirildi. Sað týk + F tuþu ile kullanabilirsiniz.");
        case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU), SendClientMessage(playerid,1,"{3EC9F7}Bilgi: {FFFFFF}Dövüþ tarzýnýz 'Kungfu' olarak deðiþtirildi. Sað týk + F tuþu ile kullanabilirsiniz.");
        case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK), SendClientMessage(playerid,1,"{3EC9F7}Bilgi: {FFFFFF}Dövüþ tarzýnýz 'Grabkick' olarak deðiþtirildi. Sað týk + F tuþu ile kullanabilirsiniz.");
        case 4: SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW), SendClientMessage(playerid,1,"{3EC9F7}Bilgi: {FFFFFF}Dövüþ tarzýnýz 'Elbow' olarak deðiþtirildi. Sað týk + F tuþu ile kullanabilirsiniz.");
		default: SendClientMessage(playerid,1,"{3EC9F7}Bilgi: {FFFFFF}Dövüþ ID hatalý !");
	}
	return 1;
}

CMD:vtpkapat(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][pVip] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler kullanabilir.");
	VipIslem[playerid][vGitt] = 1;
	SendClientMessage(playerid, -1, "{3EC9F7}vGit: {FFFFFF}Viplerin yanýnýza ýþýnlanmasýný kapattýnýz.");
	return 1;
}

CMD:vtpac(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][pVip] < 1) return hataMesaji(playerid, "Bu komutu 1 level ve üstü vipler kullanabilir.");
	VipIslem[playerid][vGitt] = 0;
	SendClientMessage(playerid, -1, "{3EC9F7}vGit: {FFFFFF}Viplerin yanýnýza ýþýnlanmasýný açtýnýz.");
	return 1;
}

CMD:vdondur(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 2 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu 2 level ve üstü vipler ve krallar kullanabilir.");
 	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý düzeltmek etmek için sürücü olmalýsýn.");
    new vid = GetPlayerVehicleID(playerid);
    new Float:angle;
    GetVehicleZAngle(vid, angle);
    SetVehicleZAngle(vid, angle);
	SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Kullandýðýnýz aracý {FF5757}düzeltildi.");
	return 1;
}

CMD:vnitro(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 2) return hataMesaji(playerid, "Bu komutu 2 level ve üstü vipler kullanabilir.");
	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu araca nitro eklemek için sürücü olmalýsýn.");
	if(SureYasagi(playerid, "vNitro", 60)) return 1;
	new a = GetPlayerVehicleID(playerid);
    if(GetVehicleModel(a) == 581 || GetVehicleModel(a) == 523 || GetVehicleModel(a) == 462 || GetVehicleModel(a) == 521 || GetVehicleModel(a) == 463
	|| GetVehicleModel(a) == 522 || GetVehicleModel(a) == 461 || GetVehicleModel(a) == 448 || GetVehicleModel(a) == 468 || GetVehicleModel(a) == 586
	|| GetVehicleModel(a) == 509 || GetVehicleModel(a) == 481 || GetVehicleModel(a) == 510 || GetVehicleModel(a) == 472 || GetVehicleModel(a) == 473
	|| GetVehicleModel(a) == 493 || GetVehicleModel(a) == 595 || GetVehicleModel(a) == 484 || GetVehicleModel(a) == 430 || GetVehicleModel(a) == 453
	|| GetVehicleModel(a) == 452 || GetVehicleModel(a) == 446 || GetVehicleModel(a) == 454 || GetVehicleModel(a) == 590 || GetVehicleModel(a) == 569
	|| GetVehicleModel(a) == 537 || GetVehicleModel(a) == 538 || GetVehicleModel(a) == 570 || GetVehicleModel(a) == 449)
	{
	    hataMesaji(playerid, "Bu araçlara nitro ekleyemezsin.");
	    return 1;
	}
	AddVehicleComponent(a, 1010);
	SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Kullandýðýnýz araca {FF5757}10x nitro {A9A9A9}eklediniz.");
	return 1;
}

CMD:votoarenk(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][pVip] < 2) return hataMesaji(playerid, "Bu komutu 2 level ve üstü vipler kullanabilir.");
    if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Otomatik araç renk deðiþtirmeyi etkinleþtirmek için sürücü olmalýsýn.");
    //if(oaIslem[GetPlayerVehicleID(playerid)][oaCheck]) return hataMesaji(playerid, "Özel araçlarýn renklerini deðiþtiremezsin.");
	if(VipIslem[playerid][aArrenk] == true)
    {
        KillTimer(VipIslem[playerid][aRenkTimer]);
        VipIslem[playerid][aArrenk] = false;
        SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Otomatik araç {FF5757}renk deðiþtirme {A9A9A9}özelliði kapatýldý.");
    }
    else
    {
        KillTimer(VipIslem[playerid][aRenkTimer]);
        VipIslem[playerid][aRenkTimer] = SetTimerEx("VipARenkDegistir", 500, true, "d", playerid);
        VipIslem[playerid][aArrenk] = true;
        SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Otomatik araç {FF5757}renk deðiþtirme {A9A9A9}özelliði aktif edildi. Ayný komutu tekrar yazarak kapatabilir / açabilirsiniz.");
    }
	return 1;
}

CMD:vsarki(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(oyuncuData[playerid][pVip] < 3) return hataMesaji(playerid, "Bu komutu 3 level ve üstü vipler kullanabilir.");
  	if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için araçta olmalýsýn.");
    if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý düzeltmek etmek için sürücü olmalýsýn.");
    new msj[100];
	if(sscanf(params, "s[100]", msj)) return SendClientMessage(playerid, 0x7491D6FF, "[BILGI] {FFFFFF}/vSarki (URL)");
	new aracid = GetPlayerVehicleID(playerid);
	foreach(new i: Player)
	{
		if(GetPlayerVehicleID(i) == aracid)
		{
		    StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i, msj);
		}
	}
	SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Araçtaki oyunculara açtýðýnýz {FF5757}müziði {A9A9A9}dinletiyorsunuz.");
	return 1;
}

CMD:vgit(playerid)
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	new str[350], cekvipstr[11], x = 0, vTag[22];
    if(oyuncuData[playerid][pVip] < 3) return hataMesaji(playerid, "Bu komutu 3 level ve üstü vipler kullanabilir.");
    format(str, sizeof(str), "{7A8AFF}Nick\t{7A8AFF}ID\t{7A8AFF}Vip Seviye\n");
	foreach(new i: Player)
	{
	    if(i != playerid && oyuncuData[i][pVip] != 0 && oyuncuData[i][pAdmin] <= 2)
	    {
			if(VipIslem[i][vGitt] == 0)
			{
				switch(oyuncuData[i][pVip])
				{
				    case 1: vTag = "{0F52BA}Safir Vip";
				    case 2: vTag = "{F62217}Yakut Vip";
				    case 3: vTag = "{1E7B2C}Zümrüt Vip";
				    case 4: vTag = "{B9F2FF}Elmas Vip";
				}
			    format(cekvipstr, sizeof(cekvipstr), "vipTP_%d", x);
				SetPVarInt(playerid, cekvipstr, i);
				format(str, sizeof(str), "%s%s\t%d\t%s\n", str, getName(i), i, vTag);
				x++;
			}
		}
	}
	if(x == 0) return ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Vip", "Vip oyuncu yok veya vip ýþýnlanma özelliðini kapatmýþlar !", "Kapat", "");
	if(x != 0) return ShowPlayerDialog(playerid, DIALOG_VGIT, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Vipler", str, "Git", "Kapat");
	return 1;
}

CMD:vduyuru(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	new yazi[128], yazi2[148];
	if(oyuncuData[playerid][pVip] < 4) return hataMesaji(playerid, "Bu komutu 4 level ve üstü vipler kullanabilir.");
    if(VipDuyuruBekle == 1) return hataMesaji(playerid, "Aktif bir vip duyuru var, bitmesini bekleyin !");
	if(sscanf(params, "s[128]", yazi)) return SendClientMessage(playerid, 0x3EC9F7FF, "/vDuyuru {FFFFFF}[Duyurunuz]");
 	if(stringContainsIP(yazi)) return hataMesaji(playerid, "Duyurunuzda Ip reklamý içeriyor.");
 	if(oyuncuData[playerid][sureKayit] != 0) return hataMesaji(playerid, "Susturulmuþken duyuru yapamazsýn.");
 	if(SureYasagi(playerid, "vDyuru", 60)) return 1;
	for(new i = 0; i < strlen(yazi); i++)
	{
	    switch(yazi[i])
	    {
			case '~': yazi[i] = '-';
			case '[': yazi[i] = '(';
			case ']': yazi[i] = ')';
			case 'ð': yazi[i] = 'g';
            case 'Ð': yazi[i] = 'G';
            case 'þ': yazi[i] = 's';
            case 'Þ': yazi[i] = 'S';
            case 'ý': yazi[i] = 'i';
            case 'ö': yazi[i] = 'o';
            case 'Ö': yazi[i] = 'O';
            case 'ç': yazi[i] = 'c';
            case 'Ç': yazi[i] = 'C';
            case 'ü': yazi[i] = 'u';
            case 'Ü': yazi[i] = 'U';
            case 'Ý': yazi[i] = 'I';
            case '@': yazi[i] = ' ';
	    }
	}
	VipDuyuruBekle = 1;
	SetTimer("VipDuyuruKapat", 7500, false);
	format(yazi2, sizeof(yazi2), "~r~~h~~h~%s(%d): ~w~~h~%s", getName(playerid), playerid, yazi);
	TextDrawSetString(OzelDuyuru[2], yazi2);
    foreach(new i : Player){
    TextDrawShowForPlayer(i, OzelDuyuru[0]);
    TextDrawShowForPlayer(i, OzelDuyuru[1]);
    TextDrawShowForPlayer(i, OzelDuyuru[2]);
    }
	return 1;
}

CMD:vsifirla(playerid)
{
    if(oyuncuData[playerid][pVip] < 4) return hataMesaji(playerid, "Bu komutu 4 level ve üstü vipler kullanabilir.");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	hataMesaji(playerid, "Çete bölgelerinde bu komutu kullanamazsýn.");
	return 1;}}
    if(SureYasagi(playerid, "vSifirla", 300)) return 1;
    aranmaLeveli(playerid, 0);
    SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Suç seviyenizi {FF5757}sýfýrladýnýz. {A9A9A9}5 dakika da bir sýfýrlayabilirsiniz.");
	return 1;
}

// Admin Komutlarý

CMD:etkbaslat(playerid, params[])
{
	new sure, EtkName[ETK_Isim], b[215], Float: etkPos[4];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
	//if(oyuncuData[playerid][pAdmin] < 7) return hataMesaji(playerid, "Etkinlik baþlatmak için 7 level veya üstü bir yetkili olmalýsýnýz.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
	if(EtkIslem[etkAktifmi] == 1) return hataMesaji(playerid, "Aktif bir etk var, bitmesini bekleyin !");
	if(etkYaptim[playerid] == 1) return hataMesaji(playerid, "Þuanda zaten bir etkinlik yapýyorsunuz.");
	if(sscanf(params, "ds[50]", sure, EtkName)) return aBilgi(playerid, "/EtkBaslat [Süre] [Etkinlik Ýsmi]");
    if(strlen(EtkName) >= ETK_Isim-1) return hataMesaji(playerid, "Etkinlik ismi çok uzun !");
    if(sure < 20 || sure > 25) return hataMesaji(playerid, "Süreyi en düþük 20 en fazla 25 girebilirsiniz.");
    oyuncuData[playerid][adminkomuts]++;
	for(new i = 0; i < strlen(EtkName); i++)
	{
	    switch(EtkName[i])
	    {
			case '~': EtkName[i] = '-';
			case '[': EtkName[i] = '(';
			case ']': EtkName[i] = ')';
			case 'ð': EtkName[i] = 'g';
            case 'Ð': EtkName[i] = 'G';
            case 'þ': EtkName[i] = 's';
            case 'Þ': EtkName[i] = 'S';
            case 'ý': EtkName[i] = 'i';
            case 'ö': EtkName[i] = 'o';
            case 'Ö': EtkName[i] = 'O';
            case 'ç': EtkName[i] = 'c';
            case 'Ç': EtkName[i] = 'C';
            case 'ü': EtkName[i] = 'u';
            case 'Ü': EtkName[i] = 'U';
            case 'Ý': EtkName[i] = 'I';
	    }
	}
 	for(new i = 0; i < 60; i++)
    {
        etkMaxArac[i] = INVALID_VEHICLE_ID;
    }
	format(b, sizeof(b), "~w~~h~Yetkili ~y~~h~%s(%d)~w~~h~, ~r~~h~~h~%s ~w~~h~isimli etkinligi baslatti. Katilim ~p~~h~%d ~w~~h~saniye sonra sona erecek. Katilmak icin ~b~~h~~h~/EtkGit ~w~~h~yazin.", getName(playerid), playerid, EtkName, sure);
	TextDrawSetString(ETK_Text[4], b);
    kumarda[playerid] = false;
	EtkIslem[etkAktifmi] = 1;
    EtkIslem[etkKatilim] = 1;
    etkHasar = 0;
    KillTimer(etkTimer);
    SetPVarInt(playerid, "ETKAracim", INVALID_VEHICLE_ID);
    etkTimer = SetTimer("EtkBaslatildi", sure * 1000, false);
    etkYaptim[playerid] = 1;
    etkCount = 0;
    SetPlayerVirtualWorld(playerid, ETK_WORLD);
    GetPlayerPos(playerid, etkPos[0], etkPos[1], etkPos[2]);
	GetPlayerFacingAngle(playerid, etkPos[3]);
	ePos[0] = etkPos[0];
	ePos[1] = etkPos[1];
	ePos[2] = etkPos[2];
	ePos[3] = etkPos[3];
   	for(new i = 0; i < 5; i++) { TextDrawShowForAll(ETK_Text[i]); }
 	foreach(new i : Player) { PlayerPlaySound(i,1057,0.0,0.0,0.0); }
	return 1;
}

CMD:etkgit(playerid)
{
    if(GetPVarInt(playerid, "ozelAracID") != 0) return hataMesaji(playerid, "Özel araç seçerken etkinliðe gidemezsin.");
    if(kumarda[playerid]) return hataMesaji(playerid, "Bu komutu kumarhanede kullanamazsýn.");
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Bu komutu kullanmak için aktif bir etk olmasý lazým.");
    if(EtkIslem[etkKatilim] == 0) return hataMesaji(playerid, "Etkinliðe katýlým süresi dolmuþ.");
    if(etkYaptim[playerid] == 1) return hataMesaji(playerid, "Siz zaten etkinlik yapýyorsunuz.");
    if(oIslem[playerid][kelepce] == 1) return hataMesaji(playerid, "Kelepçeliyken etkinliðe katýlamazsýnýz.");
    if(GetPVarInt(playerid, "soklandi") == 1) return hataMesaji(playerid, "Tazerliyken etkinliðe gidemezsiniz.");
	if(Etkde[playerid] == true) return hataMesaji(playerid, "Zaten etkinliðe katýldýnýz.");
	if(GetPVarInt(playerid, "GodMode") == 1) cmd_adon(playerid, "");
    kumarda[playerid] = false;
	Etkde[playerid] = true;
	ResetPlayerWeapons(playerid);
	new Float:index = 1.0;
	ePos[0] += (index * floatsin(-ePos[3],degrees));
	ePos[1] += (index * floatcos(-ePos[3],degrees));
	index += 0.5;
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, ETK_WORLD);
	SetPlayerPos(playerid, ePos[0],ePos[1], ePos[2]);
	SetPlayerFacingAngle(playerid, ePos[3] - 180);
	TogglePlayerControllable(playerid, 0);
	etkCount++;
	SendClientMessage(playerid, SCM_RENK, "Etkinlik: {FFFFFF}Þuanda bir etkinliðe katýldýnýz, lütfen diðer katýlýmcýlarý bekleyin...");
    SendClientMessage(playerid, SCM_RENK, "Etkinlik: {FFFFFF}Eðer etkinlikten çýkmak isterseniz {4DE1FF}/EtkCik {FFFFFF}yazabilirsiniz.");
	return 1;
}

CMD:etkayril(playerid) return cmd_etkcik(playerid);
CMD:etkcik(playerid)
{
    if(oyuncuData[playerid][hapisSure] >= 1) return hataMesaji(playerid, "Hapisteyken komut kullanamazsýn !");
    if(etkYaptim[playerid] == 1) return hataMesaji(playerid, "/EtkBitir kullanýn.");
	if(Etkde[playerid] == false) return hataMesaji(playerid, "Bir etkinliðe katýlmamýþsýnýz.");
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new arac = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < 60; i++)
    	{
    		if(etkMaxArac[i] == arac)
    		{
                etkMaxArac[i] = INVALID_VEHICLE_ID;
    		    break;
    		}
		}
	}
    Etkde[playerid] = false;
    TogglePlayerControllable(playerid, 1);
    SetPlayerVirtualWorld(playerid, 0);
	SpawnPlayer(playerid);
	SendClientMessage(playerid, SCM_RENK, "Etkinlik: {FFFFFF}Katýlmýþ olduðunuz etkinlikten ayrýldýnýz.");
	return 1;
}

CMD:elocalac(playerid, params[])
{
	new b[bMAX_SIZE];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
	if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
	if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), etkinlikte local konuþmalarýný açtý.", getName(playerid), playerid);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
			etkLocal[i] = 0;
	    }
	}
	return 1;
}

CMD:elocalkapat(playerid, params[])
{
	new b[bMAX_SIZE];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
	if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
	if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), etkinlikte local konuþmalarýný kapattý.", getName(playerid), playerid);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
			if(playerid != i){
			etkLocal[i] = 1;}
	    }
	}
	return 1;
}


CMD:ecan(playerid, params[])
{
	new _can, b[bMAX_SIZE], Float: exPos[3];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
	if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
	if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(sscanf(params, "d", _can)) return aBilgi(playerid, "/eCan [Verilecen Can - Max / Min: 1 - 100]");
    if(_can < 1 || _can > 150) return hataMesaji(playerid, "Caný en düþük 1, en fazla 150 girebilirsiniz.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyuncularýn canýný %d olarak ayarladý.", getName(playerid), playerid, _can);
	GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	        Canver(i, _can);
	    }
	}
	return 1;
}

CMD:ezirh(playerid, params[])
{
	new _zirh, b[bMAX_SIZE], Float: exPos[3];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(sscanf(params, "d", _zirh)) return aBilgi(playerid, "/eZirh [Verilecen Zirh - Max / Min: 0 - 100]");
    if(_zirh < 0 || _zirh > 150) return hataMesaji(playerid, "Zýrhý en düþük 0, en fazla 150 girebilirsiniz.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyuncularýn zirhini %d olarak ayarladý.", getName(playerid), playerid, _zirh);
	GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	        Zirhver(i, _zirh);
	    }
	}
	return 1;
}

CMD:esilah(playerid, params[])
{
	new _zirh, str[500];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(sscanf(params, "d", _zirh)) return aBilgi(playerid, "/eSilah [Mermi]");
    if(_zirh < 1 || _zirh > 5000) return hataMesaji(playerid, "Mermiyi en düþük 1, en fazla 5000 girebilirsiniz.");
    SetPVarInt(playerid, "eMermiKayit", _zirh);
	for(new i = 0; i < sizeof(SilahIsimler); i++)
	{
		format(str, sizeof(str), "%s%s\n", str, SilahIsimler[i][_dsIsim]);
	}
	ShowPlayerDialog(playerid, DIALOG_ESIlAH, DIALOG_STYLE_LIST, "Silah Seçin", str, "Seç", "Kapat");
	return 1;
}

CMD:ecoz(playerid)
{
    new b[bMAX_SIZE];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), etkinliði baþlatýyor...", getName(playerid), playerid);
    SendClientMessage(playerid, 0x87B1FFFF, b);
    baSla = 4;
    KillTimer(etkBaslaTimer);
    etkBaslaTimer = SetTimerEx("Ecozuluyor", 1000, true, "d", playerid);
	return 1;
}

CMD:ejetpack(playerid,params[])
{
    if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
	SetPlayerSpecialAction(playerid, 2);
	return 1;
}

CMD:earac(playerid)
{
	new str[1500];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
	for(new i = 0; i < sizeof(EtkAracIslem); i++)
	{
		format(str, sizeof(str), "%s%s\n", str, GetVehicleName(EtkAracIslem[i][eAracId]));
	}
	ShowPlayerDialog(playerid, DIALOG_EARAC, DIALOG_STYLE_LIST, "Araç Seçin", str, "Seç", "Kapat");
	return 1;
}

CMD:earac2(playerid)
{
	new str[1500];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
	for(new i = 0; i < sizeof(EtkAracIslem); i++)
	{
		format(str, sizeof(str), "%s%s\n", str, GetVehicleName(EtkAracIslem[i][eAracId]));
	}
	ShowPlayerDialog(playerid, DIALOG_EARAC2, DIALOG_STYLE_LIST, "Araç Seçin", str, "Seç", "Kapat");
	return 1;
}

CMD:earacsil(playerid)
{
	new b[bMAX_SIZE], Float: exPos[3];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
    for(new i = 0; i < 60; i++)
    {
    	if(IsValidVehicle(etkMaxArac[i]) && etkMaxArac[i] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(etkMaxArac[i]);
		}
		etkMaxArac[i] = INVALID_VEHICLE_ID;
    }
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyuncularýn araçlarýný sildi !", getName(playerid), playerid);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	    }
	}
	return 1;
}

CMD:esirala(playerid)
{
	new b[bMAX_SIZE], Float: g_iPos[4], iCount = 2, iVehicle = 10;
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    GetPlayerPos(playerid, g_iPos[0], g_iPos[1], g_iPos[2]);
	GetPlayerFacingAngle(playerid, g_iPos[3]);
	format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyuncularý hizalý bir þekilde sýraladý.", getName(playerid), playerid);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
		    if(IsPlayerInAnyVehicle(i))
			{
				SetVehiclePos(GetPlayerVehicleID(i), g_iPos[0] += (iVehicle * floatsin(-g_iPos[3], degrees)), g_iPos[1] += (iVehicle * floatcos(-g_iPos[3], degrees)), g_iPos[2]);
				SetVehicleZAngle(GetPlayerVehicleID(i), g_iPos[3] - 180);
				PutPlayerInVehicle(i, GetPlayerVehicleID(i), 0);
				iVehicle += 10;
			}
			else
			{
				SetPlayerPos(i, g_iPos[0] += (iCount * floatsin(-g_iPos[3], degrees)), g_iPos[1] += (iCount * floatcos(-g_iPos[3], degrees)), g_iPos[2]);
				SetPlayerFacingAngle(i, g_iPos[3] - 180);
				iCount += 2;
			}
        	SendClientMessage(i, 0x87B1FFFF, b);
	    }
	}
	return 1;
}

CMD:ehasar(playerid)
{
    new b[bMAX_SIZE], Float: g_iPos[4];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    GetPlayerPos(playerid, g_iPos[0], g_iPos[1], g_iPos[2]);
	if(etkHasar == 0){
	etkHasar = 1;
	format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), etkinlik hasarýný kapattý.", getName(playerid), playerid);
	}else if(etkHasar == 1){
	etkHasar = 0;
	format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), etkinlik hasarýný aktif etti.", getName(playerid), playerid);
	}
	SendClientMessage(playerid, 0x87B1FFFF, b);
 	foreach(new i: Player)
	{
	    if(Etkde[i] == true && IsPlayerInRangeOfPoint(i, 25.0, g_iPos[0], g_iPos[1], g_iPos[2]))
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	    }
	}
	return 1;
}

CMD:etokat(playerid, params[])
{
	new _zirh, b[bMAX_SIZE], Float: exPos[3];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(sscanf(params, "u", _zirh)) return aBilgi(playerid, "/eTokat [ID]");
    if(playerid == _zirh) return hataMesaji(playerid, "Kendini tokatlayamazsýn !");
    if(!IsPlayerConnected(_zirh)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
    if(Etkde[_zirh] == false) return hataMesaji(playerid, "Bu oyuncu etkinliðe katýlmamýþ.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), oyuncu %s(%d), tokatladý !", getName(playerid), playerid, getName(_zirh), _zirh);
	GetPlayerPos(_zirh, exPos[0], exPos[1], exPos[2]);
    SetPlayerPos(_zirh, exPos[0], exPos[1], exPos[2] + 5);
	SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	    }
	}
	return 1;
}

CMD:eskin(playerid, params[])
{
	new _zirh, b[bMAX_SIZE], Float: exPos[3];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(sscanf(params, "d", _zirh)) return aBilgi(playerid, "/eSkin [Skin ID]");
    if(_zirh < 0 || _zirh > 311) return hataMesaji(playerid, "Skini en düþük 0, en fazla 311 girebilirsiniz.");
    if(_zirh == 74) return hataMesaji(playerid, "Bu skin idsi geçersiz !");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyuncularýn skinini %d olarak ayarladý.", getName(playerid), playerid, _zirh);
	GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	        SetPlayerSkin(i, _zirh);
	    }
	}
	return 1;
}

CMD:esilahreset(playerid)
{
    new b[bMAX_SIZE];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), yanýnda ki oyuncularýn silahlarýna el koydu", getName(playerid), playerid);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x87B1FFFF, b);
	        ResetPlayerWeapons(i);
	    }
	}
	return 1;
}

CMD:esay(playerid, params[])
{
	new b[bMAX_SIZE], saay[148], Float: exPos[3];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(sscanf(params, "s[148]", saay)) return aBilgi(playerid, "/eSay [Mesaj]");
    format(b, sizeof(b), "[Etk Yetkili] %s(%d): %s", getName(playerid), playerid, saay);
	GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
    SendClientMessage(playerid, 0x87B1FFFF, b);
	foreach(new i: Player)
	{
	    if(Etkde[i] == true)
	    {
	        SendClientMessage(i, 0x26A8FFFF, b);
	    }
	}
	return 1;
}

CMD:eodul(playerid, params[])
{
	new id, _p, _s, _e, b[bMAX_SIZE];
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsunuz.");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsun.");
    if(sscanf(params, "uddd", id, _p, _s, _e)) return aBilgi(playerid, "/eOdul [ID] [Para - Ýstemiyorsanýz 0 Girin] [Skor - Ýstemiyorsanýz 0 Girin] [Exp  - Ýstemiyorsanýz 0 Girin]");
   	if(!IsPlayerConnected(id)) return hataMesaji(playerid, "Böyle bir oyuncu yok !");
	if(playerid == id) return hataMesaji(playerid, "Kendine ödül veremezin !");
	if(_p < 1 || _p > 5000000) return hataMesaji(playerid, "Parayý en düþük 1 max 5m girebilirsin.");
    if(_s < 1 || _s > 100) return hataMesaji(playerid, "Skoru en düþük 1 max 100 girebilirsin.");
    if(_e < 1 || _e > 10000) return hataMesaji(playerid, "Exp en düþük 1 max 10000 girebilirsin.");
    if(Etkde[id] == false) return hataMesaji(playerid, "Bu oyuncu etkinliðe katýlmamýþ.");
	if(GetPVarInt(playerid, "ETKAracim") != INVALID_VEHICLE_ID)
    {
        DestroyVehicle(GetPVarInt(playerid, "ETKAracim"));
    }
    SetPVarInt(playerid, "ETKAracim", INVALID_VEHICLE_ID);
    etkYaptim[playerid] = 0;
    pParaver(id, _p);
    Skorver(id, _s);
	oyuncuData[id][ExpPuan] += _e;
	ExpGuncelle(id);
	if(oyuncuData[id][_LevelCount] >= 50)
	{
		if(oyuncuData[id][ExpPuan] > 50000)
		{
		    oyuncuData[id][_LevelCount] = 50;
			oyuncuData[id][ExpPuan] = 50000;
			ExpGuncelle(id);
		}
	}
	format(b, sizeof(b), "~w~~h~Oyuncu ~y~~h~%s(%d) ~w~~h~etkinligi kazandi.~n~~n~~w~~h~Odul:~n~~n~~g~~h~~h~$%s~n~~g~~h~~h~%d Skor~n~~g~~h~~h~%d Exp", getName(id), id, convertNumber(_p), _s, _e);
	TextDrawSetString(ETK_Text[4], b);
	KillTimer(etkTimer2);
    etkTimer2 = SetTimer("EtkBitti", 5000, false);
   	for(new i = 0; i < 5; i++) { TextDrawShowForAll(ETK_Text[i]); }
	for(new i = 0; i < 60; i++)
    {
    	if(IsValidVehicle(etkMaxArac[i]) && etkMaxArac[i] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(etkMaxArac[i]);
		}
		etkMaxArac[i] = INVALID_VEHICLE_ID;
    }
    foreach(new i : Player)
    {
        if(Etkde[i] == true)
        {
        	TogglePlayerControllable(i, 1);
        	Etkde[i] = false;
    		SetPlayerVirtualWorld(i, 0);
    		PlayerPlaySound(i, 1057,0.0,0.0,0.0);
    		Canver(i, 0);
		}
    }
	EtkIslem[etkAktifmi] = 0;
    EtkIslem[etkKatilim] = 0;
    KillTimer(etkTimer);
    SpawnPlayer(playerid);
	return 1;
}

CMD:ebitir(playerid) return cmd_etkbitir(playerid);
CMD:etkbitir(playerid)
{
	if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
    if(EtkIslem[etkAktifmi] == 0) return hataMesaji(playerid, "Aktif bir etk yok !");
    if(etkYaptim[playerid] == 0) return hataMesaji(playerid, "Bir etkinlik yapmýyorsun.");
    etkYaptim[playerid] = 0;
	if(GetPVarInt(playerid, "ETKAracim") != INVALID_VEHICLE_ID)
    {
        DestroyVehicle(GetPVarInt(playerid, "ETKAracim"));
    }
    SetPVarInt(playerid, "ETKAracim", INVALID_VEHICLE_ID);
	foreach(new i : Player)
    {
        if(Etkde[i] == true)
        {
            etkLocal[i] = 0;
        	TogglePlayerControllable(i, 1);
        	Etkde[i] = false;
    		SetPlayerVirtualWorld(i, 0);
    		PlayerPlaySound(i, 1057,0.0,0.0,0.0);
    		Canver(i, 0);
		}
    }
    for(new i = 0; i < 60; i++)
    {
    	if(IsValidVehicle(etkMaxArac[i]) && etkMaxArac[i] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(etkMaxArac[i]);
		}
		etkMaxArac[i] = INVALID_VEHICLE_ID;
    }
	EtkIslem[etkAktifmi] = 0;
    EtkIslem[etkKatilim] = 0;
    KillTimer(etkTimer);
    etkCount = 0;
    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
    new b[bMAX_SIZE];
	format(b, sizeof(b), "Etkinlik: {FFFFFF}Yetkili %s(%d), etkinliði sonlandýrdý.", getName(playerid), playerid);
    SendClientMessageToAll(0x87B1FFFF, b);
    SetPlayerVirtualWorld(playerid, 0);
    SpawnPlayer(playerid);
	return 1;
}


CMD:ekomut(playerid) return cmd_etkkomut(playerid);
CMD:ecmds(playerid) return cmd_etkkomut(playerid);
CMD:etkkomut(playerid)
{
    if(oyuncuData[playerid][etkyetki] == 0) return hataMesaji(playerid, "Etkinlik yetkiniz yok !");
	ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Etkinlik Komutlarý",
	"{92F22A}Komut\t{92F22A}Ýþlev\n\
	{1E7B2C}/EtkBaslat\t{FFFFFF}Bir etkinlik baþlatýr\n\
	{1E7B2C}/EtkGit\t{FFFFFF}Baþlanmýþ olan bir etkinliðe gider\n\
	{1E7B2C}/eJetpack\t{FFFFFF}Etkinlikte jetpack verir\n\
	{1E7B2C}/eCan\t{FFFFFF}Etkinlikteki oyuncularýn canýný ayarlar\n\
	{1E7B2C}/eZirh\t{FFFFFF}Etkinlikteki oyuncularýn zýrhýný ayarlar\n\
	{1E7B2C}/eSilah\t{FFFFFF}Etkinlikteki oyunculara silah verir\n\
	{1E7B2C}/eCoz\t{FFFFFF}Etkinliði baþlatýr\n\
	{1E7B2C}/eArac\t{FFFFFF}Etkinlikteki oyunculara araç verir\n\
    {1E7B2C}/eArac2\t{FFFFFF}Etkinlikte sadece size araç verir\n\
	{1E7B2C}/eAracSil\t{FFFFFF}Etkinlik araçlarýný siler\n\
	{1E7B2C}/eSirala\t{FFFFFF}Etkinlikteki oyuncularý sýralar\n\
	{1E7B2C}/eHasar\t{FFFFFF}Etkinlikteki vuruþ hasarýný açýp kapatýr\n\
	{1E7B2C}/eSkin\t{FFFFFF}Etkinlikteki oyuncularýn karakterini deðiþtirir\n\
	{1E7B2C}/eSilahReset\t{FFFFFF}Etkinlikteki oyuncularýn silahlarýna el koyar\n\
	{1E7B2C}/eSay\t{FFFFFF}Etkinlikteki oyunculara mesaj gönderir\n\
	{1E7B2C}/eOdul\t{FFFFFF}Kazanan oyuncuya ödül verirsiniz\n\
	{1E7B2C}/eBitir\t{FFFFFF}Etkinliði bitirir\n\
	", "Kapat", "");
	return 1;
}

forward EtkBitti();
public EtkBitti()
{
    KillTimer(etkTimer2);
	EtkIslem[etkAktifmi] = 0;
    EtkIslem[etkKatilim] = 0;
    KillTimer(etkTimer);
	for(new i = 0; i < 5; i++)
	{
	    TextDrawHideForAll(ETK_Text[i]);
	}
	TextDrawSetString(ETK_Text[4], "null");
	foreach(new i : Player)
    {
        if(Etkde[i] == true)
        {
        	TogglePlayerControllable(i, 1);
        	Etkde[i] = false;
    		SetPlayerVirtualWorld(i, 0);
    		PlayerPlaySound(i, 1057,0.0,0.0,0.0);
    		SpawnPlayer(i);
		}
    }
	return 1;
}

forward EtkBaslatildi();
public EtkBaslatildi()
{
    KillTimer(etkTimer);
    EtkIslem[etkKatilim] = 0;
    TextDrawHideForAll(ETK_Text[4]);
    if(etkCount >= 3)
    {
		TextDrawSetString(ETK_Text[4], "~w~~h~Etkinlige ~r~~h~~h~~h~katilim ~w~~h~sona erdi.");
	}
	else
	{
	    TextDrawSetString(ETK_Text[4], "~w~~h~Etkinlik yetersiz ~r~~h~~h~~h~katilimdan ~w~~h~dolayi otomatik iptal edildi.");
		EtkIslem[etkAktifmi] = 0;
    	EtkIslem[etkKatilim] = 0;
		foreach(new i : Player)
	    {
         	if(etkYaptim[i] == 1)
         	{
         	    etkYaptim[i] = 0;
	            Etkde[i] = false;
	            SetPlayerVirtualWorld(i, 0);
	            TogglePlayerControllable(i, 1);
	            SpawnPlayer(i);
         	}
	        if(Etkde[i] == true && GetPlayerVirtualWorld(i) == ETK_WORLD)
	        {
	            Etkde[i] = false;
	            SetPlayerVirtualWorld(i, 0);
	            TogglePlayerControllable(i, 1);
	            SpawnPlayer(i);
	        }
	    }
	}
    TextDrawShowForAll(ETK_Text[4]);
    etkTimer = SetTimer("EtkSon", 3500, false);
	return 1;
}

forward EtkSon();
public EtkSon()
{
    KillTimer(etkTimer);
	for(new i = 0; i < 5; i++)
	{
	    TextDrawHideForAll(ETK_Text[i]);
	}
	TextDrawSetString(ETK_Text[4], "null");
	return 1;
}

forward Ecozuluyor(playerid);
public Ecozuluyor(playerid)
{
	new Float: exPos[3];
	GetPlayerPos(playerid, exPos[0], exPos[1], exPos[2]);
    baSla--;
	switch(baSla)
	{
	    case 3:
		{
			GameTextForPlayer(playerid, "~b~~h~~h~(3) 2 1", 2100, 4);
            foreach(new i: Player)
			{
			    if(Etkde[i] == true)
			    {
					GameTextForPlayer(i, "~b~~h~~h~(3) 2 1", 2100, 4);
			    }
			}
		}
	    case 2:
		{
			GameTextForPlayer(playerid, "~b~~h~~h~(2) 1", 2100, 4);
			foreach(new i: Player)
			{
			    if(Etkde[i] == true)
			    {
					GameTextForPlayer(i, "~b~~h~~h~(2) 1", 2100, 4);
			    }
			}
		}
	    case 1:
		{
			GameTextForPlayer(playerid, "~b~~h~~h~(1)", 2100, 4);
   			foreach(new i: Player)
			{
			    if(Etkde[i] == true)
			    {
					GameTextForPlayer(i, "~b~~h~~h~(1)", 2100, 4);
			    }
			}
		}
		case 0:
	    {
	        KillTimer(etkBaslaTimer);
	        GameTextForPlayer(playerid, "~g~~h~~h~Basla !", 2100, 4);
			foreach(new i: Player)
			{
			    if(Etkde[i] == true)
			    {
					GameTextForPlayer(i, "~g~~h~~h~Basla !", 2100, 4);
					TogglePlayerControllable(i, 1);
			    }
			}
	    }
	}
	return 1;
}

CMD:kralyap(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	new ID, kLevel, ba[100], str[70];
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "dd", ID, kLevel)) return aBilgi(playerid, "/KralYap [ID] [0 = Siler | 1 = Kral Yapar]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	switch(kLevel)
	{
	    case 0:
	    {
	        format(ba, sizeof(ba), "[KRAL] Yetkili %s(%d), oyuncu %s(%d), kral özelliðini aldý.", getName(playerid), playerid, getName(ID), ID);
			SendClientMessageToAll(0x2ECC71FF, ba);
			oyuncuData[ID][kral_TAG] = 0;
   			mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `KralTag` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
			mysql_query(g_SQL, str);
            return 1;
		}
	    case 1:
	    {
	        format(ba, sizeof(ba), "[KRAL] Yetkili %s(%d), oyuncu %s(%d), sunucunun kralý yaptý !", getName(playerid), playerid, getName(ID), ID);
            SendClientMessageToAll(0x2ECC71FF, ba);
			oyuncuData[ID][kral_TAG] = 1;
			mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `KralTag` = 1 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
			mysql_query(g_SQL, str);
			return 1;
	    }
	    default:
	    {
	        hataMesaji(playerid, "Level deðerini düzgün girin !");
	    }
	}
	return 1;
}

CMD:vipver(playerid, params[])
{
    if(Etkde[playerid] == true) return hataMesaji(playerid, "Etkinlikteyken komut kullanamazsýn.");
	new ID, level, gun, fxtime, vipTag[20], str[83 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "uii", ID, level, gun)) return aBilgi(playerid, "/VipVer [Oyuncu Ismi Veya ID] [Level] [Gün]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(level < 1 || level > 4) return hataMesaji(playerid, "Levelleri 1 - 4 arasý verebilirsin.");
	if(gun < 1 || gun > 90) return hataMesaji(playerid, "Günü en düþük 1 - En fazla 90 arasý verebilirsin.");
	if(oyuncuData[ID][pVip] >= 1) return hataMesaji(playerid, "Bu oyuncu zaten vip.");
	KillTimer(yetkilerTimer[ID]);
	oyuncuData[ID][pVip] = level;
	fxtime = gettime() + gun * 86400;
	oyuncuData[ID][pVipSure] = fxtime;
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = %d WHERE `id` = %d LIMIT 1", level, oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
 	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = %d WHERE `id` = %d LIMIT 1", fxtime, oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	kafaTextUp(ID);
    yetkilerTimer[ID] = SetTimerEx("SureKontrolleri", 2000, true, "d", ID);
	switch(level)
	{
	    case 1: vipTag = "{0F52BA}Safir Vip";
	    case 2: vipTag = "{F62217}Yakut Vip";
	    case 3: vipTag = "{1E7B2C}Zümrüt Vip";
	    case 4: vipTag = "{B9F2FF}Elmas Vip";
	}
	format(str, sizeof(str), "{2EFF62}» Vip: {FFFFFF}Yetkili %s, oyuncu %s %d günlük %s {FFFFFF}verdi.", getName(playerid), getName(ID), gun, vipTag);
	SendClientMessageToAll(-1, str);
	if(level == 1)
	{
		if(BasariIslem[ID][ilkSafir] == 0){
		BasariIslem[ID][ilkSafir] = 1;
		basariKilidi(ID, "ilkSafir", "Ýlk Safir Vip", 7500000, 2500, 150);
		}
	}else if(level == 2)
	{
 		if(BasariIslem[ID][ilkYakut] == 0){
		BasariIslem[ID][ilkYakut] = 1;
		basariKilidi(ID, "ilkYakut", "Ýlk Yakut Vip", 15000000, 10000, 200);
		}
	}else if(level == 3)
	{
 		if(BasariIslem[ID][ilkZumrut] == 0){
		BasariIslem[ID][ilkZumrut] = 1;
		basariKilidi(ID, "ilkZumrut", "Ýlk Zümrüt Vip", 20000000, 15000, 250);
		}
	}else if(level == 4)
	{
 		if(BasariIslem[ID][ilkElmas] == 0)
 		{
 		    if(BasariIslem[ID][ilkSafir] == 0)
 		    {
   				BasariIslem[ID][ilkSafir] = 1;
				basariKilidi(ID, "ilkSafir", "Ýlk Safir Vip", 7500000, 2500, 150);
			}
			if(BasariIslem[ID][ilkYakut] == 0)
			{
  				BasariIslem[ID][ilkYakut] = 1;
				basariKilidi(ID, "ilkYakut", "Ýlk Yakut Vip", 15000000, 10000, 200);
			}
			if(BasariIslem[ID][ilkZumrut] == 0)
			{
  				BasariIslem[ID][ilkZumrut] = 1;
				basariKilidi(ID, "ilkZumrut", "Ýlk Zümrüt Vip", 20000000, 15000, 250);
			}
			BasariIslem[ID][ilkElmas] = 1;
			basariKilidi(ID, "ilkElmas", "Ýlk Elmas Vip", 25000000, 20000, 500);
		}
	}
	return 1;
}

CMD:vipsil(playerid, params[])
{
	new ID, str[83 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/VipSil [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[ID][pVip] == 0) return hataMesaji(playerid, "Bu oyuncu vip deðil.");
	oyuncuData[ID][pVip] = 0;
	oyuncuData[ID][pVipSure] = 0;
	kafaTextUp(ID);
	if(oyuncuData[ID][YetenekSoygun] > 25) oyuncuData[ID][YetenekSoygun] = 25;
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_query(g_SQL, str);
 	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_query(g_SQL, str);
	format(str, sizeof(str), "{2EFF62}» Vip: {FFFFFF}Yetkili %s, oyuncu %s vip yetkilerini sildi.", getName(playerid), getName(ID));
	SendClientMessageToAll(-1, str);
	return 1;
}

CMD:rc(playerid, params[])
{
    if(oyuncuData[playerid][duzenliOyuncu] == 0) return hataMesaji(playerid, "Bu komutu düzenli oyuncular kullanabilir.");
    if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
    new str[156];
	if(isnull(params)) return SendClientMessage(playerid, 0x009385FF, "[BILGI] {FFFFFF}/Rc (Msj)");
   	if(stringContainsIP(params))
	{
		hataMesaji(playerid, "Ip reklamý yapýp ne yapacaksýn ahbap ?");
		return 1;
	}
	if(GetPVarInt(playerid, "RCKoruma") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "RCKoruma", GetTickCount() + 500);
	    return 1;
	}
	SetPVarInt(playerid, "RCKoruma", GetTickCount() + 500);
    format(str, sizeof(str), "[RC] {76ff65}%s(%d), %s.", getName(playerid), playerid, params);
    foreach(new i : Player)
    {
        if(oyuncuData[i][duzenliOyuncu] == 1)
        {
            SendClientMessage(i, 0x4169FFAA, str);
        }
    }
	return 1;
}

CMD:eyetkiver(playerid, params[])
{
	new ID, level, xx[128 + 60 + 20];
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "ud", ID, level)) return aBilgi(playerid, "/eYetkiVer [Oyuncu Ismi Veya ID] [Level] [0 = Siler] [1 = Verir]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	switch(level)
	{
	    case 0:
	    {
	        if(oyuncuData[ID][etkyetki] == 0) return hataMesaji(playerid, "Bu oyuncunun etkinlik yetkisi yok zaten.");
			format(xx, sizeof(xx), "{00FF59}[ETK Yetkisi] {FFFFFF}Yetkili {FFAE00}%s(%d){FFFFFF}, oyuncu {FF0066}%s(%d) {FFFFFF}etkinlik yapma yetkisini aldý.", getName(playerid), playerid, getName(ID), ID);
			SendClientMessageToAll(-1, xx);
            oyuncuData[ID][etkyetki] = 0;
		}
	    case 1:
	    {
	        if(oyuncuData[ID][etkyetki] == 1) return hataMesaji(playerid, "Bu oyuncunun etkinlik yetkisi var.");
	        format(xx, sizeof(xx), "{00FF59}[ETK Yetkisi] {FFFFFF}Yetkili {FFAE00}%s(%d){FFFFFF}, oyuncu {FF0066}%s(%d) {FFFFFF}etkinlik yapma yetkisi verdi.", getName(playerid), playerid, getName(ID), ID);
			SendClientMessageToAll(-1, xx);
			oyuncuData[ID][etkyetki] = 1;
	    }
	 	default: hataMesaji(playerid, "Level hatalý !");
	}
	return 1;
}

CMD:dover(playerid, params[])
{
    new ID, level, xx[128 + 60];
    if(oyuncuData[playerid][pAdmin] < 3) return hataMesaji(playerid, "Bu komutu kullanmak için 3 level ve üstü oyuncuya verebilirsin.");
	if(sscanf(params, "ud", ID, level)) return aBilgi(playerid, "/DoVer [Oyuncu Ismi Veya ID] [Level] [0 = Düzenli oyuncuyu alýr] [1 = Verir]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	switch(level)
	{
	    case 0:
	    {
	        if(oyuncuData[ID][duzenliOyuncu] == 0) return hataMesaji(playerid, "Bu oyuncunun yetkisi yok zaten.");
			format(xx, sizeof(xx), "{00FF59}[Düzenli Oyuncu] {FFFFFF}Yetkili {FFAE00}%s(%d){FFFFFF}, oyuncu {FF0066}%s(%d) {FFFFFF}düzenli oyuncu yetkini aldý.", getName(playerid), playerid, getName(ID), ID);
			SendClientMessageToAll(-1, xx);
            oyuncuData[ID][duzenliOyuncu] = 0;
		}
	    case 1:
	    {
	        if(oyuncuData[ID][duzenliOyuncu] == 1) return hataMesaji(playerid, "Bu oyuncunun yetkisi var zaten.");
	        format(xx, sizeof(xx), "{00FF59}[Düzenli Oyuncu] {FFFFFF}Yetkili {FFAE00}%s(%d){FFFFFF}, oyuncu {FF0066}%s(%d) {FFFFFF}düzenli oyuncu yetkisi verdi.", getName(playerid), playerid, getName(ID), ID);
			SendClientMessageToAll(-1, xx);
			oyuncuData[ID][duzenliOyuncu] = 1;
	    }
	 	default: hataMesaji(playerid, "Level hatalý !");
	}
	return 1;
}

CMD:fullkick(playerid, params[])
{
	new sebep[256], xx4[256];
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "s[256]", sebep)) return aBilgi(playerid, "/FullKick [Sebep]");
	format(xx4, sizeof(xx4), "Kick: {FFFFFF}Yetkili %s tarafýndan %s sebebiyle tüm oyuncular sunucudan atýldý.", getName(playerid), sebep);
	SendClientMessageToAll(0xEB2F06FF, xx4);
	foreach(new i : Player)
	{
		if(playerid == i) continue;
		Kick(i);
	}
	return 1;
}

CMD:yetkiver(playerid, params[])
{
	new ID, level, sure, str[83 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5++ olmalýsýn.");
	if(sscanf(params, "udd", ID, sure, level)) return aBilgi(playerid, "/YetkiVer [Oyuncu Ismi Veya ID] [Süre = 0 Sýnýrsýz] [Level]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(sure < 0 || sure > 90) return hataMesaji(playerid, "Süreyi en düþük 1 en fazla 90 yapabilirsin.");
    if(oyuncuData[playerid][pAdmin] == 5)
    {
		switch(level)
		{
		    case 1:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Deneme Admin yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Deneme Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			default:
			{
				hataMesaji(playerid, "Levelleri 1 olarak arasý verebilirsin.");
				return 1;
			}
		}
	}else if(oyuncuData[playerid][pAdmin] == 6)
	{
		switch(level)
		{
			case 1:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Deneme Admin yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Deneme Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			case 2:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Görevli Admin yetkisi verildi.", getName(ID), getName(playerid));
	            }else{
	            format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Görevli Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			case 3:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Sorumlu Admin yetkisi verildi.", getName(ID), getName(playerid));
	            }else{
	            format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Sorumlu Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
	            }
			}
			case 4:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Baþ Admin yetkisi verildi.", getName(ID), getName(playerid));
	            }else{
	            format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Baþ Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
	            }
			}
			case 5:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Yönetici yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Yönetici yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			case 6:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Emektar yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Emektar yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			default:
			{
				hataMesaji(playerid, "Levelleri 1, 2, 3, 4, 5, 6 olarak arasý verebilirsin.");
				return 1;
			}
		}
	}else if(oyuncuData[playerid][pAdmin] == 7)
	{
		switch(level)
		{
		    case 1:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Deneme Admin yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Deneme Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			case 2:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Görevli Admin yetkisi verildi.", getName(ID), getName(playerid));
	            }else{
	            format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Görevli Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			case 3:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Sorumlu Admin yetkisi verildi.", getName(ID), getName(playerid));
	            }else{
	            format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Sorumlu Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
	            }
			}
			case 4:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Baþ Admin yetkisi verildi.", getName(ID), getName(playerid));
	            }else{
	            format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Baþ Admin yetkisi verildi.", getName(ID), getName(playerid), sure);
	            }
			}
			case 5:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Yönetici yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Yönetici yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			case 6:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Emektar yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Emektar yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
	  		case 7:
			{
			    if(sure == 0){
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan Sahip yetkisi verildi.", getName(ID), getName(playerid));
				}else{
				format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan %d günlük Sahip yetkisi verildi.", getName(ID), getName(playerid), sure);
				}
			}
			default:
			{
				hataMesaji(playerid, "Levelleri 1, 2, 3, 4, 5, 6, 7 olarak arasý verebilirsin.");
				return 1;
			}
		}
	}
	KillTimer(yetkilerTimer[ID]);
	oyuncuData[ID][pAdmin] = level;
	if(sure == 0){
	oyuncuData[ID][pAdminSure] = 0;
	}else{
	oyuncuData[ID][pAdminSure] = gettime() + sure * 86400;
	}
	SendClientMessageToAll(-1, str);
 	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `aLevel` = %d WHERE `id` = %d LIMIT 1", level, oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	
  	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `AdminSure` = %d WHERE `id` = %d LIMIT 1", oyuncuData[ID][pAdminSure], oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	yetkilerTimer[ID] = SetTimerEx("SureKontrolleri", 2000, true, "d", ID);
	return 1;
}

CMD:yetkisil(playerid, params[])
{
	new ID, str[65 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/YetkiSil [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendi yetkini mi sileceksin ?");
	if(oyuncuData[ID][pAdmin] == 0) return hataMesaji(playerid, "Bu oyuncu zaten admin deðil.");
	oyuncuData[ID][pAdmin] = 0;
	oyuncuData[ID][pAdminSure] = 0;
	oyuncuData[ID][pmGorme] = 0;
	oyuncuData[ID][LocalGorme] = 0;
	oyuncuData[ID][ArGorme] = 0;
	oyuncuData[ID][GrupGorme] = 0;
	oyuncuData[ID][EkipGorme] = 0;
	oyuncuData[ID][ceteGorme] = 0;
	oyuncuData[ID][etkyetki] = 0;
	
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `aLevel` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_query(g_SQL, str);
 	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `AdminSure` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_query(g_SQL, str);
	format(str, sizeof(str), "{2EFF62}» Yetki: {FFFFFF}Oyuncu %s, yetkileri %s tarafýndan alýndý.", getName(ID), getName(playerid));
	SendClientMessageToAll(-1, str);
	return 1;
}

CMD:oyetkisil(playerid, params[])
{
	new oisim[24], tmp_ID[24], okontrol;
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5 level ve üstü bir yetkiye sahip olmalýsýn.");
	if(sscanf(params, "s[24]", oisim)) return aBilgi(playerid, "/oYetkiSil [Oyuncu Ismi]");
 	for(new i = 0; i < strlen(oisim); i++)
	{
	    tmp_ID[i] = tolower(oisim[i]);
	}
	if(strcmp(tmp_ID, "nexor", false) == 0) return hataMesaji(playerid, "NexoR ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "raxass", false) == 0) return hataMesaji(playerid, "RaXaSs ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "mustafa", false) == 0) return hataMesaji(playerid, "Mustafa ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "gorkem.", false) == 0) return hataMesaji(playerid, "Gorkem. ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "takareis", false) == 0) return hataMesaji(playerid, "TakaReis ismini banlayamazsýn !");
	okontrol = GetPlayerID(oisim);
	if(okontrol != INVALID_PLAYER_ID) return hataMesaji(playerid, "Bu oyuncu sunucuda /YetkiSil komutunu kullanýn.");
	new query[58 + 24 + 16], Cache:VeriCek, degercount = 0;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", oisim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    new gelenDegerler[3];
	    cache_get_value_int(0, "aLevel", gelenDegerler[0]);
		cache_get_value_int(0, "rLevel", gelenDegerler[1]);
		cache_get_value_int(0, "dLevel", gelenDegerler[2]);

		if(gelenDegerler[0] != 0)
		{
			degercount++;
	   	  	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `aLevel` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
			mysql_query(g_SQL, query);

   	   	  	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `AdminSure` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
			mysql_query(g_SQL, query);
		}
		if(gelenDegerler[1] != 0)
		{
			degercount++;
   	   	  	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `rLevel` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
			mysql_query(g_SQL, query);
		}
  		if(gelenDegerler[2] != 0)
		{
			degercount++;
   	   	  	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `dLevel` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
			mysql_query(g_SQL, query);
		}
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `pmGorme` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `LocalGorme` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ArGorme` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `GrupGorme` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);

  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `EkipGorme` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `ceteGorme` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `etkyetki` = 0 WHERE `isim` = '%e' LIMIT 1", oisim);
		mysql_query(g_SQL, query);
		
	    if(degercount != 0)
	    {
     		format(query, sizeof(query), "{FF8903}» Yetki Sil: {FFFFFF}Yetkili %s, oyuncu %s yetkilerini offline olarak sildi.", getName(playerid), oisim);
			SendClientMessageToAll(-1, query);
	    }
	}
	if(!rows) hataMesaji(playerid, "Bu isim veritabanýnda yok !");
	if(degercount <= 0) hataMesaji(playerid, "Bu oyuncunun yetkisi yok !");
	cache_delete(VeriCek);
	return 1;
}

CMD:rehberyap(playerid, params[])
{
	new ID, str[83 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5++ sahip olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/RehberYap [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[ID][pRehber] == 1) return hataMesaji(playerid, "Bu oyuncu zaten rehber.");
	oyuncuData[ID][pRehber] = 1;
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `rLevel` = 1 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	format(str, sizeof(str), "{2EFF62}» Rehber: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan rehber yetkisi verildi.", getName(ID), getName(playerid));
	SendClientMessageToAll(-1, str);
	return 1;
}

CMD:rehbersil(playerid, params[])
{
	new ID, str[76 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için 4++ sahip olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/RehberSil [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendi yetkini mi sileceksin ?");
	if(oyuncuData[ID][pRehber] == 0) return hataMesaji(playerid, "Bu oyuncu rehber deðil.");
	oyuncuData[ID][pRehber] = 0;
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `rLevel` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	format(str, sizeof(str), "{2EFF62}» Rehber: {FFFFFF}Oyuncu %s, rehber yetkileri %s tarafýndan alýndý.", getName(ID), getName(playerid));
	SendClientMessageToAll(-1, str);
	return 1;
}

CMD:djyap(playerid, params[])
{
	new ID, str[83 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5++ sahip olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/DjYap [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[ID][pDj] == 1) return hataMesaji(playerid, "Bu oyuncu zaten dj.");
	oyuncuData[ID][pDj] = 1;
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `dLevel` = 1 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	format(str, sizeof(str), "{2EFF62}» DJ: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan DJ yetkisi verildi.", getName(ID), getName(playerid));
	SendClientMessageToAll(-1, str);
	return 1;
}

CMD:djsil(playerid, params[])
{
	new ID, str[76 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için 4++ sahip olmalýsýn.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/DjSil [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendi yetkini mi sileceksin ?");
	if(oyuncuData[ID][pDj] == 0) return hataMesaji(playerid, "Bu oyuncu dj deðil.");
	oyuncuData[ID][pDj] = 0;
	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `dLevel` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_tquery(g_SQL, str);
	format(str, sizeof(str), "{2EFF62}» DJ: {FFFFFF}Oyuncu %s, DJ yetkileri %s tarafýndan alýndý.", getName(ID), getName(playerid));
	SendClientMessageToAll(-1, str);
	return 1;
}

CMD:kick(playerid, params[])
{
	new ID, sebep[75], str[89 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level ve üstü bir yetkide olmalýsýn.");
	if(sscanf(params, "us[75]", ID, sebep)) return aBilgi(playerid, "/Kick [Oyuncu Ismi Veya ID] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return yHata(playerid, 1);
	if(playerid == ID) return yHata(playerid, 2);
	format(str, sizeof(str), "{2EFF62}» Kick: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan sunucudan atýldý. Sebep: %s", getName(ID), getName(playerid), sebep);
	SendClientMessageToAll(-1, str);
	oKick(ID);
	oyuncuData[playerid][adminkomuts]++;
	return 1;
}

CMD:sureban(playerid, params[])
{
	new ID, gun, sebep[75], fxtime, ba[86 + 24 + 24 + 10], gIp[16], yil, ay, gunx, saat, dakika, saniye, query[266];
 	if(oyuncuData[playerid][pAdmin] < 2) return hataMesaji(playerid, "Bu komutu kullanmak için 2 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "uis[75]", ID, gun, sebep)) return aBilgi(playerid, "/SureBan [Oyuncu Ismi Veya ID] [Gün] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return hataMesaji(playerid, "Yüksek level adminleri banlayamazsýn !");
	if(playerid == ID) return yHata(playerid, 2);
	new v = 0;
	for(new i = 0; i < strlen(sebep); i++)
	{
	    if(
			sebep[i] == '*' ||
			sebep[i] == '/' ||
			sebep[i] == '\\' ||
			sebep[i] == ''' ||
			sebep[i] == '%' ||
			sebep[i] == '`' ||
			sebep[i] == ',' ||
			sebep[i] == '#' ||
			sebep[i] == ';' ||
			sebep[i] == '{' ||
			sebep[i] == '}' ||
			sebep[i] == ''' ||
			sebep[i] == '&' ||
			sebep[i] == '£')
	    {
	        v = 1;
			break;
	    }
	}
	if(v == 1) return hataMesaji(playerid, "Ban sebeplerinde ' , \" { } vb.. karakterler kullanamazsýn !");
	if(GetTickCount() > GetPVarInt(playerid, "SagoBanFlood"))
	{
		sagoBanKorumasi[playerid] = 0;
		SetPVarInt(playerid, "SagoBanFlood", GetTickCount() + 20 * 1000);
	}
	if(GetPVarInt(playerid, "SagoBanFlood") > GetTickCount())
	{
	    sagoBanKorumasi[playerid]++;
		if(sagoBanKorumasi[playerid] == Ban_Check)
		{
		    BanEx(playerid, "Ban Flood Korumasi");
		    return 1;
		}
	}
    oyuncuData[playerid][adminkomuts]++;
	fxtime = gettime() + gun * 86400;
	format(ba, sizeof(ba), "{2EFF62}» Süre Ban: {FFFFFF}Yetkili %s, oyuncu %s sunucudan %d gün banladý. Sebep: %s", getName(playerid), getName(ID), gun, sebep);
	SendClientMessageToAll(-1, ba);
	GetPlayerIp(ID, gIp, sizeof(gIp));
 	getdate(yil, ay, gunx);
	gettime(saat, dakika, saniye);
 	format(ba, sizeof(ba), "%d/%02d/%02d - %02d:%02d:%02d", gunx, ay, yil, saat, dakika, saniye);
	mysql_format(g_SQL, query, sizeof query, "INSERT INTO `banlistesi` (`Banlayan`, `Banlanan`, `Sebep`, `YGA`, `IpAdres`, `BanSure`) VALUES ('%e', '%e', '%s', '%d', '%s', '%i')", getName(playerid), getName(ID), sebep, gettime(), gIp, fxtime);
	mysql_tquery(g_SQL, query);
	new Hour, Minute, Second, Timestamp;
	Timestamp = gettime(Hour, Minute, Second);
	new dia1[300 + 24 + 145+66+66], _xx[65];
 	format(dia1, sizeof(dia1), "{FF2937}Sunucudan süreli olarak yasaklandýnýz.\n\n");
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, getName(playerid));
	TimeStampTamTarih(Timestamp, _xx);
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%s\n", dia1, _xx);
	TimeStampTamTarih(fxtime, _xx);
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlacaðý Tarih:\t{FFFFFF}%s\n", dia1, _xx);
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n", dia1, sebep);
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banýn Açýlmasýna:\t{FFFFFF}%s\n\n", dia1, ConvertTime(fxtime - gettime()));
	format(dia1, sizeof(dia1), "%s{42D6FF}Hata sonucu bu mesajý aldýðýnýzý düþünüyorsanýz forum adresimizde konu açýn.\n", dia1);
	ShowPlayerDialog(ID, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Süre Ban", dia1, "Kapat", "");
	oKick(ID);
	return 1;
}

CMD:surebankaldir(playerid, params[])
{
	new oisim[24];
	if(oyuncuData[playerid][pAdmin] < 2) return hataMesaji(playerid, "Bu komutu kullanmak için 2 level ve üstüne sahip olmalýsýn.");
	if(sscanf(params, "s[24]", oisim)) return aBilgi(playerid, "/SureBanKaldir [Oyuncu Ismi]");
	new query[58 + 24 + 16], Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", oisim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    oyuncuData[playerid][adminkomuts]++;
	    new tIp[16], sz_str[76 + 24 + 24 + 15];
	    cache_get_value_name(0, "IpAdres", tIp);
	    format(sz_str, sizeof(sz_str), "unbanip %s", tIp);
	    SendRconCommand(sz_str);
	 	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `banlistesi` WHERE `Banlanan` = '%s'", oisim);
		mysql_tquery(g_SQL, query);
		format(sz_str, sizeof(sz_str), "{FF8903}» BanKaldýr: {FFFFFF}Yetkili %s, oyuncu %s süre banýný kaldýrdý.", getName(playerid), oisim);
		SendClientMessageToAll(-1, sz_str);
	}
	if(!rows) hataMesaji(playerid, "Bu isim veritabanýnda yasaklanmamýþ.");
	cache_delete(VeriCek);
	return 1;
}

CMD:siparis(playerid, params[])
{
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
    banSayfasi[playerid] = 0;
    new Cache:VeriCek, query[85];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `siparis` ORDER BY id DESC LIMIT %d, 15;", banSayfasi[playerid] * 15);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new
			list[1024],
			_alici[24],
			_neAldi[50],
			_tarih,
			_tarihh[80]
		;
		format(list, sizeof(list), "Alýcý\tNe Ýstiyor ?\tAldýðý Tarih\n");
		format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Sonraki Sayfa\t\n", list);
		format(list, sizeof(list), "%s{3aff82}» {FFFFFF}Önceki Sayfa\t\n", list);
		format(list, sizeof(list), "%s\t\n", list);
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "Odeyen", _alici);
			cache_get_value_name(i, "NeAldi", _neAldi);
			cache_get_value_name_int(i, "tarih", _tarih);
			TimeStampCevir(_tarih, _tarihh);
			format(list, sizeof(list), "%s%s\t%s\t%s\n", list, _alici, _neAldi, _tarihh);
		}
		ShowPlayerDialog(playerid, DIALOG_SIPSAYFASI, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Sipariþ Listesi > Sayfa: (1)", list, "Tamam", "Kapat");
	}
	if(!rows)
	{
	    SendClientMessage(playerid, 0xFF0000F, "Sipariþ: {FFFFFF}Henüz bir þey alýnmamýþ.");
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:nickdegistir(playerid, params[])
{
	new ID, yNick[24], id;
	if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýn.");
	if(sscanf(params, "us[24]", ID, yNick)) return aBilgi(playerid, "/NickDegistir [Oyuncu Ismi Veya ID] [Yeni Nick]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(!NickControl(yNick)) return hataMesaji(playerid, "Ýsminizde geçersiz karakter var !");
    new query[156], Cache:VeriCek, bool: var_yok = false;
    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", yNick);
	VeriCek = mysql_query(g_SQL, query);
   	new rows = cache_num_rows();
	if(rows)
	{
	    var_yok = true;
	}
	cache_delete(VeriCek);
    if(var_yok) return hataMesaji(playerid, "Bu nick veritabanýnda kayýtlý !");
    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `basarilar` WHERE `bSahip` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "baid", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `basarilar` SET `bSahip` = '%e' WHERE `baid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
	}
	cache_delete(VeriCek);
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "cbid", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `cetebagis` SET `Bagisim` = '%e' WHERE `cbid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
	}
	cache_delete(VeriCek);
 	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip1` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "cid", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip1` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
  		new c = PlayerCete[ID], xq[116 + 48 + 48 + 24 + 2 + 5];
		format(CeteIslem[c][cSahip1], 24, yNick);
		format(xq, sizeof(xq), "{FF0067}[Çete Bölgesi]\n{07FFA7}%s(%d)\n{FF9F00}Çete Sahibi: {FFFFFF}%s\n{00FF0C}Çete Seviyesi: {FFFFFF}%d", CeteIslem[c][ceteIsmi], c, yNick, CeteIslem[c][ceteSeviye]);
        UpdateDynamic3DTextLabelText(CeteIslem[c][cLabel], 0xFFFFFFFF, xq);
	}
	cache_delete(VeriCek);
  	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip2` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "cid", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip2` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
		new c = PlayerCete[ID];
		format(CeteIslem[c][cSahip2], 24, yNick);
	}
	cache_delete(VeriCek);
   	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip3` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "cid", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip3` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
  		new c = PlayerCete[ID];
		format(CeteIslem[c][cSahip3], 24, yNick);
	}
	cache_delete(VeriCek);
   	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `cSahip4` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "cid", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `ceteler` SET `cSahip4` = '%e' WHERE `cid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
		new c = PlayerCete[ID];
		format(CeteIslem[c][cSahip4], 24, yNick);
	}
	cache_delete(VeriCek);
   	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `evler` WHERE `EvSahibi` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	new tmp_id;
	if(rows)
	{
	    cache_get_value_name_int(0, "eid", id);
        tmp_id = id;
 		mysql_format(g_SQL, query, sizeof query, "UPDATE `evler` SET `EvSahibi` = '%e' WHERE `eid` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
		format(EvIslem[id][EvSahibi], MAX_PLAYER_NAME, yNick);
	}
	cache_delete(VeriCek);
    for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
        if(ao[ID][i][ao_model] != 0)
        {
           	mysql_format(g_SQL, query, sizeof query, "UPDATE `kiyafet` SET `KiyafetSahip` = '%e' WHERE `kid` = '%d' LIMIT 1", yNick, ao[ID][i][ao_Sqlid]);
			mysql_query(g_SQL, query);
        }
    }
	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
		if(strcmp(AraclarIslem[i][a_Sahip], getName(ID), false) == 0)
		{
		    format(AraclarIslem[i][a_Sahip], MAX_PLAYER_NAME, yNick);
		    mysql_format(g_SQL, query, sizeof query, "UPDATE `normalarac` SET `aSahip` = '%e' WHERE `nid` = '%d' LIMIT 1", yNick, AraclarIslem[i][aSQL]);
			mysql_query(g_SQL, query);
		}
	}
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", getName(ID));
	VeriCek = mysql_query(g_SQL, query);
   	rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name_int(0, "id", id);
     	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `isim` = '%e' WHERE `id` = '%d' LIMIT 1", yNick, id);
		mysql_query(g_SQL, query);
	}
	cache_delete(VeriCek);
 	new grupID = g_oIslem[ID][g_Id];
	if(grupID != -1)
	{
		if(strcmp(grupIslem[grupID][g_Kurucu], getName(ID), false) == 0)
		{
			format(grupIslem[grupID][g_Kurucu], 24, yNick);
		}
	}
	new ekipID = e_oIslem[ID][e_Id];
	if(ekipID != -1)
	{
 		if(strcmp(ekipIslem[ekipID][e_Kurucu], getName(ID), false) == 0)
 		{
 		    format(ekipIslem[ekipID][e_Kurucu], 24, yNick);
 		}
	}
	new xb[66 + 24 + 24 + 24 + 2];
	format(xb, sizeof(xb), "Yetkili %s, oyuncu %s, yeni ismini %s olarak deðiþtirdi.", getName(playerid), getName(ID), yNick);
	SendClientMessageToAll(0x2ECC71FF, xb);
	SetPlayerName(ID, yNick);
	EvLabelGuncelle(ID, tmp_id);
	return 1;
}

CMD:spawnet(playerid, params[])
{
    if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5++ olmalýsýn.");
    new ID;
    if(sscanf(params,"u", ID)) return SendClientMessage(playerid, 0xFFCC33FF, "Kullaným » {FFFFFF}/SpawnEt (Ýsim / Oyuncu ID)");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu kiþi oyunda deðil !");
	aranmaLeveli(ID, 0);
    SpawnPlayer(ID);
    SCM_ExAll(-1, "{2EFF62}» Spawn: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan spawn edildi.", getName(ID), getName(playerid));
    return 1;
}

CMD:ban(playerid, params[])
{
	new ID, sebep[75], str[89 + 24 + 24], query[266], yil, ay, gun, saat, dakika, saniye, dia1[55 + 62 + 65 + 115 + 100 + 16], gIp[16];
	switch(oyuncuData[playerid][pAdmin])
	{
	    case 0..3: return hataMesaji(playerid, "Bu komutu kullanmak için 4 level ve üstü bir yetkiye sahip olmalýsýn.");
	}
	if(sscanf(params, "us[75]", ID, sebep)) return aBilgi(playerid, "/Ban [Oyuncu Ismi Veya ID] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return yHata(playerid, 1);
	if(playerid == ID) return yHata(playerid, 2);
	new v = 0;
	for(new i = 0; i < strlen(sebep); i++)
	{
	    if(
			sebep[i] == '*' ||
			sebep[i] == '/' ||
			sebep[i] == '\\' ||
			sebep[i] == ''' ||
			sebep[i] == '%' ||
			sebep[i] == '`' ||
			sebep[i] == ',' ||
			sebep[i] == '#' ||
			sebep[i] == ';' ||
			sebep[i] == '{' ||
			sebep[i] == '}' ||
			sebep[i] == '&' ||
			sebep[i] == ''' ||
			sebep[i] == '£')
	    {
	        v = 1;
			break;
	    }
	}
	if(v == 1) return hataMesaji(playerid, "Ban sebeplerinde ' , \" { } vb.. karakterler kullanamazsýn !");
	if(GetTickCount() > GetPVarInt(playerid, "SagoBanFlood"))
	{
		sagoBanKorumasi[playerid] = 0;
		SetPVarInt(playerid, "SagoBanFlood", GetTickCount() + 20 * 1000);
	}
	if(GetPVarInt(playerid, "SagoBanFlood") > GetTickCount())
	{
	    sagoBanKorumasi[playerid]++;
		if(sagoBanKorumasi[playerid] == Ban_Check)
		{
		    BanEx(playerid, "Ban Flood Korumasi");
		    return 1;
		}
	}
	oyuncuData[playerid][adminkomuts]++;
	getdate(yil, ay, gun);
	gettime(saat, dakika, saniye);
	GetPlayerIp(ID, gIp, sizeof(gIp));
	format(str, sizeof(str), "%d/%02d/%02d - %02d:%02d:%02d", gun, ay, yil, saat, dakika, saniye);

	mysql_format(g_SQL, query, sizeof query, "INSERT INTO `banlistesi` (`Banlayan`, `Banlanan`, `Sebep`, `YGA`, `IpAdres`, `BanSure`) VALUES ('%e', '%e', '%s', '%d', '%s', '1')", getName(playerid), getName(ID), sebep, gettime(), gIp);
	mysql_query(g_SQL, query);

	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `BanDeger` = 1 WHERE `id` = %d LIMIT 1", oyuncuData[playerid][xID]);
	mysql_query(g_SQL, query);

	oyuncuData[ID][pBan] = 1;
	format(str, sizeof(str), "{2EFF62}» Ban: {FFFFFF}Oyuncu %s, yetkili %s tarafýndan sunucudan sýnýrsýz banlandý. Sebep: %s", getName(ID), getName(playerid), sebep);
	SendClientMessageToAll(-1, str);
	format(dia1, sizeof(dia1), "{FF2937}Sunucudan kalýcý olarak yasaklandýnýz.\n\n");
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banlayan Admin:\t{FFFFFF}%s\n", dia1, getName(playerid));
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Tarihi:\t{FFFFFF}%d/%02d/%02d - %02d:%02d:%02d\n", dia1, gun, ay, yil, saat, dakika, saniye);
	format(dia1, sizeof(dia1), "%s{FFBF0F}Banlanma Sebebi:\t{FFFFFF}%s\n\n", dia1, sebep);
	format(dia1, sizeof(dia1), "%s{42D6FF}Hata sonucu bu mesajý aldýðýnýzý düþünüyorsanýz forum adresimizde konu açýn.\n", dia1);
	ShowPlayerDialog(ID, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sýnýrsýz Ban", dia1, "Kapat", "");
	oBan(ID);
	return 1;
}

CMD:oban(playerid, params[])
{
	new
		ID[24],
		tmp_ID[24],
		sebep[75],
		str[89 + 24 + 24],
		str2[89 + 24 + 24],
		query[266],
		yil, ay, gun, saat, dakika, saniye
	;
	switch(oyuncuData[playerid][pAdmin])
	{
	    case 0..3: return hataMesaji(playerid, "Bu komutu kullanmak için 4 level ve üstü bir yetkiye sahip olmalýsýn.");
	}
	if(sscanf(params, "s[24]s[75]", ID, sebep)) return aBilgi(playerid, "/oBan [Oyuncu Ismi] [Sebep]");
	for(new i = 0; i < strlen(ID); i++)
	{
	    tmp_ID[i] = tolower(ID[i]);
	}
	if(strcmp(tmp_ID, "nexor", false) == 0) return hataMesaji(playerid, "NexoR ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "raxass", false) == 0) return hataMesaji(playerid, "RaXaSs ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "mustafa", false) == 0) return hataMesaji(playerid, "Mustafa ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "gorkem.", false) == 0) return hataMesaji(playerid, "Gorkem. ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "takareis", false) == 0) return hataMesaji(playerid, "TakaReis ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "xeon", false) == 0) return hataMesaji(playerid, "Xeon ismini banlayamazsýn !");
    if(strcmp(tmp_ID, "serverbey.", false) == 0) return hataMesaji(playerid, "ServerBey. ismini banlayamazsýn !");
	new v = 0;
	for(new i = 0; i < strlen(sebep); i++)
	{
	    if(
			sebep[i] == '*' ||
			sebep[i] == '/' ||
			sebep[i] == '\\' ||
			sebep[i] == ''' ||
			sebep[i] == '%' ||
			sebep[i] == '`' ||
			sebep[i] == ',' ||
			sebep[i] == '#' ||
			sebep[i] == ';' ||
			sebep[i] == '{' ||
			sebep[i] == '}' ||
			sebep[i] == '&' ||
			sebep[i] == '£')
	    {
	        v = 1;
			break;
	    }
	}
	if(v == 1) return hataMesaji(playerid, "Ban sebeplerinde ' , \" { } vb.. karakterler kullanamazsýn !");
	if(GetTickCount() > GetPVarInt(playerid, "SagoBanFlood"))
	{
		sagoBanKorumasi[playerid] = 0;
		SetPVarInt(playerid, "SagoBanFlood", GetTickCount() + 20 * 1000);
	}
	if(GetPVarInt(playerid, "SagoBanFlood") > GetTickCount())
	{
	    sagoBanKorumasi[playerid]++;
		if(sagoBanKorumasi[playerid] == Ban_Check)
		{
		    BanEx(playerid, "Ban Flood Korumasi");
		    return 1;
		}
	}
	oyuncuData[playerid][adminkomuts]++;
	new Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", ID);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows) hataMesaji(playerid, "Bu isim veritabanýnda yasaklanmýþ.");
	if(!rows)
	{
		getdate(yil, ay, gun);
		gettime(saat, dakika, saniye);
		format(str, sizeof(str), "%d/%02d/%02d - %02d:%02d:%02d", gun, ay, yil, saat, dakika, saniye);
		format(str2, sizeof(str2), "%s {e67e22}(Offline)", sebep);
		mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `banlistesi` (`Banlayan`, `Banlanan`, `Sebep`, `YGA`, `IpAdres`, `BanSure`) VALUES ('%e', '%e', '%s', '%d', '%s', '2')", getName(playerid), ID, str2, gettime(), OfflineIP(ID));
		mysql_query(g_SQL, query);
	   	format(str, sizeof(str), "{2EFF62}» oBan: {FFFFFF}Yetkili %s oyuncu %s sunucudan offline banladý. Sebep: %s", getName(playerid), ID, sebep);
		SendClientMessageToAll(-1, str);
	}
	cache_delete(VeriCek);
	return 1;
}

CMD:osureban(playerid, params[])
{
	new
		_gun,
		isim[24],
		tmp_ID[24],
		sebep[100],
		Cache:VeriCek,
		query[60 + 24]
	;
	switch(oyuncuData[playerid][pAdmin])
	{
	    case 0..2: return hataMesaji(playerid, "Bu komutu kullanmak için 2 level ve üstü bir yetkiye sahip olmalýsýn.");
	}
	if(sscanf(params, "ds[24]s[100]", _gun, isim, sebep)) return aBilgi(playerid, "/oSureBan [Gün] [Oyuncu Ismi] [Sebep]");
	for(new i = 0; i < strlen(isim); i++)
	{
	    tmp_ID[i] = tolower(isim[i]);
	}
	if(strcmp(tmp_ID, "nexor", false) == 0) return hataMesaji(playerid, "NexoR ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "raxass", false) == 0) return hataMesaji(playerid, "RaXaSs ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "mustafa", false) == 0) return hataMesaji(playerid, "Mustafa ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "gorkem.", false) == 0) return hataMesaji(playerid, "Gorkem. ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "takareis", false) == 0) return hataMesaji(playerid, "TakaReis ismini banlayamazsýn !");
	if(strcmp(tmp_ID, "xeon", false) == 0) return hataMesaji(playerid, "Xeon ismini banlayamazsýn !");
    if(strcmp(tmp_ID, "serverbey.", false) == 0) return hataMesaji(playerid, "ServerBey. ismini banlayamazsýn !");
	new v = 0;
	for(new i = 0; i < strlen(sebep); i++)
	{
	    if(
			sebep[i] == '*' ||
			sebep[i] == '/' ||
			sebep[i] == '\\' ||
			sebep[i] == ''' ||
			sebep[i] == '%' ||
			sebep[i] == '`' ||
			sebep[i] == ',' ||
			sebep[i] == '#' ||
			sebep[i] == ';' ||
			sebep[i] == '{' ||
			sebep[i] == '}' ||
			sebep[i] == '&' ||
			sebep[i] == '£')
	    {
	        v = 1;
			break;
	    }
	}
	if(v == 1) return hataMesaji(playerid, "Ban sebeplerinde ' , \" { } vb.. karakterler kullanamazsýn !");
	if(GetTickCount() > GetPVarInt(playerid, "SagoBanFlood"))
	{
		sagoBanKorumasi[playerid] = 0;
		SetPVarInt(playerid, "SagoBanFlood", GetTickCount() + 20 * 1000);
	}
	if(GetPVarInt(playerid, "SagoBanFlood") > GetTickCount())
	{
	    sagoBanKorumasi[playerid]++;
		if(sagoBanKorumasi[playerid] == Ban_Check)
		{
		    BanEx(playerid, "Ban Flood Korumasi");
		    return 1;
		}
	}
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%e' LIMIT 1", isim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    oyuncuData[playerid][adminkomuts]++;
		kontrolSureBan(playerid, _gun, isim, sebep);
	}
	if(!rows)
	{
	    hataMesaji(playerid, "Veritabanýnda böyle bir oyuncu yok.");
	}
    cache_delete(VeriCek);
	return 1;
}

function kontrolSureBan(playerid, ts, _isim1[], _sebep1[])
{
    new Cache:VeriCek, query[300], str[250];
    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` WHERE `Banlanan` = '%e' LIMIT 1", _isim1);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows) hataMesaji(playerid, "Bu isim zaten veritabanýnda yasaklanmýþ.");
 	if(!rows)
	{
		new xx = gettime() + ts * 86400;
	  	mysql_format(g_SQL, query, sizeof query, "INSERT INTO `banlistesi` (`Banlayan`, `Banlanan`, `Sebep`, `YGA`, `IpAdres`, `BanSure`) VALUES ('%e', '%e', '%s (Offline)', '%d', '%s', '%d')", getName(playerid), _isim1, _sebep1, gettime(), OfflineIP(_isim1), xx);
		mysql_query(g_SQL, query);
	   	format(str, sizeof(str), "{2EFF62}» oSBan: {FFFFFF}Yetkili %s oyuncu %s sunucudan %d gün offline banladý. Sebep: %s", getName(playerid), _isim1, ts, _sebep1);
		SendClientMessageToAll(-1, str);
	}
	cache_delete(VeriCek);
	return 1;
}

stock OfflineIP(nickName[])
{
	new query[65 + 24], Cache:VeriCek, tIp[16];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%s' LIMIT 1", nickName);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    cache_get_value_name(0, "IpKayit", tIp);
	}
	cache_delete(VeriCek);
	return tIp;
}

CMD:bankaldir(playerid, params[])
{
	new oisim[24];
	if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için 4 level ve üstüne sahip olmalýsýn.");
	if(sscanf(params, "s[24]", oisim)) return aBilgi(playerid, "/BanKaldir [Oyuncu Ismi]");
	new query[58 + 24 + 16], Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", oisim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    oyuncuData[playerid][adminkomuts]++;
	    new tIp[16], sz_str[76 + 24 + 24];
	    cache_get_value_name(0, "IpAdres", tIp);
	    format(sz_str, sizeof(sz_str), "unbanip %s", tIp);
	    SendRconCommand(sz_str);
	 	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `banlistesi` WHERE `Banlanan` = '%s' LIMIT 1", oisim);
		mysql_tquery(g_SQL, query);
		format(sz_str, sizeof(sz_str), "{FF8903}» BanKaldýr: {FFFFFF}Yetkili %s, oyuncu %s banýný kaldýrdý.", getName(playerid), oisim);
		SendClientMessageToAll(-1, sz_str);
	}
	if(!rows) hataMesaji(playerid, "Bu isim veritabanýnda yasaklanmamýþ.");
	cache_delete(VeriCek);
	return 1;
}

CMD:sarki(playerid, params[])
{
	new mp3url[100], bilgis[88 + 24];
	if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için Dj, Rehber ve 1 level admin ve kral olmalýsýn.");
	if(sscanf(params, "s[100]", mp3url)) return aBilgi(playerid, "/Sarki [URL]");
	foreach(new i: Player) PlayAudioStreamForPlayer(i, mp3url);
	format(bilgis, sizeof(bilgis), "{5CB6FF}» Þarký: {FFFFFF}Yetkili %s sunucuda bir þarký açtý. Keyifli dinlemeler.", getName(playerid));
	SendClientMessageToAll(-1, bilgis);
    if(oyuncuData[playerid][pDj] >= 1)
    {
		oyuncuData[playerid][dsarki]++;
	}
	if(oyuncuData[playerid][pRehber] >= 1)
	{
	    oyuncuData[playerid][dsarki]++;
	}
	if(oyuncuData[playerid][pAdmin] >= 1)
    {
		oyuncuData[playerid][adminkomuts]++;
	}
	return 1;
}

CMD:mdurdur(playerid,params[])
{
    if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1 && oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için Dj, Rehber ve 1 level admin ve kral olmalýsýn.");
	foreach(new i: Player) StopAudioStreamForPlayer(i);
	new ss[69 + 24];
	format(ss,sizeof(ss),"{FC575E}» Þarký: {FFFFFF}Yetkili %s sunucuda çalan þarkýyý durdurdu.",getName(playerid));
	SendClientMessageToAll(-1, ss);
	if(oyuncuData[playerid][pDj] >= 1)
    {
		oyuncuData[playerid][dmkapat]++;
	}
	if(oyuncuData[playerid][pRehber] >= 1)
	{
	    oyuncuData[playerid][dmkapat]++;
	}
	if(oyuncuData[playerid][pAdmin] >= 1)
    {
		oyuncuData[playerid][adminkomuts]++;
	}
	return 1;
}

CMD:cc(playerid, params[])
{
	new bb[63 + 24];
	if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için Dj, Rehber ve 1 level admin ve üstüne sahip olmalýsýn.");
	for(new i = 0; i < 100; i++) SendClientMessageToAll(-1, " ");
 	format(bb, sizeof(bb), "{5CB6FF}» Cc: {FFFFFF}Yetkili %s, chat akýþýný temizledi.", getName(playerid));
	SendClientMessageToAll(-1, bb);
 	if(oyuncuData[playerid][pDj] >= 1)
    {
		oyuncuData[playerid][adminkomuts]++;
	}
	if(oyuncuData[playerid][pRehber] >= 1)
	{
	    oyuncuData[playerid][adminkomuts]++;
	}
	if(oyuncuData[playerid][pAdmin] >= 1)
    {
		oyuncuData[playerid][adminkomuts]++;
	}
	return 1;
}

CMD:a(playerid, params[])
{
    new bb[128], ss[128];
    if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "s[128]", ss)) return aBilgi(playerid, "/A [Mesaj]");
    format(bb, sizeof(bb), "[ADMIN CHAT] %s(%d): %s", getName(playerid), playerid, ss);
	if(GetPVarInt(playerid, "AdminFloodKorumasi") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "AdminFloodKorumasi", GetTickCount() + 500);
	    return 1;
	}
	SetPVarInt(playerid, "AdminFloodKorumasi", GetTickCount() + 500);
	foreach(new i: Player)
	{
	    if(oyuncuData[i][pAdmin] >= 1)
	    {
	        SendClientMessage(i, 0x59FF2BFF, bb);
	    }
	}
	return 1;
}

CMD:r(playerid, params[])
{
    new bb[128], ss[128];
    if(oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için rehber ve 1 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "s[128]", ss)) return aBilgi(playerid, "/R [Mesaj]");
    format(bb, sizeof(bb), "{e91e63}[Rehber Chat] %s(%d): %s", getName(playerid), playerid, ss);
   	if(GetPVarInt(playerid, "RehberFloodKorumasi") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "RehberFloodKorumasi", GetTickCount() + 500);
	    return 1;
	}
	SetPVarInt(playerid, "RehberFloodKorumasi", GetTickCount() + 500);
	foreach(new i: Player)
	{
	    if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, -1, bb);
	    if(oyuncuData[i][pRehber] >= 1) SendClientMessage(i, -1, bb);
	}
	return 1;
}

CMD:d(playerid, params[])
{
    new bb[128], ss[128];
    if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için Dj ve 1 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "s[128]", ss)) return aBilgi(playerid, "/D [Mesaj]");
    format(bb, sizeof(bb), "{ff5722}[Dj Chat] %s(%d): %s", getName(playerid), playerid, ss);
   	if(GetPVarInt(playerid, "DjFloodKorumasi") > GetTickCount())
	{
	    hataMesaji(playerid, "Floodu kesin !");
	    SetPVarInt(playerid, "DjFloodKorumasi", GetTickCount() + 500);
	    return 1;
	}
	SetPVarInt(playerid, "DjFloodKorumasi", GetTickCount() + 500);
	foreach(new i: Player)
	{
	    if(oyuncuData[i][pAdmin] >= 1) SendClientMessage(i, -1, bb);
	    if(oyuncuData[i][pDj] >= 1) SendClientMessage(i, -1, bb);
	}
	return 1;
}

CMD:uyar(playerid, params[])
{
    new bb[128], ss[50], ID;
    if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 Level Admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "us[50]", ID, ss)) return aBilgi(playerid, "/Uyar [Oyuncu Ismi Veya ID] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendini uyaramazsýn !");
	if(KarakterEkraninda[ID]) return hataMesaji(playerid, "Bu oyuncu giriþ yapmamýþ.");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return hataMesaji(playerid, "Yüksek level adminleri uyaramazsýn !");
	if(GetPVarInt(ID, "UyarTime") > GetTickCount()) return hataMesaji(playerid, "Bu oyuncu zaten uyarýlmýþ, tekrar uyarmak için 3sn bekleyin.");
	SetPVarInt(ID, "UyarTime", GetTickCount() + 3000);
    oyuncuData[playerid][adminkomuts]++;
	Uyaric[ID]++;
    switch(Uyaric[ID])
    {
        case 1: format(bb, sizeof(bb), "{FFE100}» Uyarý: {FFFFFF}Yetkili %s, oyuncu %s uyardý. [%d/3] [-50,000$] Sebep: %s", getName(playerid), getName(ID), Uyaric[ID], ss), pParaver(ID, -50000);
        case 2: format(bb, sizeof(bb), "{FFE100}» Uyarý: {FFFFFF}Yetkili %s, oyuncu %s uyardý. [%d/3] [-100,000$] Sebep: %s", getName(playerid), getName(ID), Uyaric[ID], ss), pParaver(ID, -100000);
        case 3: format(bb, sizeof(bb), "{FFE100}» Uyarý: {FFFFFF}Yetkili %s, oyuncu %s uyardý. [%d/3] [-250,000$] Sebep: %s", getName(playerid), getName(ID), Uyaric[ID], ss), pParaver(ID, -250000);
		default: format(bb, sizeof(bb), "{FFE100}» Uyarý: {FFFFFF}Yetkili %s, oyuncu %s uyardý. [3/3] [-250,000$] Sebep: %s", getName(playerid), getName(ID), ss), pParaver(ID, -250000);
	}
	SendClientMessageToAll(-1, bb);
	new dia1[55 + 40 + 41 + 43 + 102];
 	if(Uyaric[ID] >= 3)
	{
		format(dia1, sizeof(dia1), "%s{FFBF0F}Uyaran Admin:\t\t{FFFFFF}%s\n", dia1, getName(playerid));
		format(dia1, sizeof(dia1), "%s{FFBF0F}Uyarý Sebebi:\t\t{FFFFFF}%s\n\n", dia1, ss);
		ShowPlayerDialog(ID, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Uyarý", dia1, "Kapat", "");
		oKick(ID);
		return 1;
	}
	format(dia1, sizeof(dia1), "%s{FFBF0F}Uyaran Admin:\t\t{FFFFFF}%s\n", dia1, getName(playerid));
	format(dia1, sizeof(dia1), "%s{FFBF0F}Uyarý Sebebi:\t\t{FFFFFF}%s\n\n", dia1, ss);
	ShowPlayerDialog(ID, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Uyarý", dia1, "Kapat", "");
	return 1;
}

CMD:sustur(playerid, params[])
{
    new bb[81 + 24 + 24 + 3 + 50], ss[50], ID, sure, query[80];
    if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
    if(sscanf(params, "uis[50]", ID, sure, ss)) return aBilgi(playerid, "/Sustur [Oyuncu Ismi Veya ID] [Dakika] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendini susturamazsýn !");
	if(sure <= 0 || sure > 30) return hataMesaji(playerid, "Süreyi en düþük 1 dakika en fazla 30 dakika girebilirsin.");
	if(oyuncuData[ID][sureKayit] != 0) return hataMesaji(playerid, "Bu oyuncu zaten susturulmuþ.");
	oyuncuData[playerid][adminkomuts]++;
	oyuncuData[ID][sureKayit] = sure * 60;
 	format(bb, sizeof(bb), "{FFE100}» Sustur: {FFFFFF}Yetkili %s, oyuncu %s %d dakika susturdu. Sebep: %s", getName(playerid), getName(ID), sure, ss);
	SendClientMessageToAll(-1, bb);
	oyuncuData[playerid][adminkomuts]++;
 	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = %d WHERE `id` = %d LIMIT 1", oyuncuData[ID][sureKayit], oyuncuData[ID][xID]);
	mysql_query(g_SQL, query);
	return 1;
}

CMD:osustur(playerid, params[])
{
	new oisim[24], sure;
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "ds[24]", sure, oisim)) return aBilgi(playerid, "/oSustur [Dakika] [Oyuncu Ismi]");
    if(sure <= 0 || sure > 30) return hataMesaji(playerid, "Süreyi en düþük 1 dakika en fazla 30 dakika girebilirsin.");
	new query[58 + 24 + 16], Cache:VeriCek, str[256];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%s' LIMIT 1", oisim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    oyuncuData[playerid][adminkomuts]++;
	    new s = sure * 60;
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = '%d' WHERE `isim` = '%s'", s, oisim);
		mysql_query(g_SQL, query);
	   	format(str, sizeof(str), "{2EFF62}» oSustur: {FFFFFF}Yetkili %s oyuncu %s offline olarak %d dakika susturdu.", getName(playerid), oisim, sure);
		SendClientMessageToAll(-1, str);
	}
	if(!rows) hataMesaji(playerid, "Bu isim veritabanýnda kayýtlý deðil.");
	cache_delete(VeriCek);
	return 1;
}

CMD:osusturac(playerid, params[])
{
	new oisim[24];
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "s[24]", oisim)) return aBilgi(playerid, "/oSusturAc [Oyuncu Ismi]");
	new query[58 + 24 + 16], Cache:VeriCek, str[256];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%s' LIMIT 1", oisim);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    oyuncuData[playerid][adminkomuts]++;
		mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = '0' WHERE `isim` = '%s'", oisim);
		mysql_query(g_SQL, query);
	   	format(str, sizeof(str), "{2EFF62}» oSustur: {FFFFFF}Yetkili %s oyuncu %s offline olarak susturulmasýný kaldýrdý.", getName(playerid), oisim);
		SendClientMessageToAll(-1, str);
	}
	if(!rows) hataMesaji(playerid, "Bu isim veritabanýnda kayýtlý deðil.");
	cache_delete(VeriCek);
	return 1;
}


CMD:susturac(playerid, params[])
{
    new bb[85 + 24 + 24], ID, query[80];
    if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
    if(sscanf(params, "u", ID)) return aBilgi(playerid, "/SusturAc [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
    oyuncuData[playerid][adminkomuts]++;
 	format(bb, sizeof(bb), "{FFE100}» SusturAc: {FFFFFF}Yetkili %s, oyuncu %s susturulma yasaðýný kaldýrdý.", getName(playerid), getName(ID));
	SendClientMessageToAll(-1, bb);
	oyuncuData[ID][sureKayit] = 0;
  	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[ID][xID]);
	mysql_query(g_SQL, query);
	return 1;
}

CMD:izle(playerid, params[])
{
	new ID;
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/Izle [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendinimi izleyeceksin ?");
    if(oyuncuData[playerid][pAdmin] >= 9)
    {
		if(GetPVarInt(ID, "SpawnOldum") == 0) return hataMesaji(playerid, "Bu oyuncu daha spawn olmamýþ !");
		if(!IzlemeModu[playerid][izlemeModu])
		{
			GetPlayerPos(playerid, IzlemeModu[playerid][e_Pos][0], IzlemeModu[playerid][e_Pos][1], IzlemeModu[playerid][e_Pos][2]);
			GetPlayerFacingAngle(playerid, IzlemeModu[playerid][e_Pos][3]);
			IzlemeModu[playerid][e_Interior] = GetPlayerInterior(playerid);
			IzlemeModu[playerid][e_Vir] = GetPlayerVirtualWorld(playerid);
		}
		SetPlayerInterior(playerid, GetPlayerInterior(ID));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ID));
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(!IzlemeModu[playerid][izlemeModu])
			{
				IzlemeModu[playerid][e_vID] = GetPlayerVehicleID(playerid);
			}
		}
		else
		{
 			if(!IzlemeModu[playerid][izlemeModu])
			{
				IzlemeModu[playerid][e_vID] = 0;
			}
		}
		IzlemeModu[playerid][izlemeModu] = true;
	    Izleniyorum[ID] = 1;
	    IzlemeModu[playerid][izledigimID] = ID;
	    TogglePlayerSpectating(playerid, 1);
	    if(IsPlayerInAnyVehicle(ID))
		{
			PlayerSpectateVehicle(playerid, GetPlayerVehicleID(ID));
		}
		else
		{
			PlayerSpectatePlayer(playerid, ID);
		}
		return 1;
	}else if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return hataMesaji(playerid, "Yüksek level adminleri izleyemezsin !");
	if(GetPVarInt(ID, "SpawnOldum") == 0) return hataMesaji(playerid, "Bu oyuncu daha spawn olmamýþ !");
	if(!IzlemeModu[playerid][izlemeModu])
	{
		GetPlayerPos(playerid, IzlemeModu[playerid][e_Pos][0], IzlemeModu[playerid][e_Pos][1], IzlemeModu[playerid][e_Pos][2]);
		GetPlayerFacingAngle(playerid, IzlemeModu[playerid][e_Pos][3]);
		IzlemeModu[playerid][e_Interior] = GetPlayerInterior(playerid);
		IzlemeModu[playerid][e_Vir] = GetPlayerVirtualWorld(playerid);
	}
	SetPlayerInterior(playerid, GetPlayerInterior(ID));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ID));
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(!IzlemeModu[playerid][izlemeModu])
		{
			IzlemeModu[playerid][e_vID] = GetPlayerVehicleID(playerid);
		}
	}
	else
	{
		if(!IzlemeModu[playerid][izlemeModu])
		{
			IzlemeModu[playerid][e_vID] = 0;
		}
	}
	IzlemeModu[playerid][izlemeModu] = true;
    Izleniyorum[ID] = 1;
    IzlemeModu[playerid][izledigimID] = ID;
    TogglePlayerSpectating(playerid, 1);
    if(IsPlayerInAnyVehicle(ID))
	{
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(ID));
	}
	else
	{
		PlayerSpectatePlayer(playerid, ID);
	}
	return 1;
}

CMD:izleoff(playerid,params[])
{
    if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	if(!IzlemeModu[playerid][izlemeModu]) return SendClientMessage(playerid, -1, "Ýzleme modunda deðilsin !");
    IzlemeModu[playerid][izlemeModu] = false;
    IzlemeModu[playerid][izledigimID] = INVALID_PLAYER_ID;
	TogglePlayerSpectating(playerid, 0);
	SetTimerEx("IzlePasif", 500, false, "d", playerid);
	return 1;
}

new aracRessTimmer;
CMD:aracres(playerid)
{
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	if(aracResDurum == 1) return hataMesaji(playerid, "Bekle !");
    oyuncuData[playerid][adminkomuts]++;
	new bb[125];
	aracResDurum = 1;
	KillTimer(aracRessTimmer);
	aracRessTimmer = SetTimer("ZamanAracRespawn", 10 * 1000, false);
 	format(bb, sizeof(bb), "{CF4DFF}» AracRes: {FFFFFF}Yetkili %s kullanýlmayan araçlarý 10 saniye sonra re-spawn edecek.", getName(playerid));
	SendClientMessageToAll(-1, bb);
	return 1;
}

CMD:dondur(playerid,params[])
{
    new ID, bb[58 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
    if(sscanf(params, "u", ID)) return aBilgi(playerid, "/Dondur [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return yHata(playerid, 1);
	oyuncuData[playerid][adminkomuts]++;
	TogglePlayerControllable(ID, 0);
	aDondurma[ID] = 1;
  	format(bb, sizeof(bb), "{CF4DFF}» Dondur: {FFFFFF}Yetkili %s oyuncu %s dondurdu.", getName(playerid), getName(ID));
	SendClientMessageToAll(-1, bb);
	return 1;
}

CMD:coz(playerid,params[])
{
    new ID, bb[73 + 24 + 24];
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
    if(sscanf(params, "u", ID)) return aBilgi(playerid, "/Coz [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	oyuncuData[playerid][adminkomuts]++;
	TogglePlayerControllable(ID, 1);
	aDondurma[ID] = 0;
  	format(bb, sizeof(bb), "{CF4DFF}» Çöz: {FFFFFF}Yetkili %s oyuncu %s dondurulma yasaðýný kaldýrdý.", getName(playerid), getName(ID));
	SendClientMessageToAll(-1, bb);
	return 1;
}

CMD:hapis(playerid,params[])
{
	new hsure, ID, ss[50], bb[128];
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
    if(sscanf(params, "uis[50]", ID, hsure, ss)) return aBilgi(playerid, "/Hapis [Oyuncu Ismi Veya ID] [Süre] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
    if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return yHata(playerid, 1);
	if(hsure <= 0 || hsure > 1000) return hataMesaji(playerid, "Süreyi En düþük 1, en fazla 1000 girebilirsiniz.");
	oyuncuData[ID][kefaletmod] = 1;
	oyuncuData[playerid][adminkomuts]++;
	SetPVarInt(ID, "BankaGirdi", 0);
	ResetPlayerWeapons(ID);
    SetPlayerInterior(ID,10);
    SetPlayerPos(ID, 223.4927,110.8868,999.0156);
    SetPlayerFacingAngle(ID, 3.1811);
    SetCameraBehindPlayer(ID);
   	format(bb, sizeof(bb), "{FF653B}» Hapis: {FFFFFF}Yetkili %s oyuncu %s %d saniyeliðine hapishaneye gönderdi. Sebep: %s", getName(playerid), getName(ID), hsure, ss);
	SendClientMessageToAll(-1, bb);
	oyuncuData[ID][hapisSure] = hsure, oyuncuData[ID][hSureKayit] = hsure;
	SetPVarInt(ID, "Hapisdeyimm", 2);
	return 1;
}

CMD:asay(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 3) return hataMesaji(playerid, "Bu komutu kullanmak için 3 level admin ve üstü bir level olmalýsýnýz.");
	new chat[128], ss[128];
	if(sscanf(params, "s[128]", chat)) return aBilgi(playerid, "/Asay [Mesaj]");
	format(ss,sizeof(ss),"{FFCC00}** |AnadoluHP ™|: {66CC66}%s", chat);
	SendClientMessageToAll(0xFFCC00FF, ss);
	format(ss, sizeof(ss), "Asay kullanan yetkili %s(%d), olarak tespit edildi.", getName(playerid), playerid);
	foreach(new i : Player)
	{
		if(oyuncuData[i][pAdmin] >= 3)
		{
			if(i != playerid)
			{
				SendClientMessage(i, 0xA9A9A9, ss);
			}
		}
	}
	return 1;
}

CMD:kralduyuru(playerid,params[])
{
	if(oyuncuData[playerid][kral_TAG] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için kral olmalýsýnýz.");
	if(oyuncuData[playerid][sureKayit] != 0) return KonusmaYasagi(playerid, oyuncuData[playerid][sureKayit]);
	new verilenSure = (GetPVarInt(playerid, "KonusmaYasagi") - GetTickCount()) / 1000;
	if(GetPVarInt(playerid, "KonusmaYasagi") > GetTickCount()) return KonusmaYasagi(playerid, verilenSure);
	new chat[128], ss[128];
	if(sscanf(params, "s[128]", chat)) return aBilgi(playerid, "/KralDuyuru [Mesaj]");
    if(SureYasagi(playerid, "KralBlock", 30)) return 1;
	format(ss,sizeof(ss),"{FF367F}** |Kral Duyuru|: {36FF89}%s", chat);
	SendClientMessageToAll(0xFF367FFF, ss);
	return 1;
}

CMD:jetpack(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5 level ve üstüne sahip olmalýsýn.");
	SetPlayerSpecialAction(playerid, 2);
	return 1;
}

CMD:oldur(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	new ID, msj[128], str[128];
	if(sscanf(params, "us[128]", ID, msj)) return aBilgi(playerid, "/Oldur [Oyuncu Ismi veya ID] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return yHata(playerid, 1);
    oyuncuData[playerid][adminkomuts]++;
 	format(str, sizeof(str), "{FF653B}» Öldür: {FFFFFF}Yetkili %s oyuncu %s öldürdü. Sebep: %s", getName(playerid), getName(ID), msj);
	SendClientMessageToAll(-1, str);
	SetPVarInt(ID, "KillModu", 1);
	Canver(ID, 0);
	return 1;
}

CMD:patlat(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü olmalýsýnýz.");
	new ID, msj[128], str[128];
	if(sscanf(params, "us[128]", ID, msj)) return aBilgi(playerid, "/Patlat [Oyuncu Ismi veya ID] [Sebep]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendini mi patlatacaksýn ?");
	if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return yHata(playerid, 1);
   	format(str, sizeof(str), "{FF653B}» Patlat: {FFFFFF}Yetkili %s oyuncu %s patlattý. Sebep: %s", getName(playerid), getName(ID), msj);
	SendClientMessageToAll(-1, str);
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(ID,X, Y, Z);
	CreateExplosion(X, Y, Z, 7, 10.0);
	oyuncuData[playerid][adminkomuts]++;
	return 1;
}

CMD:chaton(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için 4 level ve üstüne sahip olmalýsýn.");
	if(chatDurum == 0) return hataMesaji(playerid, "Chat zaten aktif.");
	chatDurum = 0;
	new ss[68 + 24];
	format(ss,sizeof(ss),"{FF653B}» Chat: {FFFFFF}Yetkili %s oyun içi konuþmalarý aktif etti.", getName(playerid));
	SendClientMessageToAll(-1, ss);
	oyuncuData[playerid][adminkomuts]++;
	return 1;
}

CMD:chatoff(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için 4 level ve üstüne sahip olmalýsýn.");
	if(chatDurum == 1) return hataMesaji(playerid, "Chat zaten kapalý.");
	chatDurum = 1;
	new ss[64 + 24];
	format(ss,sizeof(ss),"{FF653B}» Chat: {FFFFFF}Yetkili %s oyun içi konuþmalarý kapattý.", getName(playerid));
	SendClientMessageToAll(-1, ss);
	oyuncuData[playerid][adminkomuts]++;
	return 1;
}

CMD:adon(playerid, params[])
{
	new godmode = GetPVarInt(playerid, "GodMode"), ss[94];
	if(oyuncuData[playerid][pAdmin] < 6 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Sanane lan !");
	if(godmode <= 0)
	{
	    SetPVarInt(playerid, "GodMode", 1);
     	format(ss,sizeof(ss),"{3BFF8C}» Adon: {FFFFFF}Ölümsüzlük modu aktif edildi, kapatmak için ayný komutu tekrar yazýn.");
		SendClientMessage(playerid, -1, ss);
	}
	else
	{
		format(ss,sizeof(ss),"{3BFF8C}» Adon: {FFFFFF}Ölümsüzlük modu kapatýldý, açmak için ayný komutu tekrar yazýn.");
		SendClientMessage(playerid, -1, ss);
	    SetPVarInt(playerid, "GodMode", 0);
	    Canver(playerid, yCan(playerid));
	}
	return 1;
}

CMD:skorver(playerid,params[])
{
    new ID, skor, bb[55 + 24 + 11];
	if(oyuncuData[playerid][pAdmin] < 6 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için 6 levele sahip olmalýsýn.");
    if(sscanf(params, "ui", ID, skor)) return aBilgi(playerid, "/SkorVer [Oyuncu Ismi Veya ID] [Skor]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(skor >= 1000000000) hataMesaji(playerid, "Maksimum 1,000,000,000 skor verebilirsin.");
    GenelLog(playerid, 14, getName(ID), "", GetPlayerScore(ID), GetPlayerScore(ID) + skor, 0);
	Skorver(ID, skor);
   	format(bb, sizeof(bb), "{a3ff4d}» Skor: {FFFFFF}Yetkili %s size %d skor verdi.", getName(playerid), skor);
	SendClientMessage(ID, -1, bb);
  	format(bb, sizeof(bb), "{a3ff4d}» Skor: {FFFFFF}Oyuncu %s - %d skor verdiniz.", getName(ID), skor);
	SendClientMessage(playerid, -1, bb);
	return 1;
}

CMD:skordagit(playerid,params[])
{
    new skor, bb[67 + 24 + 11];
	if(oyuncuData[playerid][pAdmin] < 6 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için 6 levele sahip olmalýsýn.");
    if(sscanf(params, "i", skor)) return aBilgi(playerid, "/SkorDagit [Skor]");
	if(skor > 500) return hataMesaji(playerid, "Maksimum 500 skor verebilirsin.");
	foreach(new i: Player)
	{
	    GenelLog(playerid, 8, getName(i), "", GetPlayerScore(i), GetPlayerScore(i) + skor, 0);
		Skorver(i, skor);
	}
  	format(bb, sizeof(bb), "{a3ff4d}» Skor: {FFFFFF}Yetkili %s bütün oyunculara %d skor verdi.", getName(playerid), skor);
	SendClientMessageToAll(-1, bb);
	return 1;
}

CMD:oparaver(playerid,params[])
{
    new ID, miktar, bb[62 + 24 + 15];
	if(oyuncuData[playerid][pAdmin] < 6 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için 6 levele sahip olmalýsýn.");
    if(sscanf(params, "ud", ID, miktar)) return aBilgi(playerid, "/OParaVer [Oyuncu Ismi Veya ID] [Miktar]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(miktar > 1000000000) hataMesaji(playerid, "Maksimum 1,000,000,000 para verebilirsin.");
	GenelLog(playerid, 12, getName(ID), "", ParaKorumasi[ID], ParaKorumasi[ID] + miktar, 0);
	pParaver(ID, miktar);
  	format(bb, sizeof(bb), "{a3ff4d}» Para: {FFFFFF}Yetkili %s size $%s dolar para verdi.", getName(playerid), convertNumber(miktar));
	SendClientMessage(ID, -1, bb);
   	format(bb, sizeof(bb), "{a3ff4d}» Para: {FFFFFF}Oyuncu %s - $%s dolar para verdiniz.", getName(ID), convertNumber(miktar));
	SendClientMessage(playerid, -1, bb);
	return 1;
}

CMD:paradagit(playerid,params[])
{
    new para, bb[74 + 24 + 11];
	if(oyuncuData[playerid][pAdmin] < 7) return hataMesaji(playerid, "Bu komutu kullanmak için 7 levele sahip olmalýsýn.");
    if(sscanf(params, "d", para)) return aBilgi(playerid, "/ParaDagit [Miktar]");
 	if(para > 10000000) return hataMesaji(playerid, "Maksimum 10,000,000 para daðýtabilirsin.");
	foreach(new i: Player)
	{
	    GenelLog(playerid, 9, getName(i), "", ParaKorumasi[i], ParaKorumasi[i] + para, 0);
		pParaver(i, para);
	}
  	format(bb, sizeof(bb), "{a3ff4d}» Para: {FFFFFF}Yetkili %s bütün oyunculara $%s dolar para verdi.", getName(playerid), convertNumber(para));
	SendClientMessageToAll(-1, bb);
	return 1;
}

CMD:expver(playerid, params[])
{
    new ID, eexp, bb[56+24+5];
	if(oyuncuData[playerid][pAdmin] < 6 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için 6 levele sahip olmalýsýn.");
    if(sscanf(params, "ud", ID, eexp)) return aBilgi(playerid, "/ExpVer [ID] [Miktar]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(eexp <= 0 || eexp > 30000) return hataMesaji(playerid, "Maksimum 1 - 30000 aralýkla exp verebilirsin.");
  	format(bb, sizeof(bb), "{a3ff4d}» Exp: {FFFFFF}Yetkili %s size %d exp verdi.", getName(playerid), eexp);
	SendClientMessage(ID, -1, bb);
	format(bb, sizeof(bb), "{a3ff4d}» Exp: {FFFFFF}%s adlý oyuncuya %d exp verdiniz.", getName(ID), eexp);
    SendClientMessage(playerid, -1, bb);
    GenelLog(playerid, 11, getName(ID), "", oyuncuData[ID][ExpPuan], oyuncuData[ID][ExpPuan] + eexp, oyuncuData[ID][_LevelCount]);
   	oyuncuData[ID][ExpPuan] += eexp;
	ExpGuncelle(ID);
	if(oyuncuData[ID][_LevelCount] >= 50)
	{
		if(oyuncuData[ID][ExpPuan] > 50000)
		{
		    oyuncuData[ID][_LevelCount] = 50;
			oyuncuData[ID][ExpPuan] = 50000;
			ExpGuncelle(ID);
		}
	}
	return 1;
}

CMD:expdagit(playerid, params[])
{
    new eexp, bb[56+24+5];
	if(oyuncuData[playerid][pAdmin] < 6 || !IsPlayerAdmin(playerid)) return hataMesaji(playerid, "Bu komutu kullanmak için 6 levele sahip olmalýsýn.");
    if(sscanf(params, "d", eexp)) return aBilgi(playerid, "/ExpDagit [Miktar]");
	if(eexp < 1 || eexp > 10000) return hataMesaji(playerid, "En Düþük 1 - Maksimum 10000 aralýklý exp verebilirsin.");
  	format(bb, sizeof(bb), "{a3ff4d}» Exp: {FFFFFF}Yetkili %s bütün oyunculara %d exp verdi.", getName(playerid), eexp);
	SendClientMessageToAll(-1, bb);
	foreach(new i : Player)
	{
	    GenelLog(playerid, 10, getName(i), "", oyuncuData[i][ExpPuan], oyuncuData[i][ExpPuan] + eexp, oyuncuData[i][_LevelCount]);
		oyuncuData[i][ExpPuan] += eexp;
		format(bb, sizeof(bb), "+%d_Exp", eexp);
		PlayerTextDrawSetString(i, ParaLevel[i][1], bb);
        if(oyuncuData[i][textAyar] == 0){
		PlayerTextDrawShow(i, ParaLevel[i][1]);
		}
		SetPVarInt(i, "YaziMode", 1);
		SetPVarInt(i, "YazilariSil", GetTickCount() + 4500);
		ExpGuncelle(i);
		if(oyuncuData[i][_LevelCount] >= 50)
		{
			if(oyuncuData[i][ExpPuan] > 50000)
			{
			    oyuncuData[i][_LevelCount] = 50;
				oyuncuData[i][ExpPuan] = 50000;
				ExpGuncelle(i);
			}
		}
	}
	return 1;
}


CMD:duyuru(playerid,params[])
{
    new duyuru[128], sure, r;
    if(_duyuruDurum == 1) return hataMesaji(playerid, "Farklý bir duyuru için ekrandaki duyurunun bitmesini bekleyin.");
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5 level ve üstüne sahip olmalýsýn.");
    if(sscanf(params, "iis[128]", sure, r, duyuru)) return aBilgi(playerid, "/Duyuru [Süre] [Renksiz = 1 | Renkli = 2][Mesaj]");
	if(sure > 10) return hataMesaji(playerid, "Süreyi en fazla 10 girebilirsin.");
    _duyuruDurum = 1;
	switch(r)
	{
	    case 1:
	    {
	        FixTR(duyuru);
	        TextDrawSetString(Duyuru, duyuru);
	        foreach(new i : Player){
	        TextDrawShowForPlayer(i, Duyuru);
	        }
	        KillTimer(duyuruTimer2);
	        duyuruTimer2 = SetTimer("DuyuruMesaj", sure * 1000, false);
	    }
	    case 2:
		{
		    /*
	        TextDrawSetString(Duyuru, code(duyuru));
	        foreach(new i : Player){
	        TextDrawShowForPlayer(i, Duyuru);
	        }
	        KillTimer(duyuruTimer2);
	        duyuruTimer2 = SetTimer("DuyuruMesaj", sure * 1000, false);
	        KillTimer(duyuruTimer);
	        duyuruTimer = SetTimer("RenkVer", 75, true);
	        */
	        hataMesaji(playerid, "TextDraw modu için devre dýþý býrakýldý.");
		}
		default:
		{
		    FixTR(duyuru);
	        TextDrawSetString(Duyuru, duyuru);
	        foreach(new i : Player){
	        TextDrawShowForPlayer(i, Duyuru);
	        }
			KillTimer(duyuruTimer2);
	        duyuruTimer2 = SetTimer("DuyuruMesaj", sure * 1000, false);
		}
	}
	return 1;
}

CMD:oyla(playerid, params[])
{
	new oylama[100], sure, fx[200];
    if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5 level ve üstüne sahip olmalýsýn.");
    if(VoteIslem[voteAktiflik]) return SendClientMessage(playerid, -1, "{BDC3C7}» Oylama: {FFFFFF}Aktif bir oylama var, bitmesini bekleyin.");
    if(sscanf(params, "is[100]", sure, oylama)) return aBilgi(playerid, "/Oyla [Oylama Süresi] [Oylama Ismi]");
    VoteIslem[voteAktiflik] = true;
	VoteIslem[oyArti] = 0;
    VoteIslem[oyEksi] = 0;
	format(fx, sizeof(fx), "{BDC3C7}» Oylama: {FFFFFF}%s isimli yetkili sunucuda bir oylama baþlattý. %d saniye sonra sonuçlar açýklanacaktýr.", getName(playerid), sure);
	SendClientMessageToAll(-1, fx);
	format(fx, sizeof(fx), "%s\n", oylama);
	foreach(new i: Player)
	{
    	ShowPlayerDialog(i, DIALOG_OYLAMA, DIALOG_STYLE_MSGBOX, "Oylama", fx, "Evet", "Hayýr");
	}
	SetTimer("OylamaSonucla", sure * 1000, false);
	return 1;
}

CMD:aka(playerid,params[])
{
	if(oyuncuData[playerid][pAdmin] < 3) return hataMesaji(playerid, "Bu komutu kullanmak için 3 level ve üstüne sahip olmalýsýn.");
	new nick[24], tempIP[16];
	if(sscanf(params, "s[24]", nick)) return aBilgi(playerid, "/Aka [Nick]");
	new query[55 + 24], Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `isim` = '%s' LIMIT 1", nick);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows(), aa = 0;
	if(rows)
	{
	    aa++;
		cache_get_value_name(0, "IpKayit", tempIP);
	}
	if(!rows)
	{
	    hataMesaji(playerid, "Veritabanýnda böyle bir oyuncu mevcut deðil.");
	}
	cache_delete(VeriCek);
	if(aa != 0) AkaCek(playerid, tempIP);
	return 1;
}

CMD:git5(playerid)
{
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýnýz.");
	SetPlayerPos(playerid, 1775.1593,-1789.1963,52.4688);
	return 1;
}

CMD:git6(playerid)
{
    if(oyuncuData[playerid][pAdmin] < 6) return hataMesaji(playerid, "Bu komutu kullanmak için 6++ olmalýsýnýz.");
	SetPlayerPos(playerid, 213.3732, 1910.6842, 17.6406);
	return 1;
}

CMD:git(playerid, params[])
{
	new ID, str[61 + 24], Float:Posz[4];
	if(oyuncuData[playerid][pAdmin] < 2) return hataMesaji(playerid, "Bu komutu kullanmak için 2 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/Git [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendine mi ýþýnlanacaksýn ?");
	if(GetPVarInt(ID, "SpawnOldum") == 0) return hataMesaji(playerid, "Bu oyuncu daha spawn olmamýþ !");
    if(etkYaptim[ID] == 1) return hataMesaji(playerid, "Bu oyuncu etkinlik yapýyor.");
	if(Etkde[ID] == true) return hataMesaji(playerid, "Bu oyuncu etkinlikte !");
 	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1)
	{
		if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1)
		{
			hataMesaji(playerid, "Çete savaþý yaparken bir oyuncuya gidemezsin.");
			return 1;
		}
	}
  	GetPVarInt(ID, "_SavasID");
	if(id != -1)
	{
		if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[ID][CeteSavasBolgedemi] == 1)
		{
			hataMesaji(playerid, "Bu oyuncu çete savaþý yapýyor, ýþýnlanamazsýn.");
			return 1;
		}
	}
	if(oyuncuData[playerid][pAdmin] >= 8)
	{
		GetPlayerPos(ID, Posz[0], Posz[1], Posz[2]);
		GetPlayerFacingAngle(ID, Posz[3]);
		SetPlayerInterior(playerid, GetPlayerInterior(ID));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ID));
		if(IsPlayerInAnyVehicle(playerid))
		{
		    new arac = GetPlayerVehicleID(playerid);
		 	SetVehiclePos(arac, Posz[0], Posz[1] -1.7, Posz[2] + 2.0);
			GetVehicleZAngle(arac, Posz[3]);
			PutPlayerInVehicle(playerid, arac, 0);
		}
		else
		{
			SetPlayerPos(playerid, Posz[0], Posz[1], Posz[2] + 0.5);
			SetPlayerFacingAngle(playerid, Posz[3]);
		}
	    SetCameraBehindPlayer(playerid);
		format(str, sizeof(str), "{2EFF62}» TP: {FFFFFF}Yetkili %s, sizin yanýnýza ýþýnlandý.", getName(playerid));
		SendClientMessage(ID, -1, str);
	 	format(str, sizeof(str), "{2EFF62}» TP: {FFFFFF}Oyuncu %s, yanýna ýþýnlandýnýz.", getName(ID));
		SendClientMessage(playerid, -1, str);
		return 1;
	}
	else if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return hataMesaji(playerid, "Yüksek level adminlere ýþýnlanamazsýn.");
	GetPlayerPos(ID, Posz[0], Posz[1], Posz[2]);
	GetPlayerFacingAngle(ID, Posz[3]);
	SetPlayerInterior(playerid, GetPlayerInterior(ID));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ID));
	if(IsPlayerInAnyVehicle(playerid))
	{
	new arac = GetPlayerVehicleID(playerid);
	SetVehiclePos(arac, Posz[0], Posz[1] -1.7, Posz[2] + 2.0);
	GetVehicleZAngle(arac, Posz[3]);
	PutPlayerInVehicle(playerid, arac, 0);
	}
	else
	{
	SetPlayerPos(playerid, Posz[0], Posz[1], Posz[2] + 0.5);
	SetPlayerFacingAngle(playerid, Posz[3]);
	}
	SetCameraBehindPlayer(playerid);
	format(str, sizeof(str), "{2EFF62}» TP: {FFFFFF}Yetkili %s, sizin yanýnýza ýþýnlandý.", getName(playerid));
	SendClientMessage(ID, -1, str);
	format(str, sizeof(str), "{2EFF62}» TP: {FFFFFF}Oyuncu %s, yanýna ýþýnlandýnýz.", getName(ID));
	SendClientMessage(playerid, -1, str);
	return 1;
}

CMD:cek(playerid, params[])
{
	new ID, str[61 + 24], Float:Posz[4];
	if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5 level admin ve üstü olmalýsýnýz.");
	if(sscanf(params, "u", ID)) return aBilgi(playerid, "/Cek [Oyuncu Ismi Veya ID]");
	if(!IsPlayerConnected(ID)) return hataMesaji(playerid, "Bu oyuncu sunucuda deðil.");
	if(playerid == ID) return hataMesaji(playerid, "Kendini mi çekeceksin ?");
	if(GetPVarInt(ID, "SpawnOldum") == 0) return hataMesaji(playerid, "Bu oyuncu daha spawn olmamýþ !");
	if(AFkMi[ID] == 1) return hataMesaji(playerid, "Bu oyuncu AFK çekemezsin.");
	if(etkYaptim[ID] == 1) return hataMesaji(playerid, "Bu oyuncu etkinlik yapýyor.");
    if(Etkde[ID] == true) return hataMesaji(playerid, "Bu oyuncu etkinlikte !");
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1)
	{
		if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1)
		{
			hataMesaji(playerid, "Çete savaþý yaparken bir oyuncuyu çekemezsin.");
			return 1;
		}
	}
  	GetPVarInt(ID, "_SavasID");
	if(id != -1)
	{
		if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[ID][CeteSavasBolgedemi] == 1)
		{
			hataMesaji(playerid, "Bu oyuncu çete savaþý yapýyor, çekemezsin.");
			return 1;
		}
	}
    if(oyuncuData[playerid][pAdmin] >= 6)
    {
		GetPlayerPos(playerid, Posz[0], Posz[1], Posz[2]);
		GetPlayerFacingAngle(playerid, Posz[3]);
		SetPlayerInterior(ID, GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(ID, GetPlayerVirtualWorld(playerid));
		if(IsPlayerInAnyVehicle(ID))
		{
		    new arac = GetPlayerVehicleID(ID);
		 	SetVehiclePos(arac, Posz[0], Posz[1] -1.7, Posz[2] + 2.0);
			GetVehicleZAngle(arac, Posz[3]);
			PutPlayerInVehicle(ID, arac, 0);
		}
		else
		{
			SetPlayerPos(ID, Posz[0], Posz[1], Posz[2] + 0.5);
			SetPlayerFacingAngle(ID, Posz[3]);
		}
	    SetCameraBehindPlayer(ID);
		format(str, sizeof(str), "{2EFF62}» Çek: {FFFFFF}Yetkili %s, sizi yanýna çekti.", getName(playerid));
		SendClientMessage(ID, -1, str);
	 	format(str, sizeof(str), "{2EFF62}» Çek: {FFFFFF}Oyuncu %s, yanýnýza çektiniz.", getName(ID));
		SendClientMessage(playerid, -1, str);
		return 1;
	}else if(oyuncuData[playerid][pAdmin] < oyuncuData[ID][pAdmin]) return hataMesaji(playerid, "Yüksek level adminleri çekemezsin.");
	GetPlayerPos(playerid, Posz[0], Posz[1], Posz[2]);
	GetPlayerFacingAngle(playerid, Posz[3]);
	SetPlayerInterior(ID, GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(ID, GetPlayerVirtualWorld(playerid));
	if(IsPlayerInAnyVehicle(ID))
	{
	    new arac = GetPlayerVehicleID(ID);
	 	SetVehiclePos(arac, Posz[0], Posz[1] -1.7, Posz[2] + 2.0);
		GetVehicleZAngle(arac, Posz[3]);
		PutPlayerInVehicle(ID, arac, 0);
	}
	else
	{
		SetPlayerPos(ID, Posz[0], Posz[1], Posz[2] + 0.5);
		SetPlayerFacingAngle(ID, Posz[3]);
	}
    SetCameraBehindPlayer(ID);
	format(str, sizeof(str), "{2EFF62}» Çek: {FFFFFF}Yetkili %s, sizi yanýna çekti.", getName(playerid));
	SendClientMessage(ID, -1, str);
 	format(str, sizeof(str), "{2EFF62}» Çek: {FFFFFF}Oyuncu %s, yanýnýza çektiniz.", getName(ID));
	SendClientMessage(playerid, -1, str);
	return 1;
}

CMD:takip(playerid)
{
    if(oyuncuData[playerid][pAdmin] < 5) return hataMesaji(playerid, "Bu komutu kullanmak için 5++ olmalýsýn.");
	ShowPlayerDialog(playerid, TAKIP_MENU, DIALOG_STYLE_LIST, "Takip", "» Admin Takip\n» Rehber Takip\n» DJ Takip\n", "Göster", "Kapat");
	return 1;
}

CMD:admins(playerid,params[])
{
    if(oyuncuData[playerid][pAdmin] < 4) return hataMesaji(playerid, "Bu komutu kullanmak için Mapper ve üstü bir level olmalýsýnýz.");
	new query[100], Cache:VeriCek, x=0, list[2024];
	// SELECT * FROM oyuncuveri WHERE aLevel > 1
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM oyuncuveri WHERE aLevel > 0 ORDER By aLevel DESC");
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new IsimCek[24], level, aktiflik[21], cek;
        format(list, sizeof(list), "{7A8AFF}Isim\t{7A8AFF}Level\t{7A8AFF}Durum\n");
		for(new i = 0; i < rows; ++i)
		{
		    cache_get_value_name_int(i, "aLevel", level);
	        cache_get_value_name(i, "isim", IsimCek);
	        cek = GetPlayerID(IsimCek);
	        if(cek != INVALID_PLAYER_ID)
	        {
	            aktiflik = "{00FF00}Aktif\t";
	            if(AFkMi[cek] == 1)
	            {
	            aktiflik = "{FFFF33}AFK\t";
	            }
	        }
	        else
	        {
	            aktiflik = "{A9A9A9}Çevrimdýþý";
	        }
			if(level >= 1)
		    {
		        if(level != 5)
		        {
					format(list,sizeof(list),"%s{FFFFFF}%s\t{00B5B5}%d\t%s\n", list, IsimCek, level, aktiflik);
				}
			}
			x++;
		}
	}
	cache_delete(VeriCek);
	if(x >= 1) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Admins", list, "Kapat", "");
	if(x <= 0) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Admins", "Admin kaydý yok !", "Kapat", "");
	return 1;
}

CMD:adminler(playerid,params[])
{
    if(GetPlayerScore(playerid) < 500) return hataMesaji(playerid, "Adminleri 500 skoru ve üstü oyuncular görebilir.");
	new query[100], Cache:VeriCek, x=0, list[500];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM oyuncuveri WHERE aLevel > 0 ORDER By aLevel DESC");
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new IsimCek[24], level, aktiflik[21], cek;
        format(list, sizeof(list), "{7A8AFF}Isim\t{7A8AFF}Level\t{7A8AFF}Durum\n");
		for(new i = 0; i < rows; ++i)
		{
		    cache_get_value_name_int(i, "aLevel", level);
	        cache_get_value_name(i, "isim", IsimCek);
	        cek = GetPlayerID(IsimCek);
	        if(cek != INVALID_PLAYER_ID)
	        {
	            if(level == 1 || level == 2 || level == 3 || level == 4)
	            {
		            aktiflik = "{00FF00}Aktif\t";
		            if(AFkMi[cek] == 1)
		            {
		            aktiflik = "{FFFF33}AFK\t";
		            }
		            format(list,sizeof(list),"%s{FFFFFF}%s\t{00B5B5}%d\t%s\n", list, IsimCek, level, aktiflik);
	                x++;
				}
			}
		}
	}
	cache_delete(VeriCek);
	if(x >= 1) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Adminler", list, "Kapat", "");
	if(x <= 0) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Adminler", "1 - 4 Arasý online bir admin yok !", "Kapat", "");
	return 1;
}

CMD:rehberler(playerid,params[])
{
	new query[100], Cache:VeriCek, x=0, list[2024];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM oyuncuveri WHERE rLevel > 0 ORDER By rLevel DESC");
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new IsimCek[24], level, aktiflik[21], cek;
        format(list, sizeof(list), "{7A8AFF}Isim\t{7A8AFF}Durum\n");
		for(new i = 0; i < rows; ++i)
		{
		    cache_get_value_name_int(i, "rLevel", level);
	        cache_get_value_name(i, "isim", IsimCek);
	        cek = GetPlayerID(IsimCek);
	        if(cek != INVALID_PLAYER_ID)
	        {
	            aktiflik = "{00FF00}Aktif\t";
	            if(AFkMi[cek] == 1)
	            {
	            aktiflik = "{FFFF33}AFK\t";
	            }
	        }
	        else
	        {
	            aktiflik = "{A9A9A9}Çevrimdýþý";
	        }
			if(level >= 1)
		    {
				format(list,sizeof(list),"%s{FFFFFF}%s\t{00B5B5}%s\n", list, IsimCek, aktiflik);
			}
			x++;
		}
	}
	cache_delete(VeriCek);
	if(x >= 1) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Rehberler", list, "Kapat", "");
	if(x <= 0) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Rehberler", "Rehber kaydý yok !", "Kapat", "");
	return 1;
}

CMD:djyler(playerid, params[]) return cmd_djler(playerid, "");
CMD:djler(playerid,params[])
{
	new query[100], Cache:VeriCek, x=0, list[2024];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM oyuncuveri WHERE dLevel > 0 ORDER By dLevel DESC");
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new IsimCek[24], level, aktiflik[21], cek;
        format(list, sizeof(list), "{7A8AFF}Isim\t{7A8AFF}Durum\n");
		for(new i = 0; i < rows; ++i)
		{
		    cache_get_value_name_int(i, "dLevel", level);
	        cache_get_value_name(i, "isim", IsimCek);
	        cek = GetPlayerID(IsimCek);
	        if(cek != INVALID_PLAYER_ID)
	        {
	            aktiflik = "{00FF00}Aktif\t";
	            if(AFkMi[cek] == 1)
	            {
	            aktiflik = "{FFFF33}AFK\t";
	            }
	        }
	        else
	        {
	            aktiflik = "{A9A9A9}Çevrimdýþý";
	        }
			if(level >= 1)
		    {
				format(list,sizeof(list),"%s{FFFFFF}%s\t{00B5B5}%s\n", list, IsimCek, aktiflik);
			}
			x++;
		}
	}
	cache_delete(VeriCek);
	if(x >= 1) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Dj`ler", list, "Kapat", "");
	if(x <= 0) ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Dj`ler", "Dj kaydý yok !", "Kapat", "");
	return 1;
}

CMD:rcmds(playerid, params[])
{
    if(oyuncuData[playerid][pRehber] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için rehber ve admin olmalýsýn.");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Rehber Komutlarý", "/Sarki\n/mDurdur\n/Cc\n/R\n", "Kapat", "");
	return 1;
}

CMD:dcmds(playerid, params[])
{
    if(oyuncuData[playerid][pDj] < 1 && oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için rehber ve admin olmalýsýn.");
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Dj Komutlarý", "/Sarki\n/mDurdur\n/Cc\n/D\n", "Kapat", "");
	return 1;
}

CMD:adcmds(playerid, params[])
{
    if(oyuncuData[playerid][pAdmin] < 1) return hataMesaji(playerid, "Bu komutu kullanmak için 1 level admin ve üstü bir levele sahip olmalýsýn.");
    switch(oyuncuData[playerid][pAdmin])
    {
        case 1:
		{
		    format(ProStr1, sizeof(ProStr1), "");
		    for(new i = 0; i < 100; i++)
		    {
                if(YetkiList[i][YID] == 1)
                {
		    		format(ProStr1, sizeof(ProStr1), "%s%s\n", ProStr1, YetkiList[i][YCMDLan]);
				}
			}
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Admin Komutlarý", ProStr1, "Kapat", "");
		}
        case 2:
		{
		    format(ProStr2, sizeof(ProStr2), "");
		    for(new i = 0; i < 100; i++)
		    {
                if(YetkiList[i][YID] <= 2)
                {
		    		format(ProStr2, sizeof(ProStr2), "%s%s\n", ProStr2, YetkiList[i][YCMDLan]);
				}
			}
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Admin Komutlarý", ProStr2, "Kapat", "");
		}
        case 3:
		{
		    format(ProStr3, sizeof(ProStr3), "");
		    for(new i = 0; i < 100; i++)
		    {
                if(YetkiList[i][YID] <= 3)
                {
		    		format(ProStr3, sizeof(ProStr3), "%s%s\n", ProStr3, YetkiList[i][YCMDLan]);
				}
			}
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Admin Komutlarý", ProStr3, "Kapat", "");
		}
        case 4:
		{
		    format(ProStr4, sizeof(ProStr4), "");
		    for(new i = 0; i < 100; i++)
		    {
                if(YetkiList[i][YID] <= 4)
                {
		    		format(ProStr4, sizeof(ProStr4), "%s%s\n", ProStr4, YetkiList[i][YCMDLan]);
				}
			}
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Admin Komutlarý", ProStr4, "Kapat", "");
		}
        case 5:
		{
		    format(ProStr5, sizeof(ProStr5), "");
		    for(new i = 0; i < 100; i++)
		    {
                if(YetkiList[i][YID] <= 5)
                {
		    		format(ProStr5, sizeof(ProStr5), "%s%s\n", ProStr5, YetkiList[i][YCMDLan]);
				}
			}
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Admin Komutlarý", ProStr5, "Kapat", "");
		}
        case 6, 7:
		{
		    format(ProStr6, sizeof(ProStr6), "");
		    for(new i = 0; i < 100; i++)
		    {
                if(YetkiList[i][YID] <= 6)
                {
		    		format(ProStr6, sizeof(ProStr6), "%s%s\n", ProStr6, YetkiList[i][YCMDLan]);
				}
			}
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Admin Komutlarý", ProStr6, "Kapat", "");
		}
    }
	return 1;
}

stock AkaCek(playerid, temp_ip[])
{
	new query[55 + 24], Cache:VeriCek;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `IpKayit` = '%s'", temp_ip);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
		new list[1024], IsimCek[24];
		for(new i = 0; i < rows; ++i)
		{
			cache_get_value_name(i, "isim", IsimCek);
			format(list,sizeof(list),"%s{2ecc71}%s\n", list, IsimCek);
		}
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_LIST, "{FFFFFF}Aka", list, "Kapat", "");
	}
	cache_delete(VeriCek);
	return 1;
}

function OylamaSonucla()
{
	new xs[80 + 6];
    VoteIslem[voteAktiflik] = false;
	format(xs, sizeof(xs), "{BDC3C7}» Oylama Sonuçlarý: {FFFFFF}Evet: {3498db}%d {FFFFFF}- Hayýr: {3498db}%d", VoteIslem[oyArti], VoteIslem[oyEksi]);
	SendClientMessageToAll(-1, xs);
	return 1;
}

function DuyuruMesaj()
{
	KillTimer(duyuruTimer);
	KillTimer(duyuruTimer2);
	TextDrawColor(Duyuru, 0xFFFFFFFF);
    TextDrawHideForAll(Duyuru);
    _duyuruDurum = 0;
	return 1;
}

function RenkVer()
{
	new sx[12], hex;
	format(sx, sizeof(sx), "0x%sFF", Renkler[RainbowError][rgbColored]);
    sscanf(sx, "x", hex);
   	TextDrawHideForAll(Duyuru);
	TextDrawColor(Duyuru, hex);
	TextDrawShowForAll(Duyuru);
	return 1;
}

stock Canver(playerid, Float: candeger)
{
    SetPlayerHealth(playerid, candeger);
	return 1;
}

stock Zirhver(playerid, Float: zirhdeger)
{
    SetPlayerArmour(playerid, zirhdeger);
	return 1;
}

stock aBilgi(playerid, b_msj[])
{
	new str[200];
	format(str, sizeof(str), "{FFFC36}» Bilgi: {FFFFFF}%s", b_msj);
	return SendClientMessage(playerid, -1, str);
}

stock yHata(playerid, hid)
{
    new str[86];
	switch(hid)
	{
	    case 0: format(str, sizeof(str), "{FF312E}» Hata: {FFFFFF}Bu komutu sadece sunucu sahipleri kullanabilir.");
	    case 1: format(str, sizeof(str), "{FF312E}» Hata: {FFFFFF}Kendinden yüksek level adminlere bu komutu uygulayamazsýn.");
	    case 2: format(str, sizeof(str), "{FF312E}» Hata: {FFFFFF}Bu komutu kendi üzerinde uygulayamazsýn !");
	}
	return SendClientMessage(playerid, -1, str);
}

stock hataMesaji(playerid, hmsjj[])
{
    new str[135];
	format(str, sizeof(str), "{FF312E}» Hata: {FFFFFF}%s", hmsjj);
	return SendClientMessage(playerid, -1, str);
}

stock Silahver(playerid, silah, mermi)
{
	new slot = GetWeaponSlot(silah);
	Weapons[playerid][slot] = silah;
	GivePlayerWeapon(playerid, silah, mermi);
}

stock GetWeaponSlot(weaponid)
{
	new slot;
	switch(weaponid)
	{
		case 0, 1: slot = 0;
		case 2..9: slot = 1;
		case 10..15: slot = 10;
		case 16..18, 39: slot = 8;
		case 22..24: slot = 2;
		case 25..27: slot = 3;
		case 28, 29, 32: slot = 4;
		case 30, 31: slot = 5;
		case 33, 34: slot = 6;
		case 35..38: slot = 7;
		case 40: slot = 12;
		case 41..43: slot = 9;
		case 44..46: slot = 11;
	}
	return slot;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if(BotCheck[playerid] == 1)
    {
		new ba[150];
		format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bot Yazýlýmý kullandýðý için sunucudan kalýcý yasaklandý.", getName(playerid), playerid);
		SendClientMessageToAll(0xE74C3CFF, ba);
		format(ba, sizeof(ba), "%s - Bot Hack", getName(playerid));
		oBanEx(playerid, ba);
        return 1;
    }
	new
		bool: ddd = false
	;
    switch(weaponid)
    {
        case 0..46: ddd = true;
        case 47, 49, 50, 51, 53, 54, 200, 201, 255: ddd = true;
        default: ddd = false;
    }
	if(!ddd)
	{
		HileKick(playerid, 21);
	}

	/*
	new id = GetPVarInt(playerid, "_SavasID");
	if(id != -1){
	if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
	if(GetPlayerWeapon(playerid) == 18 || GetPlayerWeapon(playerid) == 26 || GetPlayerWeapon(playerid) == 16 || GetPlayerWeapon(playerid) == 24){
	ClearAnimations(playerid);
	hataMesaji(playerid, "Çete savaþlarýnda bu silahlarý kullanamazsýn !");
	return 0;}}}*/

    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        HileKick(playerid, 10);
        return 0;
    }

	if(hittype == BULLET_HIT_TYPE_VEHICLE)
    {
        new target = INVALID_PLAYER_ID, tmp_carID = INVALID_VEHICLE_ID, bool: varx_yok = false;
        foreach(new i : Player)
        {
            if(i != playerid && GetPlayerVehicleID(i) == hitid && GetPlayerVehicleSeat(i) == 0)
        	{
        	    tmp_carID = hitid;
                target = i;
                break;
            }
        }
        foreach(new i: Player)
        {
            if(i != playerid && GetPlayerVehicleID(i) == tmp_carID)
            {
                if(aranmaSeviyesii[i] >= 3)
                {
                	varx_yok = true;
				}
            }
        }
        if(target != INVALID_PLAYER_ID && gTeam[playerid] >= 9 && gTeam[playerid] <= 16 && gTeam[target] >= 9 && gTeam[target] <= 16)
        {
            if(aranmaSeviyesii[target] <= 3)
            {
                if(!varx_yok)
                {
            		GameTextForPlayer(playerid, "~r~~h~~h~Sivil oyuncularin~n~~w~~h~aracina zarar veremezsin !", 4000, 4);
            		return 0;
				}
			}
        }
        
		if(target != INVALID_PLAYER_ID && gTeam[playerid] >= 2 && gTeam[playerid] <= 8 && gTeam[target] >= 9 && gTeam[target] <= 16)
        {
            if(aranmaSeviyesii[target] <= 3)
            {
                if(!varx_yok)
                {
            		GameTextForPlayer(playerid, "~r~~h~~h~Sivil oyuncularin~n~~w~~h~aracina zarar veremezsin !", 4000, 4);
            		return 0;
				}
			}
        }
        
        if(target != INVALID_PLAYER_ID && gTeam[playerid] >= 2 && gTeam[playerid] <= 8 && gTeam[target] >= 2 && gTeam[target] <= 8)
        {
            GameTextForPlayer(playerid, "~r~~h~~h~meslek arkadasinin~n~~w~~h~aracina zarar veremezsin !", 4000, 4);
            return 0;
        }
    }

    if( hittype != BULLET_HIT_TYPE_NONE)
	{
        if(!( -1000.0 <= fX <= 1000.0 ) || !( -1000.0 <= fY <= 1000.0 ) || !( -1000.0 <= fZ <= 1000.0 ) )
		{
            BanEx(playerid, "Bullet Crash");
			return 0;
		}
	}

    if(gTeam[playerid] >= 9 && gTeam[playerid] <= 15)
    {
		if(aranmaSeviyesii[playerid] < 4 && !kumarda[playerid])
	    {
	        aranmaLeveli(playerid, 4);
	    }
    }

	if(!NonDriver(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		SetPlayerArmedWeapon(playerid, 0);
		SendClientMessage(playerid, 0x52CEF7FF,"[BILGI] {FFFFFF}gBug özelliði sunucumuzda devre dýþýdýr.");
	}

 	if(IsWeaponWithAmmo(weaponid) && weaponid != 38)
	{
		new count = 0;
		if(weaponid != CurrentWeapon[playerid]) CurrentWeapon[playerid] = weaponid, CurrentAmmo[playerid] = GetPlayerWeaponAmmo(playerid,weaponid), count++;
		if(GetPlayerWeaponAmmo(playerid,weaponid) > CurrentAmmo[playerid] || GetPlayerWeaponAmmo(playerid,weaponid) < CurrentAmmo[playerid])
		{

			CurrentAmmo[playerid] = GetPlayerWeaponAmmo(playerid,weaponid);
			NoReloading[playerid] = 0;
			count++;
		}
		if(GetPlayerWeaponAmmo(playerid,weaponid) != 0 && GetPlayerWeaponAmmo(playerid,weaponid) == CurrentAmmo[playerid] && count == 0)
		{
			NoReloading[playerid]++;
			if(NoReloading[playerid] >= 5)
			{
				NoReloading[playerid] = 0;
				CurrentWeapon[playerid] = 0;
				CurrentAmmo[playerid] = 0;
				if(AntiHackFlood[playerid] == 0)
				{
				    AntiHackFlood[playerid] = 1;
					HileKick(playerid, 3);
				}
				return 0;
			}
  		}
	}
    return 1;
}

stock NonDriver(vehicleid)
{
	new temp = 0;
	foreach(new i : Player)
	{
		if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			temp++;
		}
	}
	if(temp > 0)
	{
		return 1;
	}
	else return 0;
}

forward Float:GetDistanceBetweenPlayers23(p1,p2);
public Float:GetDistanceBetweenPlayers23(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}


public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart)
{
	// playerid = karþýdaki oyuncu
	//new godmode = GetPVarInt(playerid, "GodMode2");
	//if(godmode == 1) return SendClientMessage(issuerid, -1, "Bu oyuncu god modda"), 0;
	if(issuerid != INVALID_PLAYER_ID)
	{
	    if(BotCheck[issuerid] == 1)
	    {
			new ba[150];
			format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bot Yazýlýmý kullandýðý için sunucudan kalýcý yasaklandý.", getName(playerid), playerid);
			SendClientMessageToAll(0xE74C3CFF, ba);
			format(ba, sizeof(ba), "%s - Bot Hack", getName(playerid));
			oBanEx(playerid, ba);
	        return 1;
	    }
				    
		new afkCek = AFkMi[playerid];
	    if(afkCek == 1) return 0;
	    
	    if(kumarda[playerid]) return 0;

	    if(etkYaptim[playerid] == 1) return 0;
        if(Etkde[playerid] == true && etkHasar == 1)
        {
            if(IsPlayerInAnyVehicle(issuerid))
            {
                new araci = GetPlayerVehicleID(issuerid);
            	if(GetVehicleModel(araci) == 444 || GetVehicleModel(araci) == 556 || GetVehicleModel(araci) == 557)
            	{
				}
				else
				{
				    return 0;
				}
			}
			else
			{
			    return 0;
			}
        }

	    if(oyuncuData[playerid][hapisSure] >= 1) return 0;
	    if(oyuncuData[issuerid][hapisSure] >= 1) return 0;
	    
	    if(GetPVarInt(playerid, "soklandi") == 1) return 0;
	    
	    if(IsPlayerInAnyVehicle(issuerid))
	    {
	        if(GetPlayerVehicleSeat(issuerid) != 0)
	        {
				if(aranmaSeviyesii[playerid] <= 3 && gTeam[playerid] >= 9 && gTeam[playerid] <= 14)
	            {
	                if(Etkde[playerid] == false)
					{
						GameTextForPlayer(issuerid, "~g~~h~~h~Sivil oyunculara zarar verme", 2500, 4);
                    	return 0;
					}
	            }
	        }
	    }

		new godmode = GetPVarInt(playerid, "GodMode");
	    if(godmode == 1)
	    {
	        GameTextForPlayer(issuerid, "~g~~h~~h~Admin Modunda", 2500, 4);
	        return 0;
	    }

		new sKoruma = GetPVarInt(playerid, "SpawnSureC");
	    if(sKoruma == 1)
	    {
	        if(Etkde[playerid] == false){
			GameTextForPlayer(issuerid, "~g~~h~~h~~h~Spawn Koruma", 2500, 4);
	        return 0;
	        }
	    }

	    if(GetPVarInt(playerid, "DuelloYasak") == 0)
	    {
			new c = PlayerCete[playerid];
			if(c != -1)
			{
		    	if(PlayerCete[issuerid] == c)
		    	{
    				if(Etkde[playerid] == false && CeteIslem[c][ceteGod] == 0) return GameTextForPlayer(issuerid, "~r~~h~~h~Ayni Cetedesiniz", 2500, 4), 0;
				}
			}
			new u = PlayerCete[issuerid];
			new y = PlayerCete[playerid];
			if(Etkde[playerid] == false && c != -1 && PlayerCete[issuerid] != -1 && CeteIslem[u][dostGode] == 0 && CeteIslem[y][dostGode] == 0)
			{
			    new t = PlayerCete[issuerid];
			    Iterator_For(DostCete[t], i)
			    {
			        new idlan = Iterator_Getir(DostCete[t], i);
			        if(idlan == c) return GameTextForPlayer(issuerid, "~g~~h~~h~Dost Cetesiniz", 2500, 4), 0;
			    }
			}
		}

	 	if(!Duelloda[playerid] && aranmaSeviyesii[playerid] <= 3 &&
		   gTeam[playerid] != POLIS && gTeam[playerid] != CEVIK_KUVVET && gTeam[playerid] != OZEL_HAREKAT_TIMI &&
		   gTeam[playerid] != SIVIL_POLIS && gTeam[playerid] != OZEL_KUVVET_B && gTeam[playerid] != TURK_H_KUVVETLERI)
		{
		    if(Etkde[playerid] == false)
		    {
		 		GameTextForPlayer(issuerid, "~w~~h~Sivil Oyunculari~n~~r~~h~~h~Olduremezsin !", 2500, 4);
		 		return 0;
			}
		}

		if(Etkde[playerid] == false && Etkde[issuerid] == false){
		TickSure[playerid] = GetTickCount() + 5000;
		TickSure[issuerid] = GetTickCount() + 5000;
		}

    	if(gTeam[issuerid] == POLIS || gTeam[issuerid] == CEVIK_KUVVET || gTeam[issuerid] == OZEL_HAREKAT_TIMI ||
		gTeam[issuerid] == SIVIL_POLIS || gTeam[issuerid] == OZEL_KUVVET_B ||
		gTeam[issuerid] == TURK_H_KUVVETLERI)
		{
      	    if(gTeam[playerid] == POLIS || gTeam[playerid] == CEVIK_KUVVET || gTeam[playerid] == OZEL_HAREKAT_TIMI ||
			gTeam[playerid] == SIVIL_POLIS || gTeam[playerid] == OZEL_KUVVET_B ||
			gTeam[playerid] == TURK_H_KUVVETLERI)
			{
			    if(Etkde[playerid] == false){
				return 0;
				}
			}
		}

	    if(gTeam[issuerid] == POLIS || gTeam[issuerid] == CEVIK_KUVVET || gTeam[issuerid] == OZEL_HAREKAT_TIMI ||
		gTeam[issuerid] == SIVIL_POLIS || gTeam[issuerid] == OZEL_KUVVET_B ||
		gTeam[issuerid] == TURK_H_KUVVETLERI)
		{
		    if(GetPlayerWeapon(issuerid) == 23 && GetPVarInt(issuerid, "soktabancasi") == 1 && GetPVarInt(playerid, "soklandi") == 0)
		    {
		        if(GetDistanceBetweenPlayers23(issuerid, playerid) < 30.0)
		        {
		            if(aranmaSeviyesii[playerid] <= 3)
		            {
		                if(Etkde[playerid] == false){
						GameTextForPlayer(issuerid, "~g~~h~~h~Sivil oyunculara zarar verme", 2500, 4);
                        return 0;
						}
		            }
					new id = GetPVarInt(playerid, "_SavasID");
					if(id != -1){
					if(CeteSavasMekan[id][eleGecirenCete] != -1 && SavasIslem[playerid][CeteSavasBolgedemi] == 1){
					GameTextForPlayer(issuerid, "~g~~h~~h~Cete Savas Bolgelerinde Tazer Islemez !", 2500, 4);
					return 0;}}
		            if(aranmaSeviyesii[playerid] >= 4)
		            {
		                if(Etkde[playerid] == false){
		            	if(IsPlayerInAnyVehicle(playerid)) return 0;
					    if(IsPlayerInAnyVehicle(issuerid)) return 0;
					    if(gTeam[playerid] == POLIS || gTeam[playerid] == CEVIK_KUVVET || gTeam[playerid] == OZEL_HAREKAT_TIMI ||
						gTeam[playerid] == SIVIL_POLIS || gTeam[playerid] == OZEL_KUVVET_B ||
						gTeam[playerid] == TURK_H_KUVVETLERI) return 0;
						tazerTimer[playerid] = SetTimerEx("NormalYap", 3550, 0, "i", playerid);
						SetPVarInt(playerid, "soklandi", 1);
						TogglePlayerControllable(playerid, 0);
						ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, false, false, false, true, 0, false);
						new zz[75 + 1];
						format(zz, sizeof(zz), "[TAZER TABANCASI] Devlet memuru %s(%d), tarafýndan 3.5 saniye tazerlendiniz.", getName(issuerid), issuerid);
						SendClientMessage(playerid, 0x6DD0F7FF, zz);
						}
		            }
		        }
		    }
		}
		if(GetPlayerWeapon(issuerid) != 23)
		{
			if(gTeam[issuerid] == POLIS || gTeam[issuerid] == CEVIK_KUVVET || gTeam[issuerid] == OZEL_HAREKAT_TIMI ||
			gTeam[issuerid] == SIVIL_POLIS || gTeam[issuerid] == OZEL_KUVVET_B ||
			gTeam[issuerid] == TURK_H_KUVVETLERI)
			{
	      		if(aranmaSeviyesii[playerid] <= 3)
	            {
	                if(Etkde[playerid] == false){
					GameTextForPlayer(issuerid, "~g~~h~~h~Sivil oyunculara zarar verme", 2500, 4);
					return 0;
					}
				}
			}
		}
		if(gTeam[issuerid] == SIVIL || gTeam[issuerid] == TECAVUZCU || gTeam[issuerid] == GASPCI
		|| gTeam[issuerid] == SUIKASTCI || gTeam[issuerid] == TAMIRCI || gTeam[issuerid] == BOMBACI
		|| gTeam[issuerid] == ARAC_HIRSIZI)
		{
		    if(aranmaSeviyesii[issuerid] >= 4)
			{
			}
			else
			{
				if(aranmaSeviyesii[playerid] >= 0 && aranmaSeviyesii[playerid] <= 999 && Etkde[playerid] == false)
				{
				    if(!Duelloda[playerid])
					{
				    	if(!Etkde[issuerid])
						{
							aranmaLeveli(issuerid, 4);
						}
					}
				}
			}
		}
	}
	return 1;
}

forward MyHttpResponse(playerid, response_code, data[]);
public MyHttpResponse(playerid, response_code, data[])
{
	if(response_code == 200)
	{
		if(data[0] == 'Y')
		{
			new dia1[55 + 130];
			format(dia1, sizeof(dia1), "{FF2937}Ip deðiþtirme programý tespit edildi;\n\n");
			format(dia1, sizeof(dia1), "%s{42D6FF}Hile önlemlerine karþý bu sistemi kullanýyoruz, lütfen Ip deðiþtirme programýný kapatýp giriþ yapýn.\n", dia1);
			ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Giriþ Engellendi !", dia1, "Kapat", "");
			TogglePlayerSpectating(playerid, 1);
			SetTimerEx("GuleGule", 1100, false, "d", playerid);
		}
		if(data[0] == 'N')
		{
		    //printf("Gerçek ip.");
		}
		if(data[0] == 'X')
		{
			//printf("Hatalý Ip Formatý");
		}
	}
	else
	{
		printf("Hata: IP Kontrolü yapýlamadý: %d", response_code);
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(TextModu[playerid] == 1)
    {
    	if(playertextid == PlayerText:INVALID_TEXT_DRAW)
		{
			SelectTextDraw(playerid, 0x8E44ADFF);
			return 1;
		}
	}
	if(playertextid == PolisLoadSelect[playerid][0])
    {
        if(GetPVarInt(playerid, "Secim_") == 1)
        {
            TextModu[playerid] = 0;
			new sayfa = GetPVarInt(playerid, "PolisSecim");
			SetPlayerSkin(playerid, PolisKarakterleri[sayfa]);
			SetPVarInt(playerid, "PolisKarakterrrr", PolisKarakterleri[sayfa]);
			TextDrawHideForPlayer(playerid, PolisLoad[0]);
			TextDrawHideForPlayer(playerid, PolisLoad[1]);
			PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][0]);
			PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][1]);
			PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][2]);
			CancelSelectTextDraw(playerid);
		}
		if(GetPVarInt(playerid, "Secim_") == 2)
        {
            TextModu[playerid] = 0;
			new sayfa = GetPVarInt(playerid, "PolisSecim");
			SetPlayerSkin(playerid, SivilPolisKarakterleri[sayfa]);
			SetPVarInt(playerid, "SPolisKarakterrrr", SivilPolisKarakterleri[sayfa]);
			TextDrawHideForPlayer(playerid, PolisLoad[0]);
			TextDrawHideForPlayer(playerid, PolisLoad[1]);
			PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][0]);
			PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][1]);
			PlayerTextDrawHide(playerid, PolisLoadSelect[playerid][2]);
			CancelSelectTextDraw(playerid);
		}
    }

    if(playertextid == PolisLoadSelect[playerid][1])
    {
        TextModu[playerid] = 0;
        if(GetPVarInt(playerid, "Secim_") == 1)
        {
			if(GetPVarInt(playerid, "PolisSecim") <= 0) return SetPVarInt(playerid, "PolisSecim", 0), 0;
			SetPVarInt(playerid, "PolisSecim", GetPVarInt(playerid, "PolisSecim")-1);
        	PolisKarakterUp(playerid, PolisKarakterleri[GetPVarInt(playerid, "PolisSecim")]);
		}
  		if(GetPVarInt(playerid, "Secim_") == 2)
        {
            TextModu[playerid] = 0;
			if(GetPVarInt(playerid, "PolisSecim") <= 0) return SetPVarInt(playerid, "PolisSecim", 0), 0;
			SetPVarInt(playerid, "PolisSecim", GetPVarInt(playerid, "PolisSecim")-1);
        	PolisKarakterUp(playerid, SivilPolisKarakterleri[GetPVarInt(playerid, "PolisSecim")]);
		}
    }

   	if(playertextid == PolisLoadSelect[playerid][2])
    {
        if(GetPVarInt(playerid, "Secim_") == 1)
        {
	        if(GetPVarInt(playerid, "PolisSecim") == sizeof(PolisKarakterleri)) return 0;
			if(GetPVarInt(playerid, "PolisSecim") >= sizeof(PolisKarakterleri) - 1) return SetPVarInt(playerid, "PolisSecim", sizeof(PolisKarakterleri) - 1), 0;
			SetPVarInt(playerid, "PolisSecim", GetPVarInt(playerid, "PolisSecim") + 1);
	        PolisKarakterUp(playerid, PolisKarakterleri[GetPVarInt(playerid, "PolisSecim")]);
		}
		if(GetPVarInt(playerid, "Secim_") == 2)
        {
	        if(GetPVarInt(playerid, "PolisSecim") == sizeof(SivilPolisKarakterleri)) return 0;
			if(GetPVarInt(playerid, "PolisSecim") >= sizeof(SivilPolisKarakterleri) - 1) return SetPVarInt(playerid, "PolisSecim", sizeof(SivilPolisKarakterleri) - 1), 0;
			SetPVarInt(playerid, "PolisSecim", GetPVarInt(playerid, "PolisSecim") + 1);
	        PolisKarakterUp(playerid, SivilPolisKarakterleri[GetPVarInt(playerid, "PolisSecim")]);
		}
    }
    return 0;
}

stock duelloMeslek(playerid)
{
	TextDrawHideForPlayer(playerid, MeslekBar[0]);
	TextDrawHideForPlayer(playerid, MeslekBar[1]);
	TextDrawHideForPlayer(playerid, MeslekBar[2]);
	TextDrawHideForPlayer(playerid, MeslekBar[3]);
	TextDrawHideForPlayer(playerid, MeslekBar[4]);
	TextDrawHideForPlayer(playerid, MeslekBar[5]);
	TextDrawHideForPlayer(playerid, MeslekBar[6]);
	TextDrawHideForPlayer(playerid, MeslekBar[7]);
	TextDrawHideForPlayer(playerid, MeslekBar[8]);
	TextDrawHideForPlayer(playerid, MeslekBar[9]);
	TextDrawHideForPlayer(playerid, MeslekBar[10]);
	TextDrawHideForPlayer(playerid, MeslekBar[11]);
	TextDrawHideForPlayer(playerid, MeslekBar[12]);
	TextDrawHideForPlayer(playerid, MeslekBar[13]);
	TextDrawHideForPlayer(playerid, MeslekBar[14]);
	SendClientMessage(playerid, -1, "{00FF00}Meslek Seçimi: {FFFFFF}Düello yaparkan meslek seçimi yapamazsýn !");
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(TextModu[playerid] == 1)
    {
    	if(clickedid == Text:INVALID_TEXT_DRAW)
		{
			SelectTextDraw(playerid, 0x8E44ADFF);
			return 1;
		}
	}

	if(clickedid == MeslekBar[3]) { cmd_yardim(playerid, ""); }
	if(clickedid == MeslekBar[4]) { cmd_kurallar(playerid, ""); }
	if(clickedid == MeslekBar[5]) { bilgileerrim(playerid, playerid); }

	if(clickedid == MeslekBar[7])
    {
        if(Duelloda[playerid] == true)
		{
		    TextModu[playerid] = 0;
			CancelSelectTextDraw(playerid);
			duelloMeslek(playerid);
			return 1;
		}
        TextModu[playerid] = 0;
        CancelSelectTextDraw(playerid);
        gTeam[playerid] = TECAVUZCU;
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Tecavüzcü Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Oyunculara {3498DB}/tecavuz {FFFFFF}komutuyla virüs bulaþtýrmak.\n", "Kapat", "");
	    TextDrawHideForPlayer(playerid, MeslekBar[0]);
	    TextDrawHideForPlayer(playerid, MeslekBar[1]);
	    TextDrawHideForPlayer(playerid, MeslekBar[2]);
	    TextDrawHideForPlayer(playerid, MeslekBar[3]);
	    TextDrawHideForPlayer(playerid, MeslekBar[4]);
	    TextDrawHideForPlayer(playerid, MeslekBar[5]);
	    TextDrawHideForPlayer(playerid, MeslekBar[6]);
	    TextDrawHideForPlayer(playerid, MeslekBar[7]);
	    TextDrawHideForPlayer(playerid, MeslekBar[8]);
	    TextDrawHideForPlayer(playerid, MeslekBar[9]);
	    TextDrawHideForPlayer(playerid, MeslekBar[10]);
	    TextDrawHideForPlayer(playerid, MeslekBar[11]);
	    TextDrawHideForPlayer(playerid, MeslekBar[12]);
	    TextDrawHideForPlayer(playerid, MeslekBar[13]);
	    TextDrawHideForPlayer(playerid, MeslekBar[14]);
		if(BasariIslem[playerid][ilkGiris] == 0){
		BasariIslem[playerid][ilkGiris] = 1;
		basariKilidi(playerid, "ilkGiris", "Ýlk Giriþ", 5000, 100, 1);
		}
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 4, 100);
		Silahver(playerid, 22, 100);
		Silahver(playerid, 28, 100);
		Silahver(playerid, 27, 100);
    }
    if(clickedid == MeslekBar[8])
    {
		if(Duelloda[playerid] == true)
		{
		    TextModu[playerid] = 0;
			CancelSelectTextDraw(playerid);
			duelloMeslek(playerid);
			return 1;
		}
        TextModu[playerid] = 0;
        CancelSelectTextDraw(playerid);
        gTeam[playerid] = GASPCI;
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Gaspçý Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Oyuncularýn yanýna gidip {3498DB}/aSoy {FFFFFF}yazýp para çalmak.\n", "Kapat", "");
	    TextDrawHideForPlayer(playerid, MeslekBar[0]);
	    TextDrawHideForPlayer(playerid, MeslekBar[1]);
	    TextDrawHideForPlayer(playerid, MeslekBar[2]);
	    TextDrawHideForPlayer(playerid, MeslekBar[3]);
	    TextDrawHideForPlayer(playerid, MeslekBar[4]);
	    TextDrawHideForPlayer(playerid, MeslekBar[5]);
	    TextDrawHideForPlayer(playerid, MeslekBar[6]);
	    TextDrawHideForPlayer(playerid, MeslekBar[7]);
	    TextDrawHideForPlayer(playerid, MeslekBar[8]);
	    TextDrawHideForPlayer(playerid, MeslekBar[9]);
	    TextDrawHideForPlayer(playerid, MeslekBar[10]);
	    TextDrawHideForPlayer(playerid, MeslekBar[11]);
	    TextDrawHideForPlayer(playerid, MeslekBar[12]);
	    TextDrawHideForPlayer(playerid, MeslekBar[13]);
	    TextDrawHideForPlayer(playerid, MeslekBar[14]);
		if(BasariIslem[playerid][ilkGiris] == 0){
		BasariIslem[playerid][ilkGiris] = 1;
		basariKilidi(playerid, "ilkGiris", "Ýlk Giriþ", 5000, 100, 1);
		}
  		ResetPlayerWeapons(playerid);
		Silahver(playerid, 2, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 27, 100);
		Silahver(playerid, 30, 100);
    }
    if(clickedid == MeslekBar[9])
    {
		if(Duelloda[playerid] == true)
		{
		    TextModu[playerid] = 0;
			CancelSelectTextDraw(playerid);
			duelloMeslek(playerid);
			return 1;
		}
        TextModu[playerid] = 0;
        CancelSelectTextDraw(playerid);
		gTeam[playerid] = SUIKASTCI;
		sMaruzOyuncu[playerid] = 0;
    	sOdulOyuncu[playerid] = 0;
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Suikastcý Görevi", "{9B59B6}Görevin:\n\t{FFFFFF}Sistem tarafýndan rastgele verilen {3498DB}oyuncularý {FFFFFF}öldürüp para ve skor kasmak.\n\t{FFFFFF}Verilen oyuncularý görmek için {3498DB}/hListesi {FFFFFF}(hedef listesi) komutunu kullanýn.", "Kapat", "");
	    TextDrawHideForPlayer(playerid, MeslekBar[0]);
	    TextDrawHideForPlayer(playerid, MeslekBar[1]);
	    TextDrawHideForPlayer(playerid, MeslekBar[2]);
	    TextDrawHideForPlayer(playerid, MeslekBar[3]);
	    TextDrawHideForPlayer(playerid, MeslekBar[4]);
	    TextDrawHideForPlayer(playerid, MeslekBar[5]);
	    TextDrawHideForPlayer(playerid, MeslekBar[6]);
	    TextDrawHideForPlayer(playerid, MeslekBar[7]);
	    TextDrawHideForPlayer(playerid, MeslekBar[8]);
	    TextDrawHideForPlayer(playerid, MeslekBar[9]);
	    TextDrawHideForPlayer(playerid, MeslekBar[10]);
	    TextDrawHideForPlayer(playerid, MeslekBar[11]);
	    TextDrawHideForPlayer(playerid, MeslekBar[12]);
	    TextDrawHideForPlayer(playerid, MeslekBar[13]);
	    TextDrawHideForPlayer(playerid, MeslekBar[14]);
		if(BasariIslem[playerid][ilkGiris] == 0){
		BasariIslem[playerid][ilkGiris] = 1;
		basariKilidi(playerid, "ilkGiris", "Ýlk Giriþ", 5000, 100, 1);
		}
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 8, 100);
		Silahver(playerid, 17, 100);
		Silahver(playerid, 23, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 29, 100);
		Silahver(playerid, 43, 100);
		Silahver(playerid, 34, 100);
		Silahver(playerid, 31, 100);
    }
    if(clickedid == MeslekBar[10])
    {
		if(Duelloda[playerid] == true)
		{
		    TextModu[playerid] = 0;
			CancelSelectTextDraw(playerid);
			duelloMeslek(playerid);
			return 1;
		}
        TextModu[playerid] = 0;
    	CancelSelectTextDraw(playerid);
        gTeam[playerid] = TAMIRCI;
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Tamirci Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Kendi aracýný {3498DB}/aTamir {FFFFFF}komutuyla tamir etmek.\n", "Kapat", "");
	    TextDrawHideForPlayer(playerid, MeslekBar[0]);
	    TextDrawHideForPlayer(playerid, MeslekBar[1]);
	    TextDrawHideForPlayer(playerid, MeslekBar[2]);
	    TextDrawHideForPlayer(playerid, MeslekBar[3]);
	    TextDrawHideForPlayer(playerid, MeslekBar[4]);
	    TextDrawHideForPlayer(playerid, MeslekBar[5]);
	    TextDrawHideForPlayer(playerid, MeslekBar[6]);
	    TextDrawHideForPlayer(playerid, MeslekBar[7]);
	    TextDrawHideForPlayer(playerid, MeslekBar[8]);
	    TextDrawHideForPlayer(playerid, MeslekBar[9]);
	    TextDrawHideForPlayer(playerid, MeslekBar[10]);
	    TextDrawHideForPlayer(playerid, MeslekBar[11]);
	    TextDrawHideForPlayer(playerid, MeslekBar[12]);
	    TextDrawHideForPlayer(playerid, MeslekBar[13]);
	    TextDrawHideForPlayer(playerid, MeslekBar[14]);
		if(BasariIslem[playerid][ilkGiris] == 0){
		BasariIslem[playerid][ilkGiris] = 1;
		basariKilidi(playerid, "ilkGiris", "Ýlk Giriþ", 5000, 100, 1);
		}
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 5, 100);
		Silahver(playerid, 22, 100);
		Silahver(playerid, 25, 100);
		Silahver(playerid, 32, 100);
    }
    if(clickedid == MeslekBar[11])
    {
		if(Duelloda[playerid] == true)
		{
		    TextModu[playerid] = 0;
			CancelSelectTextDraw(playerid);
			duelloMeslek(playerid);
			return 1;
		}
        TextModu[playerid] = 0;
        CancelSelectTextDraw(playerid);
		gTeam[playerid] = BOMBACI;
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Bombacý Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehrin ortasýna veya araçlara {3498DB}/bombaKur {FFFFFF}komutuyla bomba kurmak.\n", "Kapat", "");
	    TextDrawHideForPlayer(playerid, MeslekBar[0]);
	    TextDrawHideForPlayer(playerid, MeslekBar[1]);
	    TextDrawHideForPlayer(playerid, MeslekBar[2]);
	    TextDrawHideForPlayer(playerid, MeslekBar[3]);
	    TextDrawHideForPlayer(playerid, MeslekBar[4]);
	    TextDrawHideForPlayer(playerid, MeslekBar[5]);
	    TextDrawHideForPlayer(playerid, MeslekBar[6]);
	    TextDrawHideForPlayer(playerid, MeslekBar[7]);
	    TextDrawHideForPlayer(playerid, MeslekBar[8]);
	    TextDrawHideForPlayer(playerid, MeslekBar[9]);
	    TextDrawHideForPlayer(playerid, MeslekBar[10]);
	    TextDrawHideForPlayer(playerid, MeslekBar[11]);
	    TextDrawHideForPlayer(playerid, MeslekBar[12]);
	    TextDrawHideForPlayer(playerid, MeslekBar[13]);
	    TextDrawHideForPlayer(playerid, MeslekBar[14]);
		if(BasariIslem[playerid][ilkGiris] == 0){
		BasariIslem[playerid][ilkGiris] = 1;
		basariKilidi(playerid, "ilkGiris", "Ýlk Giriþ", 5000, 100, 1);
		}
		ResetPlayerWeapons(playerid);
		Silahver(playerid, 1, 100);
		Silahver(playerid, 23, 100);
		Silahver(playerid, 27, 100);
		Silahver(playerid, 31, 100);
		Silahver(playerid, 33, 100);
    }
    if(clickedid == MeslekBar[12])
    {
		if(Duelloda[playerid] == true)
		{
		    TextModu[playerid] = 0;
			CancelSelectTextDraw(playerid);
			duelloMeslek(playerid);
			return 1;
		}
        TextModu[playerid] = 0;
        CancelSelectTextDraw(playerid);
		gTeam[playerid] = ARAC_HIRSIZI;
		ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Araç Hýrsýzý Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki araçlarý çalýp limanda {3498DB}/aracSat {FFFFFF}komutu ile satmak.\n", "Kapat", "");
	    TextDrawHideForPlayer(playerid, MeslekBar[0]);
	    TextDrawHideForPlayer(playerid, MeslekBar[1]);
	    TextDrawHideForPlayer(playerid, MeslekBar[2]);
	    TextDrawHideForPlayer(playerid, MeslekBar[3]);
	    TextDrawHideForPlayer(playerid, MeslekBar[4]);
	    TextDrawHideForPlayer(playerid, MeslekBar[5]);
	    TextDrawHideForPlayer(playerid, MeslekBar[6]);
	    TextDrawHideForPlayer(playerid, MeslekBar[7]);
	    TextDrawHideForPlayer(playerid, MeslekBar[8]);
	    TextDrawHideForPlayer(playerid, MeslekBar[9]);
	    TextDrawHideForPlayer(playerid, MeslekBar[10]);
	    TextDrawHideForPlayer(playerid, MeslekBar[11]);
	    TextDrawHideForPlayer(playerid, MeslekBar[12]);
	    TextDrawHideForPlayer(playerid, MeslekBar[13]);
	    TextDrawHideForPlayer(playerid, MeslekBar[14]);
		if(BasariIslem[playerid][ilkGiris] == 0){
		BasariIslem[playerid][ilkGiris] = 1;
		basariKilidi(playerid, "ilkGiris", "Ýlk Giriþ", 5000, 100, 1);
		}
		ResetPlayerWeapons(playerid);
  		Silahver(playerid, 15, 100);
		Silahver(playerid, 24, 100);
		Silahver(playerid, 27, 100);
		Silahver(playerid, 30, 100);
		Silahver(playerid, 33, 100);
    }
	if(clickedid == sOlusturucuIcon[1])
	{
	    TextModu[playerid] = 0;
	    CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 5;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[2])
	{
	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 6;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[3])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 7;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[4])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 8;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[5])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 9;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[6])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 11;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[7])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 11;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[8])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 10;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[9])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 52;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[10])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 12;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[11])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 13;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[12])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 14;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[13])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 15;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[14])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 16;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[15])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 48;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[16])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 49;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[17])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 50;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[18])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 17;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[19])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 18;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[20])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 19;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[21])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 20;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[22])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 53;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[23])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 58;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[24])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 62;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[25])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 61;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[26])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 59;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[27])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 60;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[28])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 21;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[29])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 54;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[30])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 22;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[31])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 55;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[32])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 23;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[33])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 24;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[34])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 25;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[35])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 26;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[36])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 27;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[37])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 28;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[38])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 29;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[39])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 30;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[40])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 37;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[41])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 33;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[42])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 34;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[43])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 36;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[44])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 63;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[45])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 38;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[46])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 39;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[47])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 40;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[48])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 42;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[49])
	{
	    SendClientMessage(playerid, -1, "ID: Bilinmeyen ID - Farklý Bir Icon Seçin");
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[50])
	{
	    SendClientMessage(playerid, -1, "ID: 43");
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 43;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[51])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 44;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[52])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 51;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[53])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 45;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[54])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 46;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
	if(clickedid == sOlusturucuIcon[55])
	{
 	    TextModu[playerid] = 0, CancelSelectTextDraw(playerid);
	    for(new i = 0; i < 56; i++) TextDrawHideForPlayer(playerid, sOlusturucuIcon[i]);
	    SoygunOIslem[playerid][soyIcon] = 47;
	    if(GetPVarInt(playerid, "InteriorsuzIcon") == 1) return DeletePVar(playerid, "InteriorsuzIcon"), soOlusturucu2(playerid);
	    soOlusturucu(playerid);
	}
    return 0;
}

stock PolisKarakterUp(playerid, karakterid)
{
    PlayerTextDrawDestroy(playerid, PolisLoadSelect[playerid][0]);
	PolisLoadSelect[playerid][0] = CreatePlayerTextDraw(playerid, 270.153656, 118.833335, "");
	PlayerTextDrawLetterSize(playerid, PolisLoadSelect[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PolisLoadSelect[playerid][0], 99.000000, 156.000000);
	PlayerTextDrawAlignment(playerid, PolisLoadSelect[playerid][0], 1);
	PlayerTextDrawColor(playerid, PolisLoadSelect[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawFont(playerid, PolisLoadSelect[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, PolisLoadSelect[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, PolisLoadSelect[playerid][0], true);
	PlayerTextDrawSetPreviewModel(playerid, PolisLoadSelect[playerid][0], karakterid);
	PlayerTextDrawSetPreviewRot(playerid, PolisLoadSelect[playerid][0], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid, PolisLoadSelect[playerid][0]);
	return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
    new s = GetPVarInt(playerid, "TempSoygun");
	if(checkpointid == SoygunIslem[s][soygunCP])
 	{
        if(soygunCount[playerid] >= 1)
        {
            new bx[100+24+11+5];
            format(bx, sizeof(bx), "=> Soygun: {FFFFFF}%s mekanýndan $%s dolar çaldýn !", SoygunIslem[s][soygunIsmi], convertNumber(soygunParasi[playerid]));
            SendClientMessage(playerid, 0x004C79FF, bx);
            format(bx, sizeof(bx), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, ~g~~h~%s ~w~~h~mekanindan ~p~~h~$%s ~w~~h~dolar caldi !", getName(playerid), playerid, SoygunIslem[s][soygunIsmi], convertNumber(soygunParasi[playerid]));
            soygunCount[playerid] = 0;
	        soygunParasi[playerid] = 0;
			PlayerTextDrawHide(playerid, SoyulanBar[playerid][0]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][1]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][2]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][3]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][4]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][5]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][6]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][7]);
		    PlayerTextDrawHide(playerid, SoyulanBar[playerid][8]);
		    textFlood++;
			foreach(new i : Player) TextdrawYazi(i, bx);
			if(textFlood == 3){ textFlood = 0; }
	        SoygunIslem[s][soygunSure] = SOYGUN_SURESI;
        }
	}
	return 1;
}

public OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
{
	if(checkpointid == GetPVarInt(playerid, "gps_cpID"))
	{
	    if(GPSOyuncu[playerid][gpsAktif] == true)
	    {
			GPSOyuncu[playerid][gpsAktif] = false;
			KillTimer(GPSOyuncu[playerid][gps_timer]);
			if(GetPVarInt(playerid, "gpsID") != INVALID_OBJECT_ID)
			{
				DestroyDynamicObject(GetPVarInt(playerid, "gpsID"));
				SetPVarInt(playerid, "gpsID", INVALID_OBJECT_ID);
			}
			if(GetPVarInt(playerid, "gps_cpID") != -1)
			{
				DestroyDynamicRaceCP(GetPVarInt(playerid, "gps_cpID"));
				SetPVarInt(playerid, "gps_cpID", -1);
			}
			SendClientMessage(playerid, -1, "{6FFF00}GPS: {FFFFFF}Seçtiðiniz konuma ulaþtýnýz.");
		}
	}
	return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	foreach(new s : Soygunlar)
	{
		if(checkpointid == SoygunIslem[s][soyGirisCP])
	    {
            if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde soygun yerlerine giremezsin !");
            SetPlayerPos(playerid, SoygunIslem[s][girisPoss][0], SoygunIslem[s][girisPoss][1], SoygunIslem[s][girisPoss][2]);
            SetPlayerFacingAngle(playerid, SoygunIslem[s][girisPoss][3]);
            SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid, SoygunIslem[s][soygunInterior]);
            SetPlayerVirtualWorld(playerid, SoygunIslem[s][soygunVirtualWorld]);
            break;
	    }
	    if(checkpointid == SoygunIslem[s][soyCikisCP])
	    {
            SetPlayerPos(playerid, SoygunIslem[s][cikisPoss][0], SoygunIslem[s][cikisPoss][1], SoygunIslem[s][cikisPoss][2]);
            SetPlayerFacingAngle(playerid, SoygunIslem[s][cikisPoss][3]);
            SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            break;
	    }
	    if(checkpointid == SoygunIslem[s][soygunCP])
	    {
            if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde soygun yapamazsýn !");
			new bilgi[72 + 50];
			format(bilgi, sizeof(bilgi), "~y~~h~%s~n~~w~~h~mekanini soymak icin~n~~b~~h~~h~Y~n~~w~~h~tusuna basin", SoygunIslem[s][soygunIsmi]);
			GameTextForPlayer(playerid, bilgi, 3000, 3);
            break;
	    }
	}
	foreach(new id : Atmler)
	{
		if(checkpointid == AtmIslem[id][atmCP])
		{
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			new _icerik[43] = "{32ED80}#\t{32ED80}(?)\n", ba[177 + 24 + 3 + 90];
			format(ba, sizeof(ba), "%s{FF406C}» {FFFFFF}Hesap Sahibi:\t%s(%d)\n{FF406C}» {FFFFFF}Hesaptaki Para:\t$%s\n{FF406C}» {FFFFFF}Para Yatýr\t-\n{FF406C}» {FFFFFF}Para Çek\t-\n{FF406C}» {FFFFFF}Bir Oyuncuya Para Gönder\t-\n{FF406C}» {FFFFFF}Offline Para Gönder\t-\n", _icerik, getName(playerid), playerid, convertNumber(oyuncuData[playerid][pBankaPara]));
			ShowPlayerDialog(playerid, DIALOG_BANKA, DIALOG_STYLE_TABLIST_HEADERS, "dialogIsim"": Banka", ba, "Seç", "Iptal");
		    break;
		}
	}
	if(checkpointid == CP_HASTANE)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde hastane menüsüne eriþemezsin.");
	    ShowPlayerDialog(playerid, DIALOG_Hastane, DIALOG_STYLE_LIST, "{FFFFFF}» Hastane", "» Can Tazele\t\t{53DF83}$10,000\n» Zýrh Fulle\t\t{53DF83}$15,000\n» Tedavi Ol\t\t{53DF83}$20,000\n» Full Paket\t\t{53DF83}$45,000\n", "Seç", "Kapat");
	    return 1;
	}
	if(checkpointid == CP_HavaUssu)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araçtayken Hava Üssü'ne gidemezsin.");
		if(GetPlayerScore(playerid) < 10000) return hataMesaji(playerid, "Hava Üssü'ne gitmek için 10.000 skora ihtiyacýn var !");
		new pp[48 + 52 + 32];
		format(pp, sizeof(pp), "{3498DB}» Hava Kuvvetleri Mesleðine Katýl\n");
		format(pp, sizeof(pp), "%s{E74C3C}» Meslekten Ayrýl\n", pp);
		format(pp, sizeof(pp), "%s{92F22A}» Hava Kuvvetleri Mekanýna Iþýnlan\n", pp);
		ShowPlayerDialog(playerid, DIALOG_HAVAKUVVET, DIALOG_STYLE_LIST, "{FFFFFF}» "dialogIsim": Özel Harekat", pp, "Seç", "Kapat");
	    return 1;
	}
	if(checkpointid == EvCikisCP[0] || checkpointid == EvCikisCP[1] || checkpointid == EvCikisCP[2] ||
	checkpointid == EvCikisCP[3] || checkpointid == EvCikisCP[4] || checkpointid == EvCikisCP[5] ||
	checkpointid == EvCikisCP[6] || checkpointid == EvCikisCP[6] || checkpointid == EvCikisCP[7] ||
	checkpointid == EvCikisCP[8] || checkpointid == EvCikisCP[9])
	{
	    if(GetPVarInt(playerid, "EvModu") == 1)
	    {
   			SetPlayerPos(playerid, GetPVarFloat(playerid,"eoX"), GetPVarFloat(playerid,"eoY"), GetPVarFloat(playerid,"eoZ"));
			SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"eoA"));
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid, "eoX");
			DeletePVar(playerid, "eoY");
			DeletePVar(playerid, "eoZ");
			DeletePVar(playerid, "eoA");
			DeletePVar(playerid, "EvModu");
			SetPVarInt(playerid, "Evim", -1);
			SetPVarInt(playerid, "EvSifreDeneme", -1);
	        return 1;
		}
		SetPlayerPos(playerid, GetPVarFloat(playerid,"gX"), GetPVarFloat(playerid,"gY"), GetPVarFloat(playerid,"gZ"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"gA"));
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid, "gX");
		DeletePVar(playerid, "gY");
		DeletePVar(playerid, "gZ");
		DeletePVar(playerid, "gA");
		SetPVarInt(playerid, "Evim", -1);
		SetPVarInt(playerid, "EvSifreDeneme", -1);
	    return 1;
	}
	
	if(checkpointid == girisCasino)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde kumarhaneye giremezsin.");
     	if(aranmaSeviyesii[playerid] != 0) return hataMesaji(playerid, "Bu iþlevi sadece siviller kullanabilir.");
		SendClientMessage(playerid, 0x2796CBFF, "[KUMAR] Kumarhane mekanýna hoþgeldiniz, /kumar komutuyla oyunu oynayabilirsiniz.");
	    kumarda[playerid] = true;
	    SetPlayerInterior(playerid, 12);
	    SetPlayerPos(playerid, 1133.3352, -12.3872, 1000.6797);
	    SetPlayerFacingAngle(playerid, 8.0934);
	    SetCameraBehindPlayer(playerid);
	    SpawnBeklet(playerid);
	    return 1;
	}
	
	if(checkpointid == cikisCasino)
	{
		if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde bu iþlemi gerçekleþtiremezsin");
     	if(aranmaSeviyesii[playerid] != 0) return hataMesaji(playerid, "Bu iþlevi sadece siviller kullanabilir.");
	    kumarda[playerid] = false;
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -2172.3005, -97.5594, 35.3269);
	    SetPlayerFacingAngle(playerid, 271.8458);
	    SetCameraBehindPlayer(playerid);
	    SpawnBeklet(playerid);
	    return 1;
	}

	if(checkpointid == CP_POLIS[0])
	{
 		if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Polis Karakoluna girmek için araçtan inmelisin.");
		SetPlayerInterior(playerid, 10);
		SetPlayerPos(playerid, 246.4465,113.6917,1003.2188);
		SetPlayerFacingAngle(playerid, 0.3376);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
 	if(checkpointid == CP_POLIS[1])
	{
 		if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Polis Karakolundan çýkmak için araçtan inmelisin.");
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -1606.3141, 720.5367, 12.1066);
		SetPlayerFacingAngle(playerid, 3.8074);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	if(checkpointid == CP_POLIS[2])
	{
	    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
		new pp[33 + 40 + 37];
		format(pp, sizeof(pp), "{3498DB}» Polis Mesleðine Katýl\n");
		format(pp, sizeof(pp), "%s{3498DB}» Polis Karakterini Deðiþtir\n", pp);
		format(pp, sizeof(pp), "%s{E74C3C}» Meslekten Ayrýl\n", pp);
		ShowPlayerDialog(playerid, DIALOG_POLIS, DIALOG_STYLE_LIST, "{FFFFFF}» "dialogIsim": POLIS", pp, "Seç", "Kapat");
		return 1;
	}
	if(checkpointid == CP_POLIS[3])
	{
 		if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
		new pp[39 + 46 + 43 + 1];
		format(pp, sizeof(pp), "{3498DB}» Sivil Polis Mesleðine Katýl\n");
		format(pp, sizeof(pp), "%s{3498DB}» Sivil Polis Karakterini Deðiþtir\n", pp);
		format(pp, sizeof(pp), "%s{E74C3C}» Meslekten Ayrýl\n", pp);
		ShowPlayerDialog(playerid, DIALOG_SIVILPOLIS, DIALOG_STYLE_LIST, "{FFFFFF}» "dialogIsim": Sivil POLIS", pp, "Seç", "Kapat");
	    return 1;
	}
	if(checkpointid == CP_BOMBACI)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
	    new _icerik[43] = "{32ED80}Ürün\t{32ED80}Adet\t{32ED80}Fiyat\n", ba[157 + 43];
		format(ba, sizeof(ba), "%s{FF406C}» {FFFFFF}Bomba\t5\t$20,000\n{FF406C}» {FFFFFF}Bomba\t10\t$40,000\n{FF406C}» {FFFFFF}Bomba\t15\t$60,000\n{FF406C}» {FFFFFF}Bomba\t20\t$80,000\n", _icerik);
	    ShowPlayerDialog(playerid, DIALOG_BOMBA, DIALOG_STYLE_TABLIST_HEADERS, "Bombacý", ba, "Satýn Al", "Iptal");
	    return 1;
	}
	if(checkpointid == CP_AHIRSIZ)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç satmak için bir araçta olmalýsýn.");
		if(GetPlayerState(playerid) != 2) return hataMesaji(playerid, "Bu aracý satmak için sürücü modunda olmalýsýn.");
		return 1;
	}
	return 1;
}

function ZamanAracRespawn()
{
	switch(aracResDurum)
	{
	    case 0:
	    {
	        KillTimer(aracRessTimmer);
  	 		AracRespawn();
			SendClientMessageToAll(-1, "{CF4DFF}» AracRes: {FFFFFF}Kullanýlmayan araçlar sistem tarafýndan re-spawn edildi.");
	    }
	    case 1:
	    {
	        KillTimer(aracRessTimmer);
	        aracResDurum = 0;
   			AracRespawn();
			SendClientMessageToAll(-1, "{CF4DFF}» AracRes: {FFFFFF}Kullanýlmayan araçlar yetkili tarafýndan re-spawn edildi.");
	    }
	    default:
	    {
	        KillTimer(aracRessTimmer);
			AracRespawn();
			SendClientMessageToAll(-1, "{CF4DFF}» AracRes: {FFFFFF}Kullanýlmayan araçlar sistem tarafýndan re-spawn edildi.");
	    }
	}
	return 1;
}

function AracRespawn()
{
	new bool:UsedVehicle[MAX_VEHICLES];
	foreach(new i: Player)
	{
		if(IsPlayerInAnyVehicle(i))
		{
			UsedVehicle[GetPlayerVehicleID(i)] = true;
   	        if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(i)))
	        {
	            new dorseid = GetVehicleTrailer(GetPlayerVehicleID(i));
				UsedVehicle[dorseid] = true;
			}
		}
	}
	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
		if(!UsedVehicle[i])
		{
			SetVehicleToRespawn(i);
		}
	}
	return 1;
}

stock Skorver(playerid, skor)
{
	SetPlayerScore(playerid, GetPlayerScore(playerid) + skor);
	
	if(BasariIslem[playerid][ilkYirmiBinSkor] == 0)
	{
	    if(GetPlayerScore(playerid) >= 20000)
	    {
			BasariIslem[playerid][ilkYirmiBinSkor] = 1;
			basariKilidi(playerid, "ilkYirmiBinSkor", "20000 Skor Ulaþ", 2000000, 500, 100);
		}
	}

 	if(BasariIslem[playerid][ilkOtuzBinSkor] == 0)
	{
	    if(GetPlayerScore(playerid) >= 30000)
	    {
			BasariIslem[playerid][ilkOtuzBinSkor] = 1;
			basariKilidi(playerid, "ilkOtuzBinSkor", "30000 Skor Ulaþ", 3000000, 7500, 200);
		}
	}

  	if(BasariIslem[playerid][ilkDortBinSkor] == 0)
	{
	    if(GetPlayerScore(playerid) >= 40000)
	    {
			BasariIslem[playerid][ilkDortBinSkor] = 1;
			basariKilidi(playerid, "ilkDortBinSkor", "40000 Skor Ulaþ", 5000000, 10000, 300);
		}
	}

   	if(BasariIslem[playerid][ilkElliBinSkor] == 0)
	{
	    if(GetPlayerScore(playerid) >= 40000)
	    {
			BasariIslem[playerid][ilkElliBinSkor] = 1;
			basariKilidi(playerid, "ilkElliBinSkor", "50000 Skor Ulaþ", 10000000, 15000, 500);
		}
	}
	new query[61+11+3];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Skor` = %d WHERE `id` = %d LIMIT 1", GetPlayerScore(playerid), oyuncuData[playerid][xID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

stock pParaver(playerid, miktar)
{
	new query[61+11+3];
	ResetPlayerMoney(playerid);
	ParaKorumasi[playerid] += miktar;
	GivePlayerMoney(playerid, ParaKorumasi[playerid]);
	mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `Para` = %d WHERE `id` = %d LIMIT 1", ParaKorumasi[playerid], oyuncuData[playerid][xID]);
	mysql_query(g_SQL, query);
	return 1;
}

stock ParaReset(playerid)
{
	ResetPlayerMoney(playerid);
	ParaKorumasi[playerid] = 0;
	return 1;
}

stock ParaSifirla(playerid, miktar)
{
	ResetPlayerMoney(playerid);
	ParaKorumasi[playerid] = miktar;
	GivePlayerMoney(playerid, ParaKorumasi[playerid]);
	return 1;
}

stock convertNumber(value)
{
    new string[24];
    format(string, sizeof(string), "%d", value);
    for(new i = (strlen(string) - 3); i > (value < 0 ? 1 : 0) ; i -= 3)
    {
        strins(string[i], ",", 0);
    }
    return string;
}

stock KonusmaYasagi(i, time)
{
    new string[110], minutes, seconds;
	if(time >= 599)
	{
 		minutes = floatround(time / 60);
        seconds = floatround(time - minutes * 60);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "{FF312E}» Hata: {FFFFFF} Konuþmak için %02d dakika %02d saniye beklemelisiniz.", minutes, seconds);
		}
		else
		{
		    format(string, sizeof(string), "{FF312E}» Hata: {FFFFFF} Konuþmak için %02d dakika %d saniye beklemelisiniz.", minutes, seconds);
		}
	}
	if(time >= 59 && time <= 599)
	{
        minutes = floatround(time / 60);
        seconds = floatround(time - minutes * 60);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "{FF312E}» Hata: {FFFFFF} Konuþmak için %d dakika %02d saniye beklemelisiniz.", minutes, seconds);
		}
		else
		{
		    format(string, sizeof(string), "{FF312E}» Hata: {FFFFFF} Konuþmak için %d dakika %d saniye beklemelisiniz.", minutes, seconds);
		}
    }
	if(time <= 59)
	{
        seconds = floatround(time);
        if(seconds >= 10)
        {
        	format(string, sizeof(string), "{FF312E}» Hata: {FFFFFF} Konuþmak için %d saniye beklemelisiniz.", seconds);
		}
  		if(seconds <= 10)
        {
        	format(string, sizeof(string), "{FF312E}» Hata: {FFFFFF} Konuþmak için %d saniye beklemelisiniz.", seconds);
		}
    }
	return SendClientMessage(i, -1, string);
}

/*
ConvertToMinutes(time)
{
    new string[15];
    format(string, sizeof(string), "%02d:%02d", time / 60, time % 60);
    return string;
}
*/

stock ConvertTime(SECONDS_)
{
    new MINUTES_, HOURS_, DAYS_, String[75];
    if(SECONDS_ > 59)
    {
        MINUTES_ = SECONDS_ / 60;
        SECONDS_ = SECONDS_ - MINUTES_ * 60;
    }
    if(MINUTES_ > 59)
    {
        HOURS_ = MINUTES_ / 60;
        MINUTES_ = MINUTES_ - HOURS_ * 60;
    }
    if(HOURS_ > 23)
    {
        DAYS_ = HOURS_ / 24;
        HOURS_ = HOURS_ - DAYS_ * 24;
    }
    format(String, sizeof(String), "%d gün, %02d saat, %02d dakika %02d saniye var", DAYS_, HOURS_, MINUTES_, SECONDS_);
    if(DAYS_ < 1) format(String, sizeof(String), "%02d saat, %02d dakika %02d saniye var", HOURS_, MINUTES_, SECONDS_);
    if(DAYS_ < 1 && HOURS_ < 1) format(String, sizeof(String), "%02d dakika %02d saniye var", MINUTES_, SECONDS_);
    if(DAYS_ < 1 && HOURS_ < 1 && MINUTES_ < 1) format(String, sizeof(String), "%02d saniye var", SECONDS_);
    if(DAYS_ > 3650) format(String, sizeof(String), "Sýnýrsýz - Tarih yok");
    return String;
}

stock ConvertTime2(SECONDS_)
{
    new MINUTES_, HOURS_, DAYS_, String[75];
    if(SECONDS_ > 59)
    {
        MINUTES_ = SECONDS_ / 60;
        SECONDS_ = SECONDS_ - MINUTES_ * 60;
    }
    if(MINUTES_ > 59)
    {
        HOURS_ = MINUTES_ / 60;
        MINUTES_ = MINUTES_ - HOURS_ * 60;
    }
    if(HOURS_ > 23)
    {
        DAYS_ = HOURS_ / 24;
        HOURS_ = HOURS_ - DAYS_ * 24;
    }
    format(String, sizeof(String), "%d gün, %02d saat, %02d dakika %02d saniye", DAYS_, HOURS_, MINUTES_, SECONDS_);
    if(DAYS_ < 1) format(String, sizeof(String), "%02d saat, %02d dakika %02d saniye", HOURS_, MINUTES_, SECONDS_);
    if(DAYS_ < 1 && HOURS_ < 1) format(String, sizeof(String), "%02d dakika %02d saniye", MINUTES_, SECONDS_);
    if(DAYS_ < 1 && HOURS_ < 1 && MINUTES_ < 1) format(String, sizeof(String), "%02d saniye", SECONDS_);
    if(DAYS_ > 3650) format(String, sizeof(String), "Sýnýrsýz - Tarih yok");
    return String;
}

stock SureYasagi(playerid, _0xyasakIsim[], _n0xsure)
{
	new _v3r1[35], string[70], _@0xdakika, _@0xsaniye;
	format(_v3r1, sizeof(_v3r1), "nTempSure_%s", _0xyasakIsim);
	if(GetPVarInt(playerid, _v3r1) > GetTickCount())
	{
	    new verilenSure = (GetPVarInt(playerid, _v3r1) - GetTickCount()) / 1000;
		if(verilenSure >= 599)
		{
	 		_@0xdakika = floatround(verilenSure / 60);
	        _@0xsaniye = floatround(verilenSure - _@0xdakika * 60);
	        if(_@0xsaniye >= 9)
	        {
	        	format(string, sizeof(string), "Bu komutu tekrar kullanmanýz için %02d dakika %02d saniye var.", _@0xdakika, _@0xsaniye);
			}
			else
			{
			    format(string, sizeof(string), "Bu komutu tekrar kullanmanýz için %02d dakika %d saniye var.", _@0xdakika, _@0xsaniye);
			}
		}
		if(verilenSure >= 59 && verilenSure <= 599)
		{
	        _@0xdakika = floatround(verilenSure / 60);
	        _@0xsaniye = floatround(verilenSure - _@0xdakika * 60);
	        if(_@0xsaniye >= 9)
	        {
	        	format(string, sizeof(string), "Bu komutu tekrar kullanmanýz için %d dakika %02d saniye var.", _@0xdakika, _@0xsaniye);
			}
			else
			{
			    format(string, sizeof(string), "Bu komutu tekrar kullanmanýz için %d dakika %d saniye var.", _@0xdakika, _@0xsaniye);
			}
	    }
		if(verilenSure <= 59)
		{
	        _@0xsaniye = floatround(verilenSure);
	        if(_@0xsaniye >= 10)
	        {
	        	format(string, sizeof(string), "Bu komutu tekrar kullanmanýz için %d saniye var.", _@0xsaniye);
			}
	  		if(_@0xsaniye <= 10)
	        {
	        	format(string, sizeof(string), "Bu komutu tekrar kullanmanýz için %d saniye var.", _@0xsaniye);
			}
	    }
	    return SendClientMessage(playerid, 0xfc282fff, string);
	}
	else
	{
	    SetPVarInt(playerid, _v3r1, GetTickCount() + _n0xsure * 1000);
	    return 0;
	}
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock IsPlayerInZone(playerid, zone[])
{
	new TmpZone[28];
	GetPlayer3DZone(playerid, TmpZone, sizeof(TmpZone));
	for(new i = 0; i != sizeof(gSAZones); i++)
	{
		if(strfind(TmpZone, zone, true) != -1)
			return 1;
	}
	return 0;
}

stock aranmaLeveli(playerid, aLevell)
{
	new tt[12], bmsj[47 + 4];
	if(aLevell == 0)
	{
		format(tt, sizeof(tt), " ");
		aranmaSeviyesii[playerid] = 0;
		oyuncuData[playerid][pAranma] = 0;
		PlayerTextDrawSetString(playerid, SagBarText[playerid][3], tt);
		PlayerTextDrawHide(playerid, SagBarText[playerid][3]);
		return 1;
	}
    //oyuncuData[playerid][pAranma] += aLevell;
    if(aranmaSeviyesii[playerid] < 0) aranmaSeviyesii[playerid] = 0;
    aranmaSeviyesii[playerid] += aLevell;
	switch(aranmaSeviyesii[playerid])
	{
	    case 1: format(tt, sizeof(tt), "]");
	    case 2: format(tt, sizeof(tt), "]]");
	    case 3: format(tt, sizeof(tt), "]]]");
	    case 4: format(tt, sizeof(tt), "]]]]");
	    case 5: format(tt, sizeof(tt), "]]]]]");
	    case 6: format(tt, sizeof(tt), "]]]]]]");
	    case 7: format(tt, sizeof(tt), "]]]]]]]");
	    case 8: format(tt, sizeof(tt), "]]]]]]]]");
	    case 9: format(tt, sizeof(tt), "]]]]]]]]]");
	    case 10: format(tt, sizeof(tt), "]]]]]]]]]]");
	    case 11: format(tt, sizeof(tt), "]]]]]]]]]]]");
	    case 12: format(tt, sizeof(tt), "]]]]]]]]]]]]");
	}
	if(aranmaSeviyesii[playerid] >= 12) format(tt, sizeof(tt), "]]]]]]]]]]]]");
	PlayerTextDrawHide(playerid, SagBarText[playerid][3]);
	PlayerTextDrawSetString(playerid, SagBarText[playerid][3], tt);
	if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, SagBarText[playerid][3]);}
	format(bmsj, sizeof(bmsj), "{F1C40F}[SUÇ] {FFFFFF}Aranma seviyen %d oldu !", aranmaSeviyesii[playerid]);
	SendClientMessage(playerid, -1, bmsj);
	return 1;
}

GetPlayerID(player[])
{
	new playerid = -1, playername[MAX_PLAYER_NAME+1], numeric = 1;

	if(IsPlayerConnected(strval(player))) {
        for (new i = 0, j = strlen(player); i < j; i++)
    	{
    	   if (player[i] > '9' || player[i] < '0') {
				numeric = 0;
    	   }
    	}
    	if(numeric == 1) {
			GetPlayerName(strval(player), playername, sizeof(playername));
			playerid = strval(player);
		} else {
		    for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
  				if(IsPlayerConnected(i)) {
     				GetPlayerName(i, playername, sizeof(playername));
 					if(!strcmp(player, playername, true)) {
						playerid = i;
						break;
					}
				}
			}
		}
	}
	if(playerid >= 0) {
    	return playerid;
	} else {
 		return INVALID_PLAYER_ID;
	}
}

function OnPlayerPaused(playerid)
{
	AFkMi[playerid] = 1;
	AFkTime[playerid]++;

	SetPVarInt(playerid, "EleGeciriyomLan", -1);

	if(SavasIslem[playerid][SavasSureArttir] >= 1 && SavasIslem[playerid][SavasSurem] && AFkTime[playerid] >= 5)
	{
		KillTimer(SavasIslem[playerid][savasTimer]);
        SavasIslem[playerid][SavasSureArttir] = 0;
		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
					if(GetPVarInt(i, "_SavasID") == GetPVarInt(playerid, "_SavasID"))
					{
				        HidePlayerProgressBar(i, SavasBar[i]);
				        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
				        SetPlayerProgressBarValue(i, SavasBar[i], 0);
					}
		        }
		    }
		}
        SendClientMessage(playerid, -1, "{3498db}[Çete Bölge Savaþý] {FFFFFF}AFK olduðunuz için çete bölge savaþý iptal edildi.");
		switch(SavasIslem[playerid][SavasTip])
		{
		    case 3: cetePuanArttir(PlayerCete[playerid], -2);
			case 4: cetePuanArttir(PlayerCete[playerid], -3);
		}
        SavasIslem[playerid][SavasTip] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
		new c = PlayerCete[playerid], _bump[100];
        CeteIslem[c][ceteKasasi] -= GetPVarInt(playerid, "_CeteZarar");
		mysql_format(g_SQL, _bump, sizeof(_bump), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
		mysql_query(g_SQL, _bump);
		DeletePVar(playerid, "_CeteZarar");
        new id = GetPVarInt(playerid, "_SavasID");
		if(id != -1)
		{
		    CeteSavasMekan[id][eleGecirenCete] = -1;
			foreach(new i: Player)
			{
				GangZoneStopFlashForPlayer(i, CeteSavasMekan[id][cbZone]);
			}
		}
		SavasIslem[playerid][SavasSurem] = 0;
	}

    SavasIslem[playerid][Puskurtme] = 0;

	if(SavasIslem[playerid][Puskurtme] == 1 && SavasIslem[playerid][SavasSurem2] != 0 && AFkTime[playerid] >= 5)
	{
		KillTimer(SavasIslem[playerid][puskurtTimer]);
	    SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
		SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
        SavasIslem[playerid][Puskurtme] = 0;
		SavasIslem[playerid][SavasSurem2] = 0;
        SetPVarInt(playerid, "PuskurtmeModee", 0);
  		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
					if(GetPVarInt(i, "_SavasID") == GetPVarInt(playerid, "_SavasID"))
					{
					    SetPVarInt(i, "PuskurtmeModee", 0);
				        HidePlayerProgressBar(i, SavasBar[i]);
				        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
				        SetPlayerProgressBarValue(i, SavasBar[i], 0);
					}
		        }
		    }
		}
        SendClientMessage(playerid, -1, "{e67e22}Püskürtme: {ffffff}AFK olduðunuz için, püskürtme iptal edildi !");
	}

	if(Duelloda[playerid] == true)
	{
		foreach(new i : Player)
		{
		    if(DuelloIslem[i][d_ID] == playerid)
		    {
		        if(i != playerid)
		        {
			        new xb[116 + 24 + 24 + 11];
			        format(xb, sizeof(xb), "Oyuncu %s AFK olduðu için düelloyu siz kazandýnýz. Ödül: $%s dolar.", getName(playerid), convertNumber(DuelloIslem[i][dP]));
					SendClientMessage(i, 0x71BA51FF, xb);
                    SetPVarInt(i, "DuelloYasak", 0);
					SetPVarInt(playerid, "DuelloYasak", 0);
		   			format(xb, sizeof(xb), "» Düello: {FFFFFF}Oyuncu %s AFK olduðu için %s düelloyu kazandý. {64DDBB}Ödül: {FFFFFF}$%s dolar.", getName(playerid), getName(i), convertNumber(DuelloIslem[i][dP]));
					SendClientMessageToAll(0xFD5B03FF, xb);
			        pParaver(playerid, -DuelloIslem[i][dP]);
			        pParaver(i, DuelloIslem[i][dP]);
			        ResetPlayerWeapons(i);
			        SpawnPlayer(i);
			        DuelloOyuncusu[i] = INVALID_PLAYER_ID;
			        DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
			        DuelloIslem[i][dHarita] = 0;
			        DuelloIslem[i][dP] = 0;
			        DuelloIslem[i][dSilah][0] = 0;
			        DuelloIslem[i][dSilah][1] = 0;
			        Duelloda[i] = false;
					DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
			        DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
			        DuelloIslem[playerid][dHarita] = 0;
			        DuelloIslem[playerid][dP] = 0;
			        DuelloIslem[playerid][dSilah][0] = 0;
			        DuelloIslem[playerid][dSilah][1] = 0;
			        Duelloda[playerid] = false;
			        aranmaLeveli(playerid, 0);
			        aranmaLeveli(i, 0);
			        SpawnPlayer(playerid);
				}
		    }
		    if(DuelloOyuncusu[i] == playerid)
		    {
		        if(i != playerid)
		        {
		            SetPVarInt(playerid, "DuelloYasak", 0);
		            SetPVarInt(i, "DuelloYasak", 0);
					new xb[76 + 24 + 11];
			        format(xb, sizeof(xb), "Oyuncu %s AFK olduðu için düelloyu siz kazandýnýz. Ödül: $%s dolar.", getName(playerid), convertNumber(DuelloIslem[playerid][dP]));
			        SendClientMessage(i, 0x71BA51FF, xb);
					format(xb, sizeof(xb), "» Düello: {FFFFFF}Oyuncu %s AFK olduðu için %s düelloyu kazandý. {64DDBB}Ödül: {FFFFFF}$%s dolar.", getName(playerid), getName(i), convertNumber(DuelloIslem[playerid][dP]));
					SendClientMessageToAll(0xFD5B03FF, xb);
			        pParaver(playerid, -DuelloIslem[playerid][dP]);
			        pParaver(i, DuelloIslem[playerid][dP]);
			        ResetPlayerWeapons(i);
			        SpawnPlayer(i);
			        DuelloOyuncusu[i] = INVALID_PLAYER_ID;
			        DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
			        DuelloIslem[i][dHarita] = 0;
			        DuelloIslem[i][dP] = 0;
			        DuelloIslem[i][dSilah][0] = 0;
			        DuelloIslem[i][dSilah][1] = 0;
			        Duelloda[i] = false;
					DuelloOyuncusu[playerid] = INVALID_PLAYER_ID;
			        DuelloIslem[playerid][d_ID] = INVALID_PLAYER_ID;
			        DuelloIslem[playerid][dHarita] = 0;
			        DuelloIslem[playerid][dP] = 0;
			        DuelloIslem[playerid][dSilah][0] = 0;
			        DuelloIslem[playerid][dSilah][1] = 0;
			        Duelloda[playerid] = false;
			        Duelloda[playerid] = false;
					aranmaLeveli(playerid, 0);
			        aranmaLeveli(i, 0);
			        ResetPlayerWeapons(playerid);
			        SpawnPlayer(playerid);
			        SpawnPlayer(playerid);
				}
		    }
		}
	}
}

function OnPlayerUnpaused(playerid)
{
    AFkTime[playerid] = 0;
    if(oIslem[playerid][kelepce] == 1)
    {
		SetPVarInt(playerid, "KelepceBlock", GetTickCount());
		oIslem[playerid][kelepce] = 0;
		oIslem[playerid][kelepceSure] = 0;
		SetPVarInt(playerid, "soklandi", 0);
		ClearAnimations(playerid);
		KillTimer(tazerTimer[playerid]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid, 1);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid, 223.4927,110.8868,999.0156);
		SetPlayerFacingAngle(playerid, 3.1811);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "Hapisdeyimm", 1);
		oyuncuData[playerid][hapisSure] = 180;
		oyuncuData[playerid][hSureKayit] = 180;
		pParaver(playerid, -500000);
		SendClientMessage(playerid, 0x3DFF9EFF, "AFK olarak hapise girdiðin için hesabýndan $-500,000 dolar kesildi !");
        if(GetPVarInt(playerid, "SpawnOldum") == 1){
		new o[86 + 27];
		format(o, sizeof(o), "[OTO-HAPIS] Oyuncu %s(%d), kelepçeliyken AFK olduðu için otomatik hapise atýldý.", getName(playerid), playerid);
		SendClientMessageToAll(0xFF8E3DFF, o);}
    }
	AFkMi[playerid] = 0;
}

function OnPlayersPaused()
{
	foreach(new playerid : Player)
	{
		if( PlayerPausedCount[ playerid ] < 2 ) PlayerPausedCount[ playerid ]++;
        else
        {
			CallLocalFunction( "OnPlayerPaused", "i", playerid );
        	IsPlayerPausedx[ playerid ] = true;
        }
	}
}

function PolisSkinReload(playerid)
{
    TextModu[playerid] = 1;
	SetPVarInt(playerid, "PolisSecim", 0);
	if(GetPVarInt(playerid, "Secim_") == 1)
	{
		TextDrawShowForPlayer(playerid, PolisLoad[0]);
		TextDrawShowForPlayer(playerid, PolisLoad[1]);
		PolisKarakterUp(playerid, PolisKarakterleri[0]);
		PlayerTextDrawShow(playerid, PolisLoadSelect[playerid][1]);
		PlayerTextDrawShow(playerid, PolisLoadSelect[playerid][2]);
		SelectTextDraw(playerid, 0xE67E22FF);
	}
 	if(GetPVarInt(playerid, "Secim_") == 2)
	{
		TextDrawShowForPlayer(playerid, PolisLoad[0]);
		TextDrawShowForPlayer(playerid, PolisLoad[1]);
		PolisKarakterUp(playerid, SivilPolisKarakterleri[0]);
		PlayerTextDrawShow(playerid, PolisLoadSelect[playerid][1]);
		PlayerTextDrawShow(playerid, PolisLoadSelect[playerid][2]);
		SelectTextDraw(playerid, 0xE67E22FF);
	}
	return 1;
}

function SuikastciGorev()
{
    new oyuncular[MAX_PLAYERS], count = 0, totalOyuncu = 0, orjID = -1;
    for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] != SUIKASTCI)
		    {
		        oyuncular[count] = i;
				count++;
				totalOyuncu++;
			}
		}
	}
	for(new i = 0; i < totalOyuncu; i++)
	{
	    if(i < 5)
	    {
			orjID = oyuncular[random(totalOyuncu)];
			SuikastDurum = 1;
			sMaruzOyuncu[orjID] = 1;
			sOdulOyuncu[orjID] = random(150000 - 100000) + 105317;
			//printf("%d", orjID);
		}
	}
	if(totalOyuncu >= 1)
	{
		KillTimer(timerBeklet);
		timerBeklet = SetTimer("SuikastciGorevBitir", 600000, false); // 10 dakika
		SendClientMessageToAll(0xFF3B68FF, "Öldürme Zamaný: Suikastcý olan oyuncular /hlistesi yazýp öldüreceði oyuncuyu ve ödülü görebilir. En hýzlý olup ödülleri almanýn tam vakti !");
		SendClientMessageToAll(0xFF3B68FF, "Öldürme Zamaný: Hedeflenen oyuncularý öldürmek için 10 dakika süreniz var.");
	}
	else
	{
	    SendClientMessageToAll(0xFF3B68FF, "Suikast Görevi: Yeterli oyuncu olmadýðý için Suikast Görevi aktif edilemiyor.");
	}
	return 1;
}

stock bankaReloaded(playerid)
{
	new _icerik[43] = "{32ED80}#\t{32ED80}(?)\n", ba[177 + 24 + 3 + 90];
	format(ba, sizeof(ba), "%s{FF406C}» {FFFFFF}Hesap Sahibi:\t%s(%d)\n{FF406C}» {FFFFFF}Hesaptaki Para:\t$%s\n{FF406C}» {FFFFFF}Para Yatýr\t-\n{FF406C}» {FFFFFF}Para Çek\t-\n{FF406C}» {FFFFFF}Bir Oyuncuya Para Gönder\t-\n{FF406C}» {FFFFFF}Offline Para Gönder\t-\n", _icerik, getName(playerid), playerid, convertNumber(oyuncuData[playerid][pBankaPara]));
	ShowPlayerDialog(playerid, DIALOG_BANKA, DIALOG_STYLE_TABLIST_HEADERS, ""dialogIsim": Banka", ba, "Seç", "Iptal");
	return 1;
}

function SuikastciGorevBitir()
{
	if(SuikastDurum == 1)
	{
	    SendClientMessageToAll(0xE91818FF, "Suikast Görevi: Hedeflenen oyuncularý öldürmek için verilen süre doldu.");
        SuikastDurum = 0;
	}
	SuikastDurum = 0;
	KillTimer(timerBeklet);
	return 1;
}

stock interiorYukle(playerid)
{
	new ba[1550];
	for(new i = 0; i < sizeof(Interiorlar); i++)
	{
		format(ba, sizeof(ba), "%s%s\n", ba, Interiorlar[i]);
	}
	ShowPlayerDialog(playerid, DIALOG_SO4, DIALOG_STYLE_LIST, "Interior Seçin", ba, "Git", "Geri");
	return 1;
}

stock soOlusturucu(playerid)
{
	new _icerik[43] = "{EB9532}#\t{EB9532}(?)\n", ba[280 + 5], p_[50];
	if(strcmp("-", SoygunOIslem[playerid][soygunIsim], false) == 0)
	{
		p_ = "-";
	}
	else
	{
		p_ = SoygunOIslem[playerid][soygunIsim];
	}
	format(ba, sizeof(ba), "%s{2CC990}» Soygun Ismi:\t-\n{2CC990}» Soygun Giriþ CP:\t-\n{2CC990}» Interior Seç:\t-\n{2CC990}» Soygun Giriþ Pozisyon:\t-\n{2CC990}» Soygun CP:\t-\n{2CC990}» Soygun Çýkýþ CP:\t-\n{2CC990}» Soygun Dýþarý Pozisyon:\t-\n{2CC990}» Soygun Mekan Iconu:\t%d\n{2CC990}» Soygunu Oluþtur:\n", _icerik, SoygunOIslem[playerid][soyIcon]);
	ShowPlayerDialog(playerid, DIALOG_SO2, DIALOG_STYLE_TABLIST_HEADERS, ""dialogIsim": Soygun Oluþturucu", ba, "Seç", "Iptal");
	return 1;
}

stock soOlusturucu2(playerid)
{
	ShowPlayerDialog(playerid, DIALOG_SO3, DIALOG_STYLE_LIST, ""dialogIsim": Soygun Oluþturucu", "{2CC990}» Soygun Ismi\n{2CC990}» Soygun CP\n{2CC990}» Soygun Iconu\n{2CC990}» Soygunu oluþtur", "Seç", "Iptal");
	return 1;
}

stock EvleriYukle(){ mysql_tquery(g_SQL, "SELECT * FROM `evler`", "___EvYukle", ""); }
stock SoygunlariYukle(){ mysql_tquery(g_SQL, "SELECT * FROM `soygunlar`", "___SoygunYukle", ""); }
stock BolgeHazirla(){ mysql_tquery(g_SQL, "SELECT * FROM `bolgeler`", "___BolgeYukle", ""); }

function ___EvYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new id, yukle, label[250];
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "eid", id);
		    cache_get_value_name(yukle, "EvIsmi", EvIslem[id][EvIsmi], MAX_EV_ISMI);
		    cache_get_value_name(yukle, "EvSahibi", EvIslem[id][EvSahibi], MAX_PLAYER_NAME);
		    cache_get_value_name_float(yukle, "EvX", EvIslem[id][EvPos][0]);
		    cache_get_value_name_float(yukle, "EvY", EvIslem[id][EvPos][1]);
		    cache_get_value_name_float(yukle, "EvZ", EvIslem[id][EvPos][2]);
		    cache_get_value_name_int(yukle, "EvFiyat", EvIslem[id][evFiyat]);
		    cache_get_value_name_int(yukle, "evOrjinalFiyat", EvIslem[id][evOrjinalFiyat]);
		    cache_get_value_name_int(yukle, "evDurumu", EvIslem[id][evDurumu]);
		    cache_get_value_name_int(yukle, "evSeviyesi", EvIslem[id][evSeviyesi]);
		    cache_get_value_name(yukle, "evSifresi", EvIslem[id][evSifresi], MAX_PLAYER_NAME);
		    cache_get_value_name_int(yukle, "evVirtual", EvIslem[id][evVirtual]);
			cache_get_value_name_int(yukle, "evPara", EvIslem[id][evPara]);
			switch(EvIslem[id][evDurumu])
			{
			    case 0:
			    {
					format(label, sizeof(label), "{F31D2F}Satýlýk Ev (%d)\n{FD5B03}Ev Fiyatý: {FFFFFF}$%s\n{FD5B03}Ev Seviyesi: {FFFFFF}%d\n{597DF7}Evi Görmek Ýçin {F9B32A}F {597DF7}Tuþunu Kullanýn\n{597DF7}Satýn Almak Ýçin {F9B32A}/SatinAl {597DF7}Yazýn", id, convertNumber(EvIslem[id][evOrjinalFiyat]), EvIslem[id][evSeviyesi]);
					EvIslem[id][evLabel] = CreateDynamic3DTextLabel(label, 0xFFFFFFFF, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2]+0.50, EV_LABEL_STREAM, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
					EvIslem[id][evPickup] = CreateDynamicPickup(1273, 1, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 0, 0, -1, EV_PICKUP_STREAM);
					EvIslem[id][evIcon] = CreateDynamicMapIcon(EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 31, -1, -1, -1, -1, EV_MAP_ICON_STREAM, 1);
			    }
			    case 1:
			    {
					format(label, sizeof(label), "{72F274}%s (%d)\n{2DCC70}Sahip: {FFFFFF}%s\n{F7D00D}Ev Seviyesi: {FFFFFF}%d\n{688D9B}/Giris", EvIslem[id][EvIsmi], id, EvIslem[id][EvSahibi], EvIslem[id][evSeviyesi]);
					EvIslem[id][evLabel] = CreateDynamic3DTextLabel(label, 0xFFFFFFFF, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2]+0.50, EV_LABEL_STREAM, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
					EvIslem[id][evPickup] = CreateDynamicPickup(19522, 1, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 0, 0, -1, EV_PICKUP_STREAM);
					EvIslem[id][evIcon] = CreateDynamicMapIcon(EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 32, -1, -1, -1, -1, EV_MAP_ICON_STREAM, 1);
			    }
			    case 2:
			    {
					format(label, sizeof(label), "{28F73D}%s (%d)\n{FFF836}Satýcý: {FFFFFF}%s\n{FF3503}Satýþ Fiyatý: {FFFFFF}$%s\n{A7B2BA}Ev Seviyesi: {FFFFFF}%d\n{D5FFE4}/SatinAl", EvIslem[id][EvIsmi], id, EvIslem[id][EvSahibi], convertNumber(EvIslem[id][evFiyat]), EvIslem[id][evSeviyesi]);
                    EvIslem[id][evLabel] = CreateDynamic3DTextLabel(label, 0xFFFFFFFF, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2]+0.50, EV_LABEL_STREAM, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
                    EvIslem[id][evPickup] = CreateDynamicPickup(1272, 1, EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 0, 0, -1, EV_PICKUP_STREAM);
                    EvIslem[id][evIcon] = CreateDynamicMapIcon(EvIslem[id][EvPos][0], EvIslem[id][EvPos][1], EvIslem[id][EvPos][2], 31, -1, -1, -1, -1, EV_MAP_ICON_STREAM, 1);
			    }
			}
			Iter_Add(Evler, id);
		    yukle++;
		}
		printf("\n=> Ev: Yüklenen ev sayýsý: %d", yukle);
	}
	else
	{
	    printf("\n=> Ev: Henüz ev oluþturulmamýþ.");
	}
	return 1;
}

function ___SoygunYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new id, yukle, label[100];
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "sid", id);
		    cache_get_value_name(yukle, "soygunIsim", SoygunIslem[id][soygunIsmi], MAX_SOYGUN_ISIM);
		    cache_get_value_name_float(yukle, "gCpX", SoygunIslem[id][girisCP][0]);
		    cache_get_value_name_float(yukle, "gCpY", SoygunIslem[id][girisCP][1]);
			cache_get_value_name_float(yukle, "gCpZ", SoygunIslem[id][girisCP][2]);
		    cache_get_value_name_float(yukle, "GirisPosX", SoygunIslem[id][girisPoss][0]);
		    cache_get_value_name_float(yukle, "GirisPosY", SoygunIslem[id][girisPoss][1]);
		    cache_get_value_name_float(yukle, "GirisPosZ", SoygunIslem[id][girisPoss][2]);
		    cache_get_value_name_float(yukle, "GirisPosA", SoygunIslem[id][girisPoss][3]);
		    cache_get_value_name_float(yukle, "cCpX", SoygunIslem[id][cikisCP][0]);
		    cache_get_value_name_float(yukle, "cCpY", SoygunIslem[id][cikisCP][1]);
		    cache_get_value_name_float(yukle, "cCpZ", SoygunIslem[id][cikisCP][2]);
		    cache_get_value_name_float(yukle, "CikisPosX", SoygunIslem[id][cikisPoss][0]);
		    cache_get_value_name_float(yukle, "CikisPosY", SoygunIslem[id][cikisPoss][1]);
		    cache_get_value_name_float(yukle, "CikisPosZ", SoygunIslem[id][cikisPoss][2]);
		    cache_get_value_name_float(yukle, "CikisPosA", SoygunIslem[id][cikisPoss][3]);
		    cache_get_value_name_float(yukle, "sCpX", SoygunIslem[id][soygunCP_][0]);
		    cache_get_value_name_float(yukle, "sCpY", SoygunIslem[id][soygunCP_][1]);
		    cache_get_value_name_float(yukle, "sCpZ", SoygunIslem[id][soygunCP_][2]);
		    cache_get_value_name_int(yukle, "sInterior", SoygunIslem[id][soygunInterior]);
		    cache_get_value_name_int(yukle, "sVW", SoygunIslem[id][soygunVirtualWorld]);
		    cache_get_value_name_int(yukle, "soygunSure", SoygunIslem[id][soygunSure]);
			cache_get_value_name_int(yukle, "iDurum", SoygunIslem[id][iDurum]);
			cache_get_value_name_int(yukle, "sIcon", SoygunIslem[id][sIcon]);
			if(SoygunIslem[id][iDurum] == 0)
			{
			    if(id == 16){
				SoygunIslem[id][soyGirisCP] = CreateDynamicCP(SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2] - 0.9, 1.0, 0, 0);
				}else{
                SoygunIslem[id][soyGirisCP] = CreateDynamicCP(SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2], 1.0, 0, 0);
				}
				SoygunIslem[id][soyCikisCP] = CreateDynamicCP(SoygunIslem[id][cikisCP][0], SoygunIslem[id][cikisCP][1], SoygunIslem[id][cikisCP][2], 1.0, SoygunIslem[id][soygunVirtualWorld], SoygunIslem[id][soygunInterior]);
				format(label, sizeof(label), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulabilir", SoygunIslem[id][soygunIsmi], id);
				SoygunIslem[id][soyLabel] = CreateDynamic3DTextLabel(label, 0xFFFF00AA, SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, SoygunIslem[id][soygunVirtualWorld], SoygunIslem[id][soygunInterior]);
				SoygunIslem[id][soygunCP] = CreateDynamicCP(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 1.5, SoygunIslem[id][soygunVirtualWorld], SoygunIslem[id][soygunInterior]);
				format(label, sizeof(label), "{5CB3FF}Mekan: {FFFFFF}%s", SoygunIslem[id][soygunIsmi]);
				SoygunIslem[id][girisLabel] = CreateDynamic3DTextLabel(label, 0xFFFF00AA, SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
				SoygunIslem[id][cikisLabel] = CreateDynamic3DTextLabel("{FFFFFF}[ Çýkýþ ]", 0xFFFF00AA, SoygunIslem[id][cikisCP][0], SoygunIslem[id][cikisCP][1], SoygunIslem[id][cikisCP][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, SoygunIslem[id][soygunVirtualWorld], SoygunIslem[id][soygunInterior]);
                SoygunIslem[id][soygunIcon] = CreateDynamicMapIcon(SoygunIslem[id][girisCP][0], SoygunIslem[id][girisCP][1], SoygunIslem[id][girisCP][2], SoygunIslem[id][sIcon], -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
			}
			else
			{
   				format(label, sizeof(label), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulabilir", SoygunIslem[id][soygunIsmi], id);
	            SoygunIslem[id][soyLabel] = CreateDynamic3DTextLabel(label, 0xFFFF00AA, SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 5.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
				if(id == 2)
				{
					SoygunIslem[id][soygunCP] = CreateDynamicCP(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2] - 1.0, 1.5, SoygunIslem[id][soygunVirtualWorld], SoygunIslem[id][soygunInterior]);
				}
				else
				{
				    SoygunIslem[id][soygunCP] = CreateDynamicCP(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], 1.5, SoygunIslem[id][soygunVirtualWorld], SoygunIslem[id][soygunInterior]);
				}
				SoygunIslem[id][soygunIcon] = CreateDynamicMapIcon(SoygunIslem[id][soygunCP_][0], SoygunIslem[id][soygunCP_][1], SoygunIslem[id][soygunCP_][2], SoygunIslem[id][sIcon], -1, -1, -1, -1, STREAMER_MAP_ICON_SD, 1);
			}
			Iter_Add(Soygunlar, id);
		    yukle++;
		}
		printf("\n=> Soygun: Yüklenen soygun sayýsý: %d\n", yukle);
	}
	else
	{
	    printf("\n=> Soygun: Henüz soygun oluþturulmamýþ.\n");
	}
	return 1;
}

function ___BolgeYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new id, yukle, label[250];
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "bid", id);
            cache_get_value_name(yukle, "bIsim", BolgeIslem[id][bolgeIsim], MAX_bIsim);
			cache_get_value_name(yukle, "bolgeSahip", BolgeIslem[id][bolgeSahip], MAX_PLAYER_NAME);
   			cache_get_value_name_int(yukle, "bolgeGelir", BolgeIslem[id][bolgeGelir]);
		    cache_get_value_name_int(yukle, "bolgeSkor", BolgeIslem[id][bolgeSkor]);
			cache_get_value_name_float(yukle, "fX", BolgeIslem[id][bolgePos][0]);
			cache_get_value_name_float(yukle, "fY", BolgeIslem[id][bolgePos][1]);
			cache_get_value_name_float(yukle, "fZ", BolgeIslem[id][bolgePos][2]);
			cache_get_value_name_float(yukle, "fA", BolgeIslem[id][bolgePos][3]);
			cache_get_value_name_float(yukle, "LposX", BolgeIslem[id][labelPos][0]);
			cache_get_value_name_float(yukle, "LposY", BolgeIslem[id][labelPos][1]);
			cache_get_value_name_float(yukle, "LposZ", BolgeIslem[id][labelPos][2]);
		   	format(label, sizeof(label), "{20F587}[ BÖLGE ]\n{FCDC5B}%s(%d)\n{FF4242}Sahip: {FFFFFF}Yok\n{FF4242}Gelir: {FFFFFF}$%s\n{52C5FF}/EleGecir", BolgeIslem[id][bolgeIsim], id, convertNumber(BolgeIslem[id][bolgeGelir]));
			BolgeIslem[id][bolgeLabel] = CreateDynamic3DTextLabel(label, 0xFFFFFFFF, BolgeIslem[id][labelPos][0], BolgeIslem[id][labelPos][1], BolgeIslem[id][labelPos][2], 45.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 45.0);
			BolgeIslem[id][zoneID] = GangZoneCreate(BolgeIslem[id][bolgePos][0], BolgeIslem[id][bolgePos][1], BolgeIslem[id][bolgePos][2], BolgeIslem[id][bolgePos][3]);
    		GangZoneShowForAll(BolgeIslem[id][zoneID], 0xEDD83488);
    		BolgeIslem[id][arenaID] = CreateDynamicRectangle(BolgeIslem[id][bolgePos][0], BolgeIslem[id][bolgePos][1], BolgeIslem[id][bolgePos][2], BolgeIslem[id][bolgePos][3], -1, -1, -1);
            Iter_Add(Bolgeler, id);
			yukle++;
		}
		printf("\n=> Bölge: Yüklenen bölge sayýsý: %d\n", yukle);
  	}
  	else
  	{
  	    printf("\n=> Bölge: Henüz bölge oluþturulmamýþ\n");
  	}
	return 1;
}

stock TextdrawYazi(i, yazis[])
{
    switch(textFlood)
    {
        case 1:
		{
		    if(oyuncuData[i][textAyar] == 0)
			{
		    	PlayerTextDrawSetString(i, TextYazi[i][0], yazis);
				PlayerTextDrawHide(i, TextYazi[i][0]);
				PlayerTextDrawShow(i, TextYazi[i][0]);
			}
		}
        case 2:
		{
		    if(oyuncuData[i][textAyar] == 0)
			{
		    	PlayerTextDrawSetString(i, TextYazi[i][1], yazis);
				PlayerTextDrawHide(i, TextYazi[i][1]);
				PlayerTextDrawShow(i, TextYazi[i][1]);
			}
		}
        case 3:
		{
		    if(oyuncuData[i][textAyar] == 0)
			{
		    	PlayerTextDrawSetString(i, TextYazi[i][2], yazis);
				PlayerTextDrawHide(i, TextYazi[i][2]);
				PlayerTextDrawShow(i, TextYazi[i][2]);
			}
		}
    }
	return 1;
}

stock TextModee(playerid, _mode)
{
	switch(_mode)
	{
	    case 1:
	    {
	        for(new i = 0; i < 14; i++)
	        {
	            if(i < 6) TextDrawHideForPlayer(playerid, Kutucuklar[i]);
	            if(i == 0 || i == 2 || i == 12) continue;
	            TextDrawHideForPlayer(playerid, AltBar[i]);
	        }
	        PlayerTextDrawHide(playerid, TextYazi[playerid][0]);
	        PlayerTextDrawHide(playerid, TextYazi[playerid][1]);
	        PlayerTextDrawHide(playerid, TextYazi[playerid][2]);
	        TextDrawHideForPlayer(playerid, SaatText[0]);
	        TextDrawHideForPlayer(playerid, SaatText[2]);
			TextDrawHideForPlayer(playerid, SagBosKutu);
			TextDrawHideForPlayer(playerid, SagBarText_Y[0]);
			TextDrawHideForPlayer(playerid, SagBarText_Y[1]);
			TextDrawHideForPlayer(playerid, SagBarText_Y[2]);
			TextDrawHideForPlayer(playerid, SagBarText_Y[3]);
			PlayerTextDrawHide(playerid, SagBarText[playerid][0]);
			PlayerTextDrawHide(playerid, SagBarText[playerid][1]);
			PlayerTextDrawHide(playerid, SagBarText[playerid][2]);
			PlayerTextDrawHide(playerid, SagBarText[playerid][3]);
			HidePlayerProgressBar(playerid, ExpBar[playerid]);
			TextDrawHideForPlayer(playerid, AltBar[4]);
			TextDrawHideForPlayer(playerid, AltBar[5]);
			TextDrawHideForPlayer(playerid, AltBar[6]);
			for(new i = 0; i < 4; i++)
			{
				PlayerTextDrawHide(playerid, SagBarr[playerid][i]);
			}
	    }
	    case 2:
	    {
			PlayerTextDrawShow(playerid, TextYazi[playerid][0]);
	        PlayerTextDrawShow(playerid, TextYazi[playerid][1]);
	        PlayerTextDrawShow(playerid, TextYazi[playerid][2]);
			TextDrawShowForPlayer(playerid, SaatText[0]);
	        TextDrawShowForPlayer(playerid, SaatText[2]);
			TextDrawShowForPlayer(playerid, SagBosKutu);
			TextDrawShowForPlayer(playerid, SagBarText_Y[0]);
			TextDrawShowForPlayer(playerid, SagBarText_Y[1]);
			TextDrawShowForPlayer(playerid, SagBarText_Y[2]);
			TextDrawShowForPlayer(playerid, SagBarText_Y[3]);
			PlayerTextDrawShow(playerid, SagBarText[playerid][0]);
			PlayerTextDrawShow(playerid, SagBarText[playerid][1]);
			PlayerTextDrawShow(playerid, SagBarText[playerid][2]);
			if(aranmaSeviyesii[playerid] != 0){
			PlayerTextDrawShow(playerid, SagBarText[playerid][3]);}
			ShowPlayerProgressBar(playerid, ExpBar[playerid]);
			for(new i = 0; i < 15; i++)
			{
			    if(i < 4) PlayerTextDrawShow(playerid, SagBarr[playerid][i]);
			    if(i < 6) TextDrawShowForPlayer(playerid, Kutucuklar[i]);
				if(i < 14) TextDrawShowForPlayer(playerid, AltBar[i]);
			}
			
			new upKill[35];
			PlayerTextDrawHide(playerid, SagBarr[playerid][2]);
			format(upKill, sizeof(upKill), "~r~~h~~h~~h~Basari: ~w~~h~%d/33", BasariIslem[playerid][BasariSayisi]);
			PlayerTextDrawSetString(playerid, SagBarr[playerid][2], upKill);
			PlayerTextDrawShow(playerid, SagBarr[playerid][2]);
	    }
	}
	return 1;
}

function SoygunTimer()
{
	foreach(new i : Player)
	{
	    if(aranmaSeviyesii[i] <= 0)
		{
		    if(gTeam[i] != POLIS ||
			gTeam[i] != CEVIK_KUVVET ||
			gTeam[i] != OZEL_HAREKAT_TIMI ||
			gTeam[i] == SIVIL_POLIS ||
			gTeam[i] == OZEL_KUVVET_B ||
			gTeam[i] == TURK_H_KUVVETLERI)
			{
				SetPlayerColor(i, SIVIL_RENK);
			}
		}
	    if(aranmaSeviyesii[i] >= 1 && aranmaSeviyesii[i] <= 3) SetPlayerColor(i, 0xFEC606FF);
	    if(aranmaSeviyesii[i] >= 4 && aranmaSeviyesii[i] <= 35) SetPlayerColor(i, 0xE67E22FF);
	    if(aranmaSeviyesii[i] >= 36) SetPlayerColor(i, 0xC0392BFF);

	    if(gTeam[i] == POLIS) SetPlayerColor(i, POLIS_RENK);
	    if(gTeam[i] == CEVIK_KUVVET) SetPlayerColor(i, 0x44BBFFFF);
	    if(gTeam[i] == OZEL_HAREKAT_TIMI) SetPlayerColor(i, 0xD33257FF);
	    if(gTeam[i] == SIVIL_POLIS) SetPlayerColor(i, 0xC4FFF3FF);
	    if(gTeam[i] == OZEL_KUVVET_B) SetPlayerColor(i, 0x20911EFF);
	    if(gTeam[i] == TURK_H_KUVVETLERI) SetPlayerColor(i, 0xFFFF66FF);

	    if(soygunCount[i] > 1)
	    {
	        new sMekan = GetPVarInt(i, "TempSoygun"), randPara;
            switch(oyuncuData[i][YetenekSoygun])
            {
				case 0:	randPara = random(500 - 400) + 400; // 10 - 11k
				case 1: randPara = random(700 - 500) + 500; // 14 - 15k
				case 2: randPara = random(1250 - 570) + 570; // 21- 24k
				case 3: randPara = random(1555 - 500) + 500; // 25 - max: 29k
				case 4: randPara = random(1770 - 830) + 830; // 30 - 34k
				case 5: randPara = random(1988 - 958) + 958; // 35 - 38k
				case 6: randPara = random(2321 - 987) + 987; // 39 - 42k
				case 7: randPara = random(2521 - 987) + 987; // 42 - 45k
				case 8: randPara = random(2921 - 987) + 987; // 46 - 50k
				case 9: randPara = random(3000 - 1445) + 1445; // 55 - 60k
				case 10: randPara = random(3776 - 1425) + 1425; // 60 - 70k
			}
	        soygunCount[i]--;
	        sBarGuncelle(i, SoygunIslem[sMekan][soygunIsmi]);
			pParaver(i, randPara);
	        soygunParasi[i] += randPara;
	    }
	    if(soygunCount[i] == 1)
	    {
	        soygunCount[i] = 0;
	        new bx[100+24+11+5], m = GetPVarInt(i, "TempSoygun");
			PlayerTextDrawHide(i, SoyulanBar[i][0]);
		    PlayerTextDrawHide(i, SoyulanBar[i][1]);
		    PlayerTextDrawHide(i, SoyulanBar[i][2]);
		    PlayerTextDrawHide(i, SoyulanBar[i][3]);
		    PlayerTextDrawHide(i, SoyulanBar[i][4]);
		    PlayerTextDrawHide(i, SoyulanBar[i][5]);
		    PlayerTextDrawHide(i, SoyulanBar[i][6]);
		    PlayerTextDrawHide(i, SoyulanBar[i][7]);
		    PlayerTextDrawHide(i, SoyulanBar[i][8]);
	        format(bx, sizeof(bx), "=> Soygun: {FFFFFF}%s mekanýndan $%s dolar çaldýn !", SoygunIslem[m][soygunIsmi], convertNumber(soygunParasi[i]));
	        SendClientMessage(i, 0x2FE2D9FF, bx);
	        format(bx, sizeof(bx), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, ~g~~h~%s ~w~~h~mekanindan ~p~~h~$%s ~w~~h~caldi !", getName(i), i, SoygunIslem[m][soygunIsmi], convertNumber(soygunParasi[i]));
		    textFlood++;
			foreach(new x : Player) TextdrawYazi(x, bx);
			if(textFlood == 3){ textFlood = 0; }
	        Skorver(i, SERVER_SOYGUN);
	        oyuncuData[i][soygunS]++;
	        //PlayerTextDrawHide(i, AltBarBilgi[i][0]);
	        format(bx, sizeof(bx), "%d", oyuncuData[i][soygunS]);
	        //PlayerTextDrawSetString(i, AltBarBilgi[i][0], bx);
	        //PlayerTextDrawShow(i, AltBarBilgi[i][0]);

	        if(oyuncuData[i][pVip] >= 1)
	        {
	            Skorver(i, 1);
	            if(oyuncuData[i][pAdmin] <= 0)
	            {
	            	format(bx, sizeof(bx), "{FC575E}[VÝP] {FFFFFF}Oyuncu {44BBFF}%s(%d){FFFFFF}, vip olduðundan dolayý her soygundan +1 skor kazanýyor.", getName(i), i);
					SendClientMessageToAll(-1, bx);
				}
			}

	        if(oyuncuData[i][soygunS] >= 100 && oyuncuData[i][soygunS] <= 249)
	        {
				if(BasariIslem[i][ilkYuzSoygun] == 0){
				BasariIslem[i][ilkYuzSoygun] = 1;
				basariKilidi(i, "ilkYuzSoygun", "Ýlk 100 Soygun", 100000, 500, 5);
				}
			}

   	        if(oyuncuData[i][soygunS] >= 250 && oyuncuData[i][soygunS] <= 499)
	        {
				if(BasariIslem[i][ilkikiyuzElli] == 0){
				BasariIslem[i][ilkikiyuzElli] = 1;
				basariKilidi(i, "ilkikiyuzElli", "Ýlk 250 Soygun", 500000, 1500, 10);
				}
			}

			if(oyuncuData[i][soygunS] >= 500 && oyuncuData[i][soygunS] <= 4999)
	        {
				if(BasariIslem[i][ilksBesyuz] == 0){
				BasariIslem[i][ilksBesyuz] = 1;
				basariKilidi(i, "ilksBesyuz", "Ýlk 500 Soygun", 1000000, 3000, 15);
				}
			}

			if(oyuncuData[i][soygunS] >= 5000 && oyuncuData[i][soygunS] <= 9999)
	        {
				if(BasariIslem[i][ilksBesbin] == 0){
				BasariIslem[i][ilksBesbin] = 1;
				basariKilidi(i, "ilksBesbin", "Ýlk 5000 Soygun", 2500000, 7000, 20);
				}
			}

			if(oyuncuData[i][soygunS] >= 10000)
	        {
				if(BasariIslem[i][ilksOnBin] == 0){
				BasariIslem[i][ilksOnBin] = 1;
				basariKilidi(i, "ilksOnBin", "Ýlk 10000 Soygun", 5000000, 10000, 500);
				}
			}
	        new expp = random(100 - 50) + 50;
	        oyuncuData[i][ExpPuan] += expp;
	        format(bx, sizeof(bx), "$%s~n~+%d_Exp", convertNumber(soygunParasi[i]), expp);
	        PlayerTextDrawSetString(i, ParaLevel[i][1], bx);
	        PlayerTextDrawShow(i, ParaLevel[i][1]);
	        SetPVarInt(i, "YaziMode", 1);
	        SetPVarInt(i, "YazilariSil", GetTickCount() + 4500);
			ExpGuncelle(i);
			if(oyuncuData[i][_LevelCount] >= 50)
			{
				if(oyuncuData[i][ExpPuan] > 50000)
				{
				    oyuncuData[i][_LevelCount] = 50;
					oyuncuData[i][ExpPuan] = 50000;
					ExpGuncelle(i);
				}
			}
	        new gID = g_oIslem[i][g_Id];
	        if(gID != -1){foreach(new b: Player){if(g_oIslem[b][g_Id] == gID){if(b != i){if(AFkMi[b] == 0){
			format(bx, sizeof(bx), "[GRUP] Oyuncu %s(%d), bir soygun yaptý ve gruba $%s dolar + 1 skor kazandýrdý.", getName(i), i, convertNumber(soygunParasi[i]/2));
			SendClientMessage(b, 0xCC9900FF, bx);Skorver(b, 1);pParaver(b, soygunParasi[i]/2);}}}}}
	    	soygunParasi[i] = 0;
		}
	}
	foreach(new s : Soygunlar)
	{
	    if(SoygunIslem[s][soygunSure] > 1) SoygunIslem[s][soygunSure]--;
	    if(SoygunIslem[s][soygunSure] == 1)
		{
		    new label[80];
			SoygunIslem[s][soygunSure] = 0;
			format(label, sizeof(label), "{FFC02E}%s(%d)\n{5CFF8F}Durum: {FFFFFF}Soyulabilir", SoygunIslem[s][soygunIsmi], s);
			UpdateDynamic3DTextLabelText(SoygunIslem[s][soyLabel], 0xFFFF00AA, label);
 		}
	}
	return 1;
}

stock sBarGuncelle(playerid, sMekn[])
{
    if(oyuncuData[playerid][textAyar] == 0){
    PlayerTextDrawShow(playerid, SoyulanBar[playerid][0]);
    PlayerTextDrawShow(playerid, SoyulanBar[playerid][1]);
    PlayerTextDrawShow(playerid, SoyulanBar[playerid][2]);
    PlayerTextDrawShow(playerid, SoyulanBar[playerid][4]);
    PlayerTextDrawShow(playerid, SoyulanBar[playerid][6]);}
	new Float:tpozisyon, bx[25];
	format(bx, sizeof(bx), "%s", sMekn);
	PlayerTextDrawHide(playerid, SoyulanBar[playerid][3]);
	PlayerTextDrawSetString(playerid, SoyulanBar[playerid][3], bx);
	if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, SoyulanBar[playerid][3]);}
 	format(bx, sizeof(bx), "$%s", convertNumber(soygunParasi[playerid]));
	PlayerTextDrawHide(playerid, SoyulanBar[playerid][5]);
	PlayerTextDrawSetString(playerid, SoyulanBar[playerid][5], bx);
	if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, SoyulanBar[playerid][5]);}
  	format(bx, sizeof(bx), "00:%d", soygunCount[playerid]);
	PlayerTextDrawHide(playerid, SoyulanBar[playerid][8]);
	PlayerTextDrawSetString(playerid, SoyulanBar[playerid][8], bx);
	if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, SoyulanBar[playerid][8]);}
    switch(soygunCount[playerid])
    {
        case 25: tpozisyon = 145.000000;
        case 24: tpozisyon = 140.000000;
        case 23: tpozisyon = 135.000000;
        case 22: tpozisyon = 130.000000;
        case 21: tpozisyon = 125.000000;
        case 20: tpozisyon = 120.000000;
        case 19: tpozisyon = 115.000000;
        case 18: tpozisyon = 110.000000;
        case 17: tpozisyon = 105.000000;
        case 16: tpozisyon = 100.000000;
        case 15: tpozisyon = 95.000000;
        case 14: tpozisyon = 90.000000;
        case 13: tpozisyon = 85.000000;
        case 12: tpozisyon = 80.000000;
        case 11: tpozisyon = 75.000000;
        case 10: tpozisyon = 70.000000;
        case 9: tpozisyon = 65.000000;
        case 8: tpozisyon = 60.000000;
        case 7: tpozisyon = 55.000000;
        case 6: tpozisyon = 50.000000;
        case 5: tpozisyon = 45.000000;
        case 4: tpozisyon = 40.000000;
        case 3: tpozisyon = 35.000000;
        case 2: tpozisyon = 32.000000;
        case 1: tpozisyon = 29.000000;
    }
    PlayerTextDrawHide(playerid, SoyulanBar[playerid][7]);
    PlayerTextDrawTextSize(playerid, SoyulanBar[playerid][7], tpozisyon, 0.000000);
    if(oyuncuData[playerid][textAyar] == 0){
    PlayerTextDrawShow(playerid, SoyulanBar[playerid][7]);}
	return 1;
}

function RgbPolis()
{
	if(RainbowError == sizeof(Renkler) - 1) RainbowError = 0;
    RainbowError++;
	return 1;
}

stock EvKontrol(playerid)
{
	foreach(new e: Evler)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.2, EvIslem[e][EvPos][0], EvIslem[e][EvPos][1], EvIslem[e][EvPos][2])) return e;
	}
	return -1;
}

stock evPreloader(playerid)
{
    new id = GetPVarInt(playerid, "Evim"), eBaslik[40] = "{FFFFFF}Ayar Adý\tSonuçlar\tÝþlemler\n", ba[500];
	if(id == -1) return hataMesaji(playerid, "Herhangi bir evde deðilsiniz veya Kod: -1");
	if(strcmp(EvIslem[id][EvSahibi], getName(playerid), false) != 0) return hataMesaji(playerid, "Bu ev size ait deðil. Ýþlem yapamazsýnýz.");
    format(ba, sizeof(ba), "%s{FFFFFF}» Ev Ismi:\t{00B5B5}%s\t{FFFFFF}» Deðiþtir\n{FFFFFF}» Ev Parasý:\t{00B5B5}$%s\t{FFFFFF}» Para Çek - Para Yatýr\n", eBaslik, EvIslem[id][EvIsmi], convertNumber(EvIslem[id][evPara]));
	if(strcmp(EvIslem[id][evSifresi], "-") == 0)
	{
		format(ba, sizeof(ba), "%s{FFFFFF}» Þifre:\t{FEC606}Yok\t{FFFFFF}» Deðiþtir\n", ba);
	}
	else
	{
		format(ba, sizeof(ba), "%s{FFFFFF}» Þifre:\t{00B5B5}%s\t{FFFFFF}» Deðiþtir\n", ba, EvIslem[id][evSifresi]);
	}
    format(ba, sizeof(ba), "%s{FFFFFF}» Evi Sat:\t{00B5B5}$%s\t{FFFFFF}» Sat\n{FFFFFF}» Evi Hemen Sat:\t-\t» Hýzlý Satýþ\n", ba, convertNumber(EvIslem[id][evFiyat]));
	ShowPlayerDialog(playerid, DIALOG_EVMENU, DIALOG_STYLE_TABLIST_HEADERS, EvIslem[id][EvIsmi], ba, "Seç", "Kapat");
	return 1;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float: a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if (GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}

stock GetXYInFrontOfVehicle(vehicleid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicleid,x,y,a);
	GetVehicleZAngle(vehicleid,a);

	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}


public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	if(extraid == AKSESUAR_SELECT)
	{
	    if(!response) return kiyafetListesi(playerid);
	    if(response)
	    {
	        new ff;
			for(new i = 0; i < sizeof(Aksesuarlar2); i++)
			{
			    if(modelid == Aksesuarlar2[i][modelidx])
			    {
			        ff = Aksesuarlar2[i][fiyatx];
			        break;
			    }
			}
			if(ParaKorumasi[playerid] < ff) hataMesaji(playerid, "Bu aksesuarý satýn almak için yeterli paran yok !"), kiyafetListesi(playerid);
			new bSlot = bosKisim(playerid), bolgexID = GetPVarInt(playerid, "KBolge");
			SetPVarInt(playerid, "kiyafetTutar", ff);
			SetPlayerAttachedObject(playerid, bSlot, modelid, bolgexID, 0.101, -0.0, 0.0, 5.50, 84.60, 83.7, 1.0, 1.0, 1.0);
            EditAttachedObject(playerid, bSlot);
		}
	}
 	if(extraid == GOZLUK_SELECT)
	{
	    if(!response) return kiyafetListesi(playerid);
	    if(response)
	    {
	        new ff;
			for(new i = 0; i < sizeof(Gozlukler); i++)
			{
			    if(modelid == Gozlukler[i][modelidx])
			    {
			        ff = Gozlukler[i][fiyatx];
			        break;
			    }
			}
			if(ParaKorumasi[playerid] < ff) hataMesaji(playerid, "Bu aksesuarý satýn almak için yeterli paran yok !"), kiyafetListesi(playerid);
			new bSlot = bosKisim(playerid), bolgexID = GetPVarInt(playerid, "KBolge");
			SetPVarInt(playerid, "kiyafetTutar", ff);
			SetPlayerAttachedObject(playerid, bSlot, modelid, bolgexID, 0.101, -0.0, 0.0, 5.50, 84.60, 83.7, 1.0, 1.0, 1.0);
            EditAttachedObject(playerid, bSlot);
		}
	}
  	if(extraid == SAPKA_PERUK_SELECT)
	{
	    if(!response) return kiyafetListesi(playerid);
	    if(response)
	    {
	        new ff;
			for(new i = 0; i < sizeof(SapkaAndPeruk); i++)
			{
			    if(modelid == SapkaAndPeruk[i][modelidx])
			    {
			        ff = SapkaAndPeruk[i][fiyatx];
			        break;
			    }
			}
			if(ParaKorumasi[playerid] < ff) hataMesaji(playerid, "Bu aksesuarý satýn almak için yeterli paran yok !"), kiyafetListesi(playerid);
			new bSlot = bosKisim(playerid), bolgexID = GetPVarInt(playerid, "KBolge");
			SetPVarInt(playerid, "kiyafetTutar", ff);
			SetPlayerAttachedObject(playerid, bSlot, modelid, bolgexID, 0.101, -0.0, 0.0, 5.50, 84.60, 83.7, 1.0, 1.0, 1.0);
            EditAttachedObject(playerid, bSlot);
		}
	}
   	if(extraid == MASKE_KASK_SELECT)
	{
	    if(!response) return kiyafetListesi(playerid);
	    if(response)
	    {
	        new ff;
			for(new i = 0; i < sizeof(MaskeAndKask); i++)
			{
			    if(modelid == MaskeAndKask[i][modelidx])
			    {
			        ff = MaskeAndKask[i][fiyatx];
			        break;
			    }
			}
			if(ParaKorumasi[playerid] < ff) hataMesaji(playerid, "Bu aksesuarý satýn almak için yeterli paran yok !"), kiyafetListesi(playerid);
			new bSlot = bosKisim(playerid), bolgexID = GetPVarInt(playerid, "KBolge");
			SetPVarInt(playerid, "kiyafetTutar", ff);
			SetPlayerAttachedObject(playerid, bSlot, modelid, bolgexID, 0.101, -0.0, 0.0, 5.50, 84.60, 83.7, 1.0, 1.0, 1.0);
            EditAttachedObject(playerid, bSlot);
		}
	}
	return 1;
}

public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	return 1;
}

forward BarikatKontrol();
public BarikatKontrol()
{
	foreach(new i : Player)
	{
	    if(AFkMi[i] == 0)
	    {
	    	oyuncuData[i][gunlukonline]++;
		}else{
			oyuncuData[i][gunlukonlineafk]++;
		}
	}
	for(new i = 0; i < MAX_BARIKAT; i++)
	{
	    if(BarikatIslem[i][barikatDurum] == 0) continue;
	    if(gettime() > BarikatIslem[i][barikatSure])
	    {
	        new playerID = GetPlayerID(BarikatIslem[i][barikatOlusturan]);
	        if(playerID != INVALID_PLAYER_ID) { barikatSayi[playerID] = 0; }
	        BarikatIslem[i][barikatDurum] = 0;
	        format(BarikatIslem[i][barikatOlusturan], MAX_PLAYER_NAME, "");
			BarikatIslem[i][barikatPoss][0] = 0.0;
            BarikatIslem[i][barikatPoss][1] = 0.0;
            BarikatIslem[i][barikatPoss][2] = 0.0;
            BarikatIslem[i][barikatPoss][3] = 0.0;
            BarikatIslem[i][barikatPoss][4] = 0.0;
            BarikatIslem[i][barikatPoss][5] = 0.0;
            BarikatIslem[i][barikatSure] = 0;
	        DestroyDynamicObject(BarikatIslem[i][b_objeId]);
	        BarikatIslem[i][b_objeId] = INVALID_OBJECT_ID;
	        DestroyDynamic3DTextLabel(BarikatIslem[i][barikatLabel]);
	        BarikatIslem[i][barikatLabel] = Text3D: INVALID_3DTEXT_ID;
	        Iter_Remove(Barikatlar, i);
	    }
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	SCM_Ex(playerid, -1, "Debug Mode: --> Obje Id: %d", objectid);
	//if(!IsValidDynamicObject(objectid)) return 1;
	return 1;
}

function AracSQLID(playerid)
{
	new oaid = GetPVarInt(playerid, "aaPid");
    AraclarIslem[oaid][aSQL] = cache_insert_id();
    DeletePVar(playerid, "aaPid");
	return 1;
}

stock NormalAraclariHazirla(playerid)
{
	new query[65 + 24];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `normalarac` WHERE `aSahip` = '%e'", getName(playerid));
	mysql_tquery(g_SQL, query, "nAracYuklet", "ds", playerid, getName(playerid));
	return 1;
}

function nAracYuklet(playerid, isim[])
{
    new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
   		for(new i = 0; i < rows; i++)
  	    {
  	        new
			  	sqlID,
			  	aModel,
			  	aSahip[24],
			  	Float: aPos[4],
			  	aRe[2],
			  	pJobb,
			  	aModd[17],
			  	_Plaka[11],
			  	bSlot = aracKontrolu(playerid),
			  	nwArac
			;
  	        cache_get_value_name_int(i, "nid", sqlID);
  	        cache_get_value_name_int(i, "aModel", aModel);
  	        cache_get_value_name(i, "aSahip", aSahip, sizeof(aSahip));
  	        cache_get_value_name_float(i, "aX", aPos[0]);
  	        cache_get_value_name_float(i, "aY", aPos[1]);
  	        cache_get_value_name_float(i, "aZ", aPos[2]);
  	        cache_get_value_name_float(i, "aA", aPos[3]);
  	        cache_get_value_name_int(i, "aR1", aRe[0]);
  	        cache_get_value_name_int(i, "aR2", aRe[1]);
  	        cache_get_value_name_int(i, "PaintJob", pJobb);
  	        cache_get_value_name_int(i, "aP1", aModd[0]);
  	        cache_get_value_name_int(i, "aP2", aModd[1]);
  	        cache_get_value_name_int(i, "aP3", aModd[2]);
  	        cache_get_value_name_int(i, "aP4", aModd[3]);
  	        cache_get_value_name_int(i, "aP5", aModd[4]);
  	        cache_get_value_name_int(i, "aP6", aModd[5]);
  	        cache_get_value_name_int(i, "aP7", aModd[6]);
  	        cache_get_value_name_int(i, "aP8", aModd[7]);
  	        cache_get_value_name_int(i, "aP9", aModd[8]);
  	        cache_get_value_name_int(i, "aP10", aModd[9]);
  	        cache_get_value_name_int(i, "aP11", aModd[10]);
  	        cache_get_value_name_int(i, "aP12", aModd[11]);
  	        cache_get_value_name_int(i, "aP13", aModd[12]);
  	        cache_get_value_name_int(i, "aP14", aModd[13]);
  	        cache_get_value_name_int(i, "aP15", aModd[14]);
  	        cache_get_value_name_int(i, "aP16", aModd[15]);
  	        cache_get_value_name_int(i, "aP17", aModd[16]);
  	        cache_get_value_name(i, "Plaka", _Plaka, 11);
            nwArac = CreateVehicle(aModel, aPos[0], aPos[1], aPos[2], aPos[3], aRe[0], aRe[1], 9999999);
            format(AraclarIslem[nwArac][n_Plaka], 11, _Plaka);
            SetVehicleNumberPlate(nwArac, AraclarIslem[nwArac][n_Plaka]);
            format(AraclarIslem[nwArac][a_Sahip], 24, getName(playerid));
            AraclarIslem[nwArac][a_Pos][0] = aPos[0];
            AraclarIslem[nwArac][a_Pos][1] = aPos[1];
            AraclarIslem[nwArac][a_Pos][2] = aPos[2];
            AraclarIslem[nwArac][a_Pos][3] = aPos[3];
			AraclarIslem[nwArac][a_Renk][0] = aRe[0];
			AraclarIslem[nwArac][a_Renk][1] = aRe[1];
			AraclarIslem[nwArac][pJob] = pJobb;
			for(new m = 0; m < 17; m++) AraclarIslem[nwArac][a_mParca][m] = aModd[m];
			AraclarIslem[nwArac][aAktif] = true;
			AraclarIslem[nwArac][aSQL] = sqlID;
			aracSlotu[playerid][bSlot] = nwArac;
			if(AraclarIslem[nwArac][pJob] != 0) ChangeVehiclePaintjob(nwArac, AraclarIslem[nwArac][pJob] - 1);
			ChangeVehicleColor(nwArac, AraclarIslem[nwArac][a_Renk][0], AraclarIslem[nwArac][a_Renk][1]);
			for(new m = 0; m < 17; ++m) if(AraclarIslem[nwArac][a_mParca][m] != 0) AddVehicleComponent(nwArac, AraclarIslem[nwArac][a_mParca][m]);
		  }
  	}
	return 1;
}

stock evlerimiYukle(playerid)
{
	foreach(new e : Evler)
	{
 		if(strcmp(EvIslem[e][EvSahibi], getName(playerid), false) == 0)
 		{
 		    SetPVarInt(playerid, "Evim", -1);
			evim[playerid] = e;
			break;
 		}
 		else
		{
		    SetPVarInt(playerid, "Evim", -1);
			evim[playerid] = -1;
		}
	}
	return 1;
}

forward KiyafetYukle(playerid, isim[]);
public KiyafetYukle(playerid, isim[])
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
   		for(new i = 0; i < rows; i++)
  	    {
  	        new
			  	SqlID,
			  	kModel,
			  	kBone,
			  	Float: kPos[9],
			  	bslot = bosKisim(playerid)
			;
			cache_get_value_name_int(i, "kid", SqlID);
			cache_get_value_name_int(i, "kModel", kModel);
			cache_get_value_name_int(i, "kBone", kBone);
			cache_get_value_name_float(i, "kX", kPos[0]);
			cache_get_value_name_float(i, "kY", kPos[1]);
			cache_get_value_name_float(i, "kZ", kPos[2]);
			cache_get_value_name_float(i, "kRX", kPos[3]);
			cache_get_value_name_float(i, "kRY", kPos[4]);
			cache_get_value_name_float(i, "kRZ", kPos[5]);
			cache_get_value_name_float(i, "kSX", kPos[6]);
			cache_get_value_name_float(i, "kSY", kPos[7]);
			cache_get_value_name_float(i, "kSZ", kPos[8]);
  	        ao[playerid][bslot][ao_model] = kModel;
  	        ao[playerid][bslot][ao_bone] = kBone;
  	        ao[playerid][bslot][ao_x] = kPos[0];
  	        ao[playerid][bslot][ao_y] = kPos[1];
  	        ao[playerid][bslot][ao_z] = kPos[2];
  	        ao[playerid][bslot][ao_rx] = kPos[3];
  	        ao[playerid][bslot][ao_ry] = kPos[4];
  	        ao[playerid][bslot][ao_rz] = kPos[5];
  	        ao[playerid][bslot][ao_sx] = kPos[6];
  	        ao[playerid][bslot][ao_sy] = kPos[7];
  	        ao[playerid][bslot][ao_sz] = kPos[8];
  	        ao[playerid][bslot][ao_Sqlid] = SqlID;
			SetPlayerAttachedObject(playerid, bslot, kModel, kBone, kPos[0], kPos[1], kPos[2], kPos[3], kPos[4], kPos[5], kPos[6], kPos[7], kPos[8]);
  	    }
  	    for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	}
	return 1;
}

forward TeleportCam(playerid, step, Float:xg, Float:yg, Float:zg, Float:ag);
public TeleportCam(playerid, step, Float:xg, Float:yg, Float:zg, Float:ag)
{
	switch (step)
	{
		case 1:
		{
			if(GetPVarInt(playerid,"ENDTP") > gettime() || IsPlayerInRangeOfPoint(playerid, 5.0, xg, yg, zg)) return true;
			SetPVarInt(playerid,"ENDTP",gettime() + 10);
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			tpp[playerid][0] = xg,tpp[playerid][1] = yg,tpp[playerid][2] = zg,tpp[playerid][3] = ag; // write end coords
			GetPlayerPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]); // check start coords and write
			if(IsPlayerInAnyVehicle(playerid) && 2 == GetPlayerState(playerid)) SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), playerid+1);
			SetPlayerVirtualWorld(playerid,playerid+1);
			TogglePlayerControllable(playerid,0);
			SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+20);
			SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
			SetTimerEx("TeleportCam",1000,false,"ii",playerid,2);
		}
		case 2:
		{
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+50);
			SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
			SetTimerEx("TeleportCam",1000,false,"ii",playerid,3);
		}
		case 3:
		{
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+100);
			SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
			SetTimerEx("TeleportCam",1000,false,"ii",playerid,4);
		}
		case 4:
		{
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+200);
			SetPlayerCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]);
			SetTimerEx("TeleportCam",1000,false,"ii",playerid,5);
		}
		case 5:
		{
			if(IsPlayerInAnyVehicle(playerid) && 2 == GetPlayerState(playerid))
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),tpp[playerid][3]);
			}
			else
			{
				SetPlayerPos(playerid,tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
				SetPlayerFacingAngle(playerid,tpp[playerid][3]);
			}
			InterpolateCameraPos(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2]+200, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]+200, 3000);
			InterpolateCameraLookAt(playerid, ttp[playerid][0],ttp[playerid][1],ttp[playerid][2], tpp[playerid][0],tpp[playerid][1],tpp[playerid][2], 3000);
			SetTimerEx("TeleportCam",4000,false,"ii",playerid,6);
		}
		case 6:
		{
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]+100);
			SetPlayerCameraLookAt(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
			SetTimerEx("TeleportCam",1000,false,"ii",playerid,7);
		}
		case 7:
		{
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]+50);
			SetPlayerCameraLookAt(playerid, tpp[playerid][0],tpp[playerid][1],tpp[playerid][2]);
			SetTimerEx("TeleportCam",1000,false,"ii",playerid,8);
		}
		case 8:
		{
			PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			TogglePlayerControllable(playerid, true);
			SetPlayerVirtualWorld(playerid,0);
			if(IsPlayerInAnyVehicle(playerid) && 2 == GetPlayerState(playerid)) SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
		}
	}
	return true;
}

stock EkipIsmiDenetle(ekipIsim[])
{
	foreach(new e: _Ekipler) if(strcmp(ekipIslem[e][e_Ismi], ekipIsim, false) == 0) return 1;
	return 0;
}

stock EkipSlotKontrol(ekipid)
{
	new fxx_c = 0;
	foreach(new i: Player) if(e_oIslem[i][e_Id] == ekipid) fxx_c++;
	return fxx_c;
}

stock GrupIsmiDenetle(grupIsim[])
{
	foreach(new e: _Gruplar) if(strcmp(grupIslem[e][g_Ismi], grupIsim, false) == 0) return 1;
	return 0;
}

stock GrupSlotKontrol(grupID)
{
	new fxx_c = 0;
	foreach(new i: Player) if(g_oIslem[i][g_Id] == grupID) fxx_c++;
	return fxx_c;
}

stock SpawnBeklet(id, sure = 150)
{
	TogglePlayerControllable(id,0);
	SetTimerEx("DonmaCoz",sure,false,"d",id);
	return 1;
}

function DonmaCoz(playerid)
{
	TogglePlayerControllable(playerid,1);
	return 1;
}

function NormalYap(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPVarInt(playerid, "soklandi", 0);
	    TogglePlayerControllable(playerid, 1);
	    ClearAnimations(playerid);
	    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
	    SendClientMessage(playerid, 0xF7D76DFF, "[TAZER TABANCASI] Yemiþ olduðunuz tazer etkisi geçti.");
	    KillTimer(tazerTimer[playerid]);
	}
	return 1;
}

function SureKontrolleri(i)
{
    new str[75];
	if(oyuncuData[i][pAdmin] != 0)
	{
	    if(oyuncuData[i][pAdminSure] != 0)
	    {
			if(gettime() > oyuncuData[i][pAdminSure])
			{
		    	oyuncuData[i][pAdmin] = 0;
	    		oyuncuData[i][pAdminSure] = 0;
				mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `aLevel` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[i][xID]);
				mysql_query(g_SQL, str);

			 	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `AdminSure` = 0 WHERE `id` = %d LIMIT 1", oyuncuData[i][xID]);
				mysql_query(g_SQL, str);

				SendClientMessage(i,0xFF0000FF,"Admin Süre Bitiþi: {ffffff}Adminlik süreniz bitmiþtir.");
				ShowPlayerDialog(i,95959, DIALOG_STYLE_MSGBOX, "{ffffff}Admin Süresi Bitti", "Bilgilendirme: Adminlik süreniz bitti.\n", "Kapat", "");
			}
		}
	}

	if(oyuncuData[i][pVip] != 0)
	{
		if(gettime() > oyuncuData[i][pVipSure])
		{
			oyuncuData[i][pVip] = 0;
			oyuncuData[i][pVipSure] = 0;

			mysql_format(g_SQL, str, sizeof(str), "UPDATE `oyuncuveri` SET `VipL` = '0' WHERE `id` = '%d' LIMIT 1", oyuncuData[i][xID]);
			mysql_query(g_SQL, str);

			mysql_format(g_SQL, str, sizeof(str), "UPDATE `oyuncuveri` SET `VipSure` = '0' WHERE `id` = '%d' LIMIT 1", oyuncuData[i][xID]);
			mysql_query(g_SQL, str);

			if(oyuncuData[i][YetenekSoygun] > 25) oyuncuData[i][YetenekSoygun] = 25;

			SendClientMessage(i,0xFF0000FF,"VIP Bilgilendirme: {ffffff}Vip süreniz bitmiþtir");
			ShowPlayerDialog(i,95959, DIALOG_STYLE_MSGBOX, "{ffffff}Vip Bitti", "Bilgilendirme: Vip Süreniz Bitmiþtir.\n", "Kapat", "");
		}
	}
	return 1;
}

forward GateUpdate();
public GateUpdate()
{
	new tarih_0x[3], saat_0x[3], ssx[30];
    getdate(tarih_0x[0], tarih_0x[1], tarih_0x[2]);
    gettime(saat_0x[0], saat_0x[1], saat_0x[2]);
    saat_0x[0] -= 1;
	TextDrawHideForAll(SaatText[1]);
	format(ssx, sizeof(ssx), "%02d.%02d.%d - %02d:%02d", tarih_0x[2], tarih_0x[1], tarih_0x[0], saat_0x[0] + 1, saat_0x[1]);
	TextDrawSetString(SaatText[1], ssx);

    SetActorPos(SehirActorler[0], -1929.786376, 872.388183, 35.414062);
    SetActorFacingAngle(SehirActorler[0], 324.090637);

    SetActorPos(SehirActorler[1], -2213.677734, 580.504760, 35.164062);
    SetActorFacingAngle(SehirActorler[1], 271.725372);

    SetActorPos(SehirActorler[2], -2202.507080, 116.936042, 35.447158);
    SetActorFacingAngle(SehirActorler[2], 74.950149);

    SetActorPos(SehirActorler[3], -2577.488037, 122.479766, 4.335937);
    SetActorFacingAngle(SehirActorler[3], 264.269744);

    SetActorPos(SehirActorler[4], -2133.768554, 264.327239, 35.621990);
    SetActorFacingAngle(SehirActorler[4], 242.579681);

    SetActorPos(SehirActorler[5], -1978.972900, 433.164154, 25.686964);
    SetActorFacingAngle(SehirActorler[5], 359.767608);

    SetActorPos(SehirActorler[6], -2780.308837, -56.688892, 10.062500);
    SetActorFacingAngle(SehirActorler[6], 268.040802);

    SetActorPos(SehirActorler[7], -2182.300781, -117.330345, 35.320312);
    SetActorFacingAngle(SehirActorler[7], 354.932342);

//	SetActorPos(SehirActorler[8], -2442.586425, 491.832031, 30.089290);  ---> mit
//    SetActorFacingAngle(SehirActorler[8], 204.972000);

   	SetActorPos(SehirActorler[9], -1748.791992, 962.630432, 24.882499);
    SetActorFacingAngle(SehirActorler[9], 176.432052);

	SetActorPos(SehirActorler[10], -1597.3688, 439.1314, 7.1797);
    SetActorFacingAngle(SehirActorler[10], 45.0613);

   	SetActorPos(SehirActorler[11], -2454.4304, -628.5150, 132.7248);
    SetActorFacingAngle(SehirActorler[11], 308.4893);

	foreach(new i : Player)
	{
	    if(oyuncuData[i][realSaat] == 0 && GetPVarInt(i, "SpawnOldum") == 1)
	    {
	        SetPlayerTime(i, saat_0x[0] + 1, saat_0x[1]);
	    }
        if(GetPVarInt(i, "SpawnOldum") == 1)
		{
			if(oyuncuData[i][textAyar] == 0)
			{
				TextDrawShowForPlayer(i, SaatText[1]);
			}
		}

        if(oyuncuData[i][sureKayit] >= 1 && GetPVarInt(i, "SpawnOldum") == 1)
        {
            if(oyuncuData[i][sureKayit] == 1)
            {
                oyuncuData[i][sureKayit] = 0;
                new query[80];
				mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = 0 WHERE `id` = %d", oyuncuData[i][xID]);
				mysql_query(g_SQL, query);
                return 1;
            }
            if(oyuncuData[i][sureKayit] < 0)
            {
                new query[80];
                oyuncuData[i][sureKayit] = 0;
				mysql_format(g_SQL, query, sizeof query, "UPDATE `oyuncuveri` SET `KonusmaYasagi` = 0 WHERE `id` = %d", oyuncuData[i][xID]);
				mysql_query(g_SQL, query);
                return 1;
            }
            oyuncuData[i][sureKayit]--;
        }

	    if(IsPlayerInRangeOfPoint(i, 10.0, -1602.664916, 433.017089, 7.179704) && gOrdu[0] == 0)
	    {
			if(gTeam[i] >= 7 && gTeam[i] <= 8)
			{
	        	gOrdu[0] = 1;
	        	MoveDynamicObject(gate_Ordu[0], -1602.157348, 432.962036, 3.381236, 3.0, 0.000000, 0.000000, 44.899974);
	        	SetTimer("OzelKuvvetKapat", 3000, false);
			}
	    }

		if(IsPlayerInRangeOfPoint(i, 10.0, -1518.193359, 471.638122, 7.199062) && gOrdu[1] == 0)
	    {
			if(gTeam[i] >= 7 && gTeam[i] <= 8)
			{
	        	gOrdu[1] = 1;
	        	MoveDynamicObject(gate_Ordu[1], -1517.794311, 471.704620, 3.299068, 3.0, 0.000000, 0.000000, 89.799987);
	        	SetTimer("OzelKuvvetKapat2", 3000, false);
			}
	    }

	    if(IsPlayerInRangeOfPoint(i, 10.0, -2456.082763, -620.303039, 132.562988) && ohgD == 0)
	    {
			if(gTeam[i] >= 4 && gTeam[i] <= 8)
			{
	        	ohgD = 1;
	        	MoveDynamicObject(gate_OzelHarekatGate, -2456.477294, -620.521057, 128.681381, 3.0, 0.000000, 0.000000, -89.499916);
	        	SetTimer("OzelHarekatKapat", 3000, false);
			}
	    }

	    if(IsPlayerInRangeOfPoint(i, 10.0, -1632.883300, 689.443847, 7.187374) && gPdurum == 0)
	    {
		    if(gTeam[i] >= 2 && gTeam[i] <= 8)
		    {
		        gPdurum = 1;
				MoveDynamicObject(gate_Polis, -1635.812866, 688.591430, 23.537424, 3.0, 0.000000, 0.000000, -90.000045);
                SetTimer("PolisGateKapat", 3000, false);
			}
	    }

		if(IsPlayerInRangeOfPoint(i, 10.0, -1772.238281, 984.801391, 23.507812) && gCKdurum == 0) // Çevik kuvvet
	    {
            if(gTeam[i] >= 3 && gTeam[i] <= 8)
            {
                gCKdurum = 1;
            	MoveDynamicObject(gate_CevikKuvvet, -1770.164428, 985.247863, 8.744667, 3.0, 0.000000, 0.000000, 0.000000);
                SetTimer("CevikKuvvetGate", 3000, false);
			}
	    }
	}
	return 1;
}

function OzelKuvvetKapat()
{
    gOrdu[0] = 0;
    MoveDynamicObject(gate_Ordu[0], -1602.157348, 432.962036, 8.411243, 3.0, 0.000000, 0.000000, 44.899974);
	return 1;
}

function OzelKuvvetKapat2()
{
    gOrdu[1] = 0;
    MoveDynamicObject(gate_Ordu[1], -1517.794311, 471.704620, 8.879077, 3.0, 0.000000, 0.000000, 89.799987);
	return 1;
}

forward OzelHarekatKapat();
public OzelHarekatKapat()
{
    ohgD = 0;
    MoveDynamicObject(gate_OzelHarekatGate, -2456.477294, -620.521057, 134.191253, 3.0, 0.000000, 0.000000, -89.499916);
	return 1;
}

forward PolisGateFix();
public PolisGateFix()
{
    gPdurum = 0;
    MoveDynamicObject(gate_Polis, -1635.812866, 688.591430, 23.537424, 3.0, 0.000000, 0.000000, -90.000045);
    SetTimer("PolisGateKapat", 3000, false);
	return 1;
}

forward PolisGateKapat();
public PolisGateKapat()
{
    gPdurum = 0;
    MoveDynamicObject(gate_Polis, -1635.812866, 688.591430, 18.627367, 3.0, 0.000000, 0.000000, -90.000045);
	return 1;
}

forward CevikKuvvetGate();
public CevikKuvvetGate()
{
    gCKdurum = 0;
    MoveDynamicObject(gate_CevikKuvvet, -1770.164428, 985.247863, 16.434858, 3.0, 0.000000, 0.000000, 0.000000);
	return 1;
}

stock hapisSureDuzen(i, time)
{
    new string[120], minutes, seconds;
	if(time >= 599)
	{
 		minutes = floatround(time / 60);
        seconds = floatround(time - minutes * 60);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "~g~~h~~h~Tahliye Olmana~n~~r~~h~~h~- %02d dk %02d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
		else
		{
		    format(string, sizeof(string), "~g~~h~~h~Tahliye Olmana~n~~r~~h~~h~- %02d dk %d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
	}
	if(time >= 59 && time <= 599)
	{
        minutes = floatround(time / 60);
        seconds = floatround(time - minutes * 60);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "~g~~h~~h~Tahliye Olmana~n~~r~~h~~h~- %d dk %02d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
		else
		{
		    format(string, sizeof(string), "~g~~h~~h~Tahliye Olmana~n~~r~~h~~h~- %d dk %d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
    }
	if(time <= 59)
	{
        seconds = floatround(time);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "~g~~h~~h~Tahliye Olmana~n~~r~~h~~h~- %02d -~n~~y~~h~~h~saniye var", seconds);
		}
		else
		{
		    format(string, sizeof(string), "~g~~h~~h~Tahliye Olmana~n~~r~~h~~h~- %d -~n~~y~~h~~h~saniye var", seconds);
		}
    }
	return GameTextForPlayer(i, string, 1100, 5);
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		GameTextForPlayer(playerid, "~r~~h~~h~HATALI KOMUT", 2500, 4);
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	// komut block
	/*
	if (strcmp("/sifremiunuttum", cmdtext, true, 10) == 0)
	{
	    if(KarakterEkraninda[playerid] == true)
	    {
		    if(GetPVarInt(playerid, "KayitYapiyor") == 0)
		    {
		        hataMesaji(playerid, "Kayýt yaparken bu komutu kullanamazsýn !");
		        kayitMenu(playerid, 0);
		    }
		    else
		    {
				if(GuvenliKontrol[playerid] == true)
				{
				    //GuveenlikGiriss(playerid);
				    GuvenlikSuphe(playerid, 2);
					return 1;
				}
			}
		}else { hataMesaji(playerid, "Bu komutu giriþ yapma bölümünde kullanabilirsiniz."); }
	    return 0;
	}
	*/
	if(GetPVarInt(playerid, "SpawnOldum") == 0) return hataMesaji(playerid, "Spawn olmadan hiç bir komut kullanamazsýn !"), 0;
	if(GetPVarInt(playerid, "DuelloYasak") == 1) return hataMesaji(playerid, "Düello da komut kullanamazsýn !"), 0;
	if (strcmp("/kefalet", cmdtext, true, 10) == 0)
	{
		if(oyuncuData[playerid][hapisSure] == 0) return hataMesaji(playerid, "Hapiste deðilsin !"), 0;
		if(oyuncuData[playerid][kefaletmod] == 1) return hataMesaji(playerid, "Admin tarafýndan hapise atýldýðýnýz için kefalet ödeyemezsiniz !"), 0;
		if(SureYasagi(playerid, "KefaletBlock", 60)) return 0;
		new kflt[100], kefalet_miktar = oyuncuData[playerid][hapisSure]*950;
		SetPVarInt(playerid, "KefaletMiktar", kefalet_miktar);
		format(kflt, sizeof(kflt), "{FFC745}$%s {FFFFFF}dolar kefalet parasý ödeyip\n{FFFFFF}hapisten çýkmak istediðinizden emin misiniz ?", convertNumber(kefalet_miktar));
		ShowPlayerDialog(playerid, KEFALET_D, DIALOG_STYLE_MSGBOX, "{FF0000}Kefalet", kflt, "Evet", "Hayýr");
		return 0;
	}
	if (strcmp("/kefaletode", cmdtext, true, 10) == 0)
	{
		if(oyuncuData[playerid][hapisSure] == 0) return hataMesaji(playerid, "Hapiste deðilsin !"), 0;
		if(oyuncuData[playerid][kefaletmod] == 1) return hataMesaji(playerid, "Admin tarafýndan hapise atýldýðýnýz için kefalet ödeyemezsiniz !"), 0;
		if(SureYasagi(playerid, "KefaletBlock", 60)) return 0;
		new kflt[100], kefalet_miktar = oyuncuData[playerid][hapisSure]*950;
		SetPVarInt(playerid, "KefaletMiktar", kefalet_miktar);
		format(kflt, sizeof(kflt), "{FFC745}$%s {FFFFFF}dolar kefalet parasý ödeyip\n{FFFFFF}hapisten çýkmak istediðinizden emin misiniz ?", convertNumber(kefalet_miktar));
		ShowPlayerDialog(playerid, KEFALET_D, DIALOG_STYLE_MSGBOX, "{FF0000}Kefalet", kflt, "Evet", "Hayýr");
		return 0;
	}
    return 1;
}

function BolgeOdulu()
{
	foreach(new b: Bolgeler)
	{
	    if(BolgeIslem[b][odulSure] != 0)
	    {
	        if(BolgeIslem[b][odulSure] == 2)
	        {
	            BolgeIslem[b][odulSure] = BOLGE_ODUL_SURE;
				foreach(new i : Player)
				{
				    if(g_oIslem[i][g_Id] != -1)
				    {
				        if(g_oIslem[i][g_Id] == BolgeIslem[b][bolgeGrup])
				        {
				            new bolgeMsj[96 + 25 + 16 + 3 + 10];
				   			format(bolgeMsj, sizeof(bolgeMsj), "{92F22A}« BÖLGE » {6FA6F2}%s {FFFFFF}adlý bölgeyi ele geçirdiðiniz için $%s dolar ve +%d skor kazandýnýz.", BolgeIslem[b][bolgeIsim], convertNumber(BolgeIslem[b][bolgeGelir]), BolgeIslem[b][bolgeSkor]);
							SendClientMessage(i, 0xF2E76DFF, bolgeMsj);
                            if(AFkMi[i] == 0)
                            {
								pParaver(i, BolgeIslem[b][bolgeGelir]);
								Skorver(i, BolgeIslem[b][bolgeSkor]);
							}
				        }
				    }
				}
	        }
	        BolgeIslem[b][odulSure]--;
		}
	}
	return 1;
}

function BolgeKontrol(playerid)
{
	new i = GetPVarInt(playerid, "TempBolge"), g = g_oIslem[playerid][g_Id];
    if(BolgeIslem[i][bolgedurum])
    {
        if(BolgeIslem[i][bolgeAlindi] == 0)
        {
        	if(BolgeIslem[i][bolgeSure] == 1)
        	{
        	    new bolgeMsj[96 + 25 + 16 + 3 + 10], label[250];
        	    BolgeIslem[i][bolgeSure] = 0;
                BolgeIslem[i][bolgeAlindi] = 1;
                BolgeIslem[i][bolgeGrup] = g;
                format(BolgeIslem[i][bolgeSahip], MAX_PLAYER_NAME, getName(playerid));
                format(bolgeMsj, sizeof(bolgeMsj), "{92F22A}« BÖLGE » {FF6600}%s {FFFFFF}isimli grup tarafýndan {6FA6F2}%s {FFFFFF}ele geçirildi.", grupIslem[g][g_Ismi], BolgeIslem[i][bolgeIsim]);
				SendClientMessageToAll(0xF2E76DFF, bolgeMsj);
				KillTimer(BolgeTimer[playerid]);
                BolgeIslem[i][bolgedurum] = false;
                format(label, sizeof(label), "{20F587}[ BÖLGE ]\n{FCDC5B}%s(%d)\n{FF4242}Sahip: {FFFFFF}%s\n{FF4242}Gelir: {FFFFFF}$%s\n{52C5FF}/EleGecir", BolgeIslem[i][bolgeIsim], i, grupIslem[g][g_Ismi], convertNumber(BolgeIslem[i][bolgeGelir]));
				UpdateDynamic3DTextLabelText(BolgeIslem[i][bolgeLabel], 0xFFFFFFFF, label);
				BolgeIslem[i][odulSure] = BOLGE_ODUL_SURE;
				foreach(new b: Player)
				{
				    GangZoneStopFlashForPlayer(b, BolgeIslem[i][zoneID]);
					if(g_oIslem[b][g_Id] != -1)
					{
						if(g_oIslem[b][g_Id] == g_oIslem[playerid][g_Id])
						{
						   	format(bolgeMsj, sizeof(bolgeMsj), "{92F22A}« BÖLGE » {6FA6F2}%s {FFFFFF}adlý bölgeyi ele geçirdiðiniz için $%s dolar ve +%d skor kazandýnýz.", BolgeIslem[i][bolgeIsim], convertNumber(BolgeIslem[i][bolgeGelir]), BolgeIslem[i][bolgeSkor]);
							SendClientMessage(b, 0xF2E76DFF, bolgeMsj);
							pParaver(b, BolgeIslem[i][bolgeGelir]);
							Skorver(b, BolgeIslem[i][bolgeSkor]);
						}
					}
				}
				DeletePVar(playerid, "TempBolge");
        	}
        	if(BolgeIslem[i][bolgeSure] >= 1)
        	{
                BolgeIslem[i][bolgeSure]--;
                __bolgeSure(playerid, BolgeIslem[i][bolgeSure]);
                foreach(new c: Player)
				{
                	GangZoneFlashForPlayer(c, BolgeIslem[i][zoneID], 0x52BAFF88);
				}
        	}
		}
    }
	return 1;
}

stock __bolgeSure(i, time)
{
    new string[120], minutes, seconds;
	if(time >= 599)
	{
 		minutes = floatround(time / 60);
        seconds = floatround(time - minutes * 60);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "~g~~h~~h~Ele Gecirmene~n~~r~~h~~h~- %02d dk %02d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
		else
		{
		    format(string, sizeof(string), "~g~~h~~h~Ele Gecirmene~n~~r~~h~~h~- %02d dk %d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
	}
	if(time >= 59 && time <= 599)
	{
        minutes = floatround(time / 60);
        seconds = floatround(time - minutes * 60);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "~g~~h~~h~Ele Gecirmene~n~~r~~h~~h~- %d dk %02d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
		else
		{
		    format(string, sizeof(string), "~g~~h~~h~Ele Gecirmene~n~~r~~h~~h~- %d dk %d sn -~n~~y~~h~~h~var", minutes, seconds);
		}
    }
	if(time <= 59)
	{
        seconds = floatround(time);
        if(seconds >= 9)
        {
        	format(string, sizeof(string), "~g~~h~~h~Ele Gecirmene~n~~r~~h~~h~- %02d -~n~~y~~h~~h~saniye var", seconds);
		}
		else
		{
		    format(string, sizeof(string), "~g~~h~~h~Ele Gecirmene~n~~r~~h~~h~- %d -~n~~y~~h~~h~saniye var", seconds);
		}
    }
	return GameTextForPlayer(i, string, 1100, 5);
}

stock BolgeBul(playerid)
{
	foreach(new i : Bolgeler)
    {
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BolgeIslem[i][labelPos][0], BolgeIslem[i][labelPos][1], BolgeIslem[i][labelPos][2])) return i;
    }
	return -1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	foreach(new id: Bolgeler)
	{
		if(areaid == BolgeIslem[id][arenaID])
		{
   			SetPVarInt(playerid, "BolgeYasak", 1);
        	if(gTeam[playerid] >= 9 && gTeam[playerid] <= 16)
			{
  				if(GetPVarInt(playerid, "BolgeYasak") == 1)
		    	{
		    	    new a = GetVehicleModel(GetPlayerVehicleID(playerid));
		    	    new xx = GetPlayerVehicleID(playerid);
					if(a == 417 || a == 425 || a == 447 || a == 460 || a == 464 || a == 465 || a == 469 || a == 476 ||
					a == 487 || a == 488 || a == 497 || a == 501 || a == 511 || a == 512 || a == 513 || a == 519 ||
					a == 520 || a == 548 || a == 553 || a == 563 || a == 564 || a == 577 || a == 592 || a == 593 ||
					a == 594 || a == 606 || a == 607 || a == 608 || a == 610 || a == 611)
					{
	    				hataMesaji(playerid, "Bu aracý bu bölgede kullanamazsýn !");
				    	SetVehicleToRespawn(xx);
					    break;
				    }
				}
			}
		}
	}
 	foreach(new c: Ceteler)
	{
	    if(CeteIslem[c][ceteDeger] == 2)
	    {
		 	if(areaid == CeteIslem[c][cArea])
			{
			    if(PlayerCete[playerid] != c)
			    {
			        SetPVarInt(playerid, "Cetedeee", c);
				}
			    new cix[72 + MAX_CETE_ISIM];
			    format(cix, sizeof(cix), "{2C82C9}« ÇETE » {FF214C}%s {FFFFFF}isimli çetenin bölgesine giriþ yaptýn.", CeteIslem[c][ceteIsmi]);
			    SendClientMessage(playerid, -1, cix);
			    SetPVarInt(playerid, "GirilenCeteMekan", c);
			    break;
			}
		}
	}
 	foreach(new id: CeteSavaslar)
	{
		if(areaid == CeteSavasMekan[id][cbArea])
		{
  			SavasIslem[playerid][CeteSavasBolgedemi] = 1;
		    new xz[100 + 48 + 48];
		    new _xx[48];
		    if(CeteSavasMekan[id][ceteMekanSahip] != -1)
		    {
		    	format(_xx, 48, CeteIslem[CeteSavasMekan[id][ceteMekanSahip]][ceteIsmi]);
			}
		    format(xz, sizeof(xz), "Savaþ Bölgesi: {FFFFFF}Þuanda %s adlý bölgeye girdiniz. Bu bölgeyi ele geçiren çete: %s", CeteSavasMekan[id][ceteMekanIsmi], (CeteSavasMekan[id][ceteMekanSahip] == -1) ? ("Yok") : (_xx));
		    SendClientMessage(playerid, 0xEFC700FF, xz);
		    SetPVarInt(playerid, "_SavasID", id);
			if(IsPlayerInAnyVehicle(playerid))
			{
		    	if(CeteSavasMekan[id][eleGecirenCete] != -1)
		    	{
					new Float: _donder[4];
					GetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid), _donder[3] + 180);
					GetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
				    _donder[0] -= _donder[0]; _donder[1] -= _donder[1];
					SetVehicleVelocity(GetPlayerVehicleID(playerid), _donder[0], _donder[1], _donder[2]);
					if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 25){
				    SetVehicleSpeed(GetPlayerVehicleID(playerid), -GetVehicleSpeed(GetPlayerVehicleID(playerid)));}
				    else{ SetVehicleSpeed(GetPlayerVehicleID(playerid), -100); }
				}
			}
		    break;
		}
	}
	if(areaid == OzelGaleriArac)
	{
	    SetPVarInt(playerid, "OzelMekanda", 1);
	    SendClientMessage(playerid, -1, "{5659C9}Özel araç almak isterseniz {00FF00}/OzelArac {5659C9}yazýn.");
	}
	if(areaid == mitArea)
	{
	    if(gTeam[playerid] == OZEL_HAREKAT_TIMI)
	    {
			SetPVarInt(playerid, "MitKomut", 1);
			SendClientMessage(playerid, -1, "{FD5B03}Özel harekat bölgesindesiniz. Þehire daha kolay ulaþmak için {7CEECE}/Bolgeler {FD5B03}komutunu kullanabilirsiniz.");
		}
	}
	if(areaid == bankaOnu)
	{
	    SetPVarInt(playerid, "BankaOnunde", 1);
	}
 	if(areaid == LazerBolge)
	{
	    if(!LazerDurum && gTeam[playerid] >= TECAVUZCU)
	    {
	        Canver(playerid, 0);
	        SendClientMessage(playerid, -1, "{FF773D}[BANKA] {FFFFFF}Lazerler hacklenmeden banka odasýna girdiðiniz için öldünüz.");
	    }
		SetPVarInt(playerid, "SoygunOda", 1);
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    foreach(new id: Bolgeler)
	{
		if(areaid == BolgeIslem[id][arenaID])
		{
		    if(BolgeTimerDurum[playerid] == 1)
		    {
		        if(BolgeIslem[id][bolgeSure] >= 1)
		        {
			    	KillTimer(BolgeTimer[playerid]);
				    new bolgeMsj[96 + 25 + 16 + 3 + 10], g = g_oIslem[playerid][g_Id];
					format(bolgeMsj, sizeof(bolgeMsj), "{92F22A}« BÖLGE » {FF6600}%s {FFFFFF}isimli grup {6FA6F2}%s {FFFFFF}adlý bölgeyi ele geçiremedi !", grupIslem[g][g_Ismi], BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeIsim]);
					SendClientMessageToAll(0xF2E76DFF, bolgeMsj);
				  	BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeSure] = BOLGE_SURE;
					BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgeAlindi] = 0;
					BolgeIslem[GetPVarInt(playerid, "TempBolge")][bolgedurum] = false;
					foreach(new x: Player) GangZoneStopFlashForPlayer(x, BolgeIslem[GetPVarInt(playerid, "TempBolge")][zoneID]);
					DeletePVar(playerid, "TempBolge");
					BolgeTimerDurum[playerid] = 0;
					break;
				}
		    }
		    SetPVarInt(playerid, "BolgeYasak", 0);
		}
	}
  	foreach(new id: CeteSavaslar)
	{
		if(areaid == CeteSavasMekan[id][cbArea])
		{
  			HidePlayerProgressBar(playerid, SavasBar[playerid]);
	        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
	        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
	        if(GetPVarInt(playerid, "EleGeciriyomLan") == id)
	        {
	            SetPVarInt(playerid, "EleGeciriyomLan", -1);
				foreach(new i: Player)
		        {
	                if(i != playerid)
	                {
	                    if(GetPVarInt(i, "_SavasID") == id)
	                    {
							HidePlayerProgressBar(i, SavasBar[i]);
				        	SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
				        	SetPlayerProgressBarValue(i, SavasBar[i], 0);
						}
	                }
				}
	        }
		    SavasIslem[playerid][CeteSavasBolgedemi] = 0;
		    new xz[67 + 48];
		    format(xz, sizeof(xz), "Savaþ Bölgesi: {FFFFFF}Þuanda %s adlý bölgeden ayrýldýnýz.", CeteSavasMekan[id][ceteMekanIsmi]);
		    SendClientMessage(playerid, 0xEFC700FF, xz);
		    if(SavasIslem[playerid][Puskurtme] == 1)
		    {
		        SavasIslem[playerid][Puskurtme] = 0;
		    }
		    break;
		}
	}
 	foreach(new c: Ceteler)
	{
	    if(CeteIslem[c][ceteDeger] == 2)
	    {
		 	if(areaid == CeteIslem[c][cArea])
			{
			    SetPVarInt(playerid, "_SavasID", -1);
			    SetPVarInt(playerid, "Cetedeee", -1);
		    	new cix[72 + MAX_CETE_ISIM];
		    	format(cix, sizeof(cix), "{2C82C9}« ÇETE » {F04903}%s {FFFFFF}isimli çetenin bölgesinden ayrýldýnýz.", CeteIslem[c][ceteIsmi]);
		    	SendClientMessage(playerid, -1, cix);
		    	SetPVarInt(playerid, "GirilenCeteMekan", -1);
		    	break;
			}
		}
	}
 	if(areaid == OzelGaleriArac)
	{
	    SetPVarInt(playerid, "OzelMekanda", 0);
	}
 	if(areaid == mitArea)
	{
		SetPVarInt(playerid, "MitKomut", 0);
	}
 	if(areaid == bankaOnu)
	{
	    SetPVarInt(playerid, "BankaOnunde", 0);
	}
 	if(areaid == LazerBolge)
	{
	    SetPVarInt(playerid, "SoygunOda", 0);
	    if(LazerDurum && gTeam[playerid] >= TECAVUZCU)
	    {
			if(PlayerBanka[playerid][bankaSoyuyor] == 2)
		    {
			    KillTimer(BankaGeriSay[playerid]);
			    new zx[115];
				format(zx, sizeof(zx), "[BANKA] {FFFFFF}Banka odasýndan ayrýldýðýnýz için soygun iptal edildi. Çaldýðýnýz para: $%s dolar", convertNumber(GetPVarInt(playerid, "ToplamBPara")));
			    SendClientMessage(playerid, 0xFF773DFF, zx);
			    DeletePVar(playerid, "BankaSoyuyor");
			    DeletePVar(playerid, "ToplamBPara");
			    PlayerBanka[playerid][bankaCount] = 0;
			    PlayerBanka[playerid][bankaSoyuyor] = 0;
		    }
		}
	}
	return 1;
}

stock IsWeaponWithAmmo(weaponid)
{
	switch(weaponid)
	{

		case 16..18, 22..39, 41..42: return 1;
		default: return 0;
	}
	return 0;

}

stock GetPlayerWeaponAmmo(playerid,weaponid)
{
	new wd[2][13];
	for(new i; i<13; i++) GetPlayerWeaponData(playerid,i,wd[0][i],wd[1][i]);
	for(new i; i<13; i++)
	{

		if(weaponid == wd[0][i]) return wd[1][i];
	}
	return 0;
}

stock GetVehicleName(vehicleid)
{
	new vehname[25];
	switch(vehicleid)
	{
	    case 400: vehname = "Landstalker";
	    case 401: vehname = "Bravura";
	    case 402: vehname = "Buffalo";
	    case 403: vehname = "Linerunner";
	    case 404: vehname = "Perenniel";
	    case 405: vehname = "Sentinel";
	    case 406: vehname = "Dumper";
	    case 407: vehname = "Firetruck";
	    case 408: vehname = "Trashmaster";
	    case 409: vehname = "Stretch";
	    case 410: vehname = "Manana";
	    case 411: vehname = "Infernus";
	    case 412: vehname = "Voodoo";
	    case 413: vehname = "Pony";
	    case 414: vehname = "Mule";
	    case 415: vehname = "Cheetah";
	    case 416: vehname = "Ambulance";
	    case 417: vehname = "Leviathan";
	    case 418: vehname = "Moonbeam";
	    case 419: vehname = "Esperanto";
	    case 420: vehname = "Taxi";
	    case 421: vehname = "Washington";
	    case 422: vehname = "Bobcat";
	    case 423: vehname = "Mr Whoopee";
	    case 424: vehname = "BF Injection";
	    case 425: vehname = "Hunter";
	    case 426: vehname = "Premier";
	    case 427: vehname = "Enforcer";
	    case 428: vehname = "Securicar";
	    case 429: vehname = "Banshee";
	    case 430: vehname = "Predator";
	    case 431: vehname = "Bus";
	    case 432: vehname = "Rhino";
	    case 433: vehname = "Barracks";
	    case 434: vehname = "Hotknife";
	    case 435: vehname = "Article Trailer";
	    case 436: vehname = "Previon";
	    case 437: vehname = "Coach";
	    case 438: vehname = "Cabbie";
	    case 439: vehname = "Stallion";
	    case 440: vehname = "Rumpo";
	    case 441: vehname = "RC Bandit";
	    case 442: vehname = "Romero";
	    case 443: vehname = "Packer";
	    case 444: vehname = "Monster";
	    case 445: vehname = "Admiral";
	    case 446: vehname = "Squallo";
	    case 447: vehname = "Seasparrow";
	    case 448: vehname = "Pizzaboy";
	    case 449: vehname = "Tram";
	    case 450: vehname = "Article Trailer 2";
	    case 451: vehname = "Turismo";
	    case 452: vehname = "Speeder";
	    case 453: vehname = "Reefer";
	    case 454: vehname = "Tropic";
	    case 455: vehname = "Flatbed";
	    case 456: vehname = "Yankee";
	    case 457: vehname = "Caddy";
	    case 458: vehname = "Solair";
	    case 459: vehname = "Topfun Van";
	    case 460: vehname = "Skimmer";
	    case 461: vehname = "PCJ-600";
	    case 462: vehname = "Faggio";
	    case 463: vehname = "Freeway";
	    case 464: vehname = "RC Baron";
	    case 465: vehname = "RC Raider";
	    case 466: vehname = "Glendale";
	    case 467: vehname = "Oceanic";
	    case 468: vehname = "Sanchez";
	    case 469: vehname = "Sparrow";
	    case 470: vehname = "Patriot";
	    case 471: vehname = "Quad";
	    case 472: vehname = "Coastguard";
	    case 473: vehname = "Dinghy";
	    case 474: vehname = "Hermes";
	    case 475: vehname = "Sabre";
	    case 476: vehname = "Rustler";
	    case 477: vehname = "ZR-350";
	    case 478: vehname = "Walton";
	    case 479: vehname = "Regina";
	    case 480: vehname = "Comet";
	    case 481: vehname = "BMX";
	    case 482: vehname = "Burrito";
	    case 483: vehname = "Camper";
	    case 484: vehname = "Marquis";
	    case 485: vehname = "Baggage";
	    case 486: vehname = "Dozer";
	    case 487: vehname = "Maverick";
	    case 488: vehname = "SAN News Maverick";
	    case 489: vehname = "Rancher 1";
	    case 490: vehname = "FBI Rancher";
	    case 491: vehname = "Virgo";
	    case 492: vehname = "Greenwook";
	    case 493: vehname = "Jetmax";
	    case 494: vehname = "Hotring Racer 1";
	    case 495: vehname = "Sandking";
	    case 496: vehname = "Blista Compact";
	    case 497: vehname = "Police Maverick";
	    case 498: vehname = "Boxville";
	    case 499: vehname = "Benson";
	    case 500: vehname = "Messa";
	    case 501: vehname = "RC Goblin";
	    case 502: vehname = "Hotring Racer 2";
	    case 503: vehname = "Hotring Racer 3";
	    case 504: vehname = "Bloodring Banger";
	    case 505: vehname = "Rancher 2";
	    case 506: vehname = "Super GT";
	    case 507: vehname = "Elegant";
	    case 508: vehname = "Journey";
	    case 509: vehname = "Bike";
	    case 510: vehname = "Mountain Bike";
	    case 511: vehname = "Beagle";
	    case 512: vehname = "Cropduster";
	    case 513: vehname = "Stuntplane";
	    case 514: vehname = "Tanker";
	    case 515: vehname = "Roadtrain";
	    case 516: vehname = "Nebula";
	    case 517: vehname = "Majestic";
	    case 518: vehname = "Buccaneer";
	    case 519: vehname = "Shamal";
	    case 520: vehname = "Hydra";
	    case 521: vehname = "FCR-900";
	    case 522: vehname = "NRG-500";
	    case 523: vehname = "HPV1000";
	    case 524: vehname = "Cement Truck";
	    case 525: vehname = "Towtruck";
	    case 526: vehname = "Fortune";
	    case 527: vehname = "Cadrona";
	    case 528: vehname = "FBI Truck";
	    case 529: vehname = "Willard";
	    case 530: vehname = "Forklift";
	    case 531: vehname = "Tractor";
	    case 532: vehname = "Combine Harvester";
	    case 533: vehname = "Feltzer";
	    case 534: vehname = "Remington";
	    case 535: vehname = "Slamvan";
	    case 536: vehname = "Blade";
	    case 537: vehname = "Freight";
	    case 538: vehname = "Brownstreak";
	    case 539: vehname = "Vortex";
	    case 540: vehname = "Vincent";
	    case 541: vehname = "Bullet";
	    case 542: vehname = "Clover";
	    case 543: vehname = "Sadler";
	    case 544: vehname = "Firetruck LA";
	    case 545: vehname = "Hustler";
	    case 546: vehname = "Intruder";
	    case 547: vehname = "Primo";
	    case 548: vehname = "Cargobob";
	    case 549: vehname = "Tampa";
	    case 550: vehname = "Sunrise";
	    case 551: vehname = "Merit";
	    case 552: vehname = "Utility Van";
	    case 553: vehname = "Nevada";
	    case 554: vehname = "Yosemite";
	    case 555: vehname = "Windsor";
	    case 556: vehname = "Monster 'A'";
	    case 557: vehname = "Monster 'B'";
	    case 558: vehname = "Uranus";
	    case 559: vehname = "Jester";
	    case 560: vehname = "Sultan";
	    case 561: vehname = "Stratum";
	    case 562: vehname = "Elegy";
	    case 563: vehname = "Raindance";
	    case 564: vehname = "RC Tiger";
	    case 565: vehname = "Flash";
	    case 566: vehname = "Tahoma";
	    case 567: vehname = "Savanna";
	    case 568: vehname = "Bandito";
	    case 569: vehname = "Freight Trailer";
	    case 570: vehname = "Streak Trailer";
	    case 571: vehname = "Kart";
	    case 572: vehname = "Mover";
	    case 573: vehname = "Dune";
	    case 574: vehname = "Sweeper";
	    case 575: vehname = "Broadway";
	    case 576: vehname = "Tornado";
	    case 577: vehname = "AT400";
	    case 578: vehname = "DFT-30";
	    case 579: vehname = "Huntley";
	    case 580: vehname = "Stafford";
	    case 581: vehname = "BF-400";
	    case 582: vehname = "Newsvan";
	    case 583: vehname = "Tug";
	    case 584: vehname = "Petrol Trailer";
	    case 585: vehname = "Emperor";
	    case 586: vehname = "Wayfarer";
	    case 587: vehname = "Euros";
	    case 588: vehname = "Hotdog";
	    case 589: vehname = "Club";
	    case 590: vehname = "Freight Box";
	    case 591: vehname = "Article Trailer 3";
	    case 592: vehname = "Andromada";
	    case 593: vehname = "Dodo";
	    case 594: vehname = "RC Cam";
	    case 595: vehname = "Launch";
	    case 596: vehname = "Police Car (LSPD)";
	    case 597: vehname = "Police Car (SFPD)";
	    case 598: vehname = "Police Car (LVPD)";
	    case 599: vehname = "Police Ranger";
	    case 600: vehname = "Picador";
	    case 601: vehname = "S.W.A.T";
	    case 602: vehname = "Alpha";
	    case 603: vehname = "Phoenix";
	    case 604: vehname = "Glendale Shit";
	    case 605: vehname = "Sadler Shit";
	    case 606: vehname = "Baggage Trailer";
	    case 607: vehname = "Baggage Traier";
	    case 608: vehname = "Tug Stairs";
	    case 609: vehname = "Boxville";
	    case 610: vehname = "Farm Trailer";
	    case 611: vehname = "Utility Trailer";
	}
	return vehname;
}

function SendMSG()
{
    new randMSG = random(sizeof(RastgeleMesaj));
    SendClientMessageToAll(0xf1c40fff, RastgeleMesaj[randMSG]);
}

function IzlePasif(playerid)
{
	if(IzlemeModu[playerid][e_vID] == 0)
	{
	    SetPlayerPos(playerid, IzlemeModu[playerid][e_Pos][0], IzlemeModu[playerid][e_Pos][1], IzlemeModu[playerid][e_Pos][2]);
	    SetPlayerFacingAngle(playerid, IzlemeModu[playerid][e_Pos][3]);
	    SetPlayerInterior(playerid, IzlemeModu[playerid][e_Interior]);
	    SetPlayerVirtualWorld(playerid, IzlemeModu[playerid][e_Vir]);
	    SetCameraBehindPlayer(playerid);
	    SpawnBeklet(playerid);
	}
	else
	{
		SetPlayerInterior(playerid, IzlemeModu[playerid][e_Interior]);
	    SetPlayerVirtualWorld(playerid, IzlemeModu[playerid][e_Vir]);
	    PutPlayerInVehicle(playerid, IzlemeModu[playerid][e_vID], 0);
	}
	return 1;
}

stock aracSill(playerid, vehicleid)
{
	new eid = evim[playerid];
	for(new i = 0; i < EvIslem[eid][evSeviyesi]; i++)
	{
	    if(aracSlotu[playerid][i] == vehicleid)
	    {
	        aracSlotu[playerid][i] = 0;
	        break;
	    }
	}
}

stock aracKontrolu(playerid)
{
	new ab = -1, eid = evim[playerid];
	for(new i = 0; i < EvIslem[eid][evSeviyesi]; i++)
	{
	    if(aracSlotu[playerid][i] == 0)
	    {
	        ab = i;
	        break;
	    }
	}
    return ab;
}

function SaveComponent(playerid, vehicleid, componentid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(AraclarIslem[vehicleid][aAktif])
	    {
	 		if (strcmp(AraclarIslem[vehicleid][a_Sahip], getName(playerid), false) == 0)
			{
				for(new s=0; s<20; s++) {
	 				if(componentid == spoiler[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][0] = componentid;
					}
				}
				for(new s=0; s<4; s++) {
	 				if(componentid == bscoop[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][1] = componentid;
					}
				}
				for(new s=0; s<17; s++) {
	 				if(componentid == rscoop[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][2] = componentid;
					}
				}
				for(new s=0; s<21; s++) {
	 				if(componentid == rskirt[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][3] = componentid;
					}
				}
				for(new s=0; s<21; s++) {
	 				if(componentid == lskirt[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][16] = componentid;
					}
				}
				for(new s=0; s<2; s++) {
	 				if(componentid == lights[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][4] = componentid;
					}
				}
				for(new s=0; s<3; s++) {
	 				if(componentid == nitro[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][5] = componentid;
					}
				}
				for(new s=0; s<28; s++) {
	 				if(componentid == exhaust[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][6] = componentid;
					}
				}
				for(new s=0; s<17; s++) {
	 				if(componentid == wheels[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][7] = componentid;
					}
				}
				for(new s=0; s<1; s++) {
	 				if(componentid == base[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][8] = componentid;
					}
				}
				for(new s=0; s<1; s++) {
	 				if(componentid == hydraulics[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][9] = componentid;
					}
				}
				for(new s=0; s<23; s++) {
	 				if(componentid == fbumper[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][10] = componentid;
					}
				}
				for(new s=0; s<22; s++) {
	 				if(componentid == rbumper[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][11] = componentid;
					}
				}
				for(new s=0; s<2; s++) {
	 				if(componentid == bventr[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][12] = componentid;
					}
				}
				for(new s=0; s<2; s++) {
	 				if(componentid == bventl[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][13] = componentid;
					}
				}
				for(new s=0; s<2; s++) {
	 				if(componentid == fbbars[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][15] = componentid;
					}
				}
				for(new s=0; s<4; s++) {
	 				if(componentid == rbbars[s][0]) {
	   					AraclarIslem[vehicleid][a_mParca][14] = componentid;
					}
				}
				return 1;
			}
		}
		if(CeteArac[vehicleid][ceteAracAktif])
		{
			for(new s=0; s<20; s++) {
 				if(componentid == spoiler[s][0]) {
   					CeteArac[vehicleid][c_mParca][0] = componentid;
				}
			}
			for(new s=0; s<4; s++) {
 				if(componentid == bscoop[s][0]) {
   					CeteArac[vehicleid][c_mParca][1] = componentid;
				}
			}
			for(new s=0; s<17; s++) {
 				if(componentid == rscoop[s][0]) {
   					CeteArac[vehicleid][c_mParca][2] = componentid;
				}
			}
			for(new s=0; s<21; s++) {
 				if(componentid == rskirt[s][0]) {
   					CeteArac[vehicleid][c_mParca][3] = componentid;
				}
			}
			for(new s=0; s<21; s++) {
 				if(componentid == lskirt[s][0]) {
   					CeteArac[vehicleid][c_mParca][16] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
 				if(componentid == lights[s][0]) {
   					CeteArac[vehicleid][c_mParca][4] = componentid;
				}
			}
			for(new s=0; s<3; s++) {
 				if(componentid == nitro[s][0]) {
   					CeteArac[vehicleid][c_mParca][5] = componentid;
				}
			}
			for(new s=0; s<28; s++) {
 				if(componentid == exhaust[s][0]) {
   					CeteArac[vehicleid][c_mParca][6] = componentid;
				}
			}
			for(new s=0; s<17; s++) {
 				if(componentid == wheels[s][0]) {
   					CeteArac[vehicleid][c_mParca][7] = componentid;
				}
			}
			for(new s=0; s<1; s++) {
 				if(componentid == base[s][0]) {
   					CeteArac[vehicleid][c_mParca][8] = componentid;
				}
			}
			for(new s=0; s<1; s++) {
 				if(componentid == hydraulics[s][0]) {
   					CeteArac[vehicleid][c_mParca][9] = componentid;
				}
			}
			for(new s=0; s<23; s++) {
 				if(componentid == fbumper[s][0]) {
   					CeteArac[vehicleid][c_mParca][10] = componentid;
				}
			}
			for(new s=0; s<22; s++) {
 				if(componentid == rbumper[s][0]) {
   					CeteArac[vehicleid][c_mParca][11] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
 				if(componentid == bventr[s][0]) {
   					CeteArac[vehicleid][c_mParca][12] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
 				if(componentid == bventl[s][0]) {
   					CeteArac[vehicleid][c_mParca][13] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
 				if(componentid == fbbars[s][0]) {
   					CeteArac[vehicleid][c_mParca][15] = componentid;
				}
			}
			for(new s=0; s<4; s++) {
 				if(componentid == rbbars[s][0]) {
   					CeteArac[vehicleid][c_mParca][14] = componentid;
				}
			}
		}
	}
	return 0;
}

stock normalAracSil(playerid)
{
	for(new i = 0; i < N_ARAC_KAPASITE; i++){if(aracSlotu[playerid][i] != 0){
    new aPid = aracSlotu[playerid][i];
    format(AraclarIslem[aPid][a_Sahip], 24, "");
    AraclarIslem[aPid][aAktif] = false;
    AraclarIslem[aPid][aSQL] = -1;
	DestroyVehicle(aPid);}}
    for(new i = 0; i < N_ARAC_KAPASITE; i++) aracSlotu[playerid][i] = 0;
	return 1;
}

stock nAracSil(playerid, oaID)
{
	for(new i = 0; i < N_ARAC_KAPASITE; i++)
	{
		if(aracSlotu[playerid][i] == oaID)
		{
		    aracSlotu[playerid][i] = 0;
		    break;
		}
	}
}

stock duelloSetup(playerid)
{
    new xz[1024], dbaslikk[35] = "{7A8AFF}Ayar Ýsmi\t{7A8AFF}Ayar\n";
    format(xz, sizeof(xz), "%sID:\t%s\n", dbaslikk, duelloGetID(playerid));
    format(xz, sizeof(xz), "%sMap:\t%s\n", xz, duelloGetName(playerid));
    format(xz, sizeof(xz), "%sPara:\t%s\n", xz, duelloGetPara(playerid));
    format(xz, sizeof(xz), "%sSilah 1:\t%s\n", xz, duelloGetSilah1(playerid));
    format(xz, sizeof(xz), "%sSilah 2:\t%s\n", xz, duelloGetSilah2(playerid));
    format(xz, sizeof(xz), "%sDüelloyu Baþlat:\t-\n", xz);
    ShowPlayerDialog(playerid, DIALOG_DM, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Düello Kurma", xz, "Onayla", "Geri");
	return 1;
}

stock duelloGetID(playerid)
{
	new xxz[25 + 8 + 5], d_isim[24];
	if(DuelloIslem[playerid][d_ID] != INVALID_PLAYER_ID){GetPlayerName(DuelloIslem[playerid][d_ID], d_isim, sizeof(d_isim));}
	switch(DuelloIslem[playerid][d_ID]){
 	case INVALID_PLAYER_ID: format(xxz, sizeof(xxz), "{71BA51}-");
  	default: format(xxz, sizeof(xxz), "{71BA51}%s(%d)", d_isim, DuelloIslem[playerid][d_ID]);}
	return xxz;
}

stock duelloGetName(playerid)
{
	new xxz[25];
	switch(DuelloIslem[playerid][dHarita]){
 	case 0: xxz = "{71BA51}>> Map Seçin";
  	case 1: xxz = "{71BA51}Mekan 1";
   	case 2: xxz = "{71BA51}Mekan 2";}
	return xxz;
}

stock duelloGetPara(playerid)
{
	new xxz[25], za[12 + 8];
	switch(DuelloIslem[playerid][dP])
	{
 		case 0: xxz = "{71BA51}-";
 		default:
 		{
		 	format(za, sizeof(za), "{71BA51}$%s", convertNumber(DuelloIslem[playerid][dP]));
			xxz = za;
		}
	}
	return xxz;
}

stock duelloGetSilah1(playerid)
{
	new xxz[25];
	switch(DuelloIslem[playerid][dSilah][0])
	{
 		case 0: xxz = "{71BA51}-";
 		default:
 		{
 		    new xz = 0;
 		    for(new i = 0; i < sizeof(SilahIsimler); i++)
 		    {
 		        new g_s = DuelloIslem[playerid][dSilah][0];
 		        if(g_s == SilahIsimler[i][d_silaahh])
 		        {
 		            xz = i;
 		            break;
 		        }
 		    }
	 		format(xxz, sizeof(xxz), "{71BA51}%s", SilahIsimler[xz][_dsIsim]);
		}
	}
	return xxz;
}

stock duelloGetSilah2(playerid)
{
	new xxz[25];
	switch(DuelloIslem[playerid][dSilah][1])
	{
 		case 0: xxz = "{71BA51}-";
 		default:
 		{
 		    new xz = 0;
 		    for(new i = 0; i < sizeof(SilahIsimler); i++)
 		    {
 		        new g_s = DuelloIslem[playerid][dSilah][1];
 		        if(g_s == SilahIsimler[i][d_silaahh])
 		        {
 		            xz = i;
 		            break;
 		        }
 		    }
	 		format(xxz, sizeof(xxz), "{71BA51}%s", SilahIsimler[xz][_dsIsim]);
		}
	}
	return xxz;
}

forward DuelloBekleet(playerid);
public DuelloBekleet(playerid)
{
    new str[92 + 24];
    DuelloSayi[playerid]++;
	switch(DuelloSayi[playerid])
	{
	    case 1: format(str, sizeof(str), "{FD5B03}Oyuncu {3D8EB9}%s {FD5B03}düello teklifi gönderildi.\n{FFFFFF}Onaylamasýný bekleyin.", getName(DuelloIslem[playerid][d_ID]));
	    case 2: format(str, sizeof(str), "{FD5B03}Oyuncu {3D8EB9}%s {FD5B03}düello teklifi gönderildi.\n{FFFFFF}Onaylamasýný bekleyin..", getName(DuelloIslem[playerid][d_ID]));
	    case 3: format(str, sizeof(str), "{FD5B03}Oyuncu {3D8EB9}%s {FD5B03}düello teklifi gönderildi.\n{FFFFFF}Onaylamasýný bekleyin...", getName(DuelloIslem[playerid][d_ID])), DuelloSayi[playerid] = 0;
	}
    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Düello Teklifi", str, "Kapat", "");
	return 1;
}

forward DuelloBaslat(playerid);
public DuelloBaslat(playerid)
{
	DuelloSayi[playerid]--;
	switch(DuelloSayi[playerid])
	{
	    case 4..7: GameTextForPlayer(playerid, "~r~~h~~h~AFK olursaniz~n~elenirsiniz", 2100, 4);
	    case 3: GameTextForPlayer(playerid, "~b~~h~~h~(3) 2 1", 2100, 4);
	    case 2: GameTextForPlayer(playerid, "~b~~h~~h~(2) 1", 2100, 4);
	    case 1: GameTextForPlayer(playerid, "~b~~h~~h~(1)", 2100, 4);
	    case 0:
	    {
	        KillTimer(DuelloTimer[playerid]);
	        GameTextForPlayer(playerid, "~g~~h~~h~Basla !", 2100, 4);
	        TogglePlayerControllable(playerid, 1);
	    }
	}
	return 1;
}

stock strdelm(string[], badWord[])
{
   new
      i
   ;
   while((i = strfind(string, badWord, true)) != -1)
   {
       for(new x = (i + strlen(badWord)); i != x; ++i)
       {
           strdel(string, i, i+1);
       }
   }
   return 1;
}

stock textfloodkontrol(texta[])
{
	new s;
	while(texta[s] != EOS){
	if((texta[s] == texta[s+1]) && (texta[s+1] == texta[s+2]) && (texta[s+2] == texta[s+3]))strdel(texta,s,(s+1));
	else
	s++;
	}
	return 1;
}

stock yetenekMenu(playerid)
{
	new xaz[500], yTitle[30], Float: ytempCan = yCan(playerid), Float: ytempZirh = yZirh(playerid);
	format(yTitle, sizeof(yTitle), "{2CC990}Yetenek Puanýn: %d", oyuncuData[playerid][YetenekPuan]);
	format(xaz, sizeof(xaz), "YP\tYetenek Ýsmi\tMevcut Durum\tYükseltme Sonrasý\n");
	switch(oyuncuData[playerid][YetenekCan])
	{
	    case 0..24: format(xaz, sizeof(xaz), "%s{2CC990}(%d/25)\t{A9A9A9}Maksimum Saðlýk\t{00B5B5}%.0f\t{FF7416}%.0f\n", xaz, oyuncuData[playerid][YetenekCan], ytempCan, ytempCan + 2);
		default: format(xaz, sizeof(xaz), "%s{2CC990}(%d/25)\t{A9A9A9}Maksimum Saðlýk\t{00B5B5}150\t{FF7416}-\n", xaz, oyuncuData[playerid][YetenekCan]);
	}
	switch(oyuncuData[playerid][YetenekZirh])
	{
	    case 0..9: format(xaz, sizeof(xaz), "%s{2CC990}(%d/10)\t{A9A9A9}Maksimum Zýrh\t{00B5B5}%.0f\t{FF7416}%.0f\n", xaz, oyuncuData[playerid][YetenekZirh], ytempZirh, ytempZirh + 5);
		default: format(xaz, sizeof(xaz), "%s{2CC990}(%d/10)\t{A9A9A9}Maksimum Zýrh\t{00B5B5}150\t{FF7416}-\n", xaz, oyuncuData[playerid][YetenekZirh]);
	}
	switch(oyuncuData[playerid][YetenekSoygun])
	{
	    case 0..9: format(xaz, sizeof(xaz), "%s{2CC990}(%d/10)\t{A9A9A9}Maks. Soygun Kazancý\t{00B5B5}%d\t{FF7416}+%d\n", xaz, oyuncuData[playerid][YetenekSoygun], ySoygun(playerid), ySoygun(playerid) + 5);
		default: format(xaz, sizeof(xaz), "%s{2CC990}(%d/10)\t{A9A9A9}Maks. Soygun Kazancý\t{00B5B5}50\t{FF7416}-\n", xaz, oyuncuData[playerid][YetenekSoygun]);
	}
	ShowPlayerDialog(playerid, DIALOG_YETENEK, DIALOG_STYLE_TABLIST_HEADERS, yTitle, xaz, "Yükselt", "Kapat");
	return 1;
}

stock yCan(playerid)
{
	new y_can = 100;
	switch(oyuncuData[playerid][YetenekCan])
	{
	    case 0: y_can = 100;
	    case 1: y_can = 102;
	    case 2: y_can = 104;
	    case 3: y_can = 106;
	    case 4: y_can = 108;
	    case 5: y_can = 110;
	    case 6: y_can = 112;
	    case 7: y_can = 114;
	    case 8: y_can = 116;
	    case 9: y_can = 118;
	    case 10: y_can = 120;
	    case 11: y_can = 122;
	    case 12: y_can = 124;
	    case 13: y_can = 126;
	    case 14: y_can = 128;
	    case 15: y_can = 130;
	    case 16: y_can = 132;
	    case 17: y_can = 134;
	    case 18: y_can = 136;
	    case 19: y_can = 138;
	    case 20: y_can = 140;
	    case 21: y_can = 142;
	    case 22: y_can = 144;
	    case 23: y_can = 146;
	    case 24: y_can = 148;
	    case 25: y_can = 150;
	}
	return y_can;
}

stock yZirh(playerid)
{
	new y_zirh = 0;
    switch(oyuncuData[playerid][YetenekZirh])
    {
        case 0: y_zirh = 100;
        case 1: y_zirh = 105;
        case 2: y_zirh = 110;
        case 3: y_zirh = 115;
        case 4: y_zirh = 120;
        case 5: y_zirh = 125;
        case 6: y_zirh = 130;
        case 7: y_zirh = 135;
        case 8: y_zirh = 140;
        case 9: y_zirh = 145;
        case 10: y_zirh = 150;
	}
	return y_zirh;
}

stock ySoygun(playerid)
{
	new y_soygun = 0;
    switch(oyuncuData[playerid][YetenekSoygun])
    {
        case 0: y_soygun = 0;
        case 1: y_soygun = 5;
        case 2: y_soygun = 10;
        case 3: y_soygun = 15;
        case 4: y_soygun = 20;
        case 5: y_soygun = 25;
        case 6: y_soygun = 30;
        case 7: y_soygun = 35;
        case 8: y_soygun = 40;
        case 9: y_soygun = 45;
        case 10: y_soygun = 50;
	}
	return y_soygun;
}

stock ExpGuncelle(playerid)
{
	new barUpdatee[40], Lxp = barExpCek(playerid);
	if(oyuncuData[playerid][_LevelCount] >= 1 && oyuncuData[playerid][_LevelCount] <= 50)
	{
	    if(oyuncuData[playerid][ExpPuan] >= 0 && oyuncuData[playerid][ExpPuan] <= Lxp)
	    {
	        if(oyuncuData[playerid][_LevelCount] >= 50)
	        {
	            oyuncuData[playerid][_LevelCount] = 50;
				if(oyuncuData[playerid][ExpPuan] > 50000)
				{
				    oyuncuData[playerid][ExpPuan] = 50000;
				}
	        }
			SetPlayerProgressBarMaxValue(playerid, ExpBar[playerid], Lxp);
			PlayerTextDrawHide(playerid, SagBarr[playerid][0]);
			format(barUpdatee, sizeof(barUpdatee), "~r~~h~~h~~h~Exp: ~w~~h~%d/%d", oyuncuData[playerid][ExpPuan], Lxp);
			PlayerTextDrawSetString(playerid, SagBarr[playerid][0], barUpdatee);
			if(oyuncuData[playerid][textAyar] == 0){
			PlayerTextDrawShow(playerid, SagBarr[playerid][0]);
			}
			PlayerTextDrawHide(playerid, SagBarr[playerid][1]);
			format(barUpdatee, sizeof(barUpdatee), "~r~~h~~h~~h~Level: ~w~~h~%d/50", oyuncuData[playerid][_LevelCount]);
			PlayerTextDrawSetString(playerid, SagBarr[playerid][1], barUpdatee);
            if(oyuncuData[playerid][textAyar] == 0){
			PlayerTextDrawShow(playerid, SagBarr[playerid][1]);
			}
			SetPlayerProgressBarValue(playerid, ExpBar[playerid], oyuncuData[playerid][ExpPuan]);
			kafaTextUp(playerid);
	    }
	    else
	    {
     		if(oyuncuData[playerid][_LevelCount] >= 50)
	        {
	            oyuncuData[playerid][_LevelCount] = 50;
				if(oyuncuData[playerid][ExpPuan] > 50000)
				{
				    oyuncuData[playerid][ExpPuan] = 50000;
				}
	        }
	        oyuncuData[playerid][_LevelCount]++, oyuncuData[playerid][ExpPuan] = oyuncuData[playerid][ExpPuan]-Lxp, LevelAtladi(playerid), ExpGuncelle(playerid);
	    }
	}
	return 1;
}

function LevelAtladi(playerid)
{
	new xzz[30];
	PlayerTextDrawHide(playerid, ParaLevel[playerid][0]);
	if(oyuncuData[playerid][_LevelCount] >= 51)
	{
	    oyuncuData[playerid][_LevelCount] = 50;
	    oyuncuData[playerid][ExpPuan] = 50000;
     	ExpGuncelle(playerid);
	    return 1;
	}
	format(xzz, sizeof(xzz), "Level_Atladiniz~n~(%d)", oyuncuData[playerid][_LevelCount]);
	PlayerTextDrawSetString(playerid, ParaLevel[playerid][0], xzz);
    if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, ParaLevel[playerid][0]);
	PlayerTextDrawShow(playerid, ParaLevel[playerid][2]);}
	oyuncuData[playerid][YetenekPuan]++;
	SetPVarInt(playerid, "YaziMode", 1);
	SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
	kafaTextUp(playerid);
	return 1;
}

stock barExpCek(playerid)
{
	new Lxp = 0;
	switch(oyuncuData[playerid][_LevelCount])
	{
	    case 1: Lxp = 500;
	    case 2: Lxp = 750;
	    case 3: Lxp = 1000;
	    case 4: Lxp = 1250;
	    case 5: Lxp = 1500;
	    case 6: Lxp = 2000;
	    case 7: Lxp = 2500;
	    case 8: Lxp = 3000;
	    case 9: Lxp = 3500;
	    case 10: Lxp = 4000;
	    case 11: Lxp = 4750;
	    case 12: Lxp = 5500;
	    case 13: Lxp = 6250;
	    case 14: Lxp = 7000;
	    case 15: Lxp = 7750;
	    case 16: Lxp = 8450;
	    case 17: Lxp = 9250;
	    case 18: Lxp = 10050;
	    case 19: Lxp = 10850;
	    case 20: Lxp = 11650;
	    case 21: Lxp = 12450;
	    case 22: Lxp = 13250;
	    case 23: Lxp = 14050;
	    case 24: Lxp = 14850;
	    case 25: Lxp = 15650;
	    case 26: Lxp = 16650;
	    case 27: Lxp = 17650;
	    case 28: Lxp = 18650;
	    case 29: Lxp = 20000;
	    case 30: Lxp = 21000;
	    case 31: Lxp = 22000;
	    case 32: Lxp = 23000;
	    case 33: Lxp = 24000;
	    case 34: Lxp = 25000;
	    case 35: Lxp = 26250;
	    case 36: Lxp = 27500;
	    case 37: Lxp = 28750;
	    case 38: Lxp = 30000;
	    case 39: Lxp = 31250;
	    case 40: Lxp = 32500;
	    case 41: Lxp = 33750;
	    case 42: Lxp = 35000;
	    case 43: Lxp = 36250;
	    case 44: Lxp = 37500;
	    case 45: Lxp = 38750;
	    case 46: Lxp = 40000;
	    case 47: Lxp = 41250;
	    case 48: Lxp = 42500;
	    case 49: Lxp = 45000;
	    case 50: Lxp = 50000;
	}
	return Lxp;
}

forward KiyafetSQLID(playerid, indexid);
public KiyafetSQLID(playerid, indexid)
{
    ao[playerid][indexid][ao_Sqlid] = cache_insert_id();
	return 1;
}

stock bosKisim(playerid)
{
	new x = 0;
	for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
	    if(!IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			x = i;
			break;
		}
	}
	return x;
}

stock IsIDEValid(input) {

switch(input) {
case 615..661: {
return true;
}
case 664: {
return true;
}
case 669..698: {
return true;
}
case 700..792: {
return true;
}
case 800..906: {
return true;
}
case 910..964: {
return true;
}
case 966..998: {
return true;
}
case 1000..1193: {
return true;
}
case 1207..1325: {
return true;
}
case 1327..1572: {
return true;
}
case 1574..1698: {
return true;
}
case 1700..2882: {
return true;
}
case 2885..3135: {
return true;
}
case 3167..3175: {
return true;
}
case 3178: {
return true;
}
case 3187: {
return true;
}
case 3193: {
return true;
}
case 3214: {
return true;
}
case 3221: {
return true;
}
case 3241..3244: {
return true;
}
case 3246: {
return true;
}
case 3249..3250: {
return true;
}
case 3252..3253: {
return true;
}
case 3255..3265: {
return true;
}
case 3267..3347: {
return true;
}
case 3350..3415: {
return true;
}
case 3417..3428: {
return true;
}
case 3430..3609: {
return true;
}
case 3612..3783: {
return true;
}
case 3785..3869: {
return true;
}
case 3872..3882: {
return true;
}
case 3884..3888: {
return true;
}
case 3890..3973: {
return true;
}
case 3975..4541: {
return true;
}
case 4550..4762: {
return true;
}
case 4806..5084: {
return true;
}
case 5086..5089: {
return true;
}
case 5105..5375: {
return true;
}
case 5390..5682: {
return true;
}
case 5703..6010: {
return true;
}
case 6035..6253: {
return true;
}
case 6255..6257: {
return true;
}
case 6280..6347: {
return true;
}
case 6349..6525: {
return true;
}
case 6863..7392: {
return true;
}
case 7415..7973: {
return true;
}
case 7978..9193: {
return true;
}
case 9205..9267: {
return true;
}
case 9269..9478: {
return true;
}
case 9482..10310: {
return true;
}
case 10315..10744: {
return true;
}
case 10750..11417: {
return true;
}
case 11420..11753: {
return true;
}
case 12800..13563: {
return true;
}
case 13590..13667: {
return true;
}
case 13672..13890: {
return true;
}
case 14383..14528: {
return true;
}
case 14530..14554: {
return true;
}
case 14556: {
return true;
}
case 14558..14643: {
return true;
}
case 14650..14657: {
return true;
}
case 14660..14695: {
return true;
}
case 14699..14728: {
return true;
}
case 14735..14765: {
return true;
}
case 14770..14856: {
return true;
}
case 14858..14883: {
return true;
}
case 14885..14898: {
return true;
}
case 14900..14903: {
return true;
}
case 15025..15064: {
return true;
}
case 16000..16790: {
return true;
}
case 17000..17474: {
return true;
}
case 17500..17974: {
return true;
}
case 17976: {
return true;
}
case 17978: {
return true;
}
case 18000..18036: {
return true;
}
case 18038..18102: {
return true;
}
case 18104..18105: {
return true;
}
case 18109: {
return true;
}
case 18112: {
return true;
}
case 18200..18859: {
return true;
}
case 18862..19198: {
return true;
}
case 19200..19274: {
return true;
}
case 19277..19595: {
return true;
}
case 19597..19999: {
return true;
}
}
return false;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(!IsIDEValid(modelid))
    {
		HileKick(playerid, 4);
        return 0;
	}
    if(response)
    {
        if(GetPVarInt(playerid, "EditMode") == 1)
        {
            new query[80];
			RemovePlayerAttachedObject(playerid, index);
	        SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	        ao[playerid][index][ao_model] = modelid;
	        ao[playerid][index][ao_bone] = boneid;
	        ao[playerid][index][ao_x] = fOffsetX;
	        ao[playerid][index][ao_y] = fOffsetY;
	        ao[playerid][index][ao_z] = fOffsetZ;
	        ao[playerid][index][ao_rx] = fRotX;
	        ao[playerid][index][ao_ry] = fRotY;
	        ao[playerid][index][ao_rz] = fRotZ;
	        ao[playerid][index][ao_sx] = fScaleX;
	        ao[playerid][index][ao_sy] = fScaleY;
	        ao[playerid][index][ao_sz] = fScaleZ;

			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kX` = '%f' WHERE `kid` = '%d' LIMIT 1", fOffsetX, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kY` = '%f' WHERE `kid` = '%d' LIMIT 1", fOffsetY, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kZ` = '%f' WHERE `kid` = '%d' LIMIT 1", fOffsetZ, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kRX` = '%f' WHERE `kid` = '%d' LIMIT 1", fRotX, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kRY` = '%f' WHERE `kid` = '%d' LIMIT 1", fRotY, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kRZ` = '%f' WHERE `kid` = '%d' LIMIT 1", fRotZ, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kSX` = '%f' WHERE `kid` = '%d' LIMIT 1", fScaleX, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kSY` = '%f' WHERE `kid` = '%d' LIMIT 1", fScaleY, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

   			mysql_format(g_SQL, query, sizeof(query), "UPDATE `kiyafet` SET `kSZ` = '%f' WHERE `kid` = '%d' LIMIT 1", fScaleZ, ao[playerid][index][ao_Sqlid]);
			mysql_tquery(g_SQL, query);

	        SendClientMessage(playerid, 0x2CC990FF, "Kýyafetin pozisyonu düzenlendi.");
	        DeletePVar(playerid, "EditMode");
	        return 1;
        }
        if(GetPVarInt(playerid, "EditMode") <= 0)
        {
	        SetPVarInt(playerid, "BossKSlot", index);
	        new tutarr = GetPVarInt(playerid, "kiyafetTutar"), sz[60];
	        RemovePlayerAttachedObject(playerid, index);
	        SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	        ao[playerid][index][ao_model] = modelid;
	        ao[playerid][index][ao_bone] = boneid;
	        ao[playerid][index][ao_x] = fOffsetX;
	        ao[playerid][index][ao_y] = fOffsetY;
	        ao[playerid][index][ao_z] = fOffsetZ;
	        ao[playerid][index][ao_rx] = fRotX;
	        ao[playerid][index][ao_ry] = fRotY;
	        ao[playerid][index][ao_rz] = fRotZ;
	        ao[playerid][index][ao_sx] = fScaleX;
	        ao[playerid][index][ao_sy] = fScaleY;
	        ao[playerid][index][ao_sz] = fScaleZ;
			format(sz, sizeof(sz), "Bu kýyafet $%s dolara\nSatýn almak istiyor musun ?", convertNumber(tutarr));
			ShowPlayerDialog(playerid, DIALOG_KIYAFETO, DIALOG_STYLE_MSGBOX, "Kýyafet Satýn Alýnýyor...", sz, "Evet", "Hayýr");
		}
    }
    else
    {
		if(GetPVarInt(playerid, "EditMode") == 1)
        {
			RemovePlayerAttachedObject(playerid, index);
	        SetPlayerAttachedObject(playerid, index, modelid, ao[playerid][index][ao_bone],
			ao[playerid][index][ao_x],
			ao[playerid][index][ao_y],
			ao[playerid][index][ao_z],
			ao[playerid][index][ao_rx],
			ao[playerid][index][ao_ry],
			ao[playerid][index][ao_rz],
			ao[playerid][index][ao_sx],
			ao[playerid][index][ao_sy],
			ao[playerid][index][ao_sz]);
	        SendClientMessage(playerid, 0xFEC606FF, "Kýyafet düzenlemesi iptal edildi, kýyafet eski konumuna konumlandýrýldý.");
	        DeletePVar(playerid, "EditMode");
	        return 1;
        }
        SendClientMessage(playerid, -1, "{FEC606}Kýyafeti satýn almaktan vazgeçtiniz.");
        RemovePlayerAttachedObject(playerid, index);
		ao[playerid][index][ao_model] = 0;
		ao[playerid][index][ao_bone] = 0;
		ao[playerid][index][ao_x] = 0.0;
		ao[playerid][index][ao_y] = 0.0;
		ao[playerid][index][ao_z] = 0.0;
		ao[playerid][index][ao_rx] = 0.0;
		ao[playerid][index][ao_ry] = 0.0;
		ao[playerid][index][ao_rz] = 0.0;
		ao[playerid][index][ao_sx] = 0.0;
		ao[playerid][index][ao_sy] = 0.0;
		ao[playerid][index][ao_sz] = 0.0;
    }
    return 1;
}

stock kiyafetMenu(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_KIYAFET, DIALOG_STYLE_LIST, "Kýyafet Menü", "Kýyafet satýn al\nKýyafet düzenle\nKýyafet sat\t\t(Yarý Fiyatýna)", "Devam", "Kapat");
	return 1;
}

stock kiyafetBolgesi(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_KIYAFETB, DIALOG_STYLE_LIST, "Kýyafet Bölgesi", "Omurga\nKafa\nSol Üst Kol\nSað Üst Kol\nSol El\nSað El\nSol Uyluk\nSað Uyluk\nSol Ayak\nSað Ayak\nSað Baldýr\nSol Baldýr\nSol Önkol\nSað Önkol\nSol Köprücük\nSað Köprücük\nBoyun\nÇene\n", "Devam", "Geri");
	return 1;
}

stock kiyafetListesi(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_KIYAFETL, DIALOG_STYLE_LIST, "Kýyafetler", "Aksesuarlar\nGözlükler\nÞapka & Peruklar\nMaske & Kasklar", "Devam", "Geri");
	return 1;
}

stock kiyafetDuzenle(playerid)
{
	new sz[237];
	format(sz, sizeof(sz), "{7A8AFF}Slot\t{7A8AFF}Durum\n");
	for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
	    format(sz, sizeof(sz), "%s%d.\t%s\n", sz, i - 1, (IsPlayerAttachedObjectSlotUsed(playerid, i)) ? ("{00FF00}[Düzenle]") : ("{A9A9A9}[Düzenlenemez]"));
	}
	ShowPlayerDialog(playerid, DIALOG_KIYAFETD, DIALOG_STYLE_TABLIST_HEADERS, "Kýyafetler", sz, "Devam", "Geri");
	return 1;
}

stock kiyafetDuzenle2(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_KIYAFETD2, DIALOG_STYLE_LIST, "Kýyafetler", "Pozisyonu deðiþtir", "Devam", "Geri");
	return 1;
}

stock kiyafetSat(playerid)
{
	new sz[237];
	format(sz, sizeof(sz), "{7A8AFF}Slot\t{7A8AFF}Durum\n");
	for(new i = 2; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
	    format(sz, sizeof(sz), "%s%d.\t%s\n", sz, i - 1, (IsPlayerAttachedObjectSlotUsed(playerid, i)) ? ("{00FF00}[Sat]") : ("{A9A9A9}[Satýlamaz]"));
	}
	ShowPlayerDialog(playerid, DIALOG_KIYAFETS, DIALOG_STYLE_TABLIST_HEADERS, "Kýyafet Satma", sz, "Sat", "Iptal");
	return 1;
}

stock KiyafetHazirla(playerid)
{
	new query[55 + 24];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `kiyafet` WHERE `KiyafetSahip` = '%e'", getName(playerid));
	mysql_tquery(g_SQL, query, "KiyafetYukle", "ds", playerid, getName(playerid));
	return 1;
}

stock StripNewLine(string[]) //DracoBlue (bugfix idea by Y_Less)
{
	new len = strlen(string);
	if (string[0]==0) return ;
	if ((string[len - 1] == '\n') || (string[len - 1] == '\r')) {
		string[len - 1] = 0;
		if (string[0]==0) return ;
		if ((string[len - 2] == '\n') || (string[len - 2] == '\r')) string[len - 2] = 0;
	}
}

stock basariKilidi(playerid, bIsmi[], trIsmi[], bParasi, bExp, bSkor = 0)
{
	new bx[165];
	BasariIslem[playerid][BasariSayisi]++;
	mysql_format(g_SQL, bx, sizeof bx, "UPDATE `basarilar` SET `%s` = 1 WHERE `baid` = %d", bIsmi, BasariIslem[playerid][basariSQL]);
	mysql_tquery(g_SQL, bx);
	mysql_format(g_SQL, bx, sizeof bx, "UPDATE `basarilar` SET `BasariSayisi` = %d WHERE `baid` = %d", BasariIslem[playerid][BasariSayisi], BasariIslem[playerid][basariSQL]);
	mysql_tquery(g_SQL, bx);
	if(bParasi >= 1 && bSkor >= 1)
	{
		pParaver(playerid, bParasi);
		Skorver(playerid, bSkor);
		format(bx, sizeof(bx), "Baþarý: {FFFFFF}%s baþarýsýný açtýnýz. Ödül: {AB0DFF}$%s dolar, +%d Exp ve %d skor.", trIsmi, convertNumber(bParasi), bExp, bSkor);
	}
	else
	{
	    format(bx, sizeof(bx), "Baþarý: {FFFFFF}%s baþarýsýný açtýnýz. Ödül: {AB0DFF}+%d Exp", trIsmi, bExp);
	}
	SendClientMessage(playerid, 0xAB0DFFFF, bx);
	oyuncuData[playerid][ExpPuan] += bExp;
	PlayerTextDrawHide(playerid, ParaLevel[playerid][1]);
	if(bParasi >= 1 && bSkor >= 1)
	{
		format(bx, sizeof(bx), "~w~~h~%s~n~$%s~n~+%d_Exp~n~+%d skor", FixTR(trIsmi), convertNumber(bParasi), bExp, bSkor);
	}
	else
	{
	    format(bx, sizeof(bx), "~w~~h~%s~n~+%d_Exp", FixTR(trIsmi), bExp);
	}
	PlayerTextDrawSetString(playerid, ParaLevel[playerid][1], bx);
    if(oyuncuData[playerid][textAyar] == 0){
	PlayerTextDrawShow(playerid, ParaLevel[playerid][1]);}
	SetPVarInt(playerid, "YaziMode", 1);
	SetPVarInt(playerid, "YazilariSil", GetTickCount() + 4500);
	ExpGuncelle(playerid);
	PlayerTextDrawHide(playerid, SagBarr[playerid][2]);
    format(bx, sizeof(bx), "~r~~h~~h~~h~Basari: ~b~~h~%d/33", BasariIslem[playerid][BasariSayisi]);
    PlayerTextDrawSetString(playerid, SagBarr[playerid][2], bx);
    if(oyuncuData[playerid][textAyar] == 0){
    PlayerTextDrawShow(playerid, SagBarr[playerid][2]);
	}
	return 1;
}

stock K_omutlar(playerid)
{
	switch(gTeam[playerid])
	{
	    case TECAVUZCU: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Tecavüzcü Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Oyunculara {3498DB}/tecavuz {FFFFFF}komutuyla virüs bulaþtýrmak.\n", "Kapat", "");
	    case GASPCI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Gaspçý Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Oyuncularýn yanýna gidip {3498DB}/aSoy {FFFFFF}yazýp para çalmak.\n", "Kapat", "");
	    case SUIKASTCI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Suikastcý Görevi", "{9B59B6}Görevin:\n\t{FFFFFF}Sistem tarafýndan rastgele verilen {3498DB}oyuncularý {FFFFFF}öldürüp para ve skor kasmak.\n\t{FFFFFF}Verilen oyuncularý görmek için {3498DB}/hListesi {FFFFFF}(hedef listesi) komutunu kullanýn.", "Kapat", "");
	    case TAMIRCI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Tamirci Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Kendi aracýný {3498DB}/aTamir {FFFFFF}komutuyla tamir etmek.\n", "Kapat", "");
		case BOMBACI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Bombacý Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehrin ortasýna veya araçlara {3498DB}/bombaKur {FFFFFF}komutuyla bomba kurmak.\n", "Kapat", "");
		case ARAC_HIRSIZI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Araç Hýrsýzý Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki araçlarý çalýp limanda {3498DB}/aracSat {FFFFFF}komutu ile satmak.\n", "Kapat", "");
        case POLIS: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Polis Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalayýp hapse atmak.\n\t{FFFFFF}Polis komutlarýný öðrenmek için /Yardim'a göz at\n", "Kapat", "");
		case CEVIK_KUVVET: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Çevik Kuvvet Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalayýp hapse atmak.\n\t{FFFFFF}Çevik Kuvvet komutlarýný öðrenmek için /Yardim'a göz at\n", "Kapat", "");
        case OZEL_HAREKAT_TIMI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Özel Harekat Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalayýp hapse atmak.\n\t{FFFFFF}Özel Harekat komutlarýný öðrenmek için /Yardim'a göz at\n", "Kapat", "");
        case SIVIL_POLIS: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Sivil Polis Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalayýp hapse atmak.\n\t{FFFFFF}Sivil Polis komutlarýný öðrenmek için /Yardim'a göz at\n", "Kapat", "");
        case OZEL_KUVVET_B: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Özel Kuvvet Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalayýp hapse atmak.\n\t{FFFFFF}Özel Kuvvet komutlarýný öðrenmek için /Yardim'a göz at\n", "Kapat", "");
        case TURK_H_KUVVETLERI: ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "Hava Kuvvetleri Komutlarý", "{9B59B6}Görevin:\n\t{FFFFFF}Þehirdeki suçlu oyuncularý yakalayýp hapse atmak.\n\t{FFFFFF}Hava Kuvvetleri komutlarýný öðrenmek için /Yardim'a göz at\n", "Kapat", "");
	}
	return 1;
}

forward AracSQLKayit(arac_sid);
public AracSQLKayit(arac_sid)
{
    CeteArac[arac_sid][ceteAracSQL] = cache_insert_id();
	return 1;
}

forward SahipOnayBekle(playerid, karsiid);
public SahipOnayBekle(playerid, karsiid)
{
	if(!IsPlayerConnected(playerid))
	{
	    KillTimer(OnayTimer[playerid]);
	    onayCount[playerid] = 0;
	    ShowPlayerDialog(karsiid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{FEC606}Sahip Teklifi gönderen oyuncu sunucudan ayrýldý.", "Kapat", "");
	    return 1;
	}
	if(!IsPlayerConnected(karsiid))
	{
	    KillTimer(OnayTimer[playerid]);
	    onayCount[playerid] = 0;
	    ShowPlayerDialog(playerid, 95959, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{FEC606}Karþý taraf sunucudan ayrýldý.", "Kapat", "");
	    return 1;
	}
    onayCount[playerid]++;
	switch(onayCount[playerid])
	{
	    case 1: ShowPlayerDialog(playerid, DIALOG_CONAYBEKLE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{FEC606}Karþý tarafýn teklifi onaylamasý bekleniyor.", "Bekle", "");
	    case 2: ShowPlayerDialog(playerid, DIALOG_CONAYBEKLE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{FEC606}Karþý tarafýn teklifi onaylamasý bekleniyor..", "Bekle", "");
	    case 3: ShowPlayerDialog(playerid, DIALOG_CONAYBEKLE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Çete » Sahip Teklifi", "{FEC606}Karþý tarafýn teklifi onaylamasý bekleniyor...", "Bekle", ""), onayCount[playerid]=0;
	}
	return 1;
}

cetePuanArttir(ceteid, pDeger)
{
	new query[75];
    CeteIslem[ceteid][cetePuan] += pDeger;
	if(CeteIslem[ceteid][cetePuan] < 0) CeteIslem[ceteid][cetePuan] = 0;
	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `CetePuan` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][cetePuan], ceteid);
	mysql_query(g_SQL, query);
	return 1;
}

ceteRankCek(ceteid)
{
	new rankNe[20];
	switch(CeteIslem[ceteid][cetePuan])
	{
		case 0: format(rankNe, sizeof(rankNe), "Ayak Takýmý");
		case 1..4: format(rankNe, sizeof(rankNe), "Çete");
		case 5..9: format(rankNe, sizeof(rankNe), "2. Seviye Çete");
		case 10..14: format(rankNe, sizeof(rankNe), "3. Seviye Çete");
		case 15..20: format(rankNe, sizeof(rankNe), "Efsanevi Çete");
		case 21..26: format(rankNe, sizeof(rankNe), "Teþkilat");
		case 27..32: format(rankNe, sizeof(rankNe), "2. Seviye Teþkilat");
		case 33..39: format(rankNe, sizeof(rankNe), "3. Seviye Teþkilat");
		case 40..46: format(rankNe, sizeof(rankNe), "Örgüt");
		case 47..53: format(rankNe, sizeof(rankNe), "2. Seviye Örgüt");
		case 54..60: format(rankNe, sizeof(rankNe), "3. Seviye Örgüt");
		case 61..68: format(rankNe, sizeof(rankNe), "Ölümcül Örgüt");
		case 69..76: format(rankNe, sizeof(rankNe), "Mafya");
		case 77..84: format(rankNe, sizeof(rankNe), "2. Seviye Mafya");
		case 85..92: format(rankNe, sizeof(rankNe), "3. Seviye Mafya");
		case 93..99: format(rankNe, sizeof(rankNe), "Destansý Mafya");
		default: format(rankNe, sizeof(rankNe), "Krallýk");
	}
	return rankNe;
}

stock AnlikUpdate(ceteid)
{
	new query[85];
   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `CeteSayi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][ceteCountL], ceteid);
	mysql_tquery(g_SQL, query);
	return 1;
}

stock CeteOlustur(playerid, ceteid, cg_1, cg_2, cg_3, cg_4, _sID, const cIsmii[MAX_CETE_ISIM], ceteModee)
{
    PlayerCete[_sID] = ceteid;
	new Float:tmp_xPos[3], query[165];
	GetPlayerPos(playerid, tmp_xPos[0], tmp_xPos[1], tmp_xPos[2]);
	Iterator_Temizle(DostCete[ceteid]);
	format(CeteIslem[ceteid][ceteIsmi], 120, "");
	format(CeteIslem[ceteid][ceteIsmi], MAX_CETE_ISIM, cIsmii);
    CeteIslem[ceteid][cetePos][0] = tmp_xPos[0]-cg_1;
    CeteIslem[ceteid][cetePos][1] = tmp_xPos[1]-cg_2;
    CeteIslem[ceteid][cetePos][2] = tmp_xPos[0]+cg_3;
    CeteIslem[ceteid][cetePos][3] = tmp_xPos[1]+cg_4;
    CeteIslem[ceteid][ceteSpawnPos][0] = tmp_xPos[0];
    CeteIslem[ceteid][ceteSpawnPos][1] = tmp_xPos[1];
    CeteIslem[ceteid][ceteSpawnPos][2] = tmp_xPos[2];
    format(CeteIslem[ceteid][cSahip1], MAX_CETE_ISIM, getName(_sID));
    format(CeteIslem[ceteid][cSahip2], MAX_CETE_ISIM, "-");
    format(CeteIslem[ceteid][cSahip3], MAX_CETE_ISIM, "-");
    format(CeteIslem[ceteid][cSahip4], MAX_CETE_ISIM, "-");
    CeteIslem[ceteid][cetePuan] = 0;
    CeteIslem[ceteid][ceteKasasi] = 0;
    format(CeteIslem[ceteid][ceteRengi], 7, "FFFFFF");
    format(CeteIslem[ceteid][ceteTagi], 5, "TagYok");
    CeteIslem[ceteid][ceteSeviye] = 1;
    CeteIslem[ceteid][CeteOldurme] = 0;
    CeteIslem[ceteid][ceteOlum] = 0;
    CeteIslem[ceteid][ceteGod] = 0;
    CeteIslem[ceteid][ceteSkin] = 0;
    CeteIslem[ceteid][ceteAracKapasite] = 0;
    CeteIslem[ceteid][ceteAracRenk][0] = 0;
    CeteIslem[ceteid][ceteAracRenk][1] = 0;
    CeteIslem[ceteid][ceteDeger] = ceteModee;
    
    CeteIslem[ceteid][ceteCountL] += 1;
    
    if(ceteModee == 2)
    {
    	CeteIslem[ceteid][cZone] = GangZoneCreate(CeteIslem[ceteid][cetePos][0], CeteIslem[ceteid][cetePos][1], CeteIslem[ceteid][cetePos][2], CeteIslem[ceteid][cetePos][3]);
    	CeteIslem[ceteid][cArea] = CreateDynamicRectangle(CeteIslem[ceteid][cetePos][0], CeteIslem[ceteid][cetePos][1], CeteIslem[ceteid][cetePos][2], CeteIslem[ceteid][cetePos][3], -1, -1, -1);
    	foreach(new x: Player) GangZoneShowForPlayer(x, CeteIslem[ceteid][cZone], 0xFFFFFF99);
		format(query, sizeof(query), "{FF0067}[Çete Bölgesi]\n{07FFA7}%s(%d)\n{FF9F00}Çete Sahibi: {FFFFFF}%s\n{00FF0C}Çete Seviyesi: {FFFFFF}%d", cIsmii, ceteid, getName(_sID), CeteIslem[ceteid][ceteSeviye]);
		CeteIslem[ceteid][cLabel] = CreateDynamic3DTextLabel(query, 0xFFFFFFFF, tmp_xPos[0], tmp_xPos[1], tmp_xPos[2], 40.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
	}
	Iter_Add(Ceteler, ceteid);

	mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `ceteler`(`cid`, `cIsim`) VALUES ('%d', '%s')", ceteid, cIsmii);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cPosX` = '%f' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][cetePos][0], ceteid);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cPosY` = '%f' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][cetePos][1], ceteid);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cPosZ` = '%f' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][cetePos][2], ceteid);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cPosA` = '%f' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][cetePos][3], ceteid);
	mysql_tquery(g_SQL, query);

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSposX` = '%f' WHERE `cid` = '%d' LIMIT 1", tmp_xPos[0], ceteid);
	mysql_tquery(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSposY` = '%f' WHERE `cid` = '%d' LIMIT 1", tmp_xPos[1], ceteid);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSposZ` = '%f' WHERE `cid` = '%d' LIMIT 1", tmp_xPos[2], ceteid);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSahip1` = '%e' WHERE `cid` = '%d' LIMIT 1", getName(_sID), ceteid);
	mysql_tquery(g_SQL, query);

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSahip2` = '-' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSahip3` = '-' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `cSahip4` = '-' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteRengi` = 'FFFFFF' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteTagi` = 'TagYok' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteSeviye` = '1' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteAracKapasite` = '2' WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_tquery(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `CeteDeger` = '%d' WHERE `cid` = '%d' LIMIT 1", ceteModee, ceteid);
	mysql_tquery(g_SQL, query);
	
  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `CeteSayi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[ceteid][ceteCountL], ceteid);
	mysql_tquery(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `ceteid` = '%d' WHERE `isim` = '%e' LIMIT 1", ceteid, getName(_sID));
	mysql_tquery(g_SQL, query);
	return 1;
}

stock CeteSil(ceteid)
{
	new query[80], sz[120];
	format(sz, sizeof(sz), "{00FF00}« ÇETE » {FFFFFF}%s çetesi kapatýldý.", CeteIslem[ceteid][ceteIsmi]);
	Iterator_Temizle(DostCete[ceteid]);
	
	// Denenmedi
	foreach(new t : Ceteler)
	{
	    if(t == ceteid) continue;
	    Iterator_For(DostCete[t], i)
	    {
	        new idlan = Iterator_Getir(DostCete[t], i);
	        if(idlan == ceteid)
	        {
	            Iterator_Sil(DostCete[t], ceteid);
                for(new q = 0, w = Iterator_Size(DostCete[t]); q != w; q++)
                {
                    format(sz, sizeof(sz), "%s%d ", sz, Iterator_Getir(DostCete[t], q));
                }
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `dostCete` = '%s' WHERE `cid` = '%d'", sz, t);
				mysql_tquery(g_SQL, query);
				format(sz, sizeof(sz), "");
	        }
	    }
	}
	
	format(CeteIslem[ceteid][ceteIsmi], 120, "");
	format(CeteIslem[ceteid][ceteIsmi], MAX_CETE_ISIM, "");
    CeteIslem[ceteid][cetePos][0] = 0.0;
    CeteIslem[ceteid][cetePos][1] = 0.0;
    CeteIslem[ceteid][cetePos][2] = 0.0;
    CeteIslem[ceteid][cetePos][3] = 0.0;
    CeteIslem[ceteid][ceteSpawnPos][0] = 0.0;
    CeteIslem[ceteid][ceteSpawnPos][1] = 0.0;
    CeteIslem[ceteid][ceteSpawnPos][2] = 0.0;
    format(CeteIslem[ceteid][cSahip1], 24, "-");
    format(CeteIslem[ceteid][cSahip2], 24, "-");
    format(CeteIslem[ceteid][cSahip3], 24, "-");
    format(CeteIslem[ceteid][cSahip4], 24, "-");
    CeteIslem[ceteid][ceteKasasi] = 0;
    format(CeteIslem[ceteid][ceteRengi], 7, "FFFFFF");
    format(CeteIslem[ceteid][ceteTagi], 5, "TagYok");
    CeteIslem[ceteid][ceteSeviye] = 1;
    CeteIslem[ceteid][CeteOldurme] = 0;
    CeteIslem[ceteid][ceteOlum] = 0;
    CeteIslem[ceteid][ceteGod] = 0;
    CeteIslem[ceteid][ceteSkin] = 0;
    CeteIslem[ceteid][ceteAracKapasite] = 0;
	CeteIslem[ceteid][ceteAracRenk][0] = 0;
    CeteIslem[ceteid][ceteAracRenk][1] = 0;
    if(CeteIslem[ceteid][ceteDeger] == 2)
	{
    GangZoneDestroy(CeteIslem[ceteid][cZone]);
    DestroyDynamicArea(CeteIslem[ceteid][cArea]);
	DestroyDynamic3DTextLabel(CeteIslem[ceteid][cLabel]);
    CeteIslem[ceteid][cLabel] = Text3D: INVALID_3DTEXT_ID;
	}
    Iter_Remove(Ceteler, ceteid);
	foreach(new i : Player)
    {
        if(PlayerCete[i] == ceteid)
        {
            SendClientMessage(i, -1, sz);
        	TeklifAttigim[i] = -1;
			PlayerCete[i] = -1;
			OnayTeklif[i] = -1;
			format(PlayerCeteRutbe[i], 21, "");
			kafaTextUp(i);
        }
    }
    mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `CeteRutbe` = '' WHERE `ceteid` = '%d'", ceteid);
	mysql_query(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `oyuncuveri` SET `ceteid` = '-1' WHERE `ceteid` = '%d'", ceteid);
	mysql_query(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `ceteler` WHERE `cid` = '%d' LIMIT 1", ceteid);
	mysql_query(g_SQL, query);
	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
	    if(CeteArac[i][ceteAracAktif] == true)
	    {
	        if(CeteArac[i][ceteIDsi] == ceteid)
	        {
	            CeteArac[i][ceteIDsi] = -1;
	            CeteArac[i][ceteAracPos][0] = 0.0;
	            CeteArac[i][ceteAracPos][1] = 0.0;
	            CeteArac[i][ceteAracPos][2] = 0.0;
                CeteArac[i][ceteAracPos][3] = 0.0;
	            CeteArac[i][ceteAracR][0] = 0;
	            CeteArac[i][ceteAracR][1] = 0;
	            CeteArac[i][ceteAracSQL] = -1;
	            CeteArac[i][ceteAracAktif] = false;
	            DestroyVehicle(i);
	        }
	    }
	}
	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetearaclari` WHERE `CeteSahipID` = '%d'", ceteid);
	mysql_query(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `cetebagis` WHERE `ceteid` = '%d'", ceteid);
	mysql_query(g_SQL, query);
	return 1;
}

stock CeteUyesi(ceteid)
{
    new Cache:VeriCek, query[80];
    // SELECT * FROM `oyuncuveri` WHERE `ceteid` = '%d'
	mysql_format(g_SQL, query, sizeof(query), "SELECT `ceteid` FROM `oyuncuveri` WHERE ceteid > -1 AND `ceteid` = '%d'", ceteid);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	cache_delete(VeriCek);
	return rows;
}

stock CeteRenkKontrol(const renkx[7])
{
    new Cache:VeriCek, query[66], xCount = 0;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `ceteRengi` = '%s' LIMIT 1", renkx);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    for(new i = 0; i < rows; ++i)
	    {
	        xCount++;
	    }
	}
	cache_delete(VeriCek);
	return xCount;
}

stock CeteTagKontrol(const cTagx[7])
{
    new Cache:VeriCek, query[66], xCount = 0;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `ceteTagi` = '%s' LIMIT 1", cTagx);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    for(new i = 0; i < rows; ++i)
	    {
	        xCount++;
	    }
	}
	cache_delete(VeriCek);
	return xCount;
}

stock CeteSkinKontrol(skin_id)
{
    new Cache:VeriCek, query[63], xCount = 0;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `ceteler` WHERE `ceteSkin` = '%d' LIMIT 1", skin_id);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    for(new i = 0; i < rows; ++i)
	    {
	        xCount++;
	    }
	}
	cache_delete(VeriCek);
	return xCount;
}

stock BagisYapti(playerid, bagismiktar)
{
	new Cache:VeriCek, query[126], c = PlayerCete[playerid];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetebagis` WHERE `Bagisim` = '%e' LIMIT 1", getName(playerid));
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    new ymiktar = 0;
	    cache_get_value_name_int(0, "Bagisi", ymiktar);
	    ymiktar += bagismiktar;
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetebagis` SET `Bagisi` = '%d' WHERE `Bagisim` = '%e' LIMIT 1", ymiktar, getName(playerid));
		mysql_query(g_SQL, query);
	}
	if(!rows)
	{
   		mysql_format(g_SQL, query, sizeof(query), "INSERT INTO `cetebagis`(`ceteid`, `Bagisim`, `Bagisi`) VALUES ('%d', '%e', '%d')", c, getName(playerid), bagismiktar);
  		mysql_query(g_SQL, query);
	}
	cache_delete(VeriCek);
	return 1;
}

stock CeteIsimKontrol(cc_isim[])
{
	new xx = 0;
	foreach(new c : Ceteler)
	{
		if(strcmp(CeteIslem[c][ceteIsmi], cc_isim, false) == 0)
		{
		    xx = 1;
		}
	}
	return xx;
}

forward Float: CeteKD(ceteid);
public Float: CeteKD(ceteid)
{
    new
		Cache:VeriCek,
		query[55],
		xOlum,
		xOldurme,
		Float:kdr = 0.0,
		o = 0
	;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `oyuncuveri` WHERE `ceteid` = '%d'", ceteid);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    for(new i = 0; i < rows; ++i)
	    {
	        cache_get_value_name_int(i, "olum", xOlum);
	        cache_get_value_name_int(i, "oldurme", xOldurme);
     		kdr += floatdiv(xOldurme, xOlum);
     		o++;
	    }
	}
	cache_delete(VeriCek);
	return kdr/o;
}

stock CeteDostt(playerid)
{
    new sz[750], c = PlayerCete[playerid];
    format(sz, sizeof(sz), "Çete ID\tÇete Ýsmi\n");
    format(sz, sizeof(sz), "%s{FF0073}» {FFFFFF}Dost Çete Ekle\t\n", sz);
    format(sz, sizeof(sz), "%s{FF0073}» {FFFFFF}Dost Çete Sil\t\n", sz);
    format(sz, sizeof(sz), "%s \t\n", sz);
    if(Iterator_Size(DostCete[c]) != 0)
    {
        Iterator_For(DostCete[c], i)
        {
            new id = Iterator_Getir(DostCete[c], i);
        	format(sz, sizeof(sz), "%s%d\t%s\n", sz, id, CeteIslem[id][ceteIsmi]);
		}
    }
    ShowPlayerDialog(playerid, CETE_DOST_MENU, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Paneli » Dost", sz, "Seç", "Geri");
	return 1;
}

stock CeteSahip(playerid)
{
    new sz[100], c = PlayerCete[playerid];
    if(CeteIslem[c][ceteDeger] == 2)
    {
	    format(sz, sizeof(sz), "#\tSahip\n");
	    format(sz, sizeof(sz), "%sSahip 1:\t%s\n", sz, CeteIslem[c][cSahip1]);
	    if(strcmp(CeteIslem[c][cSahip2], "-", false) == 0){format(sz, sizeof(sz), "%sSahip 2:\tYok\n", sz);}else{
	    format(sz, sizeof(sz), "%sSahip 2:\t%s\n", sz, CeteIslem[c][cSahip2]);}
	    if(strcmp(CeteIslem[c][cSahip3], "-", false) == 0){format(sz, sizeof(sz), "%sSahip 3:\tYok\n", sz);}else{
		format(sz, sizeof(sz), "%sSahip 3:\t%s\n", sz, CeteIslem[c][cSahip3]);}
		if(strcmp(CeteIslem[c][cSahip4], "-", false) == 0){format(sz, sizeof(sz), "%sSahip 4:\tYok\n", sz);}else{
		format(sz, sizeof(sz), "%sSahip 4:\t%s\n", sz, CeteIslem[c][cSahip4]);}
	    ShowPlayerDialog(playerid, DIALOG_CSAHIP, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Sahipleri", sz, "Deðiþtir", "Geri");
	}else if(CeteIslem[c][ceteDeger] == 1)
	{
		format(sz, sizeof(sz), "#\tSahip\n");
	    format(sz, sizeof(sz), "%sSahip 1:\t%s\n", sz, CeteIslem[c][cSahip1]);
	    if(strcmp(CeteIslem[c][cSahip2], "-", false) == 0){format(sz, sizeof(sz), "%sSahip 2:\tYok\n", sz);}else{
	    format(sz, sizeof(sz), "%sSahip 2:\t%s\n", sz, CeteIslem[c][cSahip2]);}
	    ShowPlayerDialog(playerid, DIALOG_CSAHIP, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Sahipleri", sz, "Deðiþtir", "Geri");
	}
	return 1;
}

stock CeteKasa(playerid)
{
	new xz[250], c = PlayerCete[playerid];
	format(xz, sizeof(xz), "Ýþlem\tSonuç\n");
	format(xz, sizeof(xz), "%s{FF0073}» {FFFFFF}Kasadaki Para:\t$%s", xz, convertNumber(CeteIslem[c][ceteKasasi]));
	format(xz, sizeof(xz), "%s \t \n\n", xz);
	format(xz, sizeof(xz), "%s \t \n\n", xz);
	format(xz, sizeof(xz), "%s{FF0073}» {FFFFFF}Para Yatýr\t-\n", xz);
	format(xz, sizeof(xz), "%s{FF0073}» {FFFFFF}Para Çek\t-\n", xz);
    ShowPlayerDialog(playerid, DIALOG_KASA, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Çete Kasasý", xz, "Seç", "Geri");
	return 1;
}

stock cKapasite(ceteid)
{
	new kapasite = 0;
	switch(CeteIslem[ceteid][ceteSeviye])
	{
		case 1: kapasite = 10;
		case 2: kapasite = 15;
		case 3: kapasite = 20;
		case 4: kapasite = 25;
		case 5: kapasite = 30;
	}
	return kapasite;
}

stock cyMiktar(ceteid)
{
	new cParaa = 0;
	switch(CeteIslem[ceteid][ceteSeviye]+1)
	{
		case 2: cParaa = 50000000;
		case 3: cParaa = 75000000;
		case 4: cParaa = 100000000;
		case 5: cParaa = 125000000;
	}
	return cParaa;
}

stock caKapasite(ceteid)
{
	new caKsite = 0;
	switch(CeteIslem[ceteid][ceteSeviye]+1)
	{
		case 2: caKsite = 4;
		case 3: caKsite = 6;
		case 4: caKsite = 8;
		case 5: caKsite = 10;
	}
	return caKsite;
}

stock caKapasite2(ceteid)
{
	new caKsite = 0;
	switch(CeteIslem[ceteid][ceteSeviye])
	{
	    case 1: caKsite = 2;
		case 2: caKsite = 4;
		case 3: caKsite = 6;
		case 4: caKsite = 8;
		case 5: caKsite = 10;
	}
	return caKsite;
}

stock caGet(ceteid)
{
    new Cache:VeriCek, query[63], xCount = 0;
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `cetearaclari` WHERE `CeteSahipID` = '%d'", ceteid);
	VeriCek = mysql_query(g_SQL, query);
	new rows = cache_num_rows();
	if(rows)
	{
	    for(new i = 0; i < rows; ++i)
	    {
	        xCount++;
	    }
	}
	cache_delete(VeriCek);
	return xCount;
}

stock GirisZoneYukle(playerid)
{
    new gethex, szHex[11];
    foreach(new c: Ceteler)
    {
		if(CeteIslem[c][ceteDeger] == 2)
		{
			format(szHex, sizeof(szHex), "0x%s99", CeteIslem[c][ceteRengi]);
			sscanf(szHex, "x", gethex);
			GangZoneShowForPlayer(playerid, CeteIslem[c][cZone], gethex);
		}
	}
	return 1;
}

stock CeteYukle(){ mysql_tquery(g_SQL, "SELECT * FROM `ceteler`", "___CeteYukle", ""); }
stock CeteAracYukle(){ mysql_tquery(g_SQL, "SELECT * FROM `cetearaclari`", "___CeteAracYukle", ""); }
CeteSavaslariYukle() { mysql_tquery(g_SQL, "SELECT * FROM `cetemekan`", "_CeteSavaslariYukle", ""); }
AtmYukle() { mysql_tquery(g_SQL, "SELECT * FROM `atmler`", "_AtmleriYukle", ""); }

function ___CeteYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new id, yukle, label[200];
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "cid", id);
		    cache_get_value_name(yukle, "cIsim", CeteIslem[id][ceteIsmi], MAX_CETE_ISIM);
			cache_get_value_name_float(yukle, "cPosX", CeteIslem[id][cetePos][0]);
			cache_get_value_name_float(yukle, "cPosY", CeteIslem[id][cetePos][1]);
			cache_get_value_name_float(yukle, "cPosZ", CeteIslem[id][cetePos][2]);
			cache_get_value_name_float(yukle, "cPosA", CeteIslem[id][cetePos][3]);
			cache_get_value_name_float(yukle, "cSposX", CeteIslem[id][ceteSpawnPos][0]);
			cache_get_value_name_float(yukle, "cSposY", CeteIslem[id][ceteSpawnPos][1]);
			cache_get_value_name_float(yukle, "cSposZ", CeteIslem[id][ceteSpawnPos][2]);
			cache_get_value_name(yukle, "cSahip1", CeteIslem[id][cSahip1], 24);
			cache_get_value_name(yukle, "cSahip2", CeteIslem[id][cSahip2], 24);
			cache_get_value_name(yukle, "cSahip3", CeteIslem[id][cSahip3], 24);
			cache_get_value_name(yukle, "cSahip4", CeteIslem[id][cSahip4], 24);
			cache_get_value_name_int(yukle, "ceteKasasi", CeteIslem[id][ceteKasasi]);
			cache_get_value_name(yukle, "ceteRengi", CeteIslem[id][ceteRengi], 7);
			cache_get_value_name(yukle, "ceteTagi", CeteIslem[id][ceteTagi], 6);
			cache_get_value_name_int(yukle, "ceteSeviye", CeteIslem[id][ceteSeviye]);
			cache_get_value_name_int(yukle, "CeteOldurme", CeteIslem[id][CeteOldurme]);
			cache_get_value_name_int(yukle, "ceteOlum", CeteIslem[id][ceteOlum]);
			cache_get_value_name_int(yukle, "ceteGod", CeteIslem[id][ceteGod]);
			cache_get_value_name_int(yukle, "ceteSkin", CeteIslem[id][ceteSkin]);
			cache_get_value_name_int(yukle, "ceteAracKapasite", CeteIslem[id][ceteAracKapasite]);
			cache_get_value_name_int(yukle, "AR1", CeteIslem[id][ceteAracRenk][0]);
			cache_get_value_name_int(yukle, "AR2", CeteIslem[id][ceteAracRenk][1]);
			cache_get_value_name(yukle, "Plaka", CeteIslem[id][cetePlaka], 11);
			cache_get_value_name_int(yukle, "CeteDeger", CeteIslem[id][ceteDeger]);
			cache_get_value_name_int(yukle, "CetePuan", CeteIslem[id][cetePuan]);
			cache_get_value_name(yukle, "dostCete", CeteIslem[id][ceteDost], 120);
			cache_get_value_name_int(yukle, "dostgode", CeteIslem[id][dostGode]);
			
			cache_get_value_name_int(yukle, "CeteSayi", CeteIslem[id][ceteCountL]);
			
			printf("Çete Sahip 1: %s", CeteIslem[id][cSahip1]);
			printf("Çete Sahip 2: %s", CeteIslem[id][cSahip2]);
			printf("Çete Sahip 3: %s", CeteIslem[id][cSahip3]);
			printf("Çete Sahip 4: %s", CeteIslem[id][cSahip4]);
			
			
			if(CeteIslem[id][ceteDeger] == 2)
			{
				CeteIslem[id][cZone] = GangZoneCreate(CeteIslem[id][cetePos][0], CeteIslem[id][cetePos][1], CeteIslem[id][cetePos][2], CeteIslem[id][cetePos][3]);
				CeteIslem[id][cArea] = CreateDynamicRectangle(CeteIslem[id][cetePos][0], CeteIslem[id][cetePos][1], CeteIslem[id][cetePos][2], CeteIslem[id][cetePos][3], -1, -1, -1);
				format(label, sizeof(label), "{FF0067}[Çete Bölgesi]\n{07FFA7}%s(%d)\n{FF9F00}Çete Sahibi: {FFFFFF}%s\n{00FF0C}Çete Seviyesi: {FFFFFF}%d", CeteIslem[id][ceteIsmi], id, CeteIslem[id][cSahip1], CeteIslem[id][ceteSeviye]);
				CeteIslem[id][cLabel] = CreateDynamic3DTextLabel(label, 0xFFFFFFFF, CeteIslem[id][ceteSpawnPos][0], CeteIslem[id][ceteSpawnPos][1], CeteIslem[id][ceteSpawnPos][2], 40.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, 0, 0);
			}
			if(strlen(CeteIslem[id][ceteDost]) != 0)
			{
	            new arx[MAX_CETE];
	            for(new i = 0; i < sizeof(arx); i++) arx[i] = -1;
	            sscanf(CeteIslem[id][ceteDost], "a<i>["MAX_CETE2"]", arx);
	            for(new i = 0; i < sizeof(arx); i++)
	            {
	                if(arx[i] == -1) continue;
	            	Iterator_Ekle(DostCete[id], arx[i]);
				}
            }
			Iter_Add(Ceteler, id);
	    	yukle++;
		}
		printf("\n=> Çete: Yüklenen çete sayýsý: %d", yukle);
	}
	else
	{
	    printf("\n=> Çete: Henüz çete oluþturulmamýþ.");
	}
	return 1;
}

function ___CeteAracYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new
		 	id,
		 	yukle,
		 	ceteidd,
		 	ceteeAmodel,
		 	Float: CeteaPos[4],
		 	CeteaR[2],
		 	_paintjjob,
		 	aModd[17],
		 	nwarac
 		;
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "caid", id);
		    cache_get_value_name_int(yukle, "CeteSahipID", ceteidd);
		    cache_get_value_name_int(yukle, "CeteAModel", ceteeAmodel);
		    cache_get_value_name_float(yukle, "CeteaPosX", CeteaPos[0]);
		    cache_get_value_name_float(yukle, "CeteaPosY", CeteaPos[1]);
		    cache_get_value_name_float(yukle, "CeteaPosZ", CeteaPos[2]);
		    cache_get_value_name_float(yukle, "CeteaPosA", CeteaPos[3]);
		    cache_get_value_name_int(yukle, "CeteaR1", CeteaR[0]);
		    cache_get_value_name_int(yukle, "CeteaR2", CeteaR[1]);
		    cache_get_value_name_int(yukle, "PaintJob", _paintjjob);
			cache_get_value_name_int(yukle, "aP1", aModd[0]);
  	        cache_get_value_name_int(yukle, "aP2", aModd[1]);
  	        cache_get_value_name_int(yukle, "aP3", aModd[2]);
  	        cache_get_value_name_int(yukle, "aP4", aModd[3]);
  	        cache_get_value_name_int(yukle, "aP5", aModd[4]);
  	        cache_get_value_name_int(yukle, "aP6", aModd[5]);
  	        cache_get_value_name_int(yukle, "aP7", aModd[6]);
  	        cache_get_value_name_int(yukle, "aP8", aModd[7]);
  	        cache_get_value_name_int(yukle, "aP9", aModd[8]);
  	        cache_get_value_name_int(yukle, "aP10", aModd[9]);
  	        cache_get_value_name_int(yukle, "aP11", aModd[10]);
  	        cache_get_value_name_int(yukle, "aP12", aModd[11]);
  	        cache_get_value_name_int(yukle, "aP13", aModd[12]);
  	        cache_get_value_name_int(yukle, "aP14", aModd[13]);
  	        cache_get_value_name_int(yukle, "aP15", aModd[14]);
  	        cache_get_value_name_int(yukle, "aP16", aModd[15]);
  	        cache_get_value_name_int(yukle, "aP17", aModd[16]);
		    nwarac = CreateVehicle(ceteeAmodel, CeteaPos[0], CeteaPos[1], CeteaPos[2], CeteaPos[3], CeteaR[0], CeteaR[1], 99999);
			if(strlen(CeteIslem[ceteidd][cetePlaka]) >= 1)
			{
			    SetVehicleNumberPlate(nwarac, CeteIslem[ceteidd][cetePlaka]);
			}
			CeteArac[nwarac][ceteIDsi] = ceteidd;
		    CeteArac[nwarac][ceteAracPos][0] = CeteaPos[0];
		    CeteArac[nwarac][ceteAracPos][1] = CeteaPos[1];
		    CeteArac[nwarac][ceteAracPos][2] = CeteaPos[2];
		    CeteArac[nwarac][ceteAracPos][3] = CeteaPos[3];
		    CeteArac[nwarac][ceteAracR][0] = CeteaR[0];
		    CeteArac[nwarac][ceteAracR][1] = CeteaR[1];
		    CeteArac[nwarac][c_pJob] = _paintjjob;
		    for(new m = 0; m < 17; m++) CeteArac[nwarac][c_mParca][m] = aModd[m];
		    if(CeteArac[nwarac][c_pJob] != 0) ChangeVehiclePaintjob(nwarac, CeteArac[nwarac][c_pJob] - 1);
		    for(new m = 0; m < 17; ++m) if(CeteArac[nwarac][c_mParca][m] != 0) AddVehicleComponent(nwarac, CeteArac[nwarac][c_mParca][m]);
		    CeteArac[nwarac][ceteAracSQL] = id;
		    CeteArac[nwarac][ceteAracAktif] = true;
	    	yukle++;
		}
		printf("\n=> Çete Araç: Toplam yüklenen araç sayýsý: %d", yukle);
	}
	else
	{
	    printf("\n=> Çete Araç: Henüz çetelerden araç alýnmamýþ.");
	}
	return 1;
}

function _AtmleriYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new id, yukle, Float: ax_Pos[6], a_veri[75], str[45];
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "atmid", id);
		    cache_get_value_name(yukle, "atmPos", a_veri, 75);
		    if(!sscanf(a_veri, "p<|>ffffff", ax_Pos[0], ax_Pos[1], ax_Pos[2], ax_Pos[3], ax_Pos[4], ax_Pos[5]))
		    AtmIslem[id][atmObje] = CreateDynamicObject(19324, ax_Pos[0], ax_Pos[1], ax_Pos[2], ax_Pos[3], ax_Pos[4], ax_Pos[5], -1, -1);
            AtmIslem[id][atmCP] = CreateDynamicCP(ax_Pos[0], ax_Pos[1], ax_Pos[2], 1.5, -1, -1, -1, 15.0);
			format(str, sizeof(str), "{3498db}ATM ( {FFFFFF}ID: %d {3498db})", id);
			AtmIslem[id][atmLabel] = CreateDynamic3DTextLabel(str, 0xFFFFFFFF, ax_Pos[0], ax_Pos[1], ax_Pos[2] + 1.5, 15.0);
			AtmIslem[id][atmPos][0] = ax_Pos[0];
		    AtmIslem[id][atmPos][1] = ax_Pos[1];
		    AtmIslem[id][atmPos][2] = ax_Pos[2];
		    AtmIslem[id][atmPos][3] = ax_Pos[3];
		    AtmIslem[id][atmPos][4] = ax_Pos[4];
		    AtmIslem[id][atmPos][5] = ax_Pos[5];
			Iter_Add(Atmler, id);
	    	yukle++;
		}
		printf("\n=> ATM: Toplam yüklenen atm: %d\n", yukle);
	}
	if(!rows) { printf("\n=> ATM: Oluþturulmus atm yok !\n"); }
	return 1;
}

stock kafaTextUp(playerid)
{
	new kafaText[125], c = PlayerCete[playerid];
	if(c == -1)
	{
	    if(oyuncuData[playerid][pVip] == 0)
		{
	    	format(kafaText, sizeof(kafaText), "{00FF00}[ %d Level ]", oyuncuData[playerid][_LevelCount]);
            if(IsValidDynamic3DTextLabel(kafaYazi[playerid])){DestroyDynamic3DTextLabel(kafaYazi[playerid]);}
			kafaYazi[playerid] = CreateDynamic3DTextLabel(kafaText, 0xFFFFFFFF, 0.0, 0.0, 0.7, 25.0, playerid);
		}
	    else
		{
	    	format(kafaText, sizeof(kafaText), "{00FF00}[ %d Level ]\n{FF3388}«V.I.P»", oyuncuData[playerid][_LevelCount]);
			if(IsValidDynamic3DTextLabel(kafaYazi[playerid])){DestroyDynamic3DTextLabel(kafaYazi[playerid]);}
			kafaYazi[playerid] = CreateDynamic3DTextLabel(kafaText, 0xFFFFFFFF, 0.0, 0.0, 1.3, 25.0, playerid);
	    }
	}
	else
	{
 		if(oyuncuData[playerid][pVip] == 0)
		{
	    	format(kafaText, sizeof(kafaText), "{00FF00}[ %d Level ]\n{%s}%s", oyuncuData[playerid][_LevelCount], CeteIslem[c][ceteRengi], CeteIslem[c][ceteIsmi]);
    		if(IsValidDynamic3DTextLabel(kafaYazi[playerid])){DestroyDynamic3DTextLabel(kafaYazi[playerid]);}
			kafaYazi[playerid] = CreateDynamic3DTextLabel(kafaText, 0xFFFFFFFF, 0.0, 0.0, 1.3, 25.0, playerid);
		}
		else
		{
  	    	format(kafaText, sizeof(kafaText), "{00FF00}[ %d Level ]\n{%s}%s\n{FF3388}«V.I.P»", oyuncuData[playerid][_LevelCount], CeteIslem[c][ceteRengi], CeteIslem[c][ceteIsmi]);
    		if(IsValidDynamic3DTextLabel(kafaYazi[playerid])){DestroyDynamic3DTextLabel(kafaYazi[playerid]);}
			kafaYazi[playerid] = CreateDynamic3DTextLabel(kafaText, 0xFFFFFFFF, 0.0, 0.0, 1.3, 25.0, playerid);
		}
	}
	return 1;
}

stock duelloBugFix()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		SetPVarInt(i, "DuelloYasak", 0);
		SetPVarInt(i, "DuelloYasak", 0);
		//pParaver(i, -DuelloIslem[i][dP]);
		//pParaver(i, DuelloIslem[i][dP]);
		DuelloOyuncusu[i] = INVALID_PLAYER_ID;
		DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
		DuelloIslem[i][dHarita] = 0;
		DuelloIslem[i][dP] = 0;
		DuelloIslem[i][dSilah][0] = 0;
		DuelloIslem[i][dSilah][1] = 0;
		Duelloda[i] = false;
		DuelloOyuncusu[i] = INVALID_PLAYER_ID;
		DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
		DuelloIslem[i][dHarita] = 0;
		DuelloIslem[i][dP] = 0;
		DuelloIslem[i][dSilah][0] = 0;
		DuelloIslem[i][dSilah][1] = 0;
		Duelloda[i] = false;
		//pParaver(i, -DuelloIslem[i][dP]);
		//pParaver(i, DuelloIslem[i][dP]);
		DuelloOyuncusu[i] = INVALID_PLAYER_ID;
		DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
		DuelloIslem[i][dHarita] = 0;
		DuelloIslem[i][dP] = 0;
		DuelloIslem[i][dSilah][0] = 0;
		DuelloIslem[i][dSilah][1] = 0;
		Duelloda[i] = false;
		DuelloOyuncusu[i] = INVALID_PLAYER_ID;
		DuelloIslem[i][d_ID] = INVALID_PLAYER_ID;
		DuelloIslem[i][dHarita] = 0;
		DuelloIslem[i][dP] = 0;
		DuelloIslem[i][dSilah][0] = 0;
		DuelloIslem[i][dSilah][1] = 0;
		Duelloda[i] = false;
	}
	return 1;
}
stock GrupFix()
{
	foreach(new g : _Gruplar)
	{
	    new gmax = GrupSlotKontrol(g);
	    if(gmax <= 0)
	    {
			format(grupIslem[g][g_Ismi], MAX_G_ISIM, "");
			format(grupIslem[g][g_Kurucu], MAX_PLAYER_NAME, "");
			grupIslem[g][g_kID] = INVALID_PLAYER_ID;
			grupIslem[g][g_Aktiflik] = 0;
			grupIslem[g][g_limit] = 0;
			Iter_Remove(_Gruplar, g);
			foreach(new i: Player) if(g_oIslem[i][g_Katilim] == g) g_oIslem[i][g_Katilim] = -1;
	    }
	}
	return 1;
}

stock EkipFix()
{
	foreach(new e : _Ekipler)
	{
	    new emax = EkipSlotKontrol(e);
	    if(emax <= 0)
	    {
			format(ekipIslem[e][e_Ismi], MAX_G_ISIM, "");
			format(ekipIslem[e][e_Kurucu], MAX_PLAYER_NAME, "");
			ekipIslem[e][e_kID] = INVALID_PLAYER_ID;
			ekipIslem[e][e_Aktiflik] = 0;
			ekipIslem[e][e_limit] = 0;
			Iter_Remove(_Ekipler, e);
			foreach(new i: Player) if(e_oIslem[i][e_Katilim] == e) e_oIslem[i][e_Katilim] = -1;
	    }
	}
	return 1;
}

stock BolgeFix()
{
    foreach(new b: Bolgeler)
    {
        for(new g = 0; g < MAX_GRUP; g++)
        {
		    if(grupIslem[g][g_Aktiflik] == 0)
		    {
				BolgeIslem[b][bolgeGrup] = -1;
		        BolgeIslem[b][bolgedurum] = false;
		        BolgeIslem[b][bolgeSure] = 0;
				BolgeIslem[b][bolgeAlindi] = 0;
				BolgeIslem[b][bolgeGrup] = -1;
				format(BolgeIslem[b][bolgeSahip], MAX_PLAYER_NAME, "-");
				new label[250];
				format(label, sizeof(label), "{20F587}[ BÖLGE ]\n{FCDC5B}%s(%d)\n{FF4242}Sahip: {FFFFFF}Yok\n{FF4242}Gelir: {FFFFFF}$%s\n{52C5FF}/EleGecir", BolgeIslem[b][bolgeIsim], b, convertNumber(BolgeIslem[b][bolgeGelir]));
				UpdateDynamic3DTextLabelText(BolgeIslem[b][bolgeLabel], 0xFFFFFFFF, label);
		    }
		}
    }
	return 1;
}

stock GirisMapYukle(playerid)
{
	// Giriþ Ekraný
    if(karakterOptimize[playerid] == 1){
    
	girisObjeler[playerid][0] = CreateDynamicObject(3885,3755.124,-605.586,6.573,0.000,0.000,95.100,-1,-1,playerid,300.000,300.000);
	SetDynamicObjectMaterial(girisObjeler[playerid][0], 0, 18646, "matcolours", "grey-95-percent", 0x00000000);
	SetDynamicObjectMaterial(girisObjeler[playerid][0], 2, -1, "none", "none", 0xFF000000);

	girisObjeler[playerid][1] = CreateDynamicObject(19482,3755.141,-548.778,2.863,7.500,-62.099,270.000,-1,-1,playerid,300.000,300.000);
	SetDynamicObjectMaterialText(girisObjeler[playerid][1], 0, "Z", 90, "Wingdings", 150, 0, 0xFFFFFFFF, 0x00000000, 1);

	girisObjeler[playerid][2] = CreateDynamicObject(3863,3755.261,-548.118,1.849,27.420,-5.159,-3.059,-1,-1,playerid,300.000,300.000);
	SetDynamicObjectMaterial(girisObjeler[playerid][2], 0, 18996, "mattextures", "sampred", 0x00000000);

	girisObjeler[playerid][3] = CreateDynamicObject(19338,3808.361,-537.420,2.795,0.000,0.000,-75.720,-1,-1,playerid,300.000,300.000);
	SetDynamicObjectMaterial(girisObjeler[playerid][3], 3, 1373, "traincross", "rednwhite", 0x00000000);

	girisObjeler[playerid][4] = CreateDynamicObject(1608,3781.689,-568.696,0.090,0.000,0.000,113.500,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][5] = CreateDynamicObject(16442,3738.221,-561.165,3.461,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][6] = CreateDynamicObject(4242,3731.891,-732.320,-100.965,0.000,90.000,270.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][7] = CreateDynamicObject(4242,3857.302,-606.526,-100.929,0.000,90.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][8] = CreateDynamicObject(10403,3778.317,-568.510,7.955,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][9] = CreateDynamicObject(900,3726.921,-560.155,2.573,56.580,106.980,-207.479,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][10] = CreateDynamicObject(16442,3736.499,-561.134,5.438,-0.900,-27.599,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][11] = CreateDynamicObject(19315,3758.556,-549.495,2.836,0.000,0.000,-114.600,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][12] = CreateDynamicObject(4242,3606.180,-606.615,-100.927,0.000,90.000,180.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][13] = CreateDynamicObject(3861,3745.368,-546.453,1.562,27.840,2.700,-25.499,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][14] = CreateDynamicObject(3862,3750.629,-543.498,1.383,27.120,2.819,-100.560,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][15] = CreateDynamicObject(1463,3750.133,-548.183,1.965,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][16] = CreateDynamicObject(3461,3750.169,-548.338,0.453,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][17] = CreateDynamicObject(837,3752.364,-552.316,1.920,0.000,0.000,-158.460,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][18] = CreateDynamicObject(3934,3807.192,-537.582,2.674,3.359,-0.479,32.700,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][19] = CreateDynamicObject(900,3731.369,-537.445,9.596,145.980,89.760,-13.439,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][20] = CreateDynamicObject(1640,3746.019,-546.146,1.786,2.039,1.440,71.159,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][21] = CreateDynamicObject(1645,3745.393,-547.057,1.796,0.839,3.359,69.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][22] = CreateDynamicObject(1645,3750.060,-543.459,1.588,0.000,0.000,-8.220,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][23] = CreateDynamicObject(1645,3754.994,-548.893,2.000,6.360,0.119,-98.220,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][24] = CreateDynamicObject(1642,3755.224,-547.353,1.962,6.780,-1.259,-96.660,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][25] = CreateDynamicObject(622,3797.177,-549.063,1.719,10.739,7.260,-226.379,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][26] = CreateDynamicObject(8493,3765.034,-455.666,15.397,0.000,0.000,68.519,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][27] = CreateDynamicObject(9159,3765.029,-455.676,15.403,0.000,0.000,68.340,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][28] = CreateDynamicObject(712,3823.486,-513.505,11.345,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][29] = CreateDynamicObject(712,3811.854,-517.109,11.345,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][30] = CreateDynamicObject(712,3747.564,-536.405,11.345,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][31] = CreateDynamicObject(683,3758.821,-535.612,1.831,0.000,0.000,-35.880,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][32] = CreateDynamicObject(683,3768.748,-534.446,1.718,0.000,0.000,-39.479,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][33] = CreateDynamicObject(683,3742.805,-536.995,1.365,0.000,0.000,-29.040,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][34] = CreateDynamicObject(683,3796.348,-525.980,1.831,0.000,0.000,-147.599,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][35] = CreateDynamicObject(683,3806.241,-518.236,1.831,0.000,0.000,-44.099,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][36] = CreateDynamicObject(683,3819.098,-513.396,1.831,0.000,0.000,-9.479,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][37] = CreateDynamicObject(621,3771.774,-534.076,1.786,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][38] = CreateDynamicObject(621,3789.014,-524.397,1.786,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][39] = CreateDynamicObject(845,3746.216,-540.723,7.717,-50.100,72.060,-38.700,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][40] = CreateDynamicObject(2817,3751.636,-544.379,1.572,0.000,0.000,83.760,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][41] = CreateDynamicObject(1579,3750.869,-544.424,1.543,0.000,0.000,16.139,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][42] = CreateDynamicObject(1580,3754.152,-547.807,1.911,0.000,0.000,53.939,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][43] = CreateDynamicObject(1575,3746.386,-546.054,1.771,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][44] = CreateDynamicObject(823,3757.969,-537.424,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][45] = CreateDynamicObject(823,3753.267,-537.228,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][46] = CreateDynamicObject(823,3748.489,-537.693,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][47] = CreateDynamicObject(823,3744.792,-538.660,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][48] = CreateDynamicObject(823,3740.411,-537.158,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][49] = CreateDynamicObject(823,3736.128,-535.467,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][50] = CreateDynamicObject(823,3761.782,-537.668,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][51] = CreateDynamicObject(823,3766.251,-536.484,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][52] = CreateDynamicObject(823,3769.362,-535.229,2.350,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][53] = CreateDynamicObject(823,3792.107,-521.903,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][54] = CreateDynamicObject(823,3796.550,-519.821,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][55] = CreateDynamicObject(823,3801.981,-518.856,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][56] = CreateDynamicObject(823,3807.859,-516.623,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][57] = CreateDynamicObject(823,3805.590,-519.761,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][58] = CreateDynamicObject(823,3814.340,-515.284,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][59] = CreateDynamicObject(823,3818.461,-514.391,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][60] = CreateDynamicObject(823,3826.517,-512.451,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][61] = CreateDynamicObject(823,3821.344,-513.633,2.350,0.000,0.000,2.279,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][62] = CreateDynamicObject(1310,3755.638,-547.509,1.995,-85.140,-68.339,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][63] = CreateDynamicObject(1310,3751.274,-543.026,1.685,-85.140,-68.339,80.400,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][64] = CreateDynamicObject(1310,3745.708,-546.354,1.821,-85.140,-68.339,-182.939,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][65] = CreateDynamicObject(900,3726.961,-585.096,-0.242,56.580,106.980,-194.759,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][66] = CreateDynamicObject(8615,3771.218,-464.774,1.404,0.000,0.000,-23.940,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][67] = CreateDynamicObject(2745,3787.282,-525.426,11.277,0.000,0.000,-138.120,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][68] = CreateDynamicObject(3533,3787.383,-525.441,5.833,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][69] = CreateDynamicObject(3533,3774.029,-532.921,6.082,0.000,0.000,0.000,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][70] = CreateDynamicObject(2745,3773.985,-533.015,11.277,0.000,0.000,-173.579,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][71] = CreateDynamicObject(3524,3775.605,-532.022,4.336,0.000,0.000,-158.699,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][72] = CreateDynamicObject(3524,3785.750,-526.102,4.336,0.000,0.000,-153.239,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][73] = CreateDynamicObject(3243,3740.511,-549.879,1.689,0.000,0.000,-91.980,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][74] = CreateDynamicObject(3243,3755.516,-542.030,2.056,0.000,0.000,-215.040,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][75] = CreateDynamicObject(837,3746.198,-552.357,1.920,0.000,0.000,-211.020,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][76] = CreateDynamicObject(1463,3750.014,-548.203,1.965,0.000,0.000,-85.440,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][77] = CreateDynamicObject(869,3787.138,-529.768,2.296,0.000,0.000,-27.840,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][78] = CreateDynamicObject(869,3779.760,-534.068,2.296,0.000,0.000,19.799,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][79] = CreateDynamicObject(845,3742.213,-552.089,7.597,-50.100,72.060,4.079,-1,-1,playerid,300.000,300.000);
	girisObjeler[playerid][80] = CreateDynamicObject(622,3768.946,-555.642,1.719,10.739,7.260,-159.119,-1,-1,playerid,300.000,300.000);
	}
	//
	return 1;
}

forward OnCheatDetected(playerid, ip_address[], type, code);
public OnCheatDetected(playerid, ip_address[], type, code)
{
	if(AFkMi[playerid] == 0)
	{
	    if(GetPVarInt(playerid, "TrollKorumasi") == 1)
	    {
	        DeletePVar(playerid, "TrollKorumasi");
	        return 1;
	    }
		if(type) BlockIpAddress(ip_address, 0);
		else
		{
		    new ba[150];
			switch(code)
			{
			    case 0: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), AirBreak (1) kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 1: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), AirBreak (2) kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 7: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), FlyHack (1) kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 8: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), FlyHack (2) kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 9: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), SpeedHack (1) kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 10: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), SpeedHack (2) kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 21: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Invisible hack kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 22: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Spoof hilesi kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 27: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), FakeSpawn hilesi kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			    case 31: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), CarShot hilesi kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
				case 34: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), AFK Ghost kullandýðý için sunucudan kicklendi.", getName(playerid), playerid);
			}
			if(GetPVarInt(playerid, "FloodKesx") > GetTickCount()) return 1;
			SendClientMessageToAll(0xE74C3CFF, ba);
	        SetPVarInt(playerid, "FloodKesx", GetTickCount() + 2000);
			new ac_pping = GetPlayerPing(playerid) + 150;
			SetTimerEx("GuleGule", (ac_pping > 500 ? 500 : ac_pping), false, "i", playerid);
		}
	}
	return 1;
}

forward HileKick(playerid, code);
public HileKick(playerid, code)
{
	if(AFkMi[playerid] == 0)
	{
	    if(GetPVarInt(playerid, "TrollKorumasi") == 1)
	    {
	        DeletePVar(playerid, "TrollKorumasi");
	        return 1;
	    }
		if(!IsPlayerConnected(playerid)) return 1;
	    new ba[150];
		switch(code)
		{
		    case 0: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Fly Hack kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 1: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Mod Hack kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			//case 2: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Weapon Hack kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 3: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Rapid Fire kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 4: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Crasher-1 kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 5: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Troll Hack 0x1 kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 6: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bullet Crasher kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 7: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Repair Hack kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 8: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), FakeKill kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
			case 9: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Invalid Seat kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 10: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Seat Weapon Hack kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 11: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Invalid Camera kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 12: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bullet Hack 1 kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 13: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Fly Hack v3 kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 14: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Jetpack kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 15: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), RangeShot(Aim) kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 16: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Pro Aim kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 17: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Random Aim kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 18: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Log/Reg Teleport kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 19: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), UpsideDown veya Parkour Mod kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 20: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Minigun Hack (SA-MP BUG) kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 21: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Invalid Weapon kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 22: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Bot Yazýlýmý kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
            case 23: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Keybinder kullandýðý için sunucudan atýldý. #1", getName(playerid), playerid);
            case 24: format(ba, sizeof(ba), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Keybinder kullandýðý için sunucudan atýldý. #2", getName(playerid), playerid);
		}
		if(GetPVarInt(playerid, "FloodKesx") > GetTickCount()) return 1;
		SendClientMessageToAll(0xE74C3CFF, ba);
        SetPVarInt(playerid, "FloodKesx", GetTickCount() + 2000);
		new ac_pping = GetPlayerPing(playerid) + 150;
		SetTimerEx("GuleGule", (ac_pping > 500 ? 500 : ac_pping), false, "i", playerid);
	}
	return 1;
}

public OnPlayerTurnUpsideDown(playerid, Float:angle)
{
    //HileKick(playerid, 19);
	return 1;
}

stock bilgileerrim(playerid, ben)
{
	new ba[1024+66], qq[24 + 11 + 8], xz[40], ccc = 0, eName[MAX_EV_ISMI], vTag[40];
	format(qq, sizeof(qq), "{00B5B5}%s Bilgileri", getName(playerid));
	format(ba, sizeof(ba), "{7A8AFF}?\t{7A8AFF}?\n");
	new _xx[65];
    TimeStampTamTarih(oyuncuData[playerid][kayitT], _xx);
	format(ba, sizeof(ba), "%s{2CC990}Kayýt Tarihi:\t{FFFFFF}%s\n", ba, _xx);
	format(ba, sizeof(ba), "%s{2CC990}Parasý:\t{FFFFFF}$%s\n", ba, convertNumber(ParaKorumasi[playerid]));
    format(ba, sizeof(ba), "%s{2CC990}Skoru:\t{FFFFFF}%d\n", ba, GetPlayerScore(playerid));
    if(AFkMi[playerid] == 0) xz = "{00FF00}Aktif ( Oyunda Oynuyor )";
    if(AFkMi[playerid] == 1) xz = "{A9A9A9}AFK ( Oyunda Aktif Deðil )";
	format(ba, sizeof(ba), "%s{2CC990}Oyun Durumu:\t{FFFFFF}%s\n", ba, xz);
	if(oyuncuData[playerid][hapisSure] >= 1) vTag = "{FC575E}Evet";
	if(oyuncuData[playerid][hapisSure] <= 0) vTag = "{FFFFFF}Hayýr";
	format(ba, sizeof(ba), "%s{2CC990}Hapistemi:\t%s\n", ba, vTag);
	format(ba, sizeof(ba), "%s{2CC990}Soygun Sayýsý:\t{FFFFFF}%d\n", ba, oyuncuData[playerid][soygunS]);
	switch(oyuncuData[playerid][pVip])
	{
	    case 0: vTag = "{FFFFFF}Vip Deðil";
	    case 1: vTag = "{0F52BA}Safir Vip {FFFFFF}( 1 Level )";
	    case 2: vTag = "{F62217}Yakut Vip {FFFFFF}( 2 Level )";
	    case 3: vTag = "{1E7B2C}Zümrüt Vip {FFFFFF}( 3 Level )";
	    case 4: vTag = "{B9F2FF}Elmas Vip {FFFFFF}( 4 Level )";
	}
	format(ba, sizeof(ba), "%s{2CC990}Vip Durumu:\t%s\n", ba, vTag);
	if(oyuncuData[playerid][pVipSure] >= 1){
	TimeStampTamTarih(oyuncuData[playerid][pVipSure], _xx);
	format(ba, sizeof(ba), "%s{2CC990}Vip Bitiþ Tarihi:\t{FFFFFF}%s\n", ba, _xx);
	}else { format(ba, sizeof(ba), "%s{2CC990}Vip Bitiþ Tarihi:\t---\n", ba); }
	foreach(new e: Evler)
	{
		if(strcmp(EvIslem[e][EvSahibi], getName(playerid), false) == 0)
		{
			ccc = 1;
			format(eName, sizeof(eName), "{EEE657}%s ( ID: %d )", EvIslem[e][EvIsmi], e);
			break;
		}
	}
	if(ccc <= 0) format(eName, sizeof(eName), "{FC6042}Evi Yok");
	format(ba, sizeof(ba), "%s{2CC990}Ev Durumu:\t%s\n", ba, eName);
	format(ba, sizeof(ba), "%s{2CC990}Banka Parasý:\t{FFFFFF}$%s\n", ba, convertNumber(oyuncuData[playerid][pBankaPara]));
	format(ba, sizeof(ba), "%s{2CC990}Suç Seviyesi:\t{FFFFFF}%d\n", ba, aranmaSeviyesii[playerid]);
	format(ba, sizeof(ba), "%s{2CC990}Suçlu Yakalamasý:\t{FFFFFF}%d\n", ba, oyuncuData[playerid][_yakalama]);
	format(ba, sizeof(ba), "%s{2CC990}Yakalanmasý:\t{FFFFFF}%d\n", ba, oyuncuData[playerid][_yakalanma]);
	format(ba, sizeof(ba), "%s{2CC990}Suçlu Kelepçelemesi:\t{FFFFFF}%d\n", ba, oyuncuData[playerid][_kelepceleme]);
	format(ba, sizeof(ba), "%s{2CC990}Kelepçelenme:\t{FFFFFF}%d\n", ba, oyuncuData[playerid][_kelepcelenme]);
	if(PlayerCete[playerid] == -1){
	format(ba, sizeof(ba), "%s{2CC990}Çetesi:\t{FFFFFF}Yok\n", ba);}else{
    format(ba, sizeof(ba), "%s{2CC990}Çetesi:\t{FFFFFF}%s\n", ba, CeteIslem[PlayerCete[playerid]][ceteIsmi]);}
	new e = 0, g = 0;
	e = e_oIslem[playerid][e_Id];
	if(e == -1) format(eName, sizeof(eName), "{FC6042}Bulunduðu Ekip Yok");
	if(e >= 0) format(eName, sizeof(eName), "{00B5B5}%s", ekipIslem[e][e_Ismi]);
	format(ba, sizeof(ba), "%s{2CC990}Bulunduðu Ekip:\t%s\n", ba, eName);
	g = g_oIslem[playerid][g_Id];
	if(g == -1) format(eName, sizeof(eName), "{FC6042}Bulunduðu Grup Yok");
	if(g >= 0) format(eName, sizeof(eName), "{8870FF}%s", grupIslem[g][g_Ismi]);
	format(ba, sizeof(ba), "%s{2CC990}Bulunduðu Grup:\t%s\n", ba, eName);
 	new year, month, day, hour, minute, second;
 	if(oyuncuData[playerid][GirisKontrol] == true){
	SureCek(oyuncuData[playerid][onlineSure], year, month, day, hour, minute, second);}
	format(ba, sizeof(ba), "%s{2CC990}Online Süre:\t{FFFFFF}%d yýl | %d ay | %d gün | %d saat | %d dakika | %d saniye\n", ba, year, month, day, hour, minute, second);
	ShowPlayerDialog(ben, 95959, DIALOG_STYLE_TABLIST_HEADERS, qq, ba, "Kapat", "");
	return 1;
}

// Anti SQL Injection - Kod By: Burak (NexoR)
stock AntiInject(yazilar_[])
{
	new v = 0;
	for(new i = 0; i < strlen(yazilar_); i++)
	{
	    if(
	        yazilar_[i] == '^' ||
			yazilar_[i] == '*' ||
			yazilar_[i] == '/' ||
			yazilar_[i] == '\\' ||
			yazilar_[i] == ''' ||
			yazilar_[i] == '%' ||
			yazilar_[i] == '`' ||
			yazilar_[i] == ',' ||
			yazilar_[i] == '#' ||
			yazilar_[i] == ';' ||
			yazilar_[i] == ' ' ||
			yazilar_[i] == '{' ||
			yazilar_[i] == '}' ||
			yazilar_[i] == '&' ||
			yazilar_[i] == '£')
	    {
	        v = 1;
			break;
	    }
	}
	return v;
}

stock goIP(playerid)
{
	new ge_IP[16];
	GetPlayerIp(playerid, ge_IP, sizeof(ge_IP));
	return ge_IP;
}

stock MotorVipArac(vehicleid)
{
	new xx = 0;
	switch(GetVehicleModel(vehicleid))
	{
	    case 581: xx = 1;
	    case 509: xx = 1;
	    case 481: xx = 1;
	    case 462: xx = 1;
	    case 521: xx = 1;
	    case 463: xx = 1;
	    case 510: xx = 1;
	    case 522: xx = 1;
	    case 461: xx = 1;
	    case 448: xx = 1;
	    case 468: xx = 1;
	    case 586: xx = 1;
	    default: xx = 0;
	}
	return xx;
}

function HizBarUpdate(playerid)
{
	if(HizBarOn[playerid] == 1)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    	{
    	    new hizUp[21];
			new v = GetPlayerVehicleID(playerid);
	    	new Float: _hiz = GetVehicleSpeed(v);
	    	format(hizUp, sizeof(hizUp), "%.0f~n~K/M", _hiz);
			PlayerTextDrawHide(playerid, HizBari[playerid][18]);
			PlayerTextDrawSetString(playerid, HizBari[playerid][18], hizUp);
			PlayerTextDrawShow(playerid, HizBari[playerid][18]);
			if(_hiz <= 9)
			{
			    hizBeyaz_Update(playerid, 1);
				hizBeyaz_Update(playerid, 2);
				hizBeyaz_Update(playerid, 3);
				hizBeyaz_Update(playerid, 4);
				hizBeyaz_Update(playerid, 5);
				hizBeyaz_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
			if(_hiz >= 10 && _hiz <= 50)
			{
				hizMavi_Update(playerid, 1);
				hizBeyaz_Update(playerid, 2);
				hizBeyaz_Update(playerid, 3);
				hizBeyaz_Update(playerid, 4);
				hizBeyaz_Update(playerid, 5);
				hizBeyaz_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 51 && _hiz <= 75)
   			{
   			    hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizBeyaz_Update(playerid, 3);
				hizBeyaz_Update(playerid, 4);
				hizBeyaz_Update(playerid, 5);
				hizBeyaz_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
   			}
			if(_hiz >= 76 && _hiz <= 95)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
				hizBeyaz_Update(playerid, 4);
				hizBeyaz_Update(playerid, 5);
				hizBeyaz_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 96 && _hiz <= 100)
	 		{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizBeyaz_Update(playerid, 5);
				hizBeyaz_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
		 	}
			if(_hiz >= 101 && _hiz <= 110)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
				hizBeyaz_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 111 && _hiz <= 120)
   			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizBeyaz_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
			if(_hiz >= 121 && _hiz <= 130)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
				hizBeyaz_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 131 && _hiz <= 140)
   			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
   				hizBeyaz_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
   			}
			if(_hiz >= 141 && _hiz <= 150)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
				hizBeyaz_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 151 && _hiz <= 160)
   			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizBeyaz_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
   			}
			if(_hiz >= 161 && _hiz <= 170)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
				hizBeyaz_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 171 && _hiz <= 180)
   			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
			   	hizTuruncu_Update(playerid, 12);
				hizBeyaz_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
   			}
			if(_hiz >= 181 && _hiz <= 190)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
			   	hizTuruncu_Update(playerid, 12);
				hizTuruncu_Update(playerid, 13);
				hizBeyaz_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 191 && _hiz <= 195)
   			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
			   	hizTuruncu_Update(playerid, 12);
				hizTuruncu_Update(playerid, 13);
			   	hizKapali_Update(playerid, 14);
				hizBeyaz_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
   			}
			if(_hiz >= 196 && _hiz <= 210)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
			   	hizTuruncu_Update(playerid, 12);
				hizTuruncu_Update(playerid, 13);
			   	hizKapali_Update(playerid, 14);
				hizKapali_Update(playerid, 15);
				hizBeyaz_Update(playerid, 16);
				hizBeyaz_Update(playerid, 17);
			}
   			if(_hiz >= 211 && _hiz <= 230)
   			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
			   	hizTuruncu_Update(playerid, 12);
				hizTuruncu_Update(playerid, 13);
			   	hizKapali_Update(playerid, 14);
				hizKapali_Update(playerid, 15);
			   	hizKapali_Update(playerid, 16);
			   	hizBeyaz_Update(playerid, 17);
   			}
			if(_hiz >= 231)
			{
				hizMavi_Update(playerid, 1);
			   	hizMavi_Update(playerid, 2);
				hizMavi_Update(playerid, 3);
			 	hizMavi_Update(playerid, 4);
				hizMavi_Update(playerid, 5);
			   	hizMavi_Update(playerid, 6);
				hizMavi_Update(playerid, 7);
   				hizMavi_Update(playerid, 8);
				hizMavi_Update(playerid, 9);
			   	hizMavi_Update(playerid, 10);
				hizTuruncu_Update(playerid, 11);
			   	hizTuruncu_Update(playerid, 12);
				hizTuruncu_Update(playerid, 13);
			   	hizKapali_Update(playerid, 14);
				hizKapali_Update(playerid, 15);
			   	hizKapali_Update(playerid, 16);
				hizKapali_Update(playerid, 17);
			}
		}
	}
    else
    {
	    HizBarOn[playerid] = 0;
		KillTimer(HizBarTimer[playerid]);
   		for(new i = 1; i < 17 + 1; i++)
		{
		    PlayerTextDrawHide(playerid, HizBari[playerid][i]);
		    PlayerTextDrawColor(playerid, HizBari[playerid][i], -1);
		}
	}
	return 1;
}

hizMavi_Update(playerid, _tid)
{
	//PlayerTextDrawHide(playerid, HizBari[playerid][_tid]);
	PlayerTextDrawColor(playerid, HizBari[playerid][_tid], 0x3498DBFF);
	PlayerTextDrawShow(playerid, HizBari[playerid][_tid]);
	return 1;
}

hizTuruncu_Update(playerid, _tid)
{
	//PlayerTextDrawHide(playerid, HizBari[playerid][_tid]);
	PlayerTextDrawColor(playerid, HizBari[playerid][_tid], 0xF39C12FF);
	PlayerTextDrawShow(playerid, HizBari[playerid][_tid]);
	return 1;
}

hizKapali_Update(playerid, _tid)
{
	//PlayerTextDrawHide(playerid, HizBari[playerid][_tid]);
	PlayerTextDrawColor(playerid, HizBari[playerid][_tid], 0xC0392BFF);
	PlayerTextDrawShow(playerid, HizBari[playerid][_tid]);
	return 1;
}

hizBeyaz_Update(playerid, _tid)
{
	//PlayerTextDrawHide(playerid, HizBari[playerid][_tid]);
	PlayerTextDrawColor(playerid, HizBari[playerid][_tid], -1);
	PlayerTextDrawShow(playerid, HizBari[playerid][_tid]);
	return 1;
}

forward VipDuyuruKapat();
public VipDuyuruKapat()
{
    VipDuyuruBekle = 0;
	TextDrawHideForAll(OzelDuyuru[0]);
	TextDrawHideForAll(OzelDuyuru[1]);
	TextDrawHideForAll(OzelDuyuru[2]);
	return 1;
}

forward VipARenkDegistir(playerid);
public VipARenkDegistir(playerid)
{
    if(GetPlayerState(playerid) != 2) return KillTimer(VipIslem[playerid][aRenkTimer]), VipIslem[playerid][aArrenk] = false, SendClientMessage(playerid, 0x7393FFFF, "[VIP] {A9A9A9}Otomatik araç {FF5757}renk deðiþtirme {A9A9A9}özelliði kapatýldý.");
	if(oyuncuData[playerid][pVip] != 0 && VipIslem[playerid][aArrenk] && GetPlayerState(playerid) == 2)
    {
		new x = GetPlayerVehicleID(playerid);
		ChangeVehicleColor(x, random(255), random(255));
    }
	return 1;
}

const PLAYER_SYNC = 207;
IPacket:PLAYER_SYNC(playerid, BitStream:bs)
{
	new onFootData[PR_OnFootSync];
	BS_IgnoreBits(bs, 8);
	BS_ReadOnFootSync(bs, onFootData);

	if(onFootData[PR_animationId] == 958 && onFootData[PR_weaponId] != WEAPON_PARACHUTE)
	{
    	HileKick(playerid, 0);
		return 0;
	}

 	if(onFootData[PR_position][2] == -5.5)
	{
        HileKick(playerid, 6);
		return 0;
	}

	if(oyuncuData[playerid][pAdmin] == 0 && onFootData[PR_specialAction] == SPECIAL_ACTION_USEJETPACK)
	{
	    HileKick(playerid, 14);
		return 0;
	}
	return 1;
}

const PLAYER_SYNC = 207;
public OnIncomingPacket(playerid, packetid, BitStream:bs)
{
	switch (packetid)
	{
		case PLAYER_SYNC:
        {
            new onFootData[PR_OnFootSync];

            BS_IgnoreBits(bs, 8);
            BS_ReadOnFootSync(bs, onFootData);

            switch (onFootData[PR_animationId])
            {
                case 157, 159, 161:
                {
                    if (!IsPlayerInAnyVehicle(playerid))
                    {
                        onFootData[PR_animationId] = 1189;
                        onFootData[PR_velocity][0] = onFootData[PR_velocity][1] = onFootData[PR_velocity][2] = 0.0;
                        BS_SetWriteOffset(bs, 8);
                        BS_WriteOnFootSync(bs, onFootData);
                        HileKick(playerid, 13);
                        return 0;
                    }
                }
            }
        }
	}
	return 1;
}

const PASSENGER_SYNC = 211;
IPacket:PASSENGER_SYNC(playerid, BitStream:bs)
{
	new passengerData[PR_PassengerSync];
	BS_IgnoreBits(bs, 8);
	BS_ReadPassengerSync(bs, passengerData);
	if(passengerData[PR_weaponId] == WEAPON_MINIGUN)
	{
	    HileKick(playerid, 20);
	    return 0;
	}
	if GetPlayerVehicleSeat(playerid) == 0 *then{
	    HileKick(playerid, 9);
		return 0;
	}
	return 1;
}

const AIM_SYNC = 203;
IPacket:AIM_SYNC(playerid, BitStream:bs)
{
    new aimData[PR_AimSync];
    BS_IgnoreBits(bs, 8);
    BS_ReadAimSync(bs, aimData);

	switch(aimData[PR_camMode])
	{
	    case 45: { BanEx(playerid, "Crash Hack"); return 0; }
	    case 49: { BanEx(playerid, "Crash Hack"); return 0; }
	}
    if (aimData[PR_aimZ] != aimData[PR_aimZ])
    {
        aimData[PR_aimZ] = 0.0;

        BS_SetWriteOffset(bs, 8);
        BS_WriteAimSync(bs, aimData);
    }
    return 1;
}

/*
const VEHICLE_SYNC = 200;
IPacket:VEHICLE_SYNC(playerid, BitStream:bs)
{
	new inCarData[PR_InCarSync];
	BS_IgnoreBits(bs, 8);
	BS_ReadInCarSync(bs, inCarData);
	return 1;
}
*/

const BULLET_SYNC = 206;
IPacket:BULLET_SYNC(playerid, BitStream:bs)
{
	new bulletData[PR_BulletSync];
	BS_IgnoreBits(bs, 8);
	BS_ReadBulletSync(bs, bulletData);
	if (!(-35000.0 <= bulletData[PR_origin][0] <= 35000.0) || !(-35000.0 <= bulletData[PR_origin][1] <= 35000.0) || !(-35000.0 <= bulletData[PR_origin][2] <= 35000.0))
	{
	    HileKick(playerid, 12);
		return 0;
	}
	return 1;
}

function BankaTick(playerid, gelen_id)
{
	switch(gelen_id)
	{
	    case 1:
	    {
			SetPlayerPos(playerid, -1494.944824, 919.953125, 12.535938);
		    SetPlayerFacingAngle(playerid, 89.941909);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetCameraBehindPlayer(playerid);
		    SetPVarInt(playerid, "BankaGirdi", 0);
			if(PlayerBanka[playerid][bankaSoyuyor] == 1)
		    {
		        KillTimer(BankaGeriSay[playerid]);
		        PlayerBanka[playerid][bankaSoyuyor] = 0;
		        PlayerBanka[playerid][bankaCount] = 0;
		        LazerDurum2 = false;
		        SendClientMessage(playerid, -1, "{FF773D}[BANKA] {FFFFFF}Bankadan çýktýðýnýz için lazer hackleme iptal edildi.");
			}
	    }
	    case 2:
	    {
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			new _icerik[43] = "{32ED80}#\t{32ED80}(?)\n", ba[177 + 24 + 3 + 90];
			format(ba, sizeof(ba), "%s{FF406C}» {FFFFFF}Hesap Sahibi:\t%s(%d)\n{FF406C}» {FFFFFF}Hesaptaki Para:\t$%s\n{FF406C}» {FFFFFF}Para Yatýr\t-\n{FF406C}» {FFFFFF}Para Çek\t-\n{FF406C}» {FFFFFF}Bir Oyuncuya Para Gönder\t-\n{FF406C}» {FFFFFF}Offline Para Gönder\t-\n", _icerik, getName(playerid), playerid, convertNumber(oyuncuData[playerid][pBankaPara]));
			ShowPlayerDialog(playerid, DIALOG_BANKA, DIALOG_STYLE_TABLIST_HEADERS, "dialogIsim"": Banka", ba, "Seç", "Iptal");
	    }
	    case 3:
	    {
			SetPlayerPos(playerid, -2770.6780, 393.6340, 5.0964);
		    SetPlayerFacingAngle(playerid, 271.2141);
		    TogglePlayerControllable(playerid,0);
      		SetCameraBehindPlayer(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetCameraBehindPlayer(playerid);
		    SetPVarInt(playerid, "BankaGirdi", 0);
      	    SetPVarInt(playerid, "Bankada", 1);
			SetPVarInt(playerid, "BankaTextureLoad", GetTickCount() + 1250);
	    }
	    case 4:
	    {
			if(IsPlayerInAnyVehicle(playerid)) return hataMesaji(playerid, "Araç içinde iþlem yapamazsýn.");
			new _icerik[43] = "{32ED80}#\t{32ED80}(?)\n", ba[177 + 24 + 3 + 90];
			format(ba, sizeof(ba), "%s{FF406C}» {FFFFFF}Hesap Sahibi:\t%s(%d)\n{FF406C}» {FFFFFF}Hesaptaki Para:\t$%s\n{FF406C}» {FFFFFF}Para Yatýr\t-\n{FF406C}» {FFFFFF}Para Çek\t-\n{FF406C}» {FFFFFF}Bir Oyuncuya Para Gönder\t-\n{FF406C}» {FFFFFF}Offline Para Gönder\t-\n", _icerik, getName(playerid), playerid, convertNumber(oyuncuData[playerid][pBankaPara]));
			ShowPlayerDialog(playerid, DIALOG_BANKA, DIALOG_STYLE_TABLIST_HEADERS, "dialogIsim"": Banka", ba, "Seç", "Iptal");
	    }
	}
	return 1;
}

stock Float:PointAngle(playerid, Float:xa, Float:ya, Float:xb, Float:yb)
{
	new Float:carangle;
	new Float:xc, Float:yc;
	new Float:angle;
	xc = floatabs(floatsub(xa,xb));
	yc = floatabs(floatsub(ya,yb));
	if (yc == 0.0 || xc == 0.0)
	{
		if(yc == 0 && xc > 0) angle = 0.0;
		else if(yc == 0 && xc < 0) angle = 180.0;
		else if(yc > 0 && xc == 0) angle = 90.0;
		else if(yc < 0 && xc == 0) angle = 270.0;
		else if(yc == 0 && xc == 0) angle = 0.0;
	}
	else
	{
		angle = atan(xc/yc);
		if(xb > xa && yb <= ya) angle += 90.0;
		else if(xb <= xa && yb < ya) angle = floatsub(90.0, angle);
		else if(xb < xa && yb >= ya) angle -= 90.0;
		else if(xb >= xa && yb > ya) angle = floatsub(270.0, angle);
	}
	GetVehicleZAngle(GetPlayerVehicleID(playerid), carangle);
	return floatadd(angle, -carangle);
}

/*
stock GuvenlikSiffre(playerid)
{
	SetPVarInt(playerid, "AntGuvenlik", 1);
	new xSure[75], vSures = (GetPVarInt(playerid, "GuvenlikSifre") - GetTickCount()) / 1000;
    if(vSures <= 0)
	{
		format(xSure, sizeof(xSure), "Sunucu Güvenlik Þifresi Belirleyin - Güvenlik Þifresi Girin");
	}
	else
	{
		format(xSure, sizeof(xSure), "Sunucu Güvenlik Þifresi Belirleyin - Kalan Süre: (%d)", vSures);
	}
	ShowPlayerDialog(playerid, DIALOG_GUVENLIK, DIALOG_STYLE_INPUT, xSure,
	"\t\t\t\t{3498db}Anadolu Gaming Hýrsýz Polis - Güvenlik Þifresi\n\
	\t\t\t{FFFFFF}  Sadece {e74c3c}15 saniyenizi {FFFFFF}ayýrarak aþaðýda ki notlarý okuyun.\n\n\
	\t\t\t\t{FFFFFF}- Þifreleriniz toplamda {1abc9c}6 haneli {FFFFFF}olmalýdýr.\n\
	\t\t\t\t{FFFFFF}- Þifrenizde:\n\
	\t\t\t\t               {1abc9c}1 Büyük Harf {FFFFFF}olmalý,\n\
	\t\t\t\t               {9b59b6}5 adet sayý {FFFFFF}içermelidir.\n\
	\t\t\t\t{FFFFFF}- Örnek:\n\
	\t\t\t\t               {1abc9c}A12345 - 12345A\n\n\
	\t{FFFFFF}- Girdiðiniz güvenlik þifresini {e74c3c}diðer sunucularda {FFFFFF}ve {e74c3c}arkadaþlarýnýzla {FFFFFF}paylaþmayýnýz.\n\
    \t{FFFFFF}- Güvenlik þifrenizi unuttuðunuz taktirde {e67e22}hesabýnýza eriþim {FFFFFF}saðlayamacaksýnýz.\n\
    \t{FFFFFF}- Bu iþlemler hesap güvenliðinizi korumak içindir. Tüm yapacaðýnýz iþlemlerde sorulacaðýný unutmayýn.\n\
    \t{FFFFFF}- Eðer þifrenizi unuttuysanýz {2ecc71}yöneticiler {FFFFFF}ile iletiþimi geçin.\n\
	", "Ayarla", "");
	return 1;
}

stock GuveenlikGiriss(playerid)
{
	new xx[236 + 24];
	format(xx, sizeof(xx),"\
	\t\t{3498db}Anadolu Gaming Hýrsýz Polis - Güvenlik Þifresi\n\n\
	{FFFFFF}Merhaba {e74c3c}%s{FFFFFF}, hesabýnýzýn ele geçirilmeye çalýþtýðýný düþündük\n\
	{FFFFFF}Eðer bu hesabýn gerçek sahibi siz iseniz lütfen aþaðýya güvenlik þifrenizi girin.\n\
	", getName(playerid));
	ShowPlayerDialog(playerid, DIALOG_GUVENLIK2, DIALOG_STYLE_INPUT, "Güvenlik Giriþi", xx, "Gir", "Kick");
	return 1;
}

stock GuvenlikSuphe(playerid, Islem_ID)
{
	switch(Islem_ID)
	{
	    case 1: SetPVarInt(playerid, "AyYildiz-HPAnaniSikeyim", 1);
	    default: SetPVarInt(playerid, "AyYildiz-HPAnaniSikeyim", 0);
	}
	SetPVarInt(playerid, "IslemID", Islem_ID);
	ShowPlayerDialog(playerid, DIALOG_GUVENLIK3, DIALOG_STYLE_INPUT, "Güvenlik Giriþi",
	"{3498db}Anadolu Gaming Hýrsýz Polis - Güvenlik Þifresi\n\n\
	{FFFFFF}Ýþleme devam etmek için {e74c3c}güvenlik þifrenizi {FFFFFF}giriniz.\n\
	", "Gir", "Kapat");
	return 1;
}

stock GuvenlikGoruntule(playerid)
{
	switch(GetPVarInt(playerid, "IslemID"))
	{
	    case 1: 
		case 2: ShowPlayerDialog(playerid, DIALOG_SIFRE2, DIALOG_STYLE_INPUT, "{FFFFFF}Yeni Deðiþtirme", "{528CCB}Yeni Þifrenizi Girin\n\n{F31D2F}Uyarý: {FFFFFF}Baþka sunucularda kullandýðýnýz þifreyi girmeyin.", "Onayla", "Geri");
		default: return hataMesaji(playerid, "Hata !");
	}
	return 1;
}
*/

stock tarihhcek()
{
	new
		str[35],
		yil,
		ay,
		gunx,
		saat,
		dakika,
		saniye
	;
 	getdate(yil, ay, gunx);
	gettime(saat,dakika,saniye);
	format(str, sizeof(str), "[%02d.%02d.%d - %02d:%02d:%02d]", gunx, ay, yil, saat, dakika, saniye);
	return str;
}

stock GenelLog(playerid, deger, szKullanici[], DenenenPass[], o_miktar, s_miktar, e_l)
{
	new str[500];
	switch(deger)
	{
	    case 1:
	    {
	        format(str,sizeof(str),"%s %s giris denemesi yapiyor: Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/SifreDenemeLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 2:
	    {
	        format(str,sizeof(str),"%s %s eski sifre denemesi yapiyor: Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/SifreDegistirmeLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
 		case 3:
	    {
	        format(str,sizeof(str),"%s %s sifre denemesi onaylandi. Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/SifreDegistirmeLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
	    /*
		case 4:
	    {
	        format(str,sizeof(str),"%s %s guvenlik sifresini deniyor (Giris Ekrani). Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/GuvenliSifre.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 5:
	    {
	        format(str,sizeof(str),"%s %s guvenlik sifresi dogrulandi (Giris Ekrani). Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/GuvenliSifre.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 6:
	    {
	        format(str,sizeof(str),"%s %s guvenlik sifresini deniyor (Ayarlar). Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/GuvenliSifre.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 7:
	    {
	        format(str,sizeof(str),"%s %s guvenlik sifresi dogrulandi (Ayarlar). Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/GuvenliSifre.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }*/
		case 8:
	    {
	        format(str,sizeof(str),"%s %s skordagit kullandi. |IP: %s | Oyuncu: %s | Once: %d | Sonra: %d |\r\n", tarihhcek(), getName(playerid), goIP(playerid), szKullanici, o_miktar, s_miktar);
			new File:dosyaCek = fopen("/SkorLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 9:
	    {
	        format(str,sizeof(str),"[G] %s %s paradagit kullandi. |IP: %s | Oyuncu: %s | Once: %d | Sonra: %d |\r\n", tarihhcek(), getName(playerid), goIP(playerid), szKullanici, o_miktar, s_miktar);
			new File:dosyaCek = fopen("/ParaLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 10:
	    {
	        format(str,sizeof(str),"%s %s expdagit kullandi. |IP: %s | Oyuncu: %s | Level: %d | Once: %d | Sonra: %d |\r\n", tarihhcek(), getName(playerid), goIP(playerid), szKullanici, e_l, o_miktar, s_miktar);
			new File:dosyaCek = fopen("/ExpLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 11:
	    {
	        format(str,sizeof(str),"%s %s expver kullandi. |IP: %s | Oyuncu: %s | Level: %d | Once: %d | Sonra: %d |\r\n", tarihhcek(), getName(playerid), goIP(playerid), szKullanici, e_l, o_miktar, s_miktar);
			new File:dosyaCek = fopen("/ExpLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 12:
	    {
	        format(str,sizeof(str),"[G] %s %s oparaver kullandi. |IP: %s | Oyuncu: %s | Once: %d | Sonra: %d |\r\n\r\n", tarihhcek(), getName(playerid), goIP(playerid), szKullanici, o_miktar, s_miktar);
			new File:dosyaCek = fopen("/ParaLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 13:
	    {
	        format(str,sizeof(str),"%s %s giris denemesi onaylandi: Denedigi Sifre: %s - IP: %s\r\n", tarihhcek(), getName(playerid), DenenenPass, goIP(playerid));
			new File:dosyaCek = fopen("/SifreDenemeLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
		case 14:
	    {
	        format(str,sizeof(str),"%s %s /SkorVer kullandi. |IP: %s | Oyuncu: %s | Once: %d | Sonra: %d |\r\n", tarihhcek(), getName(playerid), goIP(playerid), szKullanici, o_miktar, s_miktar);
			new File:dosyaCek = fopen("/SkorLog.txt", io_append);
			if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	    }
	}
	return 1;
}

stock ParaLogu(playerid, deger, szKullanici[], miktar)
{
	new
		str[300],
		yil,
		ay,
		gunx,
		saat,
		dakika,
		saniye
	;
	getdate(yil, ay, gunx);
	gettime(saat,dakika,saniye);
	if(strlen(szKullanici) != 0)
	{
	 	switch(deger)
		{
            case 3: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s komutla para gonderdi. Alici: %s, Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), szKullanici, convertNumber(miktar));
		}
	}
	else
	{
		switch(deger)
		{
			case 1: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s bankadan para cekti. Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), convertNumber(miktar));
			case 2: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s bankaya para yatirdi. Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), convertNumber(miktar));
			//
	        case 4: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s evine para yatirdi. Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), convertNumber(miktar));
	        case 5: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s evinden para cekti. Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), convertNumber(miktar));
	        case 6: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s ceteye para yatirdi. Cete ID: %d | Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), PlayerCete[playerid], convertNumber(miktar));
	        case 7: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s ceteden para cekti. Cete ID: %d | Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), PlayerCete[playerid], convertNumber(miktar));
            case 8: format(str,sizeof(str),"[%02d.%02d.%d - %02d:%02d:%02d] %s evini satti. Miktar: $%s\r\n", gunx, ay, yil, saat, dakika, saniye, getName(playerid), convertNumber(miktar));
		}
	}
	new File:dosyaCek = fopen("/ParaLog.txt", io_append);
	if(dosyaCek){fwrite(dosyaCek, str);fclose(dosyaCek);}
	return 1;
}

forward GPSTakip(playerid);
public GPSTakip(playerid)
{
	new
		arac = GetPlayerVehicleID(playerid),
		Float: _aPos[3],
		Float: Rota,
		gpsID = GetPVarInt(playerid, "gpsID"),
		Float: GPS_x = GetPVarFloat(playerid, "GPS_X"),
		Float: GPS_y = GetPVarFloat(playerid, "GPS_Y")
	;
	GetVehiclePos(arac, _aPos[0], _aPos[1], _aPos[2]);
	Rota = PointAngle(playerid, _aPos[0], _aPos[1], GPS_x, GPS_y);
	AttachDynamicObjectToVehicle(gpsID, arac, 0.0, 0.0, 1.5, 0.0, 90.0, Rota);
	return 1;
}

public OnPlayerSuspectedForAimbot(playerid,hitid,weaponid,warnings)
{
	if(warnings & WARNING_OUT_OF_RANGE_SHOT)
	{
		HileKick(playerid, 15);
	}
	if(warnings & WARNING_PROAIM_TELEPORT)
	{
		HileKick(playerid, 16);
	}
	if(warnings & WARNING_RANDOM_AIM)
	{
		HileKick(playerid, 17);
	}
	if(warnings & WARNING_CONTINOUS_SHOTS)
	{
	    //format(str,256,"[%d]%s(%d) has fired 10 shots continously with %s(%d)",ids[playerid],nme,playerid,wname,weaponid);
		//SendClientMessageToAll(-1,str);
	}
	return 0;
}

forward Banka_Geri(playerid);
public Banka_Geri(playerid)
{
    if(PlayerBanka[playerid][bankaSoyuyor] <= 0)
    {
        KillTimer(BankaGeriSay[playerid]);
        PlayerBanka[playerid][bankaCount] = 0;
        LazerDurum2 = false;
    }
    if(PlayerBanka[playerid][bankaSoyuyor] == 1)
    {
        new xx[67];
	    PlayerBanka[playerid][bankaCount]--;
	    format(xx, sizeof(xx), "~b~~h~~h~Lazerlerin Hacklenmesine~n~~r~~h~~h~-~w~~h~%d~r~~h~~h~-", PlayerBanka[playerid][bankaCount]);
	    GameTextForPlayer(playerid, xx, 1250, 4);
	    if(PlayerBanka[playerid][bankaCount] <= 1)
	    {
	        KillTimer(BankaGeriSay[playerid]);
			ClearAnimations(playerid);
			LazerDurum = true;
	        PlayerBanka[playerid][bankaSoyuyor] = 0;
	        PlayerBanka[playerid][bankaCount] = 0;
	        SendClientMessageToAll(-1, "{D8FF17}[BANKA] {FFFFFF}Banka Lazerlerleri bir çete tarafýndan hacklendi !");
	        SendClientMessageToAll(-1, "{D8FF17}[BANKA] {FFFFFF}Lazerler 5 dakika sonra otomatik aktif olacak !");
	        LazerDurum2 = false;
	        SetTimer("LazerAktifle", 300000, false);
	        SetTimer("LazerAktifle2", 290000, false);
	        for(new i = 0; i < 10; i++)
	        {
	            DestroyDynamicObject(lazerler[i]);
	        }
	        return 1;
	    }
	    ApplyAnimation(playerid, "INT_SHOP", "SHOP_CASHIER", 4.1, false, false, false, false, 0, false);
	}
 	if(PlayerBanka[playerid][bankaSoyuyor] == 2)
    {
        if(GetPVarInt(playerid, "BankaSoyuyor") == 1)
        {
			if(GetPVarInt(playerid, "AnimCikar") == 1)
			{
	      		KillTimer(BankaGeriSay[playerid]);
				ClearAnimations(playerid);
	   			DeletePVar(playerid, "BankaSoyuyor");
			    DeletePVar(playerid, "AnimCikar");
			    PlayerBanka[playerid][bankaCount] = 0;
			    PlayerBanka[playerid][bankaSoyuyor] = 0;
				if(GetPVarInt(playerid, "ToplamBPara") != 0)
				{
		   			new zx[85];
					format(zx, sizeof(zx), "[BANKA] {FFFFFF}Banka soygunu tamamlandý, çaldýðýnýz para: $%s dolar", convertNumber(GetPVarInt(playerid, "ToplamBPara")));
				    SendClientMessage(playerid, 0xFF773DFF, zx);
					new xzz[125];
					format(xzz, sizeof(xzz), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, ~g~~h~Bankadan ~p~~h~$%s ~w~~h~dolar caldi !", getName(playerid), playerid, convertNumber(GetPVarInt(playerid, "ToplamBPara")));
				    textFlood++;
					foreach(new i : Player) TextdrawYazi(i, xzz);
					if(textFlood == 3){ textFlood = 0; }
				}
				else
				{
				    SendClientMessage(playerid, 0xFF773DFF, "[BANKA] {FFFFFF}Soygun iptal edildi.");
				}
				DeletePVar(playerid, "ToplamBPara");
				return 1;
			}
	        new xx[67], zx[85];
		    PlayerBanka[playerid][bankaCount]--;
			format(xx, sizeof(xx), "~b~~h~~h~Soygunun Bitmesine~n~~r~~h~~h~-~w~~h~%d~r~~h~~h~-", PlayerBanka[playerid][bankaCount]);
		    GameTextForPlayer(playerid, xx, 1250, 4);
		    if(PlayerBanka[playerid][bankaCount] <= 1)
		    {
			    KillTimer(BankaGeriSay[playerid]);
			    ClearAnimations(playerid);
				format(zx, sizeof(zx), "[BANKA] {FFFFFF}Banka soygunu tamamlandý, çaldýðýnýz para: $%s dolar", convertNumber(GetPVarInt(playerid, "ToplamBPara")));
			    SendClientMessage(playerid, 0xFF773DFF, zx);
				new xzz[125];
				format(xzz, sizeof(xzz), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, ~g~~h~Bankadan ~p~~h~$%s ~w~~h~dolar caldi !", getName(playerid), playerid, convertNumber(GetPVarInt(playerid, "ToplamBPara")));
			    textFlood++;
				foreach(new i : Player) TextdrawYazi(i, xzz);
				if(textFlood == 3){ textFlood = 0; }
			    DeletePVar(playerid, "BankaSoyuyor");
			    DeletePVar(playerid, "ToplamBPara");
			    PlayerBanka[playerid][bankaCount] = 0;
			    PlayerBanka[playerid][bankaSoyuyor] = 0;
			    return 1;
		    }
			new x = random(4000 - 3000) + 3000;
			bankaParasi -= x;
			if(bankaParasi <= 0)
			{
			    KillTimer(BankaGeriSay[playerid]);
			    ClearAnimations(playerid);
			    SendClientMessage(playerid, -1, "{FF773D}[BANKA] {FFFFFF}Bankanýn parasý bittiði için soygun iptal edildi.");
				format(zx, sizeof(zx), "[BANKA] {FFFFFF}Çaldýðýnýz para: $%s dolar", convertNumber(GetPVarInt(playerid, "ToplamBPara")));
			    SendClientMessage(playerid, 0xFF773DFF, zx);
				new xzz[125];
				format(xzz, sizeof(xzz), "~y~~h~[SOYGUN] ~w~~h~Oyuncu ~r~~h~%s(%d)~w~~h~, ~g~~h~Bankadan ~p~~h~$%s ~w~~h~dolar caldi !", getName(playerid), playerid, convertNumber(GetPVarInt(playerid, "ToplamBPara")));
			    textFlood++;
				foreach(new i : Player) TextdrawYazi(i, xzz);
				if(textFlood == 3){ textFlood = 0; }
			    DeletePVar(playerid, "BankaSoyuyor");
			    DeletePVar(playerid, "ToplamBPara");
			    PlayerBanka[playerid][bankaCount] = 0;
			    PlayerBanka[playerid][bankaSoyuyor] = 0;
			    return 1;
			}
            SetPVarInt(playerid, "ToplamBPara", GetPVarInt(playerid, "ToplamBPara") + x);
            pParaver(playerid, x);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 0, 0, 1);
        }
    }
	return 1;
}

stock soru_bosID()
{
	new id;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(Sorular[i][sonuclanmisMi] == 0)
		{
		    id = i;
		    break;
		}
	}
	return id;
}

stock istek_bosID()
{
	new id;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(Sarkilar[i][acildiMi] == 0)
		{
		    id = i;
		    break;
		}
	}
	return id;
}

function LazerAktifle()
{
    LazerDurum = false;
    LazerDurum2 = false;
	lazerler[0] = CreateDynamicObject(18643,-1.462,169.746,1245.199,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[1] = CreateDynamicObject(18643,-1.462,169.746,1243.471,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
	lazerler[2] = CreateDynamicObject(18643,-1.462,169.746,1243.981,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[3] = CreateDynamicObject(18643,-0.786,169.746,1244.387,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[4] = CreateDynamicObject(18643,-0.595,169.752,1244.790,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[5] = CreateDynamicObject(18643,1.430,169.750,1245.199,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[6] = CreateDynamicObject(18643,0.270,169.757,1244.793,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[7] = CreateDynamicObject(18643,0.867,169.751,1243.981,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[8] = CreateDynamicObject(18643,-0.475,169.746,1243.981,0.000,0.000,90.303,-1,-1,-1,300.000,300.000);
	lazerler[9] = CreateDynamicObject(18643,1.366,169.750,1243.471,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
	SetTimer("bankaParaFulle", 18000000, false);
	foreach(new i : Player)
	{
	    if(GetPVarInt(i, "SoygunOda") == 1)
	    {
 			SendClientMessage(i, -1, "{FF773D}[BANKA] {FFFFFF}Odanýn Lazerleri aktif edildiði için öldünüz.");
		}
	}
	return 1;
}

function LazerAktifle2()
{
    SendClientMessageToAll(-1, "{D8FF17}[BANKA] {FFFFFF}Banka Lazerlerleri aktif edilmesine son 10 Saniye !");
	return 1;
}

forward bankaParaFulle();
public bankaParaFulle()
{
    bankaParasi = random(5000000 - 1000000) + 1000000;
    printf("30 Dakika gecti, Yeni banka parasi: $%s", convertNumber(bankaParasi));
	return 1;
}

function ModuFelcEt()
{
    new nexload = 0;
    for(new i = 0; i < 250; i++) { printf(" "); }
	nexload = 0;
	for (;;)
	{
	    nexload++;
		switch(nexload)
		{
		    case 1: printf("[SECURITY] - INVALID_MOD ! n");
		    case 2: printf("[SECURITY] - INVALID_MOD ! ne");
		    case 3: printf("[SECURITY] - INVALID_MOD ! nex");
			case 4: printf("[SECURITY] - INVALID_MOD ! nexS");
			case 5: printf("[SECURITY] - INVALID_MOD ! nexSe");
			case 6: printf("[SECURITY] - INVALID_MOD ! nexSec");
			case 7: printf("[SECURITY] - INVALID_MOD ! nexSecu");
			case 8: printf("[SECURITY] - INVALID_MOD ! nexSecur");
			case 9: printf("[SECURITY] - INVALID_MOD ! nexSecuri");
			case 10: printf("[SECURITY] - INVALID_MOD ! nexSecurit");
			case 11: printf("[SECURITY] - INVALID_MOD ! nexSecurity");
			case 12: printf("[SECURITY] - INVALID_MOD ! nexSecurity");
			case 13: printf("[SECURITY] - INVALID_MOD ! nexSecurity");
			case 14:
			{
				for(new i = 0; i < 250; i++)
				{
					printf(" ");
  					nexload = 0;
				}
			}
		}
	}
}

AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}

altBarGuncelle(playerid)
{
	new bar_upp[45], Lxp = barExpCek(playerid);
	
	PlayerTextDrawHide(playerid, SagBarr[playerid][0]);
	format(bar_upp, sizeof(bar_upp), "~r~~h~~h~~h~Exp: ~w~~h~%d/%d", oyuncuData[playerid][ExpPuan], Lxp);
	PlayerTextDrawSetString(playerid, SagBarr[playerid][0], bar_upp);
	if(oyuncuData[playerid][textAyar] == 0)
	{
		PlayerTextDrawShow(playerid, SagBarr[playerid][0]);
	}
	
 	PlayerTextDrawHide(playerid, SagBarr[playerid][1]);
	format(bar_upp, sizeof(bar_upp), "~r~~h~~h~~h~Level: ~w~~h~%d/50", oyuncuData[playerid][_LevelCount]);
	PlayerTextDrawSetString(playerid, SagBarr[playerid][1], bar_upp);
    if(oyuncuData[playerid][textAyar] == 0)
	{
		PlayerTextDrawShow(playerid, SagBarr[playerid][1]);
	}
	PlayerTextDrawHide(playerid, SagBarr[playerid][2]);
	format(bar_upp, sizeof(bar_upp), "~r~~h~~h~~h~Basari: ~w~~h~%d/33", BasariIslem[playerid][BasariSayisi]);
	PlayerTextDrawSetString(playerid, SagBarr[playerid][2], bar_upp);
    if(oyuncuData[playerid][textAyar] == 0)
	{
    	PlayerTextDrawShow(playerid, SagBarr[playerid][2]);
	}
	
	if(oyuncuData[playerid][_LevelCount] >= 50)
    {
        oyuncuData[playerid][_LevelCount] = 50;
		if(oyuncuData[playerid][ExpPuan] > 50000)
		{
		    oyuncuData[playerid][ExpPuan] = 50000;
		}
    }
	SetPlayerProgressBarMaxValue(playerid, ExpBar[playerid], Lxp);
	SetPlayerProgressBarValue(playerid, ExpBar[playerid], oyuncuData[playerid][ExpPuan]);
	return 1;
}

stock aracUyum(_mmodel)
{
	switch(_mmodel)
	{
	    case 417: return 1;
	    case 425: return 1;
	    case 447: return 1;
	    case 460: return 1;
	    case 464: return 1;
	    case 465: return 1;
	    case 469: return 1;
	    case 476: return 1;
	    case 487: return 1;
	    case 488: return 1;
	    case 497: return 1;
	    case 501: return 1;
		case 511: return 1;
	    case 512: return 1;
	    case 513: return 1;
	    case 519: return 1;
	    case 520: return 1;
	    case 548: return 1;
	    case 553: return 1;
	    case 563: return 1;
	    case 564: return 1;
	    case 577: return 1;
	    case 592: return 1;
	    case 593: return 1;
	    case 594: return 1;
	    case 606: return 1;
	    case 607: return 1;
	    case 608: return 1;
	    case 610: return 1;
	    case 611: return 1;
	    default: return 0;
	}
	return 0;
}

stock b_Gerekenler(playerid, ngrekli)
{
	new sz[100];
	switch(ngrekli)
	{
	    case 1: format(sz, sizeof(sz), "{FF773D}[BANKA] {FFFFFF}Lazerleri hacklemek için %d skora ihtiyacýn var !", BANKA_SKOR);
		case 2: format(sz, sizeof(sz), "{FF773D}[BANKA] {FFFFFF}Lazerleri hacklemek þifre aletine yakýn olmalýsýn.");
		case 3: format(sz, sizeof(sz), "{FF773D}[BANKA] {FFFFFF}Lazerler zaten hacklenmiþ.");
		case 4: format(sz, sizeof(sz), "{FF773D}[BANKA] {FFFFFF}Lazerleri zaten hackliyorsun.");
		default: format(sz, sizeof(sz), "{FF773D}[BANKA] {FFFFFF}Hata, 'Default'");
	}
	return SendClientMessage(playerid, -1, sz);
}

CeteSavasBolgeOlustur(playerid, __csbID, __csbx, __csby, __csbrx, __csbry, __csbHex[], __csbName[])
{
	new
		Float: tmpPos[3],
		query[165],
		id = __csbID,
  		sx[11],
  		hex
	;
	GetPlayerPos(playerid, tmpPos[0], tmpPos[1], tmpPos[2]);

	format(CeteSavasMekan[id][ceteMekanIsmi], CETE_BOLGE_ISIM, __csbName);

	CeteSavasMekan[id][ceteMekanSahip] = -1;

    CeteSavasMekan[id][cMekanZone][0] = tmpPos[0] - __csbx;
    CeteSavasMekan[id][cMekanZone][1] = tmpPos[1] - __csby;
   	CeteSavasMekan[id][cMekanZone][2] = tmpPos[0] + __csbrx;
    CeteSavasMekan[id][cMekanZone][3] = tmpPos[1] + __csbry;

    CeteSavasMekan[id][cMekanLabel][0] = tmpPos[0];
    CeteSavasMekan[id][cMekanLabel][1] = tmpPos[1];
    CeteSavasMekan[id][cMekanLabel][2] = tmpPos[2];

    CeteSavasMekan[id][ceteBolgeSure] = 0;
    CeteSavasMekan[id][ceteTip] = 0;
    CeteSavasMekan[id][eleGecirenCete] = -1;

    format(CeteSavasMekan[id][ceteMekanRenk], 7, __csbHex);
    CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
    CeteSavasMekan[id][cbArea] = CreateDynamicRectangle(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3], -1, -1, -1);
    if(strcmp(__csbHex, "-1", false) == 0)
    {
        foreach(new x: Player) GangZoneShowForPlayer(x, CeteSavasMekan[id][cbZone], 0x00000099);
        format(CeteSavasMekan[id][ceteMekanRenk], 7, "-1");
    }
    else
    {
        format(sx, sizeof(sx), "0x%s99", __csbHex);
        sscanf(sx, "x", hex);
        foreach(new x: Player) GangZoneShowForPlayer(x, CeteSavasMekan[id][cbZone], hex);
    }
	format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}Yok\n{C938FF}/SavasAc", __csbName, id);
    CeteSavasMekan[id][cbLabel] = CreateDynamic3DTextLabel(query, 0xFFFFFFFF, tmpPos[0], tmpPos[1], tmpPos[2], 40.0, .worldid = 0, .interiorid = 0);

	mysql_format(g_SQL, query, sizeof(query),"INSERT INTO `cetemekan`(`ceteMekanid`, `ceteMekanIsmi`) VALUES ('%d', '%s')", id, __csbName);
	mysql_query(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '-1' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
	mysql_query(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmX` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanZone][0], id);
	mysql_query(g_SQL, query);

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmY` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanZone][1], id);
	mysql_query(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmRX` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanZone][2], id);
	mysql_query(g_SQL, query);

   	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmRY` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanZone][3], id);
	mysql_query(g_SQL, query);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmLX` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanLabel][0], id);
	mysql_query(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmLY` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanLabel][1], id);
	mysql_query(g_SQL, query);

 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `cmLZ` = '%f' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteSavasMekan[id][cMekanLabel][2], id);
	mysql_query(g_SQL, query);

	if(strcmp(__csbHex, "-1", false) == 0)
	{
	 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '-1' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
		mysql_query(g_SQL, query);
	}
	else
	{
	 	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '%s' WHERE `ceteMekanid` = '%d' LIMIT 1", __csbHex, id);
		mysql_query(g_SQL, query);
	}

  	mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
	mysql_query(g_SQL, query);

	Iter_Add(CeteSavaslar, __csbID);
	SendClientMessage(playerid, 0x00bBFFFF, "Çete savaþ bölgesi oluþturuldu.");
	return 1;
}

forward _CeteSavaslariYukle();
public _CeteSavaslariYukle()
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
  	{
 		new id, yukle, sx[11], hex, query[165];
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "ceteMekanid", id);
		    cache_get_value_name(yukle, "ceteMekanIsmi", CeteSavasMekan[id][ceteMekanIsmi], CETE_BOLGE_ISIM);
		    cache_get_value_name_int(yukle, "ceteMekanSahip", CeteSavasMekan[id][ceteMekanSahip]);
		    cache_get_value_name_float(yukle, "cmX", CeteSavasMekan[id][cMekanZone][0]);
		    cache_get_value_name_float(yukle, "cmY", CeteSavasMekan[id][cMekanZone][1]);
		    cache_get_value_name_float(yukle, "cmRX", CeteSavasMekan[id][cMekanZone][2]);
		    cache_get_value_name_float(yukle, "cmRY", CeteSavasMekan[id][cMekanZone][3]);
			cache_get_value_name_float(yukle, "cmLX", CeteSavasMekan[id][cMekanLabel][0]);
		    cache_get_value_name_float(yukle, "cmLY", CeteSavasMekan[id][cMekanLabel][1]);
		    cache_get_value_name_float(yukle, "cmLZ", CeteSavasMekan[id][cMekanLabel][2]);
		    cache_get_value_name(yukle, "ceteMekanRenk", CeteSavasMekan[id][ceteMekanRenk], 7);
			CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
			CeteSavasMekan[id][cbArea] = CreateDynamicRectangle(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3], -1, -1, -1);
			if(strcmp(CeteSavasMekan[id][ceteMekanRenk], "-1", false) == 0)
			{
			    foreach(new x: Player) GangZoneShowForPlayer(x, CeteSavasMekan[id][cbZone], 0x00000099);
			}
			else
			{
			    format(sx, sizeof(sx), "0x%s99", CeteSavasMekan[id][ceteMekanRenk]);
			    sscanf(sx, "x", hex);
			    foreach(new x: Player) GangZoneShowForPlayer(x, CeteSavasMekan[id][cbZone], hex);
			}
			cache_get_value_name_int(yukle, "ceteBolgeSure", CeteSavasMekan[id][ceteBolgeSure]);
			cache_get_value_name_int(yukle, "ceteTip", CeteSavasMekan[id][ceteTip]);
			CeteSavasMekan[id][eleGecirenCete] = -1;
			new _cx[48];
			if(CeteSavasMekan[id][ceteMekanSahip] != -1){
			format(_cx, sizeof(_cx), "%s", CeteIslem[CeteSavasMekan[id][ceteMekanSahip]][ceteIsmi]);}
			switch(CeteSavasMekan[id][ceteBolgeSure])
			{
				case 0: format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}/SavasAc\n", CeteSavasMekan[id][ceteMekanIsmi], id, (CeteSavasMekan[id][ceteMekanSahip] == -1) ? ("Yok") : (_cx));
				default:
				{
				    new _xGun, _xSaat, _xDakika, _xSaniye, _xay, _xyil;
					SureCek(CeteSavasMekan[id][ceteBolgeSure], _xyil, _xay, _xGun, _xSaat, _xDakika, _xSaniye);
					format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}Kalan Süre: {FFFFFF}%d gün, %d saat, %d dakika, %d saniye\n{f1c40f}/SavasAc", CeteSavasMekan[id][ceteMekanIsmi], id, (CeteSavasMekan[id][ceteMekanSahip] == -1) ? ("Yok") : (_cx), _xGun, _xSaat, _xDakika, _xSaniye);
				}
			}
			CeteSavasMekan[id][cbLabel] = CreateDynamic3DTextLabel(query, 0xFFFFFFFF, CeteSavasMekan[id][cMekanLabel][0], CeteSavasMekan[id][cMekanLabel][1], CeteSavasMekan[id][cMekanLabel][2], 40.0, .worldid = 0, .interiorid = 0);
			Iter_Add(CeteSavaslar, id);
	    	yukle++;
		}
		printf("\n=> Cete Savaslari: Toplam yüklenen savas bolgesi: %d\n", yukle);
	}
	if(!rows) { printf("\n=> Cete Savaslari: Oluþturulmus bolge yok !\n"); }
	return 1;
}

function CeteSureKontrol()
{
    foreach(new id: CeteSavaslar)
    {
        if(CeteSavasMekan[id][ceteTip] >= 2 && CeteSavasMekan[id][ceteMekanSahip] != -1 && CeteSavasMekan[id][ceteBolgeSure] >= 1)
		{
		    new _xGun, _xSaat, _xDakika, _xSaniye, _xay, _xyil, _cx[48], query[200];
        	CeteSavasMekan[id][ceteBolgeSure]--;
        	if(CeteSavasMekan[id][ceteBolgeSure] <= 2)
        	{
        	    CeteSavasMekan[id][ceteBolgeSure] = 0;
				format(_cx, sizeof(_cx), "%s", CeteIslem[CeteSavasMekan[id][ceteMekanSahip]][ceteIsmi]);
				format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}/SavasAc\n", CeteSavasMekan[id][ceteMekanIsmi], id, (CeteSavasMekan[id][ceteMekanSahip] == -1) ? ("Yok") : (_cx));
	            UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, query);
        	    return 1;
        	}
            format(_cx, sizeof(_cx), "%s", CeteIslem[CeteSavasMekan[id][ceteMekanSahip]][ceteIsmi]);
			SureCek(CeteSavasMekan[id][ceteBolgeSure], _xyil, _xay, _xGun, _xSaat, _xDakika, _xSaniye);
			format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}Kalan Süre: {FFFFFF}%d gün, %d saat, %d dakika, %d saniye\n{f1c40f}/SavasAc", CeteSavasMekan[id][ceteMekanIsmi], id, (CeteSavasMekan[id][ceteMekanSahip] == -1) ? ("Yok") : (_cx), _xGun, _xSaat, _xDakika, _xSaniye);
            UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, query);
		}
    }
	return 1;
}

function SavasPuskurt(playerid)
{
	if(SavasIslem[playerid][Puskurtme] == 0 && SavasIslem[playerid][SavasSurem2] != 0)
	{
	    SetPVarInt(playerid, "PuskurtmeModee", 0);
	    KillTimer(SavasIslem[playerid][puskurtTimer]);
		SavasIslem[playerid][Puskurtme] = 0;
		SavasIslem[playerid][SavasSurem2] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
		SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
        SendClientMessage(playerid, -1, "{e67e22}Püskürtme: {ffffff}Çete bölgesinden ayrýldýðýnýz için, püskürtme baþarýlý olamadý !");
		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
		            SetPVarInt(playerid, "PuskurtmeModee", 0);
			        HidePlayerProgressBar(i, SavasBar[i]);
			        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
			        SetPlayerProgressBarValue(i, SavasBar[i], 0);
		        }
		    }
		}
		return 1;
	}
	if(SavasIslem[playerid][SavasSureArttir] >= SavasIslem[playerid][SavasSurem2])
    {
        new query[156], id = GetPVarInt(playerid, "_SavasID");
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '-1' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '000000' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
		mysql_query(g_SQL, query);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '0' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
		mysql_query(g_SQL, query);
		
  		new sb[300];
		format(sb, sizeof(sb), "[!] Püskürtme: {3D8EB9}%s {EBBD63}çetesi {97CE68}%s {EBBD63}adlý mekandan {81E2E6}%s {EBBD63}çetesini püskürttü !", CeteIslem[PlayerCete[playerid]][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi], CeteIslem[CeteSavasMekan[id][ceteMekanSahip]][ceteIsmi]);
		SendClientMessageToAll(0xD33257FF, sb);
        CeteSavasMekan[id][ceteMekanSahip] = -1;
        CeteSavasMekan[id][ceteBolgeSure] = 0;
        CeteSavasMekan[id][ceteTip] = 0;
        CeteSavasMekan[id][eleGecirenCete] = -1;
        format(query, sizeof(query), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}Yok\n{C938FF}/SavasAc\n", CeteSavasMekan[id][ceteMekanIsmi], id);
        UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, query);
        GangZoneDestroy(CeteSavasMekan[id][cbZone]);
		CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
		format(CeteSavasMekan[id][ceteMekanRenk], 7, "000000");
		new sx[11], hex;
		format(sx, sizeof(sx), "0x%s99", CeteSavasMekan[id][ceteMekanRenk]);
		sscanf(sx, "x", hex);
		foreach(new i: Player) GangZoneShowForPlayer(i, CeteSavasMekan[id][cbZone], hex);
  	    KillTimer(SavasIslem[playerid][puskurtTimer]);
		SavasIslem[playerid][Puskurtme] = 0;
		SavasIslem[playerid][SavasSurem2] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
		HidePlayerProgressBar(playerid, SavasBar[playerid]);
        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
		foreach(new i : Player)
		{
			if(PlayerCete[i] == PlayerCete[playerid])
		    {
		        if(i != playerid)
		        {
		            SetPVarInt(i, "PuskurtmeModee", 0);
			        HidePlayerProgressBar(i, SavasBar[i]);
			        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
			        SetPlayerProgressBarValue(i, SavasBar[i], 0);
		        }
		    }
		}
		SetPVarInt(playerid, "PuskurtmeModee", 0);
        GameTextForPlayer(playerid, "~g~~h~~h~Puskurtuldu !", 3000, 4);
		SendClientMessage(playerid, -1, "{e67e22}Püskürtme: {ffffff}Karþý çeteyi bu bölgeden attýnýz, þimdi saldýrabilirsiniz.");
		return 1;
	}
	SavasIslem[playerid][SavasSureArttir] += 2;
    new
        id = GetPVarInt(playerid, "_SavasID"),
		c = PlayerCete[playerid],
		x_hizz = 0
	;
	foreach(new i: Player)
	{
	    if(SavasIslem[i][CeteSavasBolgedemi] == 1)
	    {
			if(GetPVarInt(i, "_SavasID") == id)
	    	{
	    	    SetPVarInt(playerid, "PuskurtmeModee", 1);
  	    	    if(IsPlayerInAnyVehicle(i))
	    	    {
					new Float:pXos[3], ba[80];
					GetPlayerPos(i, pXos[0], pXos[1], pXos[2]);
					SetPlayerPos(i, pXos[0] + 1.0, pXos[1] + 1.3, pXos[2] + 0.5);
					format(ba, sizeof(ba), "{B8B6A6}Savaþ baþlatýlmýþ çete bölgelerinde araç içinde duramazsýn.");
					SendClientMessage(i, -1, ba);
	    	    }
				if(PlayerCete[i] == c)
				{
		        	if(playerid != i)
		        	{
		            	x_hizz++;
		            	switch(SavasIslem[playerid][SavasTip])
		            	{
		            	    case 1: SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
		            	    case 2: SetPlayerProgressBarMaxValue(i, SavasBar[i], 1200);
		            	    case 3: SetPlayerProgressBarMaxValue(i, SavasBar[i], 1800);
		            	    case 4: SetPlayerProgressBarMaxValue(i, SavasBar[i], 2400);
		            	}
		            	ShowPlayerProgressBar(i, SavasBar[i]);
                        SetPlayerProgressBarValue(i, SavasBar[i], SavasIslem[playerid][SavasSureArttir] + x_hizz);
		        	}
				}
			}
		}
	}
	ShowPlayerProgressBar(playerid, SavasBar[playerid]);
	SavasIslem[playerid][SavasSureArttir] += x_hizz;
	SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
	return 1;
}

forward SavasBarUp(playerid);
public SavasBarUp(playerid)
{
    if(SavasIslem[playerid][CeteSavasBolgedemi] == 0 && SavasIslem[playerid][SavasSurem] != 0)
    {
        KillTimer(SavasIslem[playerid][savasTimer]);
        switch(SavasIslem[playerid][SavasTip])
		{
		    case 3: cetePuanArttir(PlayerCete[playerid], -2);
			case 4: cetePuanArttir(PlayerCete[playerid], -3);
		}
        SavasIslem[playerid][SavasTip] = 0;
        SavasIslem[playerid][SavasSurem] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
        SendClientMessage(playerid, -1, "{e67e22}Bilgi: {ffffff}Bölgeden ayrýldýðýnýz için bölge alýmý baþarýsýz oldu !");
        new c = PlayerCete[playerid], _bump[100];
        CeteIslem[c][ceteKasasi] -= GetPVarInt(playerid, "_CeteZarar");
		mysql_format(g_SQL, _bump, sizeof(_bump), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
		mysql_query(g_SQL, _bump);
		DeletePVar(playerid, "_CeteZarar");
        new id = GetPVarInt(playerid, "_SavasID");
        CeteSavasMekan[id][eleGecirenCete] = -1;
		foreach(new i: Player)
		{
			if(PlayerCete[i] == c)
		    {
		        if(i != playerid)
		        {
			        HidePlayerProgressBar(i, SavasBar[i]);
			        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
			        SetPlayerProgressBarValue(i, SavasBar[i], 0);
		        }
		    }
			GangZoneStopFlashForPlayer(i, CeteSavasMekan[id][cbZone]);
		}
        return 1;
    }
    if(SavasIslem[playerid][SavasSureArttir] >= SavasIslem[playerid][SavasSurem])
    {
        KillTimer(SavasIslem[playerid][savasTimer]);
        SavasIslem[playerid][SavasSurem] = 0;
        SavasIslem[playerid][SavasSureArttir] = 0;
        HidePlayerProgressBar(playerid, SavasBar[playerid]);
        SetPlayerProgressBarMaxValue(playerid, SavasBar[playerid], 600);
        SetPlayerProgressBarValue(playerid, SavasBar[playerid], 0);
	    new
	        id = GetPVarInt(playerid, "_SavasID"),
			c = PlayerCete[playerid],
			sx[11],
			hex,
			_up[107 + 48],
			_cx[48]
		;
		CeteSavasMekan[id][eleGecirenCete] = -1;
		new sb[200];
		format(sb, sizeof(sb), "[!] Savaþ: {3D8EB9}%s {EBBD63}çetesi {97CE68}%s {EBBD63}adlý çete bölgesini ele geçirdi !", CeteIslem[c][ceteIsmi], CeteSavasMekan[id][ceteMekanIsmi]);
		SendClientMessageToAll(0xD33257FF, sb);
        foreach(new i: Player)
		{
		    if(PlayerCete[i] == c)
		    {
		        if(i != playerid)
		        {
			        HidePlayerProgressBar(i, SavasBar[i]);
			        SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
			        SetPlayerProgressBarValue(i, SavasBar[i], 0);
		        }
		    }
			GangZoneStopFlashForPlayer(i, CeteSavasMekan[id][cbZone]);
		}
        GangZoneDestroy(CeteSavasMekan[id][cbZone]);
        CeteSavasMekan[id][cbZone] = GangZoneCreate(CeteSavasMekan[id][cMekanZone][0], CeteSavasMekan[id][cMekanZone][1], CeteSavasMekan[id][cMekanZone][2], CeteSavasMekan[id][cMekanZone][3]);
        format(sx, sizeof(sx), "0x%s99", CeteIslem[c][ceteRengi]);
		sscanf(sx, "x", hex);
        foreach(new i: Player) GangZoneShowForPlayer(i, CeteSavasMekan[id][cbZone], hex);
        GameTextForPlayer(playerid, "~g~~h~~h~Bolge Alindi !", 3000, 4);
		new query[100];
        CeteIslem[c][ceteKasasi] += GetPVarInt(playerid, "_CeteZarar");
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `ceteler` SET `ceteKasasi` = '%d' WHERE `cid` = '%d' LIMIT 1", CeteIslem[c][ceteKasasi], c);
		mysql_query(g_SQL, query);
		DeletePVar(playerid, "_CeteZarar");
		CeteSavasMekan[id][ceteMekanSahip] = c;
		switch(SavasIslem[playerid][SavasTip])
		{
		    case 1:
		    {
          		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '1' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);
		    
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '%d' WHERE `ceteMekanid` = '%d' LIMIT 1", c, id);
				mysql_query(g_SQL, query);
				
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '%s' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteIslem[c][ceteRengi], id);
				mysql_query(g_SQL, query);
		        
		        CeteSavasMekan[id][ceteTip] = SavasIslem[playerid][SavasTip];
				format(_cx, sizeof(_cx), "%s", CeteIslem[c][ceteIsmi]);
				format(_up, sizeof(_up), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}/SavasAc", CeteSavasMekan[id][ceteMekanIsmi], id, _cx);
		        UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, _up);
		    }
			case 2:
		    {
          		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '2' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '%d' WHERE `ceteMekanid` = '%d' LIMIT 1", c, id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '%s' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteIslem[c][ceteRengi], id);
				mysql_query(g_SQL, query);
				
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '900' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);
				
				CeteSavasMekan[id][ceteBolgeSure] = 900;
		        CeteSavasMekan[id][ceteTip] = SavasIslem[playerid][SavasTip];
				format(_cx, sizeof(_cx), "%s", CeteIslem[c][ceteIsmi]);
				format(_up, sizeof(_up), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}/SavasAc", CeteSavasMekan[id][ceteMekanIsmi], id, _cx);
		        UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, _up);
		    }
			case 3:
		    {
		        cetePuanArttir(c, 1);
		        
          		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '3' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '%d' WHERE `ceteMekanid` = '%d' LIMIT 1", c, id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '%s' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteIslem[c][ceteRengi], id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '3600' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				CeteSavasMekan[id][ceteBolgeSure] = 3600;
		        CeteSavasMekan[id][ceteTip] = SavasIslem[playerid][SavasTip];
				format(_cx, sizeof(_cx), "%s", CeteIslem[c][ceteIsmi]);
				format(_up, sizeof(_up), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}/SavasAc", CeteSavasMekan[id][ceteMekanIsmi], id, _cx);
		        UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, _up);
		    }
			case 4:
		    {
		        cetePuanArttir(c, 2);
		        
          		mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteTip` = '4' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanSahip` = '%d' WHERE `ceteMekanid` = '%d' LIMIT 1", c, id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteMekanRenk` = '%s' WHERE `ceteMekanid` = '%d' LIMIT 1", CeteIslem[c][ceteRengi], id);
				mysql_query(g_SQL, query);

				mysql_format(g_SQL, query, sizeof(query), "UPDATE `cetemekan` SET `ceteBolgeSure` = '172800' WHERE `ceteMekanid` = '%d' LIMIT 1", id);
				mysql_query(g_SQL, query);

				CeteSavasMekan[id][ceteBolgeSure] = 172800;
		        CeteSavasMekan[id][ceteTip] = SavasIslem[playerid][SavasTip];
				format(_cx, sizeof(_cx), "%s", CeteIslem[c][ceteIsmi]);
				format(_up, sizeof(_up), "{FFD400}[ÇETE SAVAÞ BÖLGESÝ]\n{00FFC7}%s(%d)\n{FF0037}Ele Geçiren Çete: {FFFFFF}%s\n{C938FF}/SavasAc", CeteSavasMekan[id][ceteMekanIsmi], id, _cx);
		        UpdateDynamic3DTextLabelText(CeteSavasMekan[id][cbLabel], 0xFFFFFFFF, _up);
		    }
		}
        return 1;
    }
    SavasIslem[playerid][SavasSureArttir] += 2;
    new
        id = GetPVarInt(playerid, "_SavasID"),
		c = PlayerCete[playerid],
		sx[11],
		hex,
		x_hizz = 0
	;
	format(sx, sizeof(sx), "0x%s99", CeteIslem[c][ceteRengi]);
	sscanf(sx, "x", hex);
	foreach(new i: Player)
	{
	    if(SavasIslem[i][CeteSavasBolgedemi] == 1)
	    {
			if(GetPVarInt(i, "_SavasID") == id)
	    	{
	    	    if(IsPlayerInAnyVehicle(i))
	    	    {
					new Float:pXos[3], ba[80];
					GetPlayerPos(i, pXos[0], pXos[1], pXos[2]);
					SetPlayerPos(i, pXos[0] + 1.0, pXos[1] + 1.3, pXos[2] + 0.5);
					format(ba, sizeof(ba), "{B8B6A6}Savaþ baþlatýlmýþ çete bölgelerinde araç içinde duramazsýn.");
					SendClientMessage(i, -1, ba);
	    	    }
				if(gTeam[i] == SIVIL || gTeam[i] >= 9 && gTeam[i] <= 14)
        	    {
        	    	if(aranmaSeviyesii[i] <= 3){aranmaLeveli(i, 24);}
				}
				if(PlayerCete[i] == c)
				{
		        	if(playerid != i)
		        	{
		            	x_hizz++;
						switch(SavasIslem[playerid][SavasTip])
		            	{
		            	    case 1: SetPlayerProgressBarMaxValue(i, SavasBar[i], 600);
		            	    case 2: SetPlayerProgressBarMaxValue(i, SavasBar[i], 1200);
		            	    case 3: SetPlayerProgressBarMaxValue(i, SavasBar[i], 1800);
		            	    case 4: SetPlayerProgressBarMaxValue(i, SavasBar[i], 2400);
		            	}
		            	ShowPlayerProgressBar(i, SavasBar[i]);
						SetPlayerProgressBarValue(i, SavasBar[i], SavasIslem[playerid][SavasSureArttir] + x_hizz);
		        	}
				}
  			}
		}
		GangZoneFlashForPlayer(i, CeteSavasMekan[id][cbZone], hex);
	}
	ShowPlayerProgressBar(playerid, SavasBar[playerid]);
	SavasIslem[playerid][SavasSureArttir] += x_hizz;
	SetPlayerProgressBarValue(playerid, SavasBar[playerid], SavasIslem[playerid][SavasSureArttir]);
	return 1;
}

stock barikatOlustur(playerid, bdeger)
{
    barikatSayi[playerid]++;
	switch(bdeger)
	{
	    case 1:
	    {
			new idx = Iter_Free(Barikatlar), xd[55 + 24], objtid, Float: bbPos[4];
   			GetPlayerPos(playerid, bbPos[0], bbPos[1], bbPos[2]);
   			GetPlayerFacingAngle(playerid, bbPos[3]);
	        GetXYInFrontOfPlayer(playerid, bbPos[0], bbPos[1], 3.0);
			objtid = CreateDynamicObject(978, bbPos[0], bbPos[1], bbPos[2], 0.0, 0.0, bbPos[3], -1, -1, -1, 300.000, 300.000);
		    BarikatIslem[idx][barikatDurum] = 1;
		    format(BarikatIslem[idx][barikatOlusturan], MAX_PLAYER_NAME, getName(playerid));
		    BarikatIslem[idx][barikatPoss][0] = bbPos[0];
		    BarikatIslem[idx][barikatPoss][1] = bbPos[1];
		    BarikatIslem[idx][barikatPoss][2] = bbPos[2];
		    BarikatIslem[idx][barikatPoss][3] = 0.0;
		    BarikatIslem[idx][barikatPoss][4] = 0.0;
		    BarikatIslem[idx][barikatPoss][5] = 0.0;
		    BarikatIslem[idx][barikatSure] = gettime() + 60 * BARIKAT_SURE;
		    BarikatIslem[idx][b_objeId] = objtid;
		    format(xd, sizeof(xd), "{E67E22}Barikat (%d)\n{3498DB}Kuran: {FFFFFF}%s", idx, getName(playerid));
		    BarikatIslem[idx][barikatLabel] = CreateDynamic3DTextLabel(xd, 0xFFFFFFFF, bbPos[0], bbPos[1], bbPos[2] + 0.50, 3.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1, -1);
			Iter_Add(Barikatlar, idx);
			SendClientMessage(playerid, -1, "{3498DB}Barikat: {FFFFFF}Barikat eklendi, barikatlar 30 dakika sonra otomatik silinir !");
            GetPlayerPos(playerid, bbPos[0], bbPos[1], bbPos[2]);
			SetPlayerPos(playerid, bbPos[0] + 0.005, bbPos[1], bbPos[2] + 0.005);
		}
		case 2:
	    {
			new idx = Iter_Free(Barikatlar), xd[55 + 24], objtid, Float: bbPos[4];
			GetPlayerPos(playerid, bbPos[0], bbPos[1], bbPos[2]);
			GetPlayerFacingAngle(playerid, bbPos[3]);
	        GetXYInFrontOfPlayer(playerid, bbPos[0], bbPos[1], 3.0);
            objtid = CreateDynamicObject(981, bbPos[0], bbPos[1], bbPos[2], 0.0, 0.0, bbPos[3], -1, -1, -1, 300.000, 300.000);
		    BarikatIslem[idx][barikatDurum] = 1;
		    format(BarikatIslem[idx][barikatOlusturan], MAX_PLAYER_NAME, getName(playerid));
		    BarikatIslem[idx][barikatPoss][0] = bbPos[0];
		    BarikatIslem[idx][barikatPoss][1] = bbPos[1];
		    BarikatIslem[idx][barikatPoss][2] = bbPos[2];
		    BarikatIslem[idx][barikatPoss][3] = 0.0;
		    BarikatIslem[idx][barikatPoss][4] = 0.0;
		    BarikatIslem[idx][barikatPoss][5] = 0.0;
		    BarikatIslem[idx][barikatSure] = gettime() + 60 * BARIKAT_SURE;
		    BarikatIslem[idx][b_objeId] = objtid;
		    format(xd, sizeof(xd), "{E67E22}Barikat (%d)\n{3498DB}Kuran: {FFFFFF}%s", idx, getName(playerid));
		    BarikatIslem[idx][barikatLabel] = CreateDynamic3DTextLabel(xd, 0xFFFFFFFF, bbPos[0], bbPos[1], bbPos[2] + 0.50, 3.0, INVALID_PLAYER_ID, INVALID_PLAYER_ID, 0, -1, -1, -1);
			Iter_Add(Barikatlar, idx);
			SendClientMessage(playerid, -1, "{3498DB}Barikat: {FFFFFF}Oluþturmuþ olduðunuz barikat eklendi, barikatlar 30 dakika sonra otomatik silinir !");
            GetPlayerPos(playerid, bbPos[0], bbPos[1], bbPos[2]);
			SetPlayerPos(playerid, bbPos[0] + 0.005, bbPos[1], bbPos[2] + 0.005);
	    }
	}
	return 1;
}

stock NickControl(sz[])
{
	new x;
	for(new i = 0; i < strlen(sz); i++)
	{
	    switch(sz[i])
	    {
			case '0'..'9': x = 1;
			case 'A'..'Z': x = 1;
			case 'a'..'z': x = 1;
			case '_': x = 1;
			case '.': x = 1;
			case '[': x = 1;
			case ']': x = 1;
			case '(': x = 1;
			case ')': x = 1;
			case '$': x = 1;
			case '@': x = 1;
			default:
			{
				x = 0;
				break;
			}
	    }
	}
	return x;
}

public OnInvalidClientJoin(playerid)
{
    BotCheck[playerid] = true;
	return 1;
}

public OnPlayerGunCheat(playerid, weaponid, ammo, hacktype)
{
	SendClientMessage(playerid, 0xE74C3CFF, "[Anti Hile] {FFFFFF}Silah hilesi kullandýðýnýz için silah elinizden alýndý.");
	return 1;
}

public OnPlayerCarSwing(playerid, vehicleid)
{
	if(GetPVarInt(playerid, "FloodKesx") > GetTickCount()) return 1;
 	format(x001x11, sizeof(x001x11), "[Anti Hile] {FFFFFF}Oyuncu %s(%d), Troll Hack 0x3 hilesi kullandýðý için sunucudan atýldý.", getName(playerid), playerid);
	SendClientMessageToAll(0xE74C3CFF, x001x11);
 	SetPVarInt(playerid, "FloodKesx", GetTickCount() + 2000);
	new ac_pping = GetPlayerPing(playerid) + 150;
	SetTimerEx("GuleGule", (ac_pping > 500 ? 500 : ac_pping), false, "i", playerid);
	return 1;
}

stock SCM_Ex(playerid, color, form[], {Float, _}: ...) {
    #pragma unused form
    static
        tmp[145]
    ;
    new
        t1 = playerid,
        t2 = color
    ;
    const
        n4 = -4,
        n16 = -16,
        size = sizeof tmp
    ;
    #emit stack 28
    #emit push.c size
    #emit push.c tmp
    #emit stack n4
    #emit sysreq.c format
    #emit stack n16
    return SendClientMessage(t1, t2, tmp);
}

function aSifirla()
{
	new saat_brk[3], pointt;
	gettime(saat_brk[0], saat_brk[1], saat_brk[2]);
    saat_brk[0] -= 1;
	saat_brk[0] += 1;
	if(saat_brk[0] == 23)
	{
	    pointt++;
	}
 	if(saat_brk[1] >= 59)
	{
	    pointt++;
	}
	if(pointt == 2)
	{
	    KillTimer(aSifirlaLan);
	    
	    foreach(new i : Player)
	    {
			oyuncuData[i][gunlukonline] = 0;
			oyuncuData[i][gunlukonlineafk] = 0;
			oyuncuData[i][adminkomuts] = 0;
			oyuncuData[i][yanits] = 0;
			oyuncuData[i][dsarki] = 0;
			oyuncuData[i][dmkapat] = 0;
	    }
	    
		new query[50];
		mysql_format(g_SQL, query, sizeof query, "UPDATE oyuncuveri SET adonline = 0");
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE oyuncuveri SET adafkonline = 0");
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE oyuncuveri SET akomuts = 0");
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE oyuncuveri SET yanits = 0");
		mysql_query(g_SQL, query);
		
  		mysql_format(g_SQL, query, sizeof query, "UPDATE oyuncuveri SET dsarki = 0");
		mysql_query(g_SQL, query);
		
		mysql_format(g_SQL, query, sizeof query, "UPDATE oyuncuveri SET dmkapat = 0");
		mysql_query(g_SQL, query);
		
		SetTimer("TekrardanOk", 2300, false);
	}
	return 1;
}

function TekrardanOk()
{
    aSifirlaLan = SetTimer("aSifirla", 1000, true);
	return 1;
}

forward OzelAracSQLKayit(vehicleid);
public OzelAracSQLKayit(vehicleid)
{
    oaIslem[vehicleid][sql_id] = cache_insert_id();
	return 1;
}

forward OzelAracYukle(playerid);
public OzelAracYukle(playerid)
{
	new rows = cache_num_rows();
	if(rows)
  	{
 		new id, yukle, aamodel, ssw[48], icar, Float:ipos[4], bbfix;
		while(yukle < rows)
		{
		    cache_get_value_name_int(yukle, "id", id);
		    cache_get_value_name_int(yukle, "model", aamodel);
		    cache_get_value_name(yukle, "pos", ssw, sizeof(ssw));
		    sscanf(ssw, "p<|>ffff", ipos[0], ipos[1], ipos[2], ipos[3]);
		    if(bbfix < OZEL_ARAC_SLOT)
		    {
	            icar = CreateVehicle(aamodel, ipos[0], ipos[1], ipos[2], ipos[3], 0, 0, 999999);
	            oaIslem[icar][oaCheck] = true;
	            oaIslem[icar][sql_id] = id;
	            format(oaIslem[icar][oaSahip], MAX_PLAYER_NAME, getName(playerid));
	            oaIslem[icar][oaPos][0] = ipos[0];
	            oaIslem[icar][oaPos][1] = ipos[1];
	            oaIslem[icar][oaPos][2] = ipos[2];
	            oaIslem[icar][oaPos][3] = ipos[3];
            	OzelAracSlotEkle(playerid, icar);
            	/*switch(aamodel)
				{
                    case 411: OzelAracInfernus1(icar);
                    case 487: OzelAracMaverick(icar);
                    case 560: OzelAracSultan(icar);
                    case 578: OzelAracDFT30(icar);
                }*/
                AracaObjeVer(icar);
			}
            bbfix++;
			yukle++;
		}
	}
	return 1;
}

stock OzelAracSlotEkle(playerid, oaaid)
{
	for(new i = 0; i < OZEL_ARAC_SLOT; i++)
	{
	    if(OzelAracim[playerid][i] == 0)
	    {
	        OzelAracim[playerid][i] = oaaid;
	        break;
	    }
	}
	return 1;
}

stock OzelAracSlotKontrol(playerid)
{
	new q = 0;
	for(new i = 0; i < OZEL_ARAC_SLOT; i++)
	{
	    if(OzelAracim[playerid][i] == 0)
	    {
	        q = 1;
	        break;
	    }
	}
	return q;
}

stock OzelAracSil(playerid)
{
	for(new i = 0; i < OZEL_ARAC_SLOT; i++)
	{
	    if(OzelAracim[playerid][i] != 0)
	    {
	        new id = OzelAracim[playerid][i];
	        OzelAracObjeTemizle(id);
	        oaIslem[id][oaCheck] = false;
	        oaIslem[id][sql_id] = 0;
			format(oaIslem[id][oaSahip], MAX_PLAYER_NAME, "-");
			oaIslem[id][oaPos][0] = 0.0;
			oaIslem[id][oaPos][1] = 0.0;
			oaIslem[id][oaPos][2] = 0.0;
			oaIslem[id][oaPos][3] = 0.0;
	        DestroyVehicle(id);
	        OzelAracim[playerid][i] = 0;
	    }
	}
	return 1;
}

stock OzelAracObjeTemizle(vehicleid)
{
	for(new i = 0; i < MAXTEXTURE_OBJ; i++)
	{
    	if(!IsValidDynamicObject(oaObjj[vehicleid][i])) continue;
    	DestroyDynamicObject(oaObjj[vehicleid][i]);
    	oaObjj[vehicleid][i] = INVALID_OBJECT_ID;
	}
}

stock AracaObjeVer(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
    {
        case 411: OzelAracInfernus1(vehicleid);
        case 487: OzelAracMaverick(vehicleid);
        case 560: OzelAracSultan(vehicleid);
        case 578: OzelAracDFT30(vehicleid);
        case 541: OzelAracBullet(vehicleid);
    }
	return 1;
}

stock OzelAracInfernus1(vehicleid)
{
    new tmpobjid;

    AddVehicleComponent(vehicleid, 1010);
    AddVehicleComponent(vehicleid, 1074);
    ChangeVehicleColor(vehicleid, 0, 1);
    ChangeVehiclePaintjob(vehicleid, 0);

	tmpobjid = CreateDynamicObject(1003,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 19523, "sampicons", "oranggrad32", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 19523, "sampicons", "oranggrad32", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -2.441, 0.280, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][0] = tmpobjid;

    tmpobjid = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 19523, "sampicons", "oranggrad32", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, -1, "none", "none", -10066330);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.039, -2.411, -0.310, 0.000, 0.000, 180.000);
    oaObjj[vehicleid][1] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "6", 130, "Webdings", 50, 0, -2780620, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 1.634, 0.193, 0.000, 81.099, 270.000);
    oaObjj[vehicleid][2] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "6", 130, "Webdings", 50, 0, -2780620, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 2.039, 0.129, 0.000, -75.999, -270.000);
    oaObjj[vehicleid][3] = tmpobjid;

    tmpobjid = CreateDynamicObject(1247,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 19523, "sampicons", "oranggrad32", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.030, -1.908, 0.230, 89.099, 1080.000, 1980.000);
    oaObjj[vehicleid][4] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "6", 130, "Webdings", 50, 0, -2780620, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 2.481, 0.031, 0.000, 71.999, 270.000);
    oaObjj[vehicleid][5] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 100, 0, -2780620, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.040, -0.080, 0.670, 0.000, 90.000, 360.000);
    oaObjj[vehicleid][6] = tmpobjid;

    tmpobjid = CreateDynamicObject(18650,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.850, 0.000, -0.600, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][7] = tmpobjid;

    tmpobjid = CreateDynamicObject(18650,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.850, 0.000, -0.600, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][8] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "____", 130, "courier", 199, 1, -2780620, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -1.040, 0.000, 0.140, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][9] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "____", 130, "courier", 199, 1, -2780620, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 1.040, 0.000, 0.140, 0.000, 0.000, 0.000);
	oaObjj[vehicleid][10] = tmpobjid;
	return 1;
}

stock OzelAracSultan(vehicleid)
{
    new tmpobjid;

    AddVehicleComponent(vehicleid, 1032);
    AddVehicleComponent(vehicleid, 1026);
    AddVehicleComponent(vehicleid, 1010);
    AddVehicleComponent(vehicleid, 1028);
    AddVehicleComponent(vehicleid, 1079);
    ChangeVehicleColor(vehicleid, 0, 3);
    ChangeVehiclePaintjob(vehicleid, 0);

	tmpobjid = CreateDynamicObject(18646,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.530, 0.260, 0.870, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][0] = tmpobjid;

    tmpobjid = CreateDynamicObject(19803,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 3.100, -1.729, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][1] = tmpobjid;

    tmpobjid = CreateDynamicObject(1003,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 19523, "sampicons", "reeedgrad32", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -2.270, 0.319, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][2] = tmpobjid;

    tmpobjid = CreateDynamicObject(1003,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 19523, "sampicons", "reeedgrad32", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -2.270, 0.269, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][3] = tmpobjid;

    tmpobjid = CreateDynamicObject(1170,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -10092544);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 1.071, 1.851, 0.020, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][4] = tmpobjid;

    tmpobjid = CreateDynamicObject(1141,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -13434880);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -1.051, -1.691, -0.009, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][5] = tmpobjid;

    tmpobjid = CreateDynamicObject(18687,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.530, -2.430, -2.010, 0.000, 0.000, 180.000);
    oaObjj[vehicleid][6] = tmpobjid;

    tmpobjid = CreateDynamicObject(18687,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.530, -2.430, -2.010, 0.000, 0.000, -180.000);
    oaObjj[vehicleid][7] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "±", 130, "Wingdings", 100, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -0.360, 0.820, 0.000, 90.000, 90.000);
    oaObjj[vehicleid][8] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "«", 130, "Wingdings", 100, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -0.320, 0.810, 0.000, 90.000, 90.000);
    oaObjj[vehicleid][9] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "«", 130, "Calibri", 100, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.750, 1.512, 0.344, 6.500, 91.699, 180.000);
    oaObjj[vehicleid][10] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "«", 130, "Calibri", 100, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.750, 1.512, 0.344, 6.500, -91.699, -180.000);
    oaObjj[vehicleid][11] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "«", 130, "Calibri", 100, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.750, 2.029, 0.275, 10.500, 91.699, 180.000);
    oaObjj[vehicleid][12] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "«", 130, "Calibri", 100, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.750, 2.029, 0.275, 10.500, -91.699, -180.000);
    oaObjj[vehicleid][13] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "----", 130, "Calibri", 100, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -1.830, 0.380, 0.000, 90.000, 90.000);
    oaObjj[vehicleid][14] = tmpobjid;
	return 1;
}

stock OzelAracMaverick(vehicleid)
{
    new tmpobjid;

    ChangeVehicleColor(vehicleid, 1, 3);

	tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -2.831, 1.611, -1.220, 0.000, 90.000, 0.000);
    oaObjj[vehicleid][0] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 2.831, 1.611, -1.220, 0.000, -90.000, 0.000);
    oaObjj[vehicleid][1] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -2.831, -1.560, -1.220, 0.000, 90.000, 0.000);
    oaObjj[vehicleid][2] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 2.831, -1.560, -1.220, 0.000, -90.000, 0.000);
    oaObjj[vehicleid][3] = tmpobjid;

    tmpobjid = CreateDynamicObject(970,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.201, 3.191, -0.640, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][4] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.571, 1.611, -1.230, 0.000, 90.000, 0.000);
    oaObjj[vehicleid][5] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.571, -1.611, -1.230, 0.000, 90.000, 0.000);
    oaObjj[vehicleid][6] = tmpobjid;

    tmpobjid = CreateDynamicObject(970,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.201, -3.191, -0.640, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][7] = tmpobjid;

    tmpobjid = CreateDynamicObject(970,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.201, -3.191, -0.640, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][8] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.571, -1.611, -1.230, 0.000, -90.000, 0.000);
    oaObjj[vehicleid][9] = tmpobjid;

    tmpobjid = CreateDynamicObject(19356,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18787, "matramps", "grating3", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.571, 1.611, -1.230, 0.000, -90.000, 0.000);
    oaObjj[vehicleid][10] = tmpobjid;

    tmpobjid = CreateDynamicObject(970,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.201, 3.191, -0.640, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][11] = tmpobjid;

    tmpobjid = CreateDynamicObject(11245,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18901, "matclothes", "beretred", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.181, -3.585, 1.520, 0.000, -70.500, 270.000);
    oaObjj[vehicleid][12] = tmpobjid;

    tmpobjid = CreateDynamicObject(11245,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18901, "matclothes", "beretred", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.200, -3.621, 1.639, 0.000, -70.500, -90.000);
    oaObjj[vehicleid][13] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 150, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.161, -4.186, 3.410, 0.000, 0.000, -172.999);
    oaObjj[vehicleid][14] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 150, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.243, -4.208, 3.500, 0.000, 0.000, -175.699);
    oaObjj[vehicleid][15] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 150, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 3.263, -4.209, 3.409, 0.000, 0.000, -179.199);
    oaObjj[vehicleid][16] = tmpobjid;

    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 150, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -3.112, -4.161, 3.540, 0.000, 0.000, 179.199);
    oaObjj[vehicleid][17] = tmpobjid;
	return 1;
}

stock OzelAracDFT30(vehicleid)
{
    new tmpobjid;

    ChangeVehicleColor(vehicleid, 1, 0);

	tmpobjid = CreateDynamicObject(2285,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18901, "matclothes", "beretred", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.010, 5.020, -0.740, 0.000, 0.000, 180.000);
    oaObjj[vehicleid][0] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 130, "Wingdings", 100, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 4.559, -0.470, 0.000, 0.000, 90.000);
    oaObjj[vehicleid][1] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(2285,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18901, "matclothes", "beretred", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.010, 4.980, -0.740, 0.000, 0.000, -180.000);
    oaObjj[vehicleid][2] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Masallah..", 130, "Calibri", 30, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 4.371, 1.091, 0.000, -12.299, 90.000);
    oaObjj[vehicleid][3] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19329,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -5.590, -0.720, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][4] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Seni sevmek ibadetim", 130, "Calibri", 25, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -5.610, -0.550, 0.000, 0.000, 270.000);
    oaObjj[vehicleid][5] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "ama", 130, "Calibri", 25, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -5.610, -0.770, 0.000, 0.000, -90.000);
    oaObjj[vehicleid][6] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "sevemem cenabetim.", 130, "Calibri", 25, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -5.610, -0.950, 0.000, 0.000, 270.000);
    oaObjj[vehicleid][7] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -1.471, -0.900, 0.820, 0.000, 0.000, 90.000);
    oaObjj[vehicleid][8] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 1.471, -0.900, 0.820, 0.000, 0.000, -90.000);
    oaObjj[vehicleid][9] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 1.461, -2.210, 0.820, 0.000, 0.000, 90.000);
    oaObjj[vehicleid][10] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -1.461, -2.210, 0.820, 0.000, 0.000, -90.000);
    oaObjj[vehicleid][11] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.289, -0.900, 2.019, 90.000, 360.000, -90.000);
    oaObjj[vehicleid][12] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.289, -0.900, 2.009, 90.000, -360.000, 90.000);
    oaObjj[vehicleid][13] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.289, -2.210, 2.009, -90.000, -360.000, -90.000);
    oaObjj[vehicleid][14] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.289, -2.210, 2.009, -90.000, 360.000, 90.000);
    oaObjj[vehicleid][15] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19329,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-70-percent", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.390, 2.290, 1.599, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][16] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19329,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-70-percent", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.390, 2.290, 1.599, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][17] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(944,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 1.360, 0.390, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][18] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1224,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.500, 1.420, 1.370, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][19] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Balfaruk", 130, "Calibri", 15, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 1.471, 1.470, 1.029, 0.000, 0.000, 180.000);
    oaObjj[vehicleid][20] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(18651,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, 3.919, 1.230, 0.000, 0.000, 90.000);
    oaObjj[vehicleid][21] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(9131,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.320, -5.130, 2.409, 0.000, 90.000, 0.000);
    oaObjj[vehicleid][22] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(9131,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.320, -5.130, 2.409, 0.000, -90.000, 0.000);
    oaObjj[vehicleid][23] = tmpobjid;
	return 1;
}

stock OzelAracBullet(vehicleid)
{
    new tmpobjid;

    ChangeVehicleColor(vehicleid, 1, 3);
	AddVehicleComponent(vehicleid, 1010);
    AddVehicleComponent(vehicleid, 1074);

	tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "µ", 130, "Wingdings", 70, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -0.229, 0.598, 0.000, 93.000, 270.000);
    oaObjj[vehicleid][0] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1003,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", 0);
    SetDynamicObjectMaterial(tmpobjid, 1, 19523, "sampicons", "reeedgrad32", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -2.131, 0.250, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][1] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "«", 130, "Wingdings", 50, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.010, -0.240, 0.599, 0.000, 90.000, 270.000);
    oaObjj[vehicleid][2] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "~", 140, "Webdings", 150, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.790, -1.578, 0.504, 1.400, 0.000, 180.000);
    oaObjj[vehicleid][3] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "~", 140, "Webdings", 150, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.790, -1.578, 0.504, 1.400, 0.000, -180.000);
    oaObjj[vehicleid][4] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1019,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -1.339, -0.120, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][5] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "¯", 130, "Wingdings", 70, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.010, -1.107, 0.503, 10.499, 90.000, 360.000);
    oaObjj[vehicleid][6] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1019,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -1.369, -0.230, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][7] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1182,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -10092544);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.909, -2.169, -0.390, 0.000, 0.000, -180.000);
    oaObjj[vehicleid][8] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1182,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -10092544);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.910, -2.189, -0.080, 0.000, 0.000, 180.000);
    oaObjj[vehicleid][9] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(1157,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampblack", -10066330);
    SetDynamicObjectMaterial(tmpobjid, 1, 18996, "mattextures", "sampred", 0);
    SetDynamicObjectMaterial(tmpobjid, 2, 18996, "mattextures", "sampred", -10092544);
    SetDynamicObjectMaterial(tmpobjid, 3, 18996, "mattextures", "sampred", 0);
    SetDynamicObjectMaterial(tmpobjid, 4, 18996, "mattextures", "sampred", 0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -1.061, 1.659, 0.000, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][10] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.900, 0.000, -0.400, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][11] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(18647,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.920, 0.000, -0.400, 0.000, 0.000, 0.000);
    oaObjj[vehicleid][12] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "I", 70, "Constantia", 50, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, -0.969, 0.000, -0.460, 90.000, 0.000, 360.000);
    oaObjj[vehicleid][13] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(18687,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.000, -1.719, -1.770, 0.000, 0.000, 180.000);
    oaObjj[vehicleid][14] = tmpobjid;
    
    tmpobjid = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(tmpobjid, 0, "I", 70, "Constantia", 50, 0, -65536, 0, 1);
    AttachDynamicObjectToVehicle(tmpobjid, vehicleid, 0.969, 0.000, -0.460, 90.000, 0.000, -360.000);
    oaObjj[vehicleid][15] = tmpobjid;
	return 1;
}

Yetkiler(seviye, sz_komut[])
{
	switch(seviye)
	{
	    case 1:
	    {
	        YetkiList[yt][YID] = 1;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
 	    case 2:
	    {
	        YetkiList[yt][YID] = 2;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
		case 3:
	    {
	        YetkiList[yt][YID] = 3;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
		case 4:
	    {
	        YetkiList[yt][YID] = 4;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
	    case 5:
	    {
	        YetkiList[yt][YID] = 5;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
	    case 6:
	    {
	        YetkiList[yt][YID] = 6;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
	    case 7:
	    {
	        YetkiList[yt][YID] = 7;
	        format(YetkiList[yt][YCMDLan], 40, sz_komut);
	        yt++;
	    }
	}
	return 1;
}

stock RandomVip(playerid, ff)
{
    oyuncuData[playerid][_Bakiye] -= ff;
	KillTimer(yetkilerTimer[playerid]);
	
	new rnd = random(20) + 1;
	new y = random(4) + 1;
	new sure;
	new str[200];
	
	oyuncuData[playerid][pVip] = y;
	sure = gettime() + rnd * 86400;
	oyuncuData[playerid][pVipSure] = sure;

	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipL` = %d WHERE `id` = %d LIMIT 1", oyuncuData[playerid][pVip], oyuncuData[playerid][xID]);
	mysql_query(g_SQL, str);

	mysql_format(g_SQL, str, sizeof str, "UPDATE `oyuncuveri` SET `VipSure` = %d WHERE `id` = %d LIMIT 1", sure, oyuncuData[playerid][xID]);
	mysql_tquery(g_SQL, str);

	kafaTextUp(playerid);
	yetkilerTimer[playerid] = SetTimerEx("SureKontrolleri", 2000, true, "d", playerid);

	if(y == 1)
	{
        SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Rastgele Vip Paketini kullanarak %d günlük Safir Vip kazandý.", getName(playerid), playerid, rnd);

		if(BasariIslem[playerid][ilkSafir] == 0){
		BasariIslem[playerid][ilkSafir] = 1;
		basariKilidi(playerid, "ilkSafir", "Ýlk Safir Vip", 7500000, 2500, 150);
		}
	}
	if(y == 2)
	{
		SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Rastgele Vip Paketini kullanarak %d günlük Yakut Vip kazandý.", getName(playerid), playerid, rnd);

		if(BasariIslem[playerid][ilkYakut] == 0){
		BasariIslem[playerid][ilkYakut] = 1;
		basariKilidi(playerid, "ilkYakut", "Ýlk Yakut Vip", 15000000, 10000, 200);
		}
	}
	if(y == 3)
	{
		SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Rastgele Vip Paketini kullanarak %d günlük Zümrüt Vip kazandý.", getName(playerid), playerid, rnd);

		if(BasariIslem[playerid][ilkZumrut] == 0){
		BasariIslem[playerid][ilkZumrut] = 1;
		basariKilidi(playerid, "ilkZumrut", "Ýlk Zümrüt Vip", 20000000, 15000, 250);
		}
	}
	if(y == 4)
	{
		SCM_ExAll(0x3498DBFF, "[BAKIYE] Oyuncu %s(%d) Rastgele Vip Paketini kullanarak %d günlük Elmas Vip kazandý.", getName(playerid), playerid, rnd);
		
		if(BasariIslem[playerid][ilkElmas] == 0)
		{
		    if(BasariIslem[playerid][ilkSafir] == 0)
			{
				BasariIslem[playerid][ilkSafir] = 1;
				basariKilidi(playerid, "ilkSafir", "Ýlk Safir Vip", 7500000, 2500, 150);
			}
			if(BasariIslem[playerid][ilkYakut] == 0)
			{
				BasariIslem[playerid][ilkYakut] = 1;
				basariKilidi(playerid, "ilkYakut", "Ýlk Yakut Vip", 15000000, 10000, 200);
			}
			if(BasariIslem[playerid][ilkZumrut] == 0)
			{
				BasariIslem[playerid][ilkZumrut] = 1;
				basariKilidi(playerid, "ilkZumrut", "Ýlk Zümrüt Vip", 20000000, 15000, 250);
			}
			BasariIslem[playerid][ilkElmas] = 1;
			basariKilidi(playerid, "ilkElmas", "Ýlk Elmas Vip", 25000000, 20000, 500);
		}
	}
	return 1;
}

stock SCM_ExAll(colour, format[], va_args<>)
{
    new
        out[148]
	;
    va_format(out, sizeof(out), format, va_start<2>);
    SendClientMessageToAll(colour, out);
}

LowriderCAR(carid)
{
	new Cars[] = { 536, 575, 567};
	for(new i = 0; i < sizeof(Cars); i++)
	{
		if(GetVehicleModel(carid) == Cars[i]) return 1;
	}
	return 0;
}

PlayAnim(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
	ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
}

PlayAnimEx(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
	AnimasyonDurumu[playerid] = 1;
	ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
}

IsKeyJustDown(key,newkeys,oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return true;
	return false;
}

AnimDurdur(playerid)
{
	AnimasyonDurumu[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
}

AnimasyonKullanimda(playerid)
{
    if(IsPlayerInAnyVehicle(playerid) == 1)
    {
		SendClientMessage(playerid, HATA_RENK, "[!] {FFFFFF}Bu animasyonu aracýn içerisinde kullanamazsýnýz.");
		return 0;
	}
	return 1;
}

AracAnimKullanimda(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) == 0)
    {
		SendClientMessage(playerid, HATA_RENK, "[!] {FFFFFF}Bu animasyonu aracýn içerisinde kullanamazsýnýz.");
		return 0;
	}
	return 1;
}

stock AnimSifirla(playerid)
{
	if(!AnimasyonResetle[playerid])
	{
	    AnimYenile(playerid,"AIRPORT");
		AnimYenile(playerid,"Attractors");
		AnimYenile(playerid,"BAR");
		AnimYenile(playerid,"BASEBALL");
		AnimYenile(playerid,"BD_FIRE");
		AnimYenile(playerid,"benchpress");
        AnimYenile(playerid,"BF_injection");
        AnimYenile(playerid,"BIKED");
        AnimYenile(playerid,"BIKEH");
        AnimYenile(playerid,"BIKELEAP");
        AnimYenile(playerid,"BIKES");
        AnimYenile(playerid,"BIKEV");
        AnimYenile(playerid,"BIKE_DBZ");
        AnimYenile(playerid,"BMX");
        AnimYenile(playerid,"BOX");
        AnimYenile(playerid,"BSKTBALL");
        AnimYenile(playerid,"BUDDY");
        AnimYenile(playerid,"BUS");
        AnimYenile(playerid,"CAMERA");
        AnimYenile(playerid,"CAR");
        AnimYenile(playerid,"CAR_CHAT");
        AnimYenile(playerid,"CASINO");
        AnimYenile(playerid,"CHAINSAW");
        AnimYenile(playerid,"CHOPPA");
        AnimYenile(playerid,"CLOTHES");
        AnimYenile(playerid,"COACH");
        AnimYenile(playerid,"COLT45");
        AnimYenile(playerid,"COP_DVBYZ");
        AnimYenile(playerid,"CRIB");
        AnimYenile(playerid,"DAM_JUMP");
        AnimYenile(playerid,"DANCING");
        AnimYenile(playerid,"DILDO");
        AnimYenile(playerid,"DODGE");
        AnimYenile(playerid,"DOZER");
        AnimYenile(playerid,"DRIVEBYS");
        AnimYenile(playerid,"FAT");
        AnimYenile(playerid,"FIGHT_B");
        AnimYenile(playerid,"FIGHT_C");
        AnimYenile(playerid,"FIGHT_D");
        AnimYenile(playerid,"FIGHT_E");
        AnimYenile(playerid,"FINALE");
        AnimYenile(playerid,"FINALE2");
        AnimYenile(playerid,"Flowers");
        AnimYenile(playerid,"FOOD");
        AnimYenile(playerid,"Freeweights");
        AnimYenile(playerid,"GANGS");
        AnimYenile(playerid,"GHANDS");
        AnimYenile(playerid,"GHETTO_DB");
        AnimYenile(playerid,"goggles");
        AnimYenile(playerid,"GRAFFITI");
        AnimYenile(playerid,"GRAVEYARD");
        AnimYenile(playerid,"GRENADE");
        AnimYenile(playerid,"GYMNASIUM");
        AnimYenile(playerid,"HAIRCUTS");
        AnimYenile(playerid,"HEIST9");
        AnimYenile(playerid,"INT_HOUSE");
        AnimYenile(playerid,"INT_OFFICE");
        AnimYenile(playerid,"INT_SHOP");
        AnimYenile(playerid,"JST_BUISNESS");
        AnimYenile(playerid,"KART");
        AnimYenile(playerid,"KISSING");
        AnimYenile(playerid,"KNIFE");
        AnimYenile(playerid,"LAPDAN1");
        AnimYenile(playerid,"LAPDAN2");
        AnimYenile(playerid,"LAPDAN3");
        AnimYenile(playerid,"LOWRIDER");
        AnimYenile(playerid,"MD_CHASE");
        AnimYenile(playerid,"MEDIC");
        AnimYenile(playerid,"MD_END");
        AnimYenile(playerid,"MISC");
        AnimYenile(playerid,"MTB");
        AnimYenile(playerid,"MUSCULAR");
        AnimYenile(playerid,"NEVADA");
        AnimYenile(playerid,"ON_LOOKERS");
        AnimYenile(playerid,"OTB");
        AnimYenile(playerid,"PARACHUTE");
        AnimYenile(playerid,"PARK");
        AnimYenile(playerid,"PAULNMAC");
        AnimYenile(playerid,"PED");
        AnimYenile(playerid,"PLAYER_DVBYS");
        AnimYenile(playerid,"PLAYIDLES");
        AnimYenile(playerid,"POLICE");
        AnimYenile(playerid,"POOL");
        AnimYenile(playerid,"POOR");
        AnimYenile(playerid,"PYTHON");
        AnimYenile(playerid,"QUAD");
        AnimYenile(playerid,"QUAD_DBZ");
        AnimYenile(playerid,"RIFLE");
        AnimYenile(playerid,"RIOT");
        AnimYenile(playerid,"ROB_BANK");
        AnimYenile(playerid,"ROCKET");
        AnimYenile(playerid,"RUSTLER");
        AnimYenile(playerid,"RYDER");
        AnimYenile(playerid,"SCRATCHING");
        AnimYenile(playerid,"SHAMAL");
        AnimYenile(playerid,"SHOTGUN");
        AnimYenile(playerid,"SILENCED");
        AnimYenile(playerid,"SKATE");
        AnimYenile(playerid,"SPRAYCAN");
        AnimYenile(playerid,"STRIP");
        AnimYenile(playerid,"SUNBATHE");
        AnimYenile(playerid,"SWAT");
        AnimYenile(playerid,"SWEET");
        AnimYenile(playerid,"SWIM");
        AnimYenile(playerid,"SWORD");
        AnimYenile(playerid,"TANK");
        AnimYenile(playerid,"TATTOOS");
        AnimYenile(playerid,"TEC");
        AnimYenile(playerid,"TRAIN");
        AnimYenile(playerid,"TRUCK");
        AnimYenile(playerid,"UZI");
        AnimYenile(playerid,"VAN");
        AnimYenile(playerid,"VENDING");
        AnimYenile(playerid,"VORTEX");
        AnimYenile(playerid,"WAYFARER");
        AnimYenile(playerid,"WEAPONS");
        AnimYenile(playerid,"WUZI");
        AnimYenile(playerid,"SNM");
        AnimYenile(playerid,"BLOWJOBZ");
        AnimYenile(playerid,"SEX");
   		AnimYenile(playerid,"BOMBER");
   		AnimYenile(playerid,"RAPPING");
    	AnimYenile(playerid,"SHOP");
   		AnimYenile(playerid,"BEACH");
   		AnimYenile(playerid,"SMOKING");
    	AnimYenile(playerid,"FOOD");
    	AnimYenile(playerid,"ON_LOOKERS");
    	AnimYenile(playerid,"DEALER");
		AnimYenile(playerid,"CRACK");
		AnimYenile(playerid,"CARRY");
		AnimYenile(playerid,"COP_AMBIENT");
		AnimYenile(playerid,"PARK");
		AnimYenile(playerid,"INT_HOUSE");
		AnimYenile(playerid,"FOOD");
		AnimasyonResetle[playerid] = 1;
	}
	return 1;
}

CMD:bodypush(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
	return 1;
}

CMD:lowbodypush(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
	return 1;
}

CMD:headbutt(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
	return 1;
}

CMD:airkick(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0);
	return 1;
}

CMD:doorkick(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
	return 1;
}

CMD:leftslap(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
	return 1;
}

CMD:elbow(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
	return 1;
}

CMD:coprun(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
	return 1;
}

CMD:handsup(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}

CMD:piss(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
   	SetPlayerSpecialAction(playerid, 68);
	return 1;
}

CMD:sneak(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	PlayAnimEx(playerid, "PED", "Player_Sneak", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

CMD:drunk(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
   	PlayAnimEx(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 1, 1);
    return 1;
}

CMD:bomb(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
   	PlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:rob(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	PlayAnimEx(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, 1, 1);
	return 1;
}

CMD:laugh(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	PlayAnimEx(playerid, "RAPPING", "Laugh_01", 4.0, 1, 0, 0, 0, 0, 1);
	return 1;
}

CMD:lookout(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
   	PlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:robman(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:hide(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:vomit(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "FOOD", "EAT_Vomit_P", 3.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:eat(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "FOOD", "EAT_Burger", 3.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:slapass(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:crack(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:fucku(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:taichi(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:drinkwater(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "BAR", "dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:checktime(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "COP_AMBIENT", "Coplook_watch", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:sleep(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "CRACK", "crckdeth4", 4.0, 0, 1, 1, 1, 0, 1);
    return 1;
}

CMD:blob(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "CRACK", "crckidle1", 4.0, 0, 1, 1, 1, 0, 1);
    return 1;
}

CMD:opendoor(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "AIRPORT", "thrw_barl_thrw", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:wavedown(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "BD_FIRE", "BD_Panic_01", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:cpr(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:dive(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "DODGE", "Crush_Jump", 4.0, 0, 1, 1, 1, 0, 1);
    return 1;
}

CMD:showoff(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "Freeweights", "gym_free_celebrate", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:goggles(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "goggles", "goggles_put_on", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:cry(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "GRAVEYARD", "mrnF_loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:throw(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnim(playerid, "GRENADE", "WEAPON_throw", 4.0, 0, 0, 0, 0, 0, 1);
    return 1;
}

CMD:robbed(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "SHOP", "SHP_Rob_GiveCash", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:hurt(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "SWAT", "gnstwall_injurd", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:box(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "GYMNASIUM", "GYMshadowbox", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:washhands(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:crabs(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "MISC", "Scratchballs_01", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:salute(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "ON_LOOKERS", "Pointup_loop", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:jerkoff(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "PAULNMAC", "wank_out", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:stop(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
    PlayAnimEx(playerid, "PED", "endchat_01", 4.0, 1, 0, 0, 0, 0, 1);
    return 1;
}

CMD:rap(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "RAPPING", "RAP_A_Loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "RAPPING", "RAP_B_Loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "RAPPING", "RAP_C_Loop", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/rap [1-3]");
	}
	return 1;
}

CMD:wank(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "PAULNMAC", "wank_in", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "PAULNMAC", "wank_out", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/wank [1-3]");
	}
	return 1;
}

CMD:chat(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "PED", "IDLE_CHAT", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkA", 4.0, 1, 0, 0, 0, 0, 1);
		case 3:	PlayAnimEx(playerid, "GANGS", "prtial_gngtlkB", 4.0, 1, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkE", 4.0, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkF", 4.0, 1, 0, 0, 0, 0, 1);
		case 6: PlayAnimEx(playerid, "GANGS", "prtial_gngtlkG", 4.0, 1, 0, 0, 0, 0, 1);
		case 7:	PlayAnimEx(playerid, "GANGS", "prtial_gngtlkH", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/chat [1-7]");
	}
	return 1;
}


CMD:sitdown(playerid, params[]) return cmd_sitonchair(playerid, params);
CMD:sitonchair(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "Attractors", "Stepsit_in", 4.0, 0, 0, 0, 1, 0, 1);
		case 2: PlayAnimEx(playerid, "CRIB", "PED_Console_Loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "INT_HOUSE", "LOU_In", 4.0, 0, 0, 0, 1, 1, 1);
		case 4: PlayAnimEx(playerid, "MISC", "SEAT_LR", 4.0, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "MISC", "Seat_talk_01", 4.0, 1, 0, 0, 0, 0, 1);
		case 6: PlayAnimEx(playerid, "MISC", "Seat_talk_02", 4.0, 1, 0, 0, 0, 0, 1);
		case 7: PlayAnimEx(playerid, "ped", "SEAT_down", 4.0, 0, 0, 0, 1, 1, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/sitonchair [1-7]");
	}
	return 1;
}

CMD:bat(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid,"BASEBALL","Bat_IDLE",4.1, 0, 1, 1, 1, 1, 1);
		case 2: PlayAnimEx(playerid, "CRACK", "Bbalbat_Idle_01", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "CRACK", "Bbalbat_Idle_02", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/bat [1-3]");
	}
	return 1;
}

CMD:lean(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "GANGS", "leanIDLE", 4.0, 0, 0, 0, 1, 0, 1);
		case 2: PlayAnimEx(playerid, "MISC", "Plyrlean_loop", 4.0, 0, 0, 0, 1, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/lean [1-2]");
	}
	return 1;
}

CMD:gesture(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "GHANDS", "gsign1", 4.0, 0, 0, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "GHANDS", "gsign1LH", 4.0, 0, 0, 0, 0, 0, 1);
		case 3: PlayAnim(playerid, "GHANDS", "gsign2", 4.0, 0, 0, 0, 0, 0, 1);
		case 4: PlayAnim(playerid, "GHANDS", "gsign2LH", 4.0, 0, 0, 0, 0, 0, 1);
		case 5: PlayAnim(playerid, "GHANDS", "gsign3", 4.0, 0, 0, 0, 0, 0, 1);
		case 6: PlayAnim(playerid, "GHANDS", "gsign3LH", 4.0, 0, 0, 0, 0, 0, 1);
		case 7: PlayAnim(playerid, "GHANDS", "gsign4", 4.0, 0, 0, 0, 0, 0, 1);
		case 8: PlayAnim(playerid, "GHANDS", "gsign4LH", 4.0, 0, 0, 0, 0, 0, 1);
		case 9: PlayAnim(playerid, "GHANDS", "gsign5", 4.0, 0, 0, 0, 0, 0, 1);
		case 10: PlayAnim(playerid, "GHANDS", "gsign5", 4.0, 0, 0, 0, 0, 0, 1);
		case 11: PlayAnim(playerid, "GHANDS", "gsign5LH", 4.0, 0, 0, 0, 0, 0, 1);
		case 12: PlayAnim(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0, 1);
		case 13: PlayAnim(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0, 1);
		case 14: PlayAnim(playerid, "GANGS", "prtial_gngtlkD", 4.0, 0, 0, 0, 0, 0, 1);
		case 15: PlayAnim(playerid, "GANGS", "smkcig_prtl", 4.0, 0, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/gesture [1-15]");
	}
	return 1;
}

CMD:lay(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "BEACH", "Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "BEACH", "SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/lay [1-3]");
	}
	return 1;
}

CMD:wave(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "KISSING", "gfwave2", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "PED", "endchat_03", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/wave [1-3]");
	}
	return 1;
}

CMD:signal(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "POLICE", "CopTraf_Come", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "POLICE", "CopTraf_Stop", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/signal [1-2]");
	}
	return 1;
}

CMD:nobreath(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "PED", "IDLE_tired", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "FAT", "IDLE_tired", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/nobreath [1-3]");
	}
	return 1;
}

CMD:fallover(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
		case 2: PlayAnimEx(playerid, "PED", "KO_shot_face", 4.0, 0, 1, 1, 1, 0, 1);
		case 3: PlayAnimEx(playerid, "PED", "KO_shot_stom", 4.0, 0, 1, 1, 1, 0, 1);
		case 4: PlayAnimEx(playerid, "PED", "BIKE_fallR", 4.1, 0, 1, 1, 1, 0, 1);
		case 5: PlayAnimEx(playerid, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/fallover [1-5]");
	}
	return 1;
}

CMD:pedmove(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "PED", "JOG_femaleA", 4.0, 1, 1, 1, 1, 1, 1);
		case 2: PlayAnimEx(playerid, "PED", "JOG_maleA", 4.0, 1, 1, 1, 1, 1, 1);
		case 3: PlayAnimEx(playerid, "PED", "WOMAN_walkfatold", 4.0, 1, 1, 1, 1, 1, 1);
		case 4: PlayAnimEx(playerid, "PED", "run_fat", 4.0, 1, 1, 1, 1, 1, 1);
		case 5: PlayAnimEx(playerid, "PED", "run_fatold", 4.0, 1, 1, 1, 1, 1, 1);
		case 6: PlayAnimEx(playerid, "PED", "run_old", 4.0, 1, 1, 1, 1, 1, 1);
		case 7: PlayAnimEx(playerid, "PED", "Run_Wuzi", 4.0, 1, 1, 1, 1, 1, 1);
		case 8: PlayAnimEx(playerid, "PED", "swat_run", 4.0, 1, 1, 1, 1, 1, 1);
		case 9: PlayAnimEx(playerid, "PED", "WALK_fat", 4.0, 1, 1, 1, 1, 1, 1);
		case 10: PlayAnimEx(playerid, "PED", "WALK_fatold", 4.0, 1, 1, 1, 1, 1, 1);
		case 11: PlayAnimEx(playerid, "PED", "WALK_gang1", 4.0, 1, 1, 1, 1, 1, 1);
		case 12: PlayAnimEx(playerid, "PED", "WALK_gang2", 4.0, 1, 1, 1, 1, 1, 1);
		case 13: PlayAnimEx(playerid, "PED", "WALK_old", 4.0, 1, 1, 1, 1, 1, 1);
		case 14: PlayAnimEx(playerid, "PED", "WALK_shuffle", 4.0, 1, 1, 1, 1, 1, 1);
		case 15: PlayAnimEx(playerid, "PED", "woman_run", 4.0, 1, 1, 1, 1, 1, 1);
		case 16: PlayAnimEx(playerid, "PED", "WOMAN_runbusy", 4.0, 1, 1, 1, 1, 1, 1);
		case 17: PlayAnimEx(playerid, "PED", "WOMAN_runfatold", 4.0, 1, 1, 1, 1, 1, 1);
		case 18: PlayAnimEx(playerid, "PED", "woman_runpanic", 4.0, 1, 1, 1, 1, 1, 1);
		case 19: PlayAnimEx(playerid, "PED", "WOMAN_runsexy", 4.0, 1, 1, 1, 1, 1, 1);
		case 20: PlayAnimEx(playerid, "PED", "WOMAN_walkbusy", 4.0, 1, 1, 1, 1, 1, 1);
		case 21: PlayAnimEx(playerid, "PED", "WOMAN_walkfatold", 4.0, 1, 1, 1, 1, 1, 1);
		case 22: PlayAnimEx(playerid, "PED", "WOMAN_walknorm", 4.0, 1, 1, 1, 1, 1, 1);
		case 23: PlayAnimEx(playerid, "PED", "WOMAN_walkold", 4.0, 1, 1, 1, 1, 1, 1);
		case 24: PlayAnimEx(playerid, "PED", "WOMAN_walkpro", 4.0, 1, 1, 1, 1, 1, 1);
		case 25: PlayAnimEx(playerid, "PED", "WOMAN_walksexy", 4.0, 1, 1, 1, 1, 1, 1);
		case 26: PlayAnimEx(playerid, "PED", "WOMAN_walkshop", 4.0, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/pedmove [1-26]");
	}
	return 1;
}

CMD:getjiggy(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "DANCING", "DAN_Down_A", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "DANCING", "DAN_Left_A", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "DANCING", "DAN_Loop_A", 4.0, 1, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "DANCING", "DAN_Right_A", 4.0, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "DANCING", "DAN_Up_A", 4.0, 1, 0, 0, 0, 0, 1);
		case 6: PlayAnimEx(playerid, "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0, 0, 1);
		case 7: PlayAnimEx(playerid, "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0, 0, 1);
		case 8: PlayAnimEx(playerid, "DANCING", "dnce_M_c", 4.0, 1, 0, 0, 0, 0, 1);
		case 9: PlayAnimEx(playerid, "DANCING", "dnce_M_c", 4.0, 1, 0, 0, 0, 0, 1);
		case 10: PlayAnimEx(playerid, "DANCING", "dnce_M_d", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/getjiggy [1-10]");
	}
	return 1;
}

CMD:stripclub(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "STRIP", "PLY_CASH", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "STRIP", "PUN_CASH", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/stripclub [1-2]");
	}
	return 1;
}

CMD:smoke(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "SMOKING", "M_smk_in", 4.0, 0, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/smoke [1-2]");
	}
	return 1;
}

CMD:dj(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "SCRATCHING", "scdldlp", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "SCRATCHING", "scdlulp", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "SCRATCHING", "scdrdlp", 4.0, 1, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "SCRATCHING", "scdrulp", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/dj [1-4]");
	}
	return 1;
}

CMD:reload(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "BUDDY", "buddy_reload", 4.0, 0, 0, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "PYTHON", "python_reload", 4.0, 0, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/reload [1-2]");
	}
	return 1;
}

CMD:tag(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "GRAFFITI", "graffiti_Chkout", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "GRAFFITI", "spraycan_fire", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/tag [1-2]");
	}
	return 1;
}

CMD:deal(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "DEALER", "DEALER_DEAL", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "DEALER", "shop_pay", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/deal [1-2]");
	}
	return 1;
}

CMD:crossarms(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1, 1);
		case 2: PlayAnimEx(playerid, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "GRAVEYARD", "mrnM_loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "GRAVEYARD", "prst_loopa", 4.0, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/crossarms [1-5]");
	}
	return 1;
}

CMD:cheer(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "ON_LOOKERS", "shout_01", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "ON_LOOKERS", "shout_02", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "ON_LOOKERS", "shout_in", 4.0, 1, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "RIOT", "RIOT_ANGRY_B", 4.0, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "RIOT", "RIOT_CHANT", 4.0, 1, 0, 0, 0, 0, 1);
		case 6: PlayAnimEx(playerid, "RIOT", "RIOT_shout", 4.0, 1, 0, 0, 0, 0, 1);
		case 7: PlayAnimEx(playerid, "STRIP", "PUN_HOLLER", 4.0, 1, 0, 0, 0, 0, 1);
		case 8: PlayAnimEx(playerid, "OTB", "wtchrace_win", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/cheer [1-8]");
	}
	return 1;
}

CMD:sit(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "BEACH", "Lay_Bac_Loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnimEx(playerid, "BEACH", "ParkSit_W_loop", 4.0, 1, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "BEACH", "SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/sit [1-5]");
	}
	return 1;
}

CMD:siteat(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "FOOD", "FF_Sit_Eat3", 4.0, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "FOOD", "FF_Sit_Eat2", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/siteat [1-2]");
	}
	return 1;
}

CMD:bar(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "BAR", "Barcustom_get", 4.0, 0, 1, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0, 1);
		case 3: PlayAnim(playerid, "BAR", "Barserve_give", 4.0, 0, 0, 0, 0, 0, 1);
		case 4: PlayAnim(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "BAR", "BARman_idle", 4.0, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/bar [1-5]");
	}
	return 1;
}

CMD:dance(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	if(GetPlayerAnimationIndex(playerid) != 0) ClearAnimations(playerid);
	switch(strval(params))
	{
		case 1: SetPlayerSpecialAction(playerid, 5);
		case 2: SetPlayerSpecialAction(playerid, 6);
		case 3: SetPlayerSpecialAction(playerid, 7);
		case 4: SetPlayerSpecialAction(playerid, 8);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/dance [1-4]");
	}
	return 1;
}

CMD:spank(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
			case 1: PlayAnimEx(playerid, "SNM", "SPANKINGW", 4.1, 1, 0, 0, 0, 0, 1);
			case 2: PlayAnimEx(playerid, "SNM", "SPANKINGP", 4.1, 1, 0, 0, 0, 0, 1);
			case 3: PlayAnimEx(playerid, "SNM", "SPANKEDW", 4.1, 1, 0, 0, 0, 0, 1);
			case 4: PlayAnimEx(playerid, "SNM", "SPANKEDP", 4.1, 1, 0, 0, 0, 0, 1);
			default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/spank [1-4]");
	}
	return 1;
}

CMD:sexy(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "STRIP", "strip_E", 4.1, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "STRIP", "strip_G", 4.1, 1, 0, 0, 0, 0, 1);
		case 3: PlayAnim(playerid, "STRIP", "STR_A2B", 4.1, 0, 0, 0, 0, 0, 1);
		case 4: PlayAnimEx(playerid, "STRIP", "STR_Loop_A", 4.1, 1, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "STRIP", "STR_Loop_B", 4.1, 1, 0, 0, 0, 0, 1);
		case 6: PlayAnimEx(playerid, "STRIP", "STR_Loop_C", 4.1, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/sexy [1-6]");
	}
	return 1;
}

CMD:holdup(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "POOL", "POOL_ChalkCue", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: PlayAnimEx(playerid, "POOL", "POOL_Idle_Stance", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/holdup [1-2]");
	}
	return 1;
}

CMD:stickjup(playerid, params[])
{
    PlayAnimEx(playerid, "POOL", "POOL_Idle_Stance", 4.1, 0, 1, 1, 1, 1, 1);
    return 1;
}

CMD:copa(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "POLICE", "CopTraf_Away", 4.1, 0, 0, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "POLICE", "CopTraf_Come", 4.1, 0, 0, 0, 0, 0, 1);
		case 3: PlayAnim(playerid, "POLICE", "CopTraf_Left", 4.1, 0, 0, 0, 0, 0, 1);
		case 4: PlayAnim(playerid, "POLICE", "CopTraf_Stop", 4.1, 0, 0, 0, 0, 0, 1);
		case 5: PlayAnimEx(playerid, "POLICE", "Cop_move_FWD", 4.1, 1, 1, 1, 1, 1, 1);
		case 6: PlayAnimEx(playerid, "POLICE", "crm_drgbst_01", 4.1, 0, 0, 0, 1, 5000, 1);
		case 7: PlayAnim(playerid, "POLICE", "Door_Kick", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: PlayAnim(playerid, "POLICE", "plc_drgbst_01", 4.1, 0, 0, 0, 0, 5000, 1);
		case 9: PlayAnim(playerid, "POLICE", "plc_drgbst_02", 4.1, 0, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/copa [1-9]");
	}
	return 1;
}

CMD:misc(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "CAR", "Fixn_Car_Loop", 4.1, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "CAR", "flag_drop", 4.1, 0, 0, 0, 0, 0, 1);
		case 3: PlayAnim(playerid, "PED", "bomber", 4.1, 0, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/misc [1-3]");
	}
	return 1;
}

CMD:snatch(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "PED", "BIKE_elbowL", 4.1, 0, 0, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "PED", "BIKE_elbowR", 4.1, 0, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/snatch [1-2]");
	}
	return 1;
}

CMD:blowjob(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.1, 1, 0, 0, 0, 0, 1);
		case 2: PlayAnimEx(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.1, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/blowjob [1-2]");
	}
	return 1;
}

CMD:kiss(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "KISSING", "Playa_Kiss_01", 4.1, 0, 0, 0, 0, 0, 1);
		case 2: PlayAnim(playerid, "KISSING", "Playa_Kiss_02", 4.1, 0, 0, 0, 0, 0, 1);
		case 3: PlayAnim(playerid, "KISSING", "Playa_Kiss_03", 4.1, 0, 0, 0, 0, 0, 1);
		case 4: PlayAnim(playerid, "KISSING", "Grlfrd_Kiss_01", 4.1, 0, 0, 0, 0, 0, 1);
		case 5: PlayAnim(playerid, "KISSING", "Grlfrd_Kiss_02", 4.1, 0, 0, 0, 0, 0, 1);
		case 6: PlayAnim(playerid, "KISSING", "Grlfrd_Kiss_03", 4.1, 0, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/kiss [1-6]");
	}
	return 1;
}

CMD:idles(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "PLAYIDLES", "shift", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: PlayAnimEx(playerid, "PLAYIDLES", "shldr", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: PlayAnimEx(playerid, "PLAYIDLES", "stretch", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: PlayAnimEx(playerid, "PLAYIDLES", "strleg", 4.1, 1, 1, 1, 1, 1, 1);
		case 5: PlayAnimEx(playerid, "PLAYIDLES", "time", 4.1, 1, 1, 1, 1, 1, 1);
		case 6: PlayAnimEx(playerid, "COP_AMBIENT", "Copbrowse_loop", 4.1, 1, 0, 0, 0, 0, 1);
		case 7: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 0, 0, 1);
		case 8: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_shake", 4.1, 1, 0, 0, 0, 0, 1);
		case 9: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_think", 4.1, 1, 0, 0, 0, 0, 1);
		case 10: PlayAnimEx(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 1, 0, 0, 0, 0, 1);
		case 11: PlayAnimEx(playerid, "PED", "roadcross", 4.1, 1, 0, 0, 0, 0, 1);
		case 12: PlayAnimEx(playerid, "PED", "roadcross_female", 4.1, 1, 0, 0, 0, 0, 1);
		case 13: PlayAnimEx(playerid, "PED", "roadcross_gang", 4.1, 1, 0, 0, 0, 0, 1);
		case 14: PlayAnimEx(playerid, "PED", "roadcross_old", 4.1, 1, 0, 0, 0, 0, 1);
		case 15: PlayAnimEx(playerid, "PED", "woman_idlestance", 4.1, 1, 0, 0, 0, 0, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/idles [1-15]");
	}
	return 1;
}

CMD:sunbathe(playerid, params[])
{
	if(!AnimasyonKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnimEx(playerid, "SUNBATHE", "batherdown", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: PlayAnimEx(playerid, "SUNBATHE", "batherup", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: PlayAnimEx(playerid, "SUNBATHE", "Lay_Bac_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: PlayAnimEx(playerid, "SUNBATHE", "Lay_Bac_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_IdleA", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_IdleB", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_IdleC", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_M_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_idleA", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_idleB", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_idleC", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: PlayAnimEx(playerid, "SUNBATHE", "ParkSit_W_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: PlayAnimEx(playerid, "SUNBATHE", "SBATHE_F_LieB2Sit", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: PlayAnimEx(playerid, "SUNBATHE", "SBATHE_F_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: PlayAnimEx(playerid, "SUNBATHE", "SitnWait_in_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: PlayAnimEx(playerid, "SUNBATHE", "SitnWait_out_W", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/sunbathe [1-18]");
	}
	return 1;
}

CMD:lowrider(playerid, params[])
{
	if(!AracAnimKullanimda(playerid)) return 1;
	if(LowriderCAR(GetPlayerVehicleID(playerid)))
	{
		switch(strval(params))
		{
			case 1: PlayAnim(playerid, "LOWRIDER", "lrgirl_bdbnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 2: PlayAnim(playerid, "LOWRIDER", "lrgirl_hair", 4.1, 0, 1, 1, 1, 1, 1);
			case 3: PlayAnim(playerid, "LOWRIDER", "lrgirl_hurry", 4.1, 0, 1, 1, 1, 1, 1);
			case 4: PlayAnim(playerid, "LOWRIDER", "lrgirl_idleloop", 4.1, 0, 1, 1, 1, 1, 1);
			case 5: PlayAnim(playerid, "LOWRIDER", "lrgirl_idle_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
			case 6: PlayAnim(playerid, "LOWRIDER", "lrgirl_l0_bnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 7: PlayAnim(playerid, "LOWRIDER", "lrgirl_l0_loop", 4.1, 0, 1, 1, 1, 1, 1);
			case 8: PlayAnim(playerid, "LOWRIDER", "lrgirl_l0_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
			case 9: PlayAnim(playerid, "LOWRIDER", "lrgirl_l12_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
			case 10: PlayAnim(playerid, "LOWRIDER", "lrgirl_l1_bnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 11: PlayAnim(playerid, "LOWRIDER", "lrgirl_l1_loop", 4.1, 0, 1, 1, 1, 1, 1);
			case 12: PlayAnim(playerid, "LOWRIDER", "lrgirl_l1_to_l2", 4.1, 0, 1, 1, 1, 1, 1);
			case 13: PlayAnim(playerid, "LOWRIDER", "lrgirl_l2_bnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 14: PlayAnim(playerid, "LOWRIDER", "lrgirl_l2_loop", 4.1, 0, 1, 1, 1, 1, 1);
			case 15: PlayAnim(playerid, "LOWRIDER", "lrgirl_l2_to_l3", 4.1, 0, 1, 1, 1, 1, 1);
			case 16: PlayAnim(playerid, "LOWRIDER", "lrgirl_l345_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
			case 17: PlayAnim(playerid, "LOWRIDER", "lrgirl_l3_bnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 18: PlayAnim(playerid, "LOWRIDER", "lrgirl_l3_loop", 4.1, 0, 1, 1, 1, 1, 1);
			case 19: PlayAnim(playerid, "LOWRIDER", "lrgirl_l3_to_l4", 4.1, 0, 1, 1, 1, 1, 1);
			case 20: PlayAnim(playerid, "LOWRIDER", "lrgirl_l4_bnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 21: PlayAnim(playerid, "LOWRIDER", "lrgirl_l4_loop", 4.1, 0, 1, 1, 1, 1, 1);
			case 22: PlayAnim(playerid, "LOWRIDER", "lrgirl_l4_to_l5", 4.1, 0, 1, 1, 1, 1, 1);
			case 23: PlayAnim(playerid, "LOWRIDER", "lrgirl_l5_bnce", 4.1, 0, 1, 1, 1, 1, 1);
			case 24: PlayAnim(playerid, "LOWRIDER", "lrgirl_l5_loop", 4.1, 0, 1, 1, 1, 1, 1);
			case 25: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkB", 4.1, 0, 1, 1, 1, 1, 1);
			case 26: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkC", 4.1, 0, 1, 1, 1, 1, 1);
			case 27: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1, 1);
			case 28: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkE", 4.1, 0, 1, 1, 1, 1, 1);
			case 29: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkF", 4.1, 0, 1, 1, 1, 1, 1);
			case 30: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1, 1);
			case 31: PlayAnim(playerid, "LOWRIDER", "prtial_gngtlkH", 4.1, 0, 1, 1, 1, 1, 1);
			default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/lowrider [1-31]");
		}
	}
	else
	{
		SendClientMessage(playerid, HATA_RENK, "[!] {FFFFFF}Bu animasyon içn lowrider modeli bir araçta olmanýz gerekiyor.");
	}
	return 1;
}

CMD:carchat(playerid, params[])
{
	if(!AracAnimKullanimda(playerid)) return 1;
	switch(strval(params))
	{
		case 1: PlayAnim(playerid, "CAR_CHAT", "carfone_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: PlayAnim(playerid, "CAR_CHAT", "carfone_loopA", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: PlayAnim(playerid, "CAR_CHAT", "carfone_loopA_to_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: PlayAnim(playerid, "CAR_CHAT", "carfone_loopB", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: PlayAnim(playerid, "CAR_CHAT", "carfone_loopB_to_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: PlayAnim(playerid, "CAR_CHAT", "carfone_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_BR", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc1_FR", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc2_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc3_BR", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc3_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc3_FR", 4.1, 0, 1, 1, 1, 1, 1);
		case 15: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_BL", 4.1, 0, 1, 1, 1, 1, 1);
		case 16: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_BR", 4.1, 0, 1, 1, 1, 1, 1);
		case 17: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_FL", 4.1, 0, 1, 1, 1, 1, 1);
		case 18: PlayAnim(playerid, "CAR_CHAT", "CAR_Sc4_FR", 4.1, 0, 1, 1, 1, 1, 1);
		case 19: PlayAnim(playerid, "CAR", "Sit_relaxed", 4.1, 0, 1, 1, 1, 1, 1);
		case 20: PlayAnim(playerid, "CAR", "Tap_hand", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, ADCMD_RENK, "{0080C0}[»] {FFFFFF}/carchat [1-20]");
	}
	return 1;
}

stock AnimYenile(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0,1);
	return 1;
}

CMD:animasyonlar(playerid, params[])
{
	SendClientMessage(playerid, COLOR_WHITE, " ");
    SendClientMessage(playerid, COLOR_BLUE, "-------------------------------------------------------[ Animasyonlar ]-------------------------------------------------------");
	SendClientMessage(playerid, COLOR_FADE1, "/handsup - /drunk - /bomb - /rob - /laugh - /lookout - /robman - /crossarms - /sit - /siteat - /hide - /vomit - /eat");
	SendClientMessage(playerid, COLOR_FADE3, "/wave - /slapass - /deal - /taichi - /crack - /smoke - /chat - /dance - /fucku - /drinkwater - /pedmove - /bat");
	SendClientMessage(playerid, COLOR_FADE1, "/salute - /crabs - /washhands - /signal - /stop - /gesture - /jerkoff - /idles - /lowrider - /carchat");
	SendClientMessage(playerid, COLOR_FADE3, "/checktime - /sleep - /blob - /opendoor - /wavedown - /shakehand - /reload - /cpr - /dive - /showoff - /box - /tag");
	SendClientMessage(playerid, COLOR_FADE1, "/goggles - /cry - /dj - /cheer - /throw - /robbed - /hurt - /nobreath - /bar - /getjiggy - /fallover - /rap - /piss");
	SendClientMessage(playerid, COLOR_FADE3, "/blowjob - /spank - /sunbathe - /kiss - /snatch - /sneak - /copa - /sexy - /holdup - /misc - /bodypush - /walkstyle");
	SendClientMessage(playerid, COLOR_FADE1, "/lowbodypush - /headbutt - /airkick - /doorkick - /leftslap - /elbow - /coprun - /sitonchair - /lean - /wank");
	SendClientMessage(playerid, COLOR_BLUE, "--------------------------------------------------------------------------------------------------------------------");
	return 1;
}
